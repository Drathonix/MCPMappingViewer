addMapping("getId", Advancement.class, "func_192067_g");
addMapping("getDisplay", Advancement.class, "func_192068_c");
addMapping("getChildren", Advancement.class, "func_192069_e");
addMapping("getParent", Advancement.class, "func_192070_b");
addMapping("addChild", Advancement.class, "func_192071_a");
addMapping("getRewards", Advancement.class, "func_192072_d");
addMapping("getCriteria", Advancement.class, "func_192073_f");
addMapping("getRequirements", Advancement.class, "func_192074_h");
addMapping("copy", Advancement.class, "func_192075_a");
addMapping("getDisplayText", Advancement.class, "func_193123_j");
addMapping("getRequirementCount", Advancement.class, "func_193124_g");
addMapping("loadAdvancements", AdvancementList.class, "func_192083_a");
addMapping("getAdvancement", AdvancementList.class, "func_192084_a");
addMapping("removeAll", AdvancementList.class, "func_192085_a");
addMapping("setListener", AdvancementList.class, "func_192086_a");
addMapping("clear", AdvancementList.class, "func_192087_a");
addMapping("getRoots", AdvancementList.class, "func_192088_b");
addMapping("getAdvancements", AdvancementList.class, "func_192089_c");
addMapping("remove", AdvancementList.class, "func_192090_a");
addMapping("loadBuiltInAdvancements", AdvancementManager.class, "func_192777_a");
addMapping("getAdvancement", AdvancementManager.class, "func_192778_a");
addMapping("reload", AdvancementManager.class, "func_192779_a");
addMapping("getAdvancements", AdvancementManager.class, "func_192780_b");
addMapping("loadCustomAdvancements", AdvancementManager.class, "func_192781_c");
addMapping("hasErrored", AdvancementManager.class, "func_193767_b");
addMapping("update", AdvancementProgress.class, "func_192099_a");
addMapping("fromNetwork", AdvancementProgress.class, "func_192100_b");
addMapping("revokeCriterion", AdvancementProgress.class, "func_192101_b");
addMapping("getCompletedCriteria", AdvancementProgress.class, "func_192102_e");
addMapping("getPercent", AdvancementProgress.class, "func_192103_c");
addMapping("serializeToNetwork", AdvancementProgress.class, "func_192104_a");
addMapping("isDone", AdvancementProgress.class, "func_192105_a");
addMapping("getCriterionProgress", AdvancementProgress.class, "func_192106_c");
addMapping("getRemaningCriteria", AdvancementProgress.class, "func_192107_d");
addMapping("hasProgress", AdvancementProgress.class, "func_192108_b");
addMapping("grantCriterion", AdvancementProgress.class, "func_192109_a");
addMapping("getProgressText", AdvancementProgress.class, "func_193126_d");
addMapping("getFirstProgressDate", AdvancementProgress.class, "func_193128_g");
addMapping("countCompletedRequirements", AdvancementProgress.class, "func_194032_h");
addMapping("apply", AdvancementRewards.class, "func_192113_a");
addMapping("moveSubtree", AdvancementTreeNode.class, "func_192316_a");
addMapping("getLastChild", AdvancementTreeNode.class, "func_192317_d");
addMapping("thirdWalk", AdvancementTreeNode.class, "func_192318_a");
addMapping("secondWalk", AdvancementTreeNode.class, "func_192319_a");
addMapping("firstWalk", AdvancementTreeNode.class, "func_192320_a");
addMapping("getFirstChild", AdvancementTreeNode.class, "func_192321_c");
addMapping("buildSubTree", AdvancementTreeNode.class, "func_192322_a");
addMapping("layout", AdvancementTreeNode.class, "func_192323_a");
addMapping("apportion", AdvancementTreeNode.class, "func_192324_a");
addMapping("executeShifts", AdvancementTreeNode.class, "func_192325_b");
addMapping("getAncestor", AdvancementTreeNode.class, "func_192326_a");
addMapping("updatePosition", AdvancementTreeNode.class, "func_192327_e");
addMapping("register", CriteriaTriggers.class, "func_192118_a");
addMapping("get", CriteriaTriggers.class, "func_192119_a");
addMapping("getAll", CriteriaTriggers.class, "func_192120_a");
addMapping("serializeToNetwork", Criterion.class, "func_192140_a");
addMapping("serializeToNetwork", Criterion.class, "func_192141_a");
addMapping("criteriaFromNetwork", Criterion.class, "func_192142_c");
addMapping("getCriterionInstance", Criterion.class, "func_192143_a");
addMapping("criteriaFromJson", Criterion.class, "func_192144_b");
addMapping("criterionFromJson", Criterion.class, "func_192145_a");
addMapping("criterionFromNetwork", Criterion.class, "func_192146_b");
addMapping("serialize", CriterionProgress.class, "func_192148_e");
addMapping("read", CriterionProgress.class, "func_192149_a");
addMapping("write", CriterionProgress.class, "func_192150_a");
addMapping("isObtained", CriterionProgress.class, "func_192151_a");
addMapping("fromDateTime", CriterionProgress.class, "func_192152_a");
addMapping("obtain", CriterionProgress.class, "func_192153_b");
addMapping("reset", CriterionProgress.class, "func_192154_c");
addMapping("getObtained", CriterionProgress.class, "func_193140_d");
addMapping("write", DisplayInfo.class, "func_192290_a");
addMapping("getFrame", DisplayInfo.class, "func_192291_d");
addMapping("setPosition", DisplayInfo.class, "func_192292_a");
addMapping("getBackground", DisplayInfo.class, "func_192293_c");
addMapping("deserialize", DisplayInfo.class, "func_192294_a");
addMapping("read", DisplayInfo.class, "func_192295_b");
addMapping("getY", DisplayInfo.class, "func_192296_f");
addMapping("getTitle", DisplayInfo.class, "func_192297_a");
addMapping("getIcon", DisplayInfo.class, "func_192298_b");
addMapping("getX", DisplayInfo.class, "func_192299_e");
addMapping("shouldAnnounceToChat", DisplayInfo.class, "func_193220_i");
addMapping("deserializeIcon", DisplayInfo.class, "func_193221_a");
addMapping("getDescription", DisplayInfo.class, "func_193222_b");
addMapping("shouldShowToast", DisplayInfo.class, "func_193223_h");
addMapping("isHidden", DisplayInfo.class, "func_193224_j");
addMapping("getName", FrameType.class, "func_192307_a");
addMapping("byName", FrameType.class, "func_192308_a");
addMapping("getIcon", FrameType.class, "func_192309_b");
addMapping("getFormat", FrameType.class, "func_193229_c");
addMapping("getFunction", FunctionManager.class, "func_193058_a");
addMapping("reload", FunctionManager.class, "func_193059_f");
addMapping("loadFunctions", FunctionManager.class, "func_193061_h");
addMapping("getCommandManager", FunctionManager.class, "func_193062_a");
addMapping("getMaxCommandChainLength", FunctionManager.class, "func_193065_c");
addMapping("getFunctions", FunctionManager.class, "func_193066_d");
addMapping("execute", FunctionManager.class, "func_194019_a");
addMapping("update", FunctionManager.class, "func_73660_a");
addMapping("getId", ICriterionInstance.class, "func_192244_a");
addMapping("getId", ICriterionTrigger.class, "func_192163_a");
addMapping("removeListener", ICriterionTrigger.class, "func_192164_b");
addMapping("addListener", ICriterionTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ICriterionTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ICriterionTrigger.class, "func_192167_a");
addMapping("shouldBeVisible", PlayerAdvancements.class, "func_192738_c");
addMapping("setPlayer", PlayerAdvancements.class, "func_192739_a");
addMapping("load", PlayerAdvancements.class, "func_192740_f");
addMapping("flushDirty", PlayerAdvancements.class, "func_192741_b");
addMapping("ensureVisibility", PlayerAdvancements.class, "func_192742_b");
addMapping("startProgress", PlayerAdvancements.class, "func_192743_a");
addMapping("revokeCriterion", PlayerAdvancements.class, "func_192744_b");
addMapping("dispose", PlayerAdvancements.class, "func_192745_a");
addMapping("hasCompletedChildrenOrSelf", PlayerAdvancements.class, "func_192746_d");
addMapping("getProgress", PlayerAdvancements.class, "func_192747_a");
addMapping("checkForAutomaticTriggers", PlayerAdvancements.class, "func_192748_e");
addMapping("save", PlayerAdvancements.class, "func_192749_b");
addMapping("grantCriterion", PlayerAdvancements.class, "func_192750_a");
addMapping("registerListeners", PlayerAdvancements.class, "func_192751_c");
addMapping("ensureAllVisible", PlayerAdvancements.class, "func_192752_d");
addMapping("registerListeners", PlayerAdvancements.class, "func_193764_b");
addMapping("unregisterListeners", PlayerAdvancements.class, "func_193765_c");
addMapping("reload", PlayerAdvancements.class, "func_193766_b");
addMapping("setSelectedTab", PlayerAdvancements.class, "func_194220_a");
addMapping("getId", AbstractCriterionInstance.class, "func_192244_a");
addMapping("getId", BredAnimalsTrigger.class, "func_192163_a");
addMapping("removeListener", BredAnimalsTrigger.class, "func_192164_b");
addMapping("addListener", BredAnimalsTrigger.class, "func_192165_a");
addMapping("deserializeInstance", BredAnimalsTrigger.class, "func_192166_a");
addMapping("removeAllListeners", BredAnimalsTrigger.class, "func_192167_a");
addMapping("trigger", BredAnimalsTrigger.class, "func_192168_a");
addMapping("getId", BrewedPotionTrigger.class, "func_192163_a");
addMapping("removeListener", BrewedPotionTrigger.class, "func_192164_b");
addMapping("addListener", BrewedPotionTrigger.class, "func_192165_a");
addMapping("deserializeInstance", BrewedPotionTrigger.class, "func_192166_a");
addMapping("removeAllListeners", BrewedPotionTrigger.class, "func_192167_a");
addMapping("trigger", BrewedPotionTrigger.class, "func_192173_a");
addMapping("getId", ChangeDimensionTrigger.class, "func_192163_a");
addMapping("removeListener", ChangeDimensionTrigger.class, "func_192164_b");
addMapping("addListener", ChangeDimensionTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ChangeDimensionTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ChangeDimensionTrigger.class, "func_192167_a");
addMapping("trigger", ChangeDimensionTrigger.class, "func_193143_a");
addMapping("getId", ConstructBeaconTrigger.class, "func_192163_a");
addMapping("removeListener", ConstructBeaconTrigger.class, "func_192164_b");
addMapping("addListener", ConstructBeaconTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ConstructBeaconTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ConstructBeaconTrigger.class, "func_192167_a");
addMapping("trigger", ConstructBeaconTrigger.class, "func_192180_a");
addMapping("getId", ConsumeItemTrigger.class, "func_192163_a");
addMapping("removeListener", ConsumeItemTrigger.class, "func_192164_b");
addMapping("addListener", ConsumeItemTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ConsumeItemTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ConsumeItemTrigger.class, "func_192167_a");
addMapping("trigger", ConsumeItemTrigger.class, "func_193148_a");
addMapping("getId", CuredZombieVillagerTrigger.class, "func_192163_a");
addMapping("removeListener", CuredZombieVillagerTrigger.class, "func_192164_b");
addMapping("addListener", CuredZombieVillagerTrigger.class, "func_192165_a");
addMapping("deserializeInstance", CuredZombieVillagerTrigger.class, "func_192166_a");
addMapping("removeAllListeners", CuredZombieVillagerTrigger.class, "func_192167_a");
addMapping("trigger", CuredZombieVillagerTrigger.class, "func_192183_a");
addMapping("deserialize", DamagePredicate.class, "func_192364_a");
addMapping("test", DamagePredicate.class, "func_192365_a");
addMapping("deserialize", DamageSourcePredicate.class, "func_192447_a");
addMapping("optionalBoolean", DamageSourcePredicate.class, "func_192448_a");
addMapping("test", DamageSourcePredicate.class, "func_193418_a");
addMapping("deserialize", DistancePredicate.class, "func_193421_a");
addMapping("test", DistancePredicate.class, "func_193422_a");
addMapping("getId", EffectsChangedTrigger.class, "func_192163_a");
addMapping("removeListener", EffectsChangedTrigger.class, "func_192164_b");
addMapping("addListener", EffectsChangedTrigger.class, "func_192165_a");
addMapping("deserializeInstance", EffectsChangedTrigger.class, "func_192166_a");
addMapping("removeAllListeners", EffectsChangedTrigger.class, "func_192167_a");
addMapping("trigger", EffectsChangedTrigger.class, "func_193153_a");
addMapping("getId", EnchantedItemTrigger.class, "func_192163_a");
addMapping("removeListener", EnchantedItemTrigger.class, "func_192164_b");
addMapping("addListener", EnchantedItemTrigger.class, "func_192165_a");
addMapping("deserializeInstance", EnchantedItemTrigger.class, "func_192166_a");
addMapping("removeAllListeners", EnchantedItemTrigger.class, "func_192167_a");
addMapping("trigger", EnchantedItemTrigger.class, "func_192190_a");
addMapping("test", EnchantmentPredicate.class, "func_192463_a");
addMapping("deserialize", EnchantmentPredicate.class, "func_192464_a");
addMapping("deserializeArray", EnchantmentPredicate.class, "func_192465_b");
addMapping("getId", EnterBlockTrigger.class, "func_192163_a");
addMapping("removeListener", EnterBlockTrigger.class, "func_192164_b");
addMapping("addListener", EnterBlockTrigger.class, "func_192165_a");
addMapping("deserializeInstance", EnterBlockTrigger.class, "func_192166_a");
addMapping("removeAllListeners", EnterBlockTrigger.class, "func_192167_a");
addMapping("trigger", EnterBlockTrigger.class, "func_192193_a");
addMapping("getId", EntityHurtPlayerTrigger.class, "func_192163_a");
addMapping("removeListener", EntityHurtPlayerTrigger.class, "func_192164_b");
addMapping("addListener", EntityHurtPlayerTrigger.class, "func_192165_a");
addMapping("deserializeInstance", EntityHurtPlayerTrigger.class, "func_192166_a");
addMapping("removeAllListeners", EntityHurtPlayerTrigger.class, "func_192167_a");
addMapping("trigger", EntityHurtPlayerTrigger.class, "func_192200_a");
addMapping("deserialize", EntityPredicate.class, "func_192481_a");
addMapping("test", EntityPredicate.class, "func_192482_a");
addMapping("getId", ImpossibleTrigger.class, "func_192163_a");
addMapping("removeListener", ImpossibleTrigger.class, "func_192164_b");
addMapping("addListener", ImpossibleTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ImpossibleTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ImpossibleTrigger.class, "func_192167_a");
addMapping("getId", InventoryChangeTrigger.class, "func_192163_a");
addMapping("removeListener", InventoryChangeTrigger.class, "func_192164_b");
addMapping("addListener", InventoryChangeTrigger.class, "func_192165_a");
addMapping("deserializeInstance", InventoryChangeTrigger.class, "func_192166_a");
addMapping("removeAllListeners", InventoryChangeTrigger.class, "func_192167_a");
addMapping("trigger", InventoryChangeTrigger.class, "func_192208_a");
addMapping("getId", ItemDurabilityTrigger.class, "func_192163_a");
addMapping("removeListener", ItemDurabilityTrigger.class, "func_192164_b");
addMapping("addListener", ItemDurabilityTrigger.class, "func_192165_a");
addMapping("deserializeInstance", ItemDurabilityTrigger.class, "func_192166_a");
addMapping("removeAllListeners", ItemDurabilityTrigger.class, "func_192167_a");
addMapping("trigger", ItemDurabilityTrigger.class, "func_193158_a");
addMapping("deserialize", ItemPredicate.class, "func_192492_a");
addMapping("test", ItemPredicate.class, "func_192493_a");
addMapping("deserializeArray", ItemPredicate.class, "func_192494_b");
addMapping("getId", KilledTrigger.class, "func_192163_a");
addMapping("removeListener", KilledTrigger.class, "func_192164_b");
addMapping("addListener", KilledTrigger.class, "func_192165_a");
addMapping("deserializeInstance", KilledTrigger.class, "func_192166_a");
addMapping("removeAllListeners", KilledTrigger.class, "func_192167_a");
addMapping("trigger", KilledTrigger.class, "func_192211_a");
addMapping("getId", LevitationTrigger.class, "func_192163_a");
addMapping("removeListener", LevitationTrigger.class, "func_192164_b");
addMapping("addListener", LevitationTrigger.class, "func_192165_a");
addMapping("deserializeInstance", LevitationTrigger.class, "func_192166_a");
addMapping("removeAllListeners", LevitationTrigger.class, "func_192167_a");
addMapping("trigger", LevitationTrigger.class, "func_193162_a");
addMapping("test", LocationPredicate.class, "func_193452_a");
addMapping("test", LocationPredicate.class, "func_193453_a");
addMapping("deserialize", LocationPredicate.class, "func_193454_a");
addMapping("testSquare", MinMaxBounds.class, "func_192513_a");
addMapping("test", MinMaxBounds.class, "func_192514_a");
addMapping("deserialize", MinMaxBounds.class, "func_192515_a");
addMapping("test", MobEffectsPredicate.class, "func_193469_a");
addMapping("test", MobEffectsPredicate.class, "func_193470_a");
addMapping("deserialize", MobEffectsPredicate.class, "func_193471_a");
addMapping("test", MobEffectsPredicate.class, "func_193472_a");
addMapping("test", NBTPredicate.class, "func_193475_a");
addMapping("deserialize", NBTPredicate.class, "func_193476_a");
addMapping("test", NBTPredicate.class, "func_193477_a");
addMapping("test", NBTPredicate.class, "func_193478_a");
addMapping("getId", NetherTravelTrigger.class, "func_192163_a");
addMapping("removeListener", NetherTravelTrigger.class, "func_192164_b");
addMapping("addListener", NetherTravelTrigger.class, "func_192165_a");
addMapping("deserializeInstance", NetherTravelTrigger.class, "func_192166_a");
addMapping("removeAllListeners", NetherTravelTrigger.class, "func_192167_a");
addMapping("trigger", NetherTravelTrigger.class, "func_193168_a");
addMapping("getId", PlacedBlockTrigger.class, "func_192163_a");
addMapping("removeListener", PlacedBlockTrigger.class, "func_192164_b");
addMapping("addListener", PlacedBlockTrigger.class, "func_192165_a");
addMapping("deserializeInstance", PlacedBlockTrigger.class, "func_192166_a");
addMapping("removeAllListeners", PlacedBlockTrigger.class, "func_192167_a");
addMapping("trigger", PlacedBlockTrigger.class, "func_193173_a");
addMapping("getId", PlayerHurtEntityTrigger.class, "func_192163_a");
addMapping("removeListener", PlayerHurtEntityTrigger.class, "func_192164_b");
addMapping("addListener", PlayerHurtEntityTrigger.class, "func_192165_a");
addMapping("deserializeInstance", PlayerHurtEntityTrigger.class, "func_192166_a");
addMapping("removeAllListeners", PlayerHurtEntityTrigger.class, "func_192167_a");
addMapping("trigger", PlayerHurtEntityTrigger.class, "func_192220_a");
addMapping("getId", PositionTrigger.class, "func_192163_a");
addMapping("removeListener", PositionTrigger.class, "func_192164_b");
addMapping("addListener", PositionTrigger.class, "func_192165_a");
addMapping("deserializeInstance", PositionTrigger.class, "func_192166_a");
addMapping("removeAllListeners", PositionTrigger.class, "func_192167_a");
addMapping("trigger", PositionTrigger.class, "func_192215_a");
addMapping("getId", RecipeUnlockedTrigger.class, "func_192163_a");
addMapping("removeListener", RecipeUnlockedTrigger.class, "func_192164_b");
addMapping("addListener", RecipeUnlockedTrigger.class, "func_192165_a");
addMapping("deserializeInstance", RecipeUnlockedTrigger.class, "func_192166_a");
addMapping("removeAllListeners", RecipeUnlockedTrigger.class, "func_192167_a");
addMapping("trigger", RecipeUnlockedTrigger.class, "func_192225_a");
addMapping("getId", SummonedEntityTrigger.class, "func_192163_a");
addMapping("removeListener", SummonedEntityTrigger.class, "func_192164_b");
addMapping("addListener", SummonedEntityTrigger.class, "func_192165_a");
addMapping("deserializeInstance", SummonedEntityTrigger.class, "func_192166_a");
addMapping("removeAllListeners", SummonedEntityTrigger.class, "func_192167_a");
addMapping("trigger", SummonedEntityTrigger.class, "func_192229_a");
addMapping("getId", TameAnimalTrigger.class, "func_192163_a");
addMapping("removeListener", TameAnimalTrigger.class, "func_192164_b");
addMapping("addListener", TameAnimalTrigger.class, "func_192165_a");
addMapping("deserializeInstance", TameAnimalTrigger.class, "func_192166_a");
addMapping("removeAllListeners", TameAnimalTrigger.class, "func_192167_a");
addMapping("trigger", TameAnimalTrigger.class, "func_193178_a");
addMapping("getId", TickTrigger.class, "func_192163_a");
addMapping("removeListener", TickTrigger.class, "func_192164_b");
addMapping("addListener", TickTrigger.class, "func_192165_a");
addMapping("deserializeInstance", TickTrigger.class, "func_192166_a");
addMapping("removeAllListeners", TickTrigger.class, "func_192167_a");
addMapping("trigger", TickTrigger.class, "func_193182_a");
addMapping("getId", UsedEnderEyeTrigger.class, "func_192163_a");
addMapping("removeListener", UsedEnderEyeTrigger.class, "func_192164_b");
addMapping("addListener", UsedEnderEyeTrigger.class, "func_192165_a");
addMapping("deserializeInstance", UsedEnderEyeTrigger.class, "func_192166_a");
addMapping("removeAllListeners", UsedEnderEyeTrigger.class, "func_192167_a");
addMapping("trigger", UsedEnderEyeTrigger.class, "func_192239_a");
addMapping("getId", UsedTotemTrigger.class, "func_192163_a");
addMapping("removeListener", UsedTotemTrigger.class, "func_192164_b");
addMapping("addListener", UsedTotemTrigger.class, "func_192165_a");
addMapping("deserializeInstance", UsedTotemTrigger.class, "func_192166_a");
addMapping("removeAllListeners", UsedTotemTrigger.class, "func_192167_a");
addMapping("trigger", UsedTotemTrigger.class, "func_193187_a");
addMapping("getId", VillagerTradeTrigger.class, "func_192163_a");
addMapping("removeListener", VillagerTradeTrigger.class, "func_192164_b");
addMapping("addListener", VillagerTradeTrigger.class, "func_192165_a");
addMapping("deserializeInstance", VillagerTradeTrigger.class, "func_192166_a");
addMapping("removeAllListeners", VillagerTradeTrigger.class, "func_192167_a");
addMapping("trigger", VillagerTradeTrigger.class, "func_192234_a");
addMapping("getBlockFromItem", Block.class, "func_149634_a");
addMapping("isBlockNormalCube", Block.class, "func_149637_q");
addMapping("getExplosionResistance", Block.class, "func_149638_a");
addMapping("getRenderType", Block.class, "func_149645_b");
addMapping("setCreativeTab", Block.class, "func_149647_a");
addMapping("disableStats", Block.class, "func_149649_H");
addMapping("getEnableStats", Block.class, "func_149652_G");
addMapping("getTickRandomly", Block.class, "func_149653_t");
addMapping("getMobilityFlag", Block.class, "func_149656_h");
addMapping("canDropFromExplosion", Block.class, "func_149659_a");
addMapping("isOpaqueCube", Block.class, "func_149662_c");
addMapping("setUnlocalizedName", Block.class, "func_149663_c");
addMapping("getSubBlocks", Block.class, "func_149666_a");
addMapping("isAssociatedBlock", Block.class, "func_149667_c");
addMapping("registerBlocks", Block.class, "func_149671_p");
addMapping("setSoundType", Block.class, "func_149672_a");
addMapping("setTickRandomly", Block.class, "func_149675_a");
addMapping("quantityDroppedWithBonus", Block.class, "func_149679_a");
addMapping("isEqualTo", Block.class, "func_149680_a");
addMapping("getIdFromBlock", Block.class, "func_149682_b");
addMapping("getBlockFromName", Block.class, "func_149684_b");
addMapping("isFullCube", Block.class, "func_149686_d");
addMapping("getMaterial", Block.class, "func_149688_o");
addMapping("requiresUpdates", Block.class, "func_149698_L");
addMapping("canSilkHarvest", Block.class, "func_149700_E");
addMapping("isCollidable", Block.class, "func_149703_v");
addMapping("getCreativeTabToDisplayOn", Block.class, "func_149708_J");
addMapping("getUseNeighborBrightness", Block.class, "func_149710_n");
addMapping("setHardness", Block.class, "func_149711_c");
addMapping("setLightOpacity", Block.class, "func_149713_g");
addMapping("setLightLevel", Block.class, "func_149715_a");
addMapping("hasTileEntity", Block.class, "func_149716_u");
addMapping("getLightOpacity", Block.class, "func_149717_k");
addMapping("isNormalCube", Block.class, "func_149721_r");
addMapping("setBlockUnbreakable", Block.class, "func_149722_s");
addMapping("getBlockById", Block.class, "func_149729_e");
addMapping("isFullBlock", Block.class, "func_149730_j");
addMapping("getLocalizedName", Block.class, "func_149732_F");
addMapping("tickRate", Block.class, "func_149738_a");
addMapping("getUnlocalizedName", Block.class, "func_149739_a");
addMapping("hasComparatorInputOverride", Block.class, "func_149740_M");
addMapping("canProvidePower", Block.class, "func_149744_f");
addMapping("quantityDropped", Block.class, "func_149745_a");
addMapping("getLightValue", Block.class, "func_149750_m");
addMapping("isTranslucent", Block.class, "func_149751_l");
addMapping("setResistance", Block.class, "func_149752_b");
addMapping("getBlockState", Block.class, "func_176194_O");
addMapping("getBlockHardness", Block.class, "func_176195_g");
addMapping("canPlaceBlockAt", Block.class, "func_176196_c");
addMapping("modifyAcceleration", Block.class, "func_176197_a");
addMapping("canPlaceBlockOnSide", Block.class, "func_176198_a");
addMapping("onEntityWalk", Block.class, "func_176199_a");
addMapping("isReplaceable", Block.class, "func_176200_f");
addMapping("getMetaFromState", Block.class, "func_176201_c");
addMapping("getStateFromMeta", Block.class, "func_176203_a");
addMapping("isPassable", Block.class, "func_176205_b");
addMapping("onBlockDestroyedByPlayer", Block.class, "func_176206_d");
addMapping("onBlockHarvested", Block.class, "func_176208_a");
addMapping("canCollideCheck", Block.class, "func_176209_a");
addMapping("getStateId", Block.class, "func_176210_f");
addMapping("getStrongPower", Block.class, "func_176211_b");
addMapping("onBlockAdded", Block.class, "func_176213_c");
addMapping("causesSuffocation", Block.class, "func_176214_u");
addMapping("registerBlock", Block.class, "func_176215_a");
addMapping("onLanded", Block.class, "func_176216_a");
addMapping("getOffsetType", Block.class, "func_176218_Q");
addMapping("registerBlock", Block.class, "func_176219_a");
addMapping("getStateById", Block.class, "func_176220_d");
addMapping("getActualState", Block.class, "func_176221_a");
addMapping("getDefaultState", Block.class, "func_176223_P");
addMapping("fillWithRain", Block.class, "func_176224_k");
addMapping("shouldSideBeRendered", Block.class, "func_176225_a");
addMapping("dropBlockAsItem", Block.class, "func_176226_b");
addMapping("setDefaultState", Block.class, "func_180632_j");
addMapping("onBlockPlacedBy", Block.class, "func_180633_a");
addMapping("onEntityCollidedWithBlock", Block.class, "func_180634_a");
addMapping("spawnAsEntity", Block.class, "func_180635_a");
addMapping("collisionRayTrace", Block.class, "func_180636_a");
addMapping("dropXpOnBlockBreak", Block.class, "func_180637_b");
addMapping("onBlockActivated", Block.class, "func_180639_a");
addMapping("getSelectedBoundingBox", Block.class, "func_180640_a");
addMapping("getComparatorInputOverride", Block.class, "func_180641_l");
addMapping("getStateForPlacement", Block.class, "func_180642_a");
addMapping("getSilkTouchDrop", Block.class, "func_180643_i");
addMapping("randomTick", Block.class, "func_180645_a");
addMapping("getCollisionBoundingBox", Block.class, "func_180646_a");
addMapping("getPlayerRelativeBlockHardness", Block.class, "func_180647_a");
addMapping("onBlockClicked", Block.class, "func_180649_a");
addMapping("updateTick", Block.class, "func_180650_b");
addMapping("damageDropped", Block.class, "func_180651_a");
addMapping("onBlockDestroyedByExplosion", Block.class, "func_180652_a");
addMapping("dropBlockAsItemWithChance", Block.class, "func_180653_a");
addMapping("randomDisplayTick", Block.class, "func_180655_c");
addMapping("getWeakPower", Block.class, "func_180656_a");
addMapping("harvestBlock", Block.class, "func_180657_a");
addMapping("onFallenUpon", Block.class, "func_180658_a");
addMapping("getMapColor", Block.class, "func_180659_g");
addMapping("getItemDropped", Block.class, "func_180660_a");
addMapping("createBlockState", Block.class, "func_180661_e");
addMapping("breakBlock", Block.class, "func_180663_b");
addMapping("getBlockLayer", Block.class, "func_180664_k");
addMapping("canSpawnInBlock", Block.class, "func_181623_g");
addMapping("getSoundType", Block.class, "func_185467_w");
addMapping("withMirror", Block.class, "func_185471_a");
addMapping("getItem", Block.class, "func_185473_a");
addMapping("addCollisionBoxToList", Block.class, "func_185477_a");
addMapping("isTopSolid", Block.class, "func_185481_k");
addMapping("getPackedLightmapCoords", Block.class, "func_185484_c");
addMapping("getAmbientOcclusionLightValue", Block.class, "func_185485_f");
addMapping("addCollisionBoxToList", Block.class, "func_185492_a");
addMapping("getBoundingBox", Block.class, "func_185496_a");
addMapping("withRotation", Block.class, "func_185499_a");
addMapping("rayTrace", Block.class, "func_185503_a");
addMapping("eventReceived", Block.class, "func_189539_a");
addMapping("neighborChanged", Block.class, "func_189540_a");
addMapping("canEntitySpawn", Block.class, "func_189872_a");
addMapping("hasCustomBreakingProgress", Block.class, "func_190946_v");
addMapping("addInformation", Block.class, "func_190948_a");
addMapping("getOffset", Block.class, "func_190949_e");
addMapping("isExceptBlockForAttachWithPiston", Block.class, "func_193382_c");
addMapping("getBlockFaceShape", Block.class, "func_193383_a");
addMapping("isExceptionBlockForAttaching", Block.class, "func_193384_b");
addMapping("getRenderType", BlockAir.class, "func_149645_b");
addMapping("isOpaqueCube", BlockAir.class, "func_149662_c");
addMapping("isFullCube", BlockAir.class, "func_149686_d");
addMapping("isReplaceable", BlockAir.class, "func_176200_f");
addMapping("canCollideCheck", BlockAir.class, "func_176209_a");
addMapping("getCollisionBoundingBox", BlockAir.class, "func_180646_a");
addMapping("dropBlockAsItemWithChance", BlockAir.class, "func_180653_a");
addMapping("getBlockFaceShape", BlockAir.class, "func_193383_a");
addMapping("isOpaqueCube", BlockAnvil.class, "func_149662_c");
addMapping("getSubBlocks", BlockAnvil.class, "func_149666_a");
addMapping("isFullCube", BlockAnvil.class, "func_149686_d");
addMapping("onStartFalling", BlockAnvil.class, "func_149829_a");
addMapping("getMetaFromState", BlockAnvil.class, "func_176201_c");
addMapping("getStateFromMeta", BlockAnvil.class, "func_176203_a");
addMapping("shouldSideBeRendered", BlockAnvil.class, "func_176225_a");
addMapping("onEndFalling", BlockAnvil.class, "func_176502_a_");
addMapping("onBlockActivated", BlockAnvil.class, "func_180639_a");
addMapping("getStateForPlacement", BlockAnvil.class, "func_180642_a");
addMapping("damageDropped", BlockAnvil.class, "func_180651_a");
addMapping("createBlockState", BlockAnvil.class, "func_180661_e");
addMapping("getBoundingBox", BlockAnvil.class, "func_185496_a");
addMapping("withRotation", BlockAnvil.class, "func_185499_a");
addMapping("onBroken", BlockAnvil.class, "func_190974_b");
addMapping("getBlockFaceShape", BlockAnvil.class, "func_193383_a");
addMapping("isOpaqueCube", BlockBanner.class, "func_149662_c");
addMapping("isFullCube", BlockBanner.class, "func_149686_d");
addMapping("getLocalizedName", BlockBanner.class, "func_149732_F");
addMapping("createNewTileEntity", BlockBanner.class, "func_149915_a");
addMapping("canPlaceBlockAt", BlockBanner.class, "func_176196_c");
addMapping("isPassable", BlockBanner.class, "func_176205_b");
addMapping("getCollisionBoundingBox", BlockBanner.class, "func_180646_a");
addMapping("dropBlockAsItemWithChance", BlockBanner.class, "func_180653_a");
addMapping("harvestBlock", BlockBanner.class, "func_180657_a");
addMapping("getItemDropped", BlockBanner.class, "func_180660_a");
addMapping("canSpawnInBlock", BlockBanner.class, "func_181623_g");
addMapping("getItem", BlockBanner.class, "func_185473_a");
addMapping("getTileDataItemStack", BlockBanner.class, "func_185549_e");
addMapping("getBlockFaceShape", BlockBanner.class, "func_193383_a");
addMapping("getRenderType", BlockBarrier.class, "func_149645_b");
addMapping("isOpaqueCube", BlockBarrier.class, "func_149662_c");
addMapping("dropBlockAsItemWithChance", BlockBarrier.class, "func_180653_a");
addMapping("getAmbientOcclusionLightValue", BlockBarrier.class, "func_185485_f");
addMapping("getMobilityFlag", BlockBasePressurePlate.class, "func_149656_h");
addMapping("isOpaqueCube", BlockBasePressurePlate.class, "func_149662_c");
addMapping("isFullCube", BlockBasePressurePlate.class, "func_149686_d");
addMapping("tickRate", BlockBasePressurePlate.class, "func_149738_a");
addMapping("canProvidePower", BlockBasePressurePlate.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockBasePressurePlate.class, "func_176196_c");
addMapping("isPassable", BlockBasePressurePlate.class, "func_176205_b");
addMapping("getStrongPower", BlockBasePressurePlate.class, "func_176211_b");
addMapping("setRedstoneStrength", BlockBasePressurePlate.class, "func_176575_a");
addMapping("getRedstoneStrength", BlockBasePressurePlate.class, "func_176576_e");
addMapping("canBePlacedOn", BlockBasePressurePlate.class, "func_176577_m");
addMapping("updateNeighbors", BlockBasePressurePlate.class, "func_176578_d");
addMapping("onEntityCollidedWithBlock", BlockBasePressurePlate.class, "func_180634_a");
addMapping("randomTick", BlockBasePressurePlate.class, "func_180645_a");
addMapping("getCollisionBoundingBox", BlockBasePressurePlate.class, "func_180646_a");
addMapping("updateTick", BlockBasePressurePlate.class, "func_180650_b");
addMapping("getWeakPower", BlockBasePressurePlate.class, "func_180656_a");
addMapping("breakBlock", BlockBasePressurePlate.class, "func_180663_b");
addMapping("updateState", BlockBasePressurePlate.class, "func_180666_a");
addMapping("computeRedstoneStrength", BlockBasePressurePlate.class, "func_180669_e");
addMapping("canSpawnInBlock", BlockBasePressurePlate.class, "func_181623_g");
addMapping("getBoundingBox", BlockBasePressurePlate.class, "func_185496_a");
addMapping("playClickOnSound", BlockBasePressurePlate.class, "func_185507_b");
addMapping("playClickOffSound", BlockBasePressurePlate.class, "func_185508_c");
addMapping("neighborChanged", BlockBasePressurePlate.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockBasePressurePlate.class, "func_193383_a");
addMapping("getRenderType", BlockBeacon.class, "func_149645_b");
addMapping("isOpaqueCube", BlockBeacon.class, "func_149662_c");
addMapping("isFullCube", BlockBeacon.class, "func_149686_d");
addMapping("createNewTileEntity", BlockBeacon.class, "func_149915_a");
addMapping("updateColorAsync", BlockBeacon.class, "func_176450_d");
addMapping("onBlockPlacedBy", BlockBeacon.class, "func_180633_a");
addMapping("onBlockActivated", BlockBeacon.class, "func_180639_a");
addMapping("getBlockLayer", BlockBeacon.class, "func_180664_k");
addMapping("neighborChanged", BlockBeacon.class, "func_189540_a");
addMapping("getRenderType", BlockBed.class, "func_149645_b");
addMapping("getMobilityFlag", BlockBed.class, "func_149656_h");
addMapping("isOpaqueCube", BlockBed.class, "func_149662_c");
addMapping("isFullCube", BlockBed.class, "func_149686_d");
addMapping("createNewTileEntity", BlockBed.class, "func_149915_a");
addMapping("getMetaFromState", BlockBed.class, "func_176201_c");
addMapping("getStateFromMeta", BlockBed.class, "func_176203_a");
addMapping("onBlockHarvested", BlockBed.class, "func_176208_a");
addMapping("onLanded", BlockBed.class, "func_176216_a");
addMapping("getActualState", BlockBed.class, "func_176221_a");
addMapping("getSafeExitLocation", BlockBed.class, "func_176468_a");
addMapping("hasRoomForPlayer", BlockBed.class, "func_176469_d");
addMapping("getPlayerInBed", BlockBed.class, "func_176470_e");
addMapping("onBlockActivated", BlockBed.class, "func_180639_a");
addMapping("dropBlockAsItemWithChance", BlockBed.class, "func_180653_a");
addMapping("harvestBlock", BlockBed.class, "func_180657_a");
addMapping("onFallenUpon", BlockBed.class, "func_180658_a");
addMapping("getMapColor", BlockBed.class, "func_180659_g");
addMapping("getItemDropped", BlockBed.class, "func_180660_a");
addMapping("createBlockState", BlockBed.class, "func_180661_e");
addMapping("breakBlock", BlockBed.class, "func_180663_b");
addMapping("getBlockLayer", BlockBed.class, "func_180664_k");
addMapping("withMirror", BlockBed.class, "func_185471_a");
addMapping("getItem", BlockBed.class, "func_185473_a");
addMapping("getBoundingBox", BlockBed.class, "func_185496_a");
addMapping("withRotation", BlockBed.class, "func_185499_a");
addMapping("neighborChanged", BlockBed.class, "func_189540_a");
addMapping("hasCustomBreakingProgress", BlockBed.class, "func_190946_v");
addMapping("getBlockFaceShape", BlockBed.class, "func_193383_a");
addMapping("isHeadPiece", BlockBed.class, "func_193385_b");
addMapping("getCrop", BlockBeetroot.class, "func_149865_P");
addMapping("getSeed", BlockBeetroot.class, "func_149866_i");
addMapping("updateTick", BlockBeetroot.class, "func_180650_b");
addMapping("createBlockState", BlockBeetroot.class, "func_180661_e");
addMapping("getBoundingBox", BlockBeetroot.class, "func_185496_a");
addMapping("getAgeProperty", BlockBeetroot.class, "func_185524_e");
addMapping("getMaxAge", BlockBeetroot.class, "func_185526_g");
addMapping("getBonemealAgeIncrease", BlockBeetroot.class, "func_185529_b");
addMapping("quantityDropped", BlockBookshelf.class, "func_149745_a");
addMapping("getItemDropped", BlockBookshelf.class, "func_180660_a");
addMapping("isOpaqueCube", BlockBreakable.class, "func_149662_c");
addMapping("shouldSideBeRendered", BlockBreakable.class, "func_176225_a");
addMapping("getRenderType", BlockBrewingStand.class, "func_149645_b");
addMapping("isOpaqueCube", BlockBrewingStand.class, "func_149662_c");
addMapping("isFullCube", BlockBrewingStand.class, "func_149686_d");
addMapping("getLocalizedName", BlockBrewingStand.class, "func_149732_F");
addMapping("hasComparatorInputOverride", BlockBrewingStand.class, "func_149740_M");
addMapping("createNewTileEntity", BlockBrewingStand.class, "func_149915_a");
addMapping("getMetaFromState", BlockBrewingStand.class, "func_176201_c");
addMapping("getStateFromMeta", BlockBrewingStand.class, "func_176203_a");
addMapping("onBlockPlacedBy", BlockBrewingStand.class, "func_180633_a");
addMapping("onBlockActivated", BlockBrewingStand.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockBrewingStand.class, "func_180641_l");
addMapping("randomDisplayTick", BlockBrewingStand.class, "func_180655_c");
addMapping("getItemDropped", BlockBrewingStand.class, "func_180660_a");
addMapping("createBlockState", BlockBrewingStand.class, "func_180661_e");
addMapping("breakBlock", BlockBrewingStand.class, "func_180663_b");
addMapping("getBlockLayer", BlockBrewingStand.class, "func_180664_k");
addMapping("getItem", BlockBrewingStand.class, "func_185473_a");
addMapping("addCollisionBoxToList", BlockBrewingStand.class, "func_185477_a");
addMapping("getBoundingBox", BlockBrewingStand.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockBrewingStand.class, "func_193383_a");
addMapping("isOpaqueCube", BlockBush.class, "func_149662_c");
addMapping("isFullCube", BlockBush.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockBush.class, "func_176196_c");
addMapping("checkAndDropBlock", BlockBush.class, "func_176475_e");
addMapping("getCollisionBoundingBox", BlockBush.class, "func_180646_a");
addMapping("updateTick", BlockBush.class, "func_180650_b");
addMapping("getBlockLayer", BlockBush.class, "func_180664_k");
addMapping("canBlockStay", BlockBush.class, "func_180671_f");
addMapping("getBoundingBox", BlockBush.class, "func_185496_a");
addMapping("canSustainBush", BlockBush.class, "func_185514_i");
addMapping("neighborChanged", BlockBush.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockBush.class, "func_193383_a");
addMapping("isOpaqueCube", BlockButton.class, "func_149662_c");
addMapping("isFullCube", BlockButton.class, "func_149686_d");
addMapping("tickRate", BlockButton.class, "func_149738_a");
addMapping("canProvidePower", BlockButton.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockButton.class, "func_176196_c");
addMapping("canPlaceBlockOnSide", BlockButton.class, "func_176198_a");
addMapping("getMetaFromState", BlockButton.class, "func_176201_c");
addMapping("getStateFromMeta", BlockButton.class, "func_176203_a");
addMapping("getStrongPower", BlockButton.class, "func_176211_b");
addMapping("notifyNeighbors", BlockButton.class, "func_176582_b");
addMapping("checkForDrop", BlockButton.class, "func_176583_e");
addMapping("onEntityCollidedWithBlock", BlockButton.class, "func_180634_a");
addMapping("onBlockActivated", BlockButton.class, "func_180639_a");
addMapping("getStateForPlacement", BlockButton.class, "func_180642_a");
addMapping("randomTick", BlockButton.class, "func_180645_a");
addMapping("getCollisionBoundingBox", BlockButton.class, "func_180646_a");
addMapping("updateTick", BlockButton.class, "func_180650_b");
addMapping("getWeakPower", BlockButton.class, "func_180656_a");
addMapping("createBlockState", BlockButton.class, "func_180661_e");
addMapping("breakBlock", BlockButton.class, "func_180663_b");
addMapping("canPlaceBlock", BlockButton.class, "func_181088_a");
addMapping("withMirror", BlockButton.class, "func_185471_a");
addMapping("getBoundingBox", BlockButton.class, "func_185496_a");
addMapping("withRotation", BlockButton.class, "func_185499_a");
addMapping("playClickSound", BlockButton.class, "func_185615_a");
addMapping("checkPressed", BlockButton.class, "func_185616_e");
addMapping("playReleaseSound", BlockButton.class, "func_185617_b");
addMapping("neighborChanged", BlockButton.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockButton.class, "func_193383_a");
addMapping("playClickSound", BlockButtonStone.class, "func_185615_a");
addMapping("playReleaseSound", BlockButtonStone.class, "func_185617_b");
addMapping("playClickSound", BlockButtonWood.class, "func_185615_a");
addMapping("playReleaseSound", BlockButtonWood.class, "func_185617_b");
addMapping("isOpaqueCube", BlockCactus.class, "func_149662_c");
addMapping("isFullCube", BlockCactus.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockCactus.class, "func_176196_c");
addMapping("getMetaFromState", BlockCactus.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCactus.class, "func_176203_a");
addMapping("canBlockStay", BlockCactus.class, "func_176586_d");
addMapping("onEntityCollidedWithBlock", BlockCactus.class, "func_180634_a");
addMapping("getSelectedBoundingBox", BlockCactus.class, "func_180640_a");
addMapping("getCollisionBoundingBox", BlockCactus.class, "func_180646_a");
addMapping("updateTick", BlockCactus.class, "func_180650_b");
addMapping("createBlockState", BlockCactus.class, "func_180661_e");
addMapping("getBlockLayer", BlockCactus.class, "func_180664_k");
addMapping("neighborChanged", BlockCactus.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockCactus.class, "func_193383_a");
addMapping("isOpaqueCube", BlockCake.class, "func_149662_c");
addMapping("isFullCube", BlockCake.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockCake.class, "func_149740_M");
addMapping("quantityDropped", BlockCake.class, "func_149745_a");
addMapping("canPlaceBlockAt", BlockCake.class, "func_176196_c");
addMapping("getMetaFromState", BlockCake.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCake.class, "func_176203_a");
addMapping("canBlockStay", BlockCake.class, "func_176588_d");
addMapping("onBlockActivated", BlockCake.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockCake.class, "func_180641_l");
addMapping("getItemDropped", BlockCake.class, "func_180660_a");
addMapping("createBlockState", BlockCake.class, "func_180661_e");
addMapping("getBlockLayer", BlockCake.class, "func_180664_k");
addMapping("eatCake", BlockCake.class, "func_180682_b");
addMapping("getItem", BlockCake.class, "func_185473_a");
addMapping("getBoundingBox", BlockCake.class, "func_185496_a");
addMapping("neighborChanged", BlockCake.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockCake.class, "func_193383_a");
addMapping("isOpaqueCube", BlockCarpet.class, "func_149662_c");
addMapping("getSubBlocks", BlockCarpet.class, "func_149666_a");
addMapping("isFullCube", BlockCarpet.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockCarpet.class, "func_176196_c");
addMapping("getMetaFromState", BlockCarpet.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCarpet.class, "func_176203_a");
addMapping("shouldSideBeRendered", BlockCarpet.class, "func_176225_a");
addMapping("checkForDrop", BlockCarpet.class, "func_176328_e");
addMapping("canBlockStay", BlockCarpet.class, "func_176329_d");
addMapping("damageDropped", BlockCarpet.class, "func_180651_a");
addMapping("getMapColor", BlockCarpet.class, "func_180659_g");
addMapping("createBlockState", BlockCarpet.class, "func_180661_e");
addMapping("getBoundingBox", BlockCarpet.class, "func_185496_a");
addMapping("neighborChanged", BlockCarpet.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockCarpet.class, "func_193383_a");
addMapping("getCrop", BlockCarrot.class, "func_149865_P");
addMapping("getSeed", BlockCarrot.class, "func_149866_i");
addMapping("getBoundingBox", BlockCarrot.class, "func_185496_a");
addMapping("isOpaqueCube", BlockCauldron.class, "func_149662_c");
addMapping("isFullCube", BlockCauldron.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockCauldron.class, "func_149740_M");
addMapping("getMetaFromState", BlockCauldron.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCauldron.class, "func_176203_a");
addMapping("isPassable", BlockCauldron.class, "func_176205_b");
addMapping("fillWithRain", BlockCauldron.class, "func_176224_k");
addMapping("setWaterLevel", BlockCauldron.class, "func_176590_a");
addMapping("onEntityCollidedWithBlock", BlockCauldron.class, "func_180634_a");
addMapping("onBlockActivated", BlockCauldron.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockCauldron.class, "func_180641_l");
addMapping("getItemDropped", BlockCauldron.class, "func_180660_a");
addMapping("createBlockState", BlockCauldron.class, "func_180661_e");
addMapping("getItem", BlockCauldron.class, "func_185473_a");
addMapping("addCollisionBoxToList", BlockCauldron.class, "func_185477_a");
addMapping("getBoundingBox", BlockCauldron.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockCauldron.class, "func_193383_a");
addMapping("getRenderType", BlockChest.class, "func_149645_b");
addMapping("isOpaqueCube", BlockChest.class, "func_149662_c");
addMapping("isFullCube", BlockChest.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockChest.class, "func_149740_M");
addMapping("canProvidePower", BlockChest.class, "func_149744_f");
addMapping("createNewTileEntity", BlockChest.class, "func_149915_a");
addMapping("canPlaceBlockAt", BlockChest.class, "func_176196_c");
addMapping("getMetaFromState", BlockChest.class, "func_176201_c");
addMapping("getStateFromMeta", BlockChest.class, "func_176203_a");
addMapping("getStrongPower", BlockChest.class, "func_176211_b");
addMapping("onBlockAdded", BlockChest.class, "func_176213_c");
addMapping("isOcelotSittingOnChest", BlockChest.class, "func_176453_o");
addMapping("isDoubleChest", BlockChest.class, "func_176454_e");
addMapping("checkForSurroundingChests", BlockChest.class, "func_176455_e");
addMapping("isBelowSolidBlock", BlockChest.class, "func_176456_n");
addMapping("isBlocked", BlockChest.class, "func_176457_m");
addMapping("correctFacing", BlockChest.class, "func_176458_f");
addMapping("onBlockPlacedBy", BlockChest.class, "func_180633_a");
addMapping("onBlockActivated", BlockChest.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockChest.class, "func_180641_l");
addMapping("getStateForPlacement", BlockChest.class, "func_180642_a");
addMapping("getWeakPower", BlockChest.class, "func_180656_a");
addMapping("createBlockState", BlockChest.class, "func_180661_e");
addMapping("breakBlock", BlockChest.class, "func_180663_b");
addMapping("getLockableContainer", BlockChest.class, "func_180676_d");
addMapping("withMirror", BlockChest.class, "func_185471_a");
addMapping("getBoundingBox", BlockChest.class, "func_185496_a");
addMapping("withRotation", BlockChest.class, "func_185499_a");
addMapping("getContainer", BlockChest.class, "func_189418_a");
addMapping("neighborChanged", BlockChest.class, "func_189540_a");
addMapping("hasCustomBreakingProgress", BlockChest.class, "func_190946_v");
addMapping("getBlockFaceShape", BlockChest.class, "func_193383_a");
addMapping("isOpaqueCube", BlockChorusFlower.class, "func_149662_c");
addMapping("isFullCube", BlockChorusFlower.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockChorusFlower.class, "func_176196_c");
addMapping("getMetaFromState", BlockChorusFlower.class, "func_176201_c");
addMapping("getStateFromMeta", BlockChorusFlower.class, "func_176203_a");
addMapping("getSilkTouchDrop", BlockChorusFlower.class, "func_180643_i");
addMapping("updateTick", BlockChorusFlower.class, "func_180650_b");
addMapping("harvestBlock", BlockChorusFlower.class, "func_180657_a");
addMapping("getItemDropped", BlockChorusFlower.class, "func_180660_a");
addMapping("createBlockState", BlockChorusFlower.class, "func_180661_e");
addMapping("getBlockLayer", BlockChorusFlower.class, "func_180664_k");
addMapping("growTreeRecursive", BlockChorusFlower.class, "func_185601_a");
addMapping("placeGrownFlower", BlockChorusFlower.class, "func_185602_a");
addMapping("generatePlant", BlockChorusFlower.class, "func_185603_a");
addMapping("areAllNeighborsEmpty", BlockChorusFlower.class, "func_185604_a");
addMapping("placeDeadFlower", BlockChorusFlower.class, "func_185605_c");
addMapping("canSurvive", BlockChorusFlower.class, "func_185606_b");
addMapping("neighborChanged", BlockChorusFlower.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockChorusFlower.class, "func_193383_a");
addMapping("isOpaqueCube", BlockChorusPlant.class, "func_149662_c");
addMapping("isFullCube", BlockChorusPlant.class, "func_149686_d");
addMapping("quantityDropped", BlockChorusPlant.class, "func_149745_a");
addMapping("canPlaceBlockAt", BlockChorusPlant.class, "func_176196_c");
addMapping("getMetaFromState", BlockChorusPlant.class, "func_176201_c");
addMapping("isPassable", BlockChorusPlant.class, "func_176205_b");
addMapping("getActualState", BlockChorusPlant.class, "func_176221_a");
addMapping("shouldSideBeRendered", BlockChorusPlant.class, "func_176225_a");
addMapping("updateTick", BlockChorusPlant.class, "func_180650_b");
addMapping("getItemDropped", BlockChorusPlant.class, "func_180660_a");
addMapping("createBlockState", BlockChorusPlant.class, "func_180661_e");
addMapping("getBlockLayer", BlockChorusPlant.class, "func_180664_k");
addMapping("addCollisionBoxToList", BlockChorusPlant.class, "func_185477_a");
addMapping("getBoundingBox", BlockChorusPlant.class, "func_185496_a");
addMapping("canSurviveAt", BlockChorusPlant.class, "func_185608_b");
addMapping("neighborChanged", BlockChorusPlant.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockChorusPlant.class, "func_193383_a");
addMapping("quantityDropped", BlockClay.class, "func_149745_a");
addMapping("getItemDropped", BlockClay.class, "func_180660_a");
addMapping("isOpaqueCube", BlockCocoa.class, "func_149662_c");
addMapping("isFullCube", BlockCocoa.class, "func_149686_d");
addMapping("getMetaFromState", BlockCocoa.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCocoa.class, "func_176203_a");
addMapping("canGrow", BlockCocoa.class, "func_176473_a");
addMapping("grow", BlockCocoa.class, "func_176474_b");
addMapping("canBlockStay", BlockCocoa.class, "func_176499_e");
addMapping("dropBlock", BlockCocoa.class, "func_176500_f");
addMapping("onBlockPlacedBy", BlockCocoa.class, "func_180633_a");
addMapping("getStateForPlacement", BlockCocoa.class, "func_180642_a");
addMapping("updateTick", BlockCocoa.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockCocoa.class, "func_180653_a");
addMapping("createBlockState", BlockCocoa.class, "func_180661_e");
addMapping("getBlockLayer", BlockCocoa.class, "func_180664_k");
addMapping("canUseBonemeal", BlockCocoa.class, "func_180670_a");
addMapping("withMirror", BlockCocoa.class, "func_185471_a");
addMapping("getItem", BlockCocoa.class, "func_185473_a");
addMapping("getBoundingBox", BlockCocoa.class, "func_185496_a");
addMapping("withRotation", BlockCocoa.class, "func_185499_a");
addMapping("neighborChanged", BlockCocoa.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockCocoa.class, "func_193383_a");
addMapping("getSubBlocks", BlockColored.class, "func_149666_a");
addMapping("getMetaFromState", BlockColored.class, "func_176201_c");
addMapping("getStateFromMeta", BlockColored.class, "func_176203_a");
addMapping("damageDropped", BlockColored.class, "func_180651_a");
addMapping("getMapColor", BlockColored.class, "func_180659_g");
addMapping("createBlockState", BlockColored.class, "func_180661_e");
addMapping("getRenderType", BlockCommandBlock.class, "func_149645_b");
addMapping("tickRate", BlockCommandBlock.class, "func_149738_a");
addMapping("hasComparatorInputOverride", BlockCommandBlock.class, "func_149740_M");
addMapping("quantityDropped", BlockCommandBlock.class, "func_149745_a");
addMapping("createNewTileEntity", BlockCommandBlock.class, "func_149915_a");
addMapping("getMetaFromState", BlockCommandBlock.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCommandBlock.class, "func_176203_a");
addMapping("onBlockPlacedBy", BlockCommandBlock.class, "func_180633_a");
addMapping("onBlockActivated", BlockCommandBlock.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockCommandBlock.class, "func_180641_l");
addMapping("getStateForPlacement", BlockCommandBlock.class, "func_180642_a");
addMapping("updateTick", BlockCommandBlock.class, "func_180650_b");
addMapping("createBlockState", BlockCommandBlock.class, "func_180661_e");
addMapping("withMirror", BlockCommandBlock.class, "func_185471_a");
addMapping("withRotation", BlockCommandBlock.class, "func_185499_a");
addMapping("neighborChanged", BlockCommandBlock.class, "func_189540_a");
addMapping("executeChain", BlockCommandBlock.class, "func_193386_c");
addMapping("execute", BlockCommandBlock.class, "func_193387_a");
addMapping("canProvidePower", BlockCompressedPowered.class, "func_149744_f");
addMapping("getWeakPower", BlockCompressedPowered.class, "func_180656_a");
addMapping("getSubBlocks", BlockConcretePowder.class, "func_149666_a");
addMapping("getMetaFromState", BlockConcretePowder.class, "func_176201_c");
addMapping("getStateFromMeta", BlockConcretePowder.class, "func_176203_a");
addMapping("onBlockAdded", BlockConcretePowder.class, "func_176213_c");
addMapping("onEndFalling", BlockConcretePowder.class, "func_176502_a_");
addMapping("damageDropped", BlockConcretePowder.class, "func_180651_a");
addMapping("getMapColor", BlockConcretePowder.class, "func_180659_g");
addMapping("createBlockState", BlockConcretePowder.class, "func_180661_e");
addMapping("neighborChanged", BlockConcretePowder.class, "func_189540_a");
addMapping("tryTouchWater", BlockConcretePowder.class, "func_192425_e");
addMapping("getRenderType", BlockContainer.class, "func_149645_b");
addMapping("harvestBlock", BlockContainer.class, "func_180657_a");
addMapping("breakBlock", BlockContainer.class, "func_180663_b");
addMapping("isInvalidNeighbor", BlockContainer.class, "func_181086_a");
addMapping("hasInvalidNeighbor", BlockContainer.class, "func_181087_e");
addMapping("eventReceived", BlockContainer.class, "func_189539_a");
addMapping("getCrop", BlockCrops.class, "func_149865_P");
addMapping("getSeed", BlockCrops.class, "func_149866_i");
addMapping("getMetaFromState", BlockCrops.class, "func_176201_c");
addMapping("getStateFromMeta", BlockCrops.class, "func_176203_a");
addMapping("canGrow", BlockCrops.class, "func_176473_a");
addMapping("grow", BlockCrops.class, "func_176474_b");
addMapping("grow", BlockCrops.class, "func_176487_g");
addMapping("updateTick", BlockCrops.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockCrops.class, "func_180653_a");
addMapping("getItemDropped", BlockCrops.class, "func_180660_a");
addMapping("createBlockState", BlockCrops.class, "func_180661_e");
addMapping("canUseBonemeal", BlockCrops.class, "func_180670_a");
addMapping("canBlockStay", BlockCrops.class, "func_180671_f");
addMapping("getGrowthChance", BlockCrops.class, "func_180672_a");
addMapping("getItem", BlockCrops.class, "func_185473_a");
addMapping("getBoundingBox", BlockCrops.class, "func_185496_a");
addMapping("canSustainBush", BlockCrops.class, "func_185514_i");
addMapping("getAgeProperty", BlockCrops.class, "func_185524_e");
addMapping("isMaxAge", BlockCrops.class, "func_185525_y");
addMapping("getMaxAge", BlockCrops.class, "func_185526_g");
addMapping("getAge", BlockCrops.class, "func_185527_x");
addMapping("withAge", BlockCrops.class, "func_185528_e");
addMapping("getBonemealAgeIncrease", BlockCrops.class, "func_185529_b");
addMapping("getRenderType", BlockDaylightDetector.class, "func_149645_b");
addMapping("isOpaqueCube", BlockDaylightDetector.class, "func_149662_c");
addMapping("getSubBlocks", BlockDaylightDetector.class, "func_149666_a");
addMapping("isFullCube", BlockDaylightDetector.class, "func_149686_d");
addMapping("canProvidePower", BlockDaylightDetector.class, "func_149744_f");
addMapping("createNewTileEntity", BlockDaylightDetector.class, "func_149915_a");
addMapping("getMetaFromState", BlockDaylightDetector.class, "func_176201_c");
addMapping("getStateFromMeta", BlockDaylightDetector.class, "func_176203_a");
addMapping("onBlockActivated", BlockDaylightDetector.class, "func_180639_a");
addMapping("getWeakPower", BlockDaylightDetector.class, "func_180656_a");
addMapping("getItemDropped", BlockDaylightDetector.class, "func_180660_a");
addMapping("createBlockState", BlockDaylightDetector.class, "func_180661_e");
addMapping("updatePower", BlockDaylightDetector.class, "func_180677_d");
addMapping("getItem", BlockDaylightDetector.class, "func_185473_a");
addMapping("getBoundingBox", BlockDaylightDetector.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockDaylightDetector.class, "func_193383_a");
addMapping("quantityDropped", BlockDeadBush.class, "func_149745_a");
addMapping("isReplaceable", BlockDeadBush.class, "func_176200_f");
addMapping("harvestBlock", BlockDeadBush.class, "func_180657_a");
addMapping("getMapColor", BlockDeadBush.class, "func_180659_g");
addMapping("getItemDropped", BlockDeadBush.class, "func_180660_a");
addMapping("getBoundingBox", BlockDeadBush.class, "func_185496_a");
addMapping("canSustainBush", BlockDeadBush.class, "func_185514_i");
addMapping("getSubBlocks", BlockDirt.class, "func_149666_a");
addMapping("getMetaFromState", BlockDirt.class, "func_176201_c");
addMapping("getStateFromMeta", BlockDirt.class, "func_176203_a");
addMapping("getActualState", BlockDirt.class, "func_176221_a");
addMapping("damageDropped", BlockDirt.class, "func_180651_a");
addMapping("getMapColor", BlockDirt.class, "func_180659_g");
addMapping("createBlockState", BlockDirt.class, "func_180661_e");
addMapping("getItem", BlockDirt.class, "func_185473_a");
addMapping("getRenderType", BlockDispenser.class, "func_149645_b");
addMapping("tickRate", BlockDispenser.class, "func_149738_a");
addMapping("hasComparatorInputOverride", BlockDispenser.class, "func_149740_M");
addMapping("createNewTileEntity", BlockDispenser.class, "func_149915_a");
addMapping("getDispensePosition", BlockDispenser.class, "func_149939_a");
addMapping("getBehavior", BlockDispenser.class, "func_149940_a");
addMapping("getMetaFromState", BlockDispenser.class, "func_176201_c");
addMapping("getStateFromMeta", BlockDispenser.class, "func_176203_a");
addMapping("onBlockAdded", BlockDispenser.class, "func_176213_c");
addMapping("setDefaultDirection", BlockDispenser.class, "func_176438_e");
addMapping("dispense", BlockDispenser.class, "func_176439_d");
addMapping("onBlockPlacedBy", BlockDispenser.class, "func_180633_a");
addMapping("onBlockActivated", BlockDispenser.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockDispenser.class, "func_180641_l");
addMapping("getStateForPlacement", BlockDispenser.class, "func_180642_a");
addMapping("updateTick", BlockDispenser.class, "func_180650_b");
addMapping("createBlockState", BlockDispenser.class, "func_180661_e");
addMapping("breakBlock", BlockDispenser.class, "func_180663_b");
addMapping("withMirror", BlockDispenser.class, "func_185471_a");
addMapping("withRotation", BlockDispenser.class, "func_185499_a");
addMapping("neighborChanged", BlockDispenser.class, "func_189540_a");
addMapping("getMobilityFlag", BlockDoor.class, "func_149656_h");
addMapping("isOpaqueCube", BlockDoor.class, "func_149662_c");
addMapping("isFullCube", BlockDoor.class, "func_149686_d");
addMapping("getLocalizedName", BlockDoor.class, "func_149732_F");
addMapping("canPlaceBlockAt", BlockDoor.class, "func_176196_c");
addMapping("getMetaFromState", BlockDoor.class, "func_176201_c");
addMapping("getStateFromMeta", BlockDoor.class, "func_176203_a");
addMapping("isPassable", BlockDoor.class, "func_176205_b");
addMapping("onBlockHarvested", BlockDoor.class, "func_176208_a");
addMapping("getActualState", BlockDoor.class, "func_176221_a");
addMapping("getItem", BlockDoor.class, "func_176509_j");
addMapping("removeHalfBit", BlockDoor.class, "func_176510_b");
addMapping("getFacing", BlockDoor.class, "func_176511_f");
addMapping("toggleDoor", BlockDoor.class, "func_176512_a");
addMapping("isOpen", BlockDoor.class, "func_176514_f");
addMapping("combineMetadata", BlockDoor.class, "func_176515_e");
addMapping("isOpen", BlockDoor.class, "func_176516_g");
addMapping("getFacing", BlockDoor.class, "func_176517_h");
addMapping("isTop", BlockDoor.class, "func_176518_i");
addMapping("onBlockActivated", BlockDoor.class, "func_180639_a");
addMapping("getMapColor", BlockDoor.class, "func_180659_g");
addMapping("getItemDropped", BlockDoor.class, "func_180660_a");
addMapping("createBlockState", BlockDoor.class, "func_180661_e");
addMapping("getBlockLayer", BlockDoor.class, "func_180664_k");
addMapping("withMirror", BlockDoor.class, "func_185471_a");
addMapping("getItem", BlockDoor.class, "func_185473_a");
addMapping("getBoundingBox", BlockDoor.class, "func_185496_a");
addMapping("withRotation", BlockDoor.class, "func_185499_a");
addMapping("getCloseSound", BlockDoor.class, "func_185654_e");
addMapping("getOpenSound", BlockDoor.class, "func_185655_g");
addMapping("neighborChanged", BlockDoor.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockDoor.class, "func_193383_a");
addMapping("getSubBlocks", BlockDoublePlant.class, "func_149666_a");
addMapping("canPlaceBlockAt", BlockDoublePlant.class, "func_176196_c");
addMapping("isReplaceable", BlockDoublePlant.class, "func_176200_f");
addMapping("getMetaFromState", BlockDoublePlant.class, "func_176201_c");
addMapping("getStateFromMeta", BlockDoublePlant.class, "func_176203_a");
addMapping("onBlockHarvested", BlockDoublePlant.class, "func_176208_a");
addMapping("getOffsetType", BlockDoublePlant.class, "func_176218_Q");
addMapping("getActualState", BlockDoublePlant.class, "func_176221_a");
addMapping("canGrow", BlockDoublePlant.class, "func_176473_a");
addMapping("grow", BlockDoublePlant.class, "func_176474_b");
addMapping("checkAndDropBlock", BlockDoublePlant.class, "func_176475_e");
addMapping("onHarvest", BlockDoublePlant.class, "func_176489_b");
addMapping("placeAt", BlockDoublePlant.class, "func_176491_a");
addMapping("onBlockPlacedBy", BlockDoublePlant.class, "func_180633_a");
addMapping("damageDropped", BlockDoublePlant.class, "func_180651_a");
addMapping("harvestBlock", BlockDoublePlant.class, "func_180657_a");
addMapping("getItemDropped", BlockDoublePlant.class, "func_180660_a");
addMapping("createBlockState", BlockDoublePlant.class, "func_180661_e");
addMapping("canUseBonemeal", BlockDoublePlant.class, "func_180670_a");
addMapping("canBlockStay", BlockDoublePlant.class, "func_180671_f");
addMapping("getItem", BlockDoublePlant.class, "func_185473_a");
addMapping("getBoundingBox", BlockDoublePlant.class, "func_185496_a");
addMapping("getType", BlockDoublePlant.class, "func_185517_a");
addMapping("isDouble", BlockDoubleStoneSlab.class, "func_176552_j");
addMapping("getBlockFaceShape", BlockDoubleStoneSlab.class, "func_193383_a");
addMapping("isDouble", BlockDoubleStoneSlabNew.class, "func_176552_j");
addMapping("isDouble", BlockDoubleWoodSlab.class, "func_176552_j");
addMapping("isOpaqueCube", BlockDragonEgg.class, "func_149662_c");
addMapping("isFullCube", BlockDragonEgg.class, "func_149686_d");
addMapping("tickRate", BlockDragonEgg.class, "func_149738_a");
addMapping("onBlockAdded", BlockDragonEgg.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockDragonEgg.class, "func_176225_a");
addMapping("onBlockActivated", BlockDragonEgg.class, "func_180639_a");
addMapping("onBlockClicked", BlockDragonEgg.class, "func_180649_a");
addMapping("updateTick", BlockDragonEgg.class, "func_180650_b");
addMapping("checkFall", BlockDragonEgg.class, "func_180683_d");
addMapping("teleport", BlockDragonEgg.class, "func_180684_e");
addMapping("getBoundingBox", BlockDragonEgg.class, "func_185496_a");
addMapping("neighborChanged", BlockDragonEgg.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockDragonEgg.class, "func_193383_a");
addMapping("createNewTileEntity", BlockDropper.class, "func_149915_a");
addMapping("getBehavior", BlockDropper.class, "func_149940_a");
addMapping("dispense", BlockDropper.class, "func_176439_d");
addMapping("onBlockAdded", BlockDynamicLiquid.class, "func_176213_c");
addMapping("checkAdjacentBlock", BlockDynamicLiquid.class, "func_176371_a");
addMapping("isBlocked", BlockDynamicLiquid.class, "func_176372_g");
addMapping("canFlowInto", BlockDynamicLiquid.class, "func_176373_h");
addMapping("getSlopeDistance", BlockDynamicLiquid.class, "func_176374_a");
addMapping("tryFlowInto", BlockDynamicLiquid.class, "func_176375_a");
addMapping("getPossibleFlowDirections", BlockDynamicLiquid.class, "func_176376_e");
addMapping("updateTick", BlockDynamicLiquid.class, "func_180650_b");
addMapping("placeStaticBlock", BlockDynamicLiquid.class, "func_180690_f");
addMapping("getSlopeFindDistance", BlockDynamicLiquid.class, "func_185698_b");
addMapping("quantityDropped", BlockEmptyDrops.class, "func_149745_a");
addMapping("getItemDropped", BlockEmptyDrops.class, "func_180660_a");
addMapping("getRenderType", BlockEnchantmentTable.class, "func_149645_b");
addMapping("isOpaqueCube", BlockEnchantmentTable.class, "func_149662_c");
addMapping("isFullCube", BlockEnchantmentTable.class, "func_149686_d");
addMapping("createNewTileEntity", BlockEnchantmentTable.class, "func_149915_a");
addMapping("onBlockPlacedBy", BlockEnchantmentTable.class, "func_180633_a");
addMapping("onBlockActivated", BlockEnchantmentTable.class, "func_180639_a");
addMapping("randomDisplayTick", BlockEnchantmentTable.class, "func_180655_c");
addMapping("getBoundingBox", BlockEnchantmentTable.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockEnchantmentTable.class, "func_193383_a");
addMapping("isOpaqueCube", BlockEndGateway.class, "func_149662_c");
addMapping("isFullCube", BlockEndGateway.class, "func_149686_d");
addMapping("quantityDropped", BlockEndGateway.class, "func_149745_a");
addMapping("createNewTileEntity", BlockEndGateway.class, "func_149915_a");
addMapping("shouldSideBeRendered", BlockEndGateway.class, "func_176225_a");
addMapping("getCollisionBoundingBox", BlockEndGateway.class, "func_180646_a");
addMapping("randomDisplayTick", BlockEndGateway.class, "func_180655_c");
addMapping("getMapColor", BlockEndGateway.class, "func_180659_g");
addMapping("getItem", BlockEndGateway.class, "func_185473_a");
addMapping("getBlockFaceShape", BlockEndGateway.class, "func_193383_a");
addMapping("isOpaqueCube", BlockEndPortal.class, "func_149662_c");
addMapping("isFullCube", BlockEndPortal.class, "func_149686_d");
addMapping("quantityDropped", BlockEndPortal.class, "func_149745_a");
addMapping("createNewTileEntity", BlockEndPortal.class, "func_149915_a");
addMapping("shouldSideBeRendered", BlockEndPortal.class, "func_176225_a");
addMapping("onEntityCollidedWithBlock", BlockEndPortal.class, "func_180634_a");
addMapping("randomDisplayTick", BlockEndPortal.class, "func_180655_c");
addMapping("getMapColor", BlockEndPortal.class, "func_180659_g");
addMapping("getItem", BlockEndPortal.class, "func_185473_a");
addMapping("addCollisionBoxToList", BlockEndPortal.class, "func_185477_a");
addMapping("getBoundingBox", BlockEndPortal.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockEndPortal.class, "func_193383_a");
addMapping("isOpaqueCube", BlockEndPortalFrame.class, "func_149662_c");
addMapping("isFullCube", BlockEndPortalFrame.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockEndPortalFrame.class, "func_149740_M");
addMapping("getMetaFromState", BlockEndPortalFrame.class, "func_176201_c");
addMapping("getStateFromMeta", BlockEndPortalFrame.class, "func_176203_a");
addMapping("getComparatorInputOverride", BlockEndPortalFrame.class, "func_180641_l");
addMapping("getStateForPlacement", BlockEndPortalFrame.class, "func_180642_a");
addMapping("getItemDropped", BlockEndPortalFrame.class, "func_180660_a");
addMapping("createBlockState", BlockEndPortalFrame.class, "func_180661_e");
addMapping("withMirror", BlockEndPortalFrame.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockEndPortalFrame.class, "func_185477_a");
addMapping("getBoundingBox", BlockEndPortalFrame.class, "func_185496_a");
addMapping("withRotation", BlockEndPortalFrame.class, "func_185499_a");
addMapping("getOrCreatePortalShape", BlockEndPortalFrame.class, "func_185661_e");
addMapping("getBlockFaceShape", BlockEndPortalFrame.class, "func_193383_a");
addMapping("getMobilityFlag", BlockEndRod.class, "func_149656_h");
addMapping("isOpaqueCube", BlockEndRod.class, "func_149662_c");
addMapping("isFullCube", BlockEndRod.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockEndRod.class, "func_176196_c");
addMapping("getMetaFromState", BlockEndRod.class, "func_176201_c");
addMapping("getStateFromMeta", BlockEndRod.class, "func_176203_a");
addMapping("getStateForPlacement", BlockEndRod.class, "func_180642_a");
addMapping("randomDisplayTick", BlockEndRod.class, "func_180655_c");
addMapping("createBlockState", BlockEndRod.class, "func_180661_e");
addMapping("getBlockLayer", BlockEndRod.class, "func_180664_k");
addMapping("withMirror", BlockEndRod.class, "func_185471_a");
addMapping("getBoundingBox", BlockEndRod.class, "func_185496_a");
addMapping("withRotation", BlockEndRod.class, "func_185499_a");
addMapping("getBlockFaceShape", BlockEndRod.class, "func_193383_a");
addMapping("getRenderType", BlockEnderChest.class, "func_149645_b");
addMapping("isOpaqueCube", BlockEnderChest.class, "func_149662_c");
addMapping("isFullCube", BlockEnderChest.class, "func_149686_d");
addMapping("canSilkHarvest", BlockEnderChest.class, "func_149700_E");
addMapping("quantityDropped", BlockEnderChest.class, "func_149745_a");
addMapping("createNewTileEntity", BlockEnderChest.class, "func_149915_a");
addMapping("getMetaFromState", BlockEnderChest.class, "func_176201_c");
addMapping("getStateFromMeta", BlockEnderChest.class, "func_176203_a");
addMapping("onBlockPlacedBy", BlockEnderChest.class, "func_180633_a");
addMapping("onBlockActivated", BlockEnderChest.class, "func_180639_a");
addMapping("getStateForPlacement", BlockEnderChest.class, "func_180642_a");
addMapping("randomDisplayTick", BlockEnderChest.class, "func_180655_c");
addMapping("getItemDropped", BlockEnderChest.class, "func_180660_a");
addMapping("createBlockState", BlockEnderChest.class, "func_180661_e");
addMapping("withMirror", BlockEnderChest.class, "func_185471_a");
addMapping("getBoundingBox", BlockEnderChest.class, "func_185496_a");
addMapping("withRotation", BlockEnderChest.class, "func_185499_a");
addMapping("hasCustomBreakingProgress", BlockEnderChest.class, "func_190946_v");
addMapping("getBlockFaceShape", BlockEnderChest.class, "func_193383_a");
addMapping("getBlock", BlockEventData.class, "func_151337_f");
addMapping("getEventParameter", BlockEventData.class, "func_151338_e");
addMapping("getEventID", BlockEventData.class, "func_151339_d");
addMapping("getPosition", BlockEventData.class, "func_180328_a");
addMapping("tickRate", BlockFalling.class, "func_149738_a");
addMapping("onStartFalling", BlockFalling.class, "func_149829_a");
addMapping("onBlockAdded", BlockFalling.class, "func_176213_c");
addMapping("onEndFalling", BlockFalling.class, "func_176502_a_");
addMapping("checkFallable", BlockFalling.class, "func_176503_e");
addMapping("updateTick", BlockFalling.class, "func_180650_b");
addMapping("randomDisplayTick", BlockFalling.class, "func_180655_c");
addMapping("canFallThrough", BlockFalling.class, "func_185759_i");
addMapping("neighborChanged", BlockFalling.class, "func_189540_a");
addMapping("getDustColor", BlockFalling.class, "func_189876_x");
addMapping("onBroken", BlockFalling.class, "func_190974_b");
addMapping("isOpaqueCube", BlockFarmland.class, "func_149662_c");
addMapping("isFullCube", BlockFarmland.class, "func_149686_d");
addMapping("getMetaFromState", BlockFarmland.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFarmland.class, "func_176203_a");
addMapping("onBlockAdded", BlockFarmland.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockFarmland.class, "func_176225_a");
addMapping("hasCrops", BlockFarmland.class, "func_176529_d");
addMapping("hasWater", BlockFarmland.class, "func_176530_e");
addMapping("updateTick", BlockFarmland.class, "func_180650_b");
addMapping("onFallenUpon", BlockFarmland.class, "func_180658_a");
addMapping("getItemDropped", BlockFarmland.class, "func_180660_a");
addMapping("createBlockState", BlockFarmland.class, "func_180661_e");
addMapping("getBoundingBox", BlockFarmland.class, "func_185496_a");
addMapping("neighborChanged", BlockFarmland.class, "func_189540_a");
addMapping("turnToDirt", BlockFarmland.class, "func_190970_b");
addMapping("getBlockFaceShape", BlockFarmland.class, "func_193383_a");
addMapping("isOpaqueCube", BlockFence.class, "func_149662_c");
addMapping("isFullCube", BlockFence.class, "func_149686_d");
addMapping("getMetaFromState", BlockFence.class, "func_176201_c");
addMapping("isPassable", BlockFence.class, "func_176205_b");
addMapping("getActualState", BlockFence.class, "func_176221_a");
addMapping("shouldSideBeRendered", BlockFence.class, "func_176225_a");
addMapping("canConnectTo", BlockFence.class, "func_176524_e");
addMapping("onBlockActivated", BlockFence.class, "func_180639_a");
addMapping("createBlockState", BlockFence.class, "func_180661_e");
addMapping("withMirror", BlockFence.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockFence.class, "func_185477_a");
addMapping("getBoundingBox", BlockFence.class, "func_185496_a");
addMapping("withRotation", BlockFence.class, "func_185499_a");
addMapping("getBoundingBoxIdx", BlockFence.class, "func_185666_i");
addMapping("getBlockFaceShape", BlockFence.class, "func_193383_a");
addMapping("isExcepBlockForAttachWithPiston", BlockFence.class, "func_194142_e");
addMapping("isOpaqueCube", BlockFenceGate.class, "func_149662_c");
addMapping("isFullCube", BlockFenceGate.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockFenceGate.class, "func_176196_c");
addMapping("getMetaFromState", BlockFenceGate.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFenceGate.class, "func_176203_a");
addMapping("isPassable", BlockFenceGate.class, "func_176205_b");
addMapping("getActualState", BlockFenceGate.class, "func_176221_a");
addMapping("shouldSideBeRendered", BlockFenceGate.class, "func_176225_a");
addMapping("onBlockActivated", BlockFenceGate.class, "func_180639_a");
addMapping("getStateForPlacement", BlockFenceGate.class, "func_180642_a");
addMapping("getCollisionBoundingBox", BlockFenceGate.class, "func_180646_a");
addMapping("createBlockState", BlockFenceGate.class, "func_180661_e");
addMapping("withMirror", BlockFenceGate.class, "func_185471_a");
addMapping("getBoundingBox", BlockFenceGate.class, "func_185496_a");
addMapping("withRotation", BlockFenceGate.class, "func_185499_a");
addMapping("neighborChanged", BlockFenceGate.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockFenceGate.class, "func_193383_a");
addMapping("isOpaqueCube", BlockFire.class, "func_149662_c");
addMapping("isFullCube", BlockFire.class, "func_149686_d");
addMapping("requiresUpdates", BlockFire.class, "func_149698_L");
addMapping("isCollidable", BlockFire.class, "func_149703_v");
addMapping("tickRate", BlockFire.class, "func_149738_a");
addMapping("quantityDropped", BlockFire.class, "func_149745_a");
addMapping("init", BlockFire.class, "func_149843_e");
addMapping("canPlaceBlockAt", BlockFire.class, "func_176196_c");
addMapping("getMetaFromState", BlockFire.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFire.class, "func_176203_a");
addMapping("onBlockAdded", BlockFire.class, "func_176213_c");
addMapping("getActualState", BlockFire.class, "func_176221_a");
addMapping("getFlammability", BlockFire.class, "func_176532_c");
addMapping("canNeighborCatchFire", BlockFire.class, "func_176533_e");
addMapping("getEncouragement", BlockFire.class, "func_176534_d");
addMapping("canCatchFire", BlockFire.class, "func_176535_e");
addMapping("catchOnFire", BlockFire.class, "func_176536_a");
addMapping("canDie", BlockFire.class, "func_176537_d");
addMapping("getNeighborEncouragement", BlockFire.class, "func_176538_m");
addMapping("getCollisionBoundingBox", BlockFire.class, "func_180646_a");
addMapping("updateTick", BlockFire.class, "func_180650_b");
addMapping("randomDisplayTick", BlockFire.class, "func_180655_c");
addMapping("getMapColor", BlockFire.class, "func_180659_g");
addMapping("createBlockState", BlockFire.class, "func_180661_e");
addMapping("getBlockLayer", BlockFire.class, "func_180664_k");
addMapping("setFireInfo", BlockFire.class, "func_180686_a");
addMapping("neighborChanged", BlockFire.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockFire.class, "func_193383_a");
addMapping("getSubBlocks", BlockFlower.class, "func_149666_a");
addMapping("getMetaFromState", BlockFlower.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFlower.class, "func_176203_a");
addMapping("getOffsetType", BlockFlower.class, "func_176218_Q");
addMapping("getTypeProperty", BlockFlower.class, "func_176494_l");
addMapping("getBlockType", BlockFlower.class, "func_176495_j");
addMapping("damageDropped", BlockFlower.class, "func_180651_a");
addMapping("createBlockState", BlockFlower.class, "func_180661_e");
addMapping("getBoundingBox", BlockFlower.class, "func_185496_a");
addMapping("getRenderType", BlockFlowerPot.class, "func_149645_b");
addMapping("isOpaqueCube", BlockFlowerPot.class, "func_149662_c");
addMapping("isFullCube", BlockFlowerPot.class, "func_149686_d");
addMapping("getLocalizedName", BlockFlowerPot.class, "func_149732_F");
addMapping("createNewTileEntity", BlockFlowerPot.class, "func_149915_a");
addMapping("canPlaceBlockAt", BlockFlowerPot.class, "func_176196_c");
addMapping("getMetaFromState", BlockFlowerPot.class, "func_176201_c");
addMapping("onBlockHarvested", BlockFlowerPot.class, "func_176208_a");
addMapping("getActualState", BlockFlowerPot.class, "func_176221_a");
addMapping("getTileEntity", BlockFlowerPot.class, "func_176442_d");
addMapping("onBlockActivated", BlockFlowerPot.class, "func_180639_a");
addMapping("getItemDropped", BlockFlowerPot.class, "func_180660_a");
addMapping("createBlockState", BlockFlowerPot.class, "func_180661_e");
addMapping("breakBlock", BlockFlowerPot.class, "func_180663_b");
addMapping("getBlockLayer", BlockFlowerPot.class, "func_180664_k");
addMapping("getItem", BlockFlowerPot.class, "func_185473_a");
addMapping("getBoundingBox", BlockFlowerPot.class, "func_185496_a");
addMapping("neighborChanged", BlockFlowerPot.class, "func_189540_a");
addMapping("canBePotted", BlockFlowerPot.class, "func_190951_a");
addMapping("getBlockFaceShape", BlockFlowerPot.class, "func_193383_a");
addMapping("getMetaFromState", BlockFrostedIce.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFrostedIce.class, "func_176203_a");
addMapping("updateTick", BlockFrostedIce.class, "func_180650_b");
addMapping("createBlockState", BlockFrostedIce.class, "func_180661_e");
addMapping("getItem", BlockFrostedIce.class, "func_185473_a");
addMapping("countNeighbors", BlockFrostedIce.class, "func_185680_c");
addMapping("slightlyMelt", BlockFrostedIce.class, "func_185681_a");
addMapping("neighborChanged", BlockFrostedIce.class, "func_189540_a");
addMapping("getRenderType", BlockFurnace.class, "func_149645_b");
addMapping("hasComparatorInputOverride", BlockFurnace.class, "func_149740_M");
addMapping("createNewTileEntity", BlockFurnace.class, "func_149915_a");
addMapping("getMetaFromState", BlockFurnace.class, "func_176201_c");
addMapping("getStateFromMeta", BlockFurnace.class, "func_176203_a");
addMapping("onBlockAdded", BlockFurnace.class, "func_176213_c");
addMapping("setDefaultFacing", BlockFurnace.class, "func_176445_e");
addMapping("setState", BlockFurnace.class, "func_176446_a");
addMapping("onBlockPlacedBy", BlockFurnace.class, "func_180633_a");
addMapping("onBlockActivated", BlockFurnace.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockFurnace.class, "func_180641_l");
addMapping("getStateForPlacement", BlockFurnace.class, "func_180642_a");
addMapping("randomDisplayTick", BlockFurnace.class, "func_180655_c");
addMapping("getItemDropped", BlockFurnace.class, "func_180660_a");
addMapping("createBlockState", BlockFurnace.class, "func_180661_e");
addMapping("breakBlock", BlockFurnace.class, "func_180663_b");
addMapping("withMirror", BlockFurnace.class, "func_185471_a");
addMapping("getItem", BlockFurnace.class, "func_185473_a");
addMapping("withRotation", BlockFurnace.class, "func_185499_a");
addMapping("isFullCube", BlockGlass.class, "func_149686_d");
addMapping("canSilkHarvest", BlockGlass.class, "func_149700_E");
addMapping("quantityDropped", BlockGlass.class, "func_149745_a");
addMapping("getBlockLayer", BlockGlass.class, "func_180664_k");
addMapping("getMobilityFlag", BlockGlazedTerracotta.class, "func_149656_h");
addMapping("getMetaFromState", BlockGlazedTerracotta.class, "func_176201_c");
addMapping("getStateFromMeta", BlockGlazedTerracotta.class, "func_176203_a");
addMapping("getStateForPlacement", BlockGlazedTerracotta.class, "func_180642_a");
addMapping("createBlockState", BlockGlazedTerracotta.class, "func_180661_e");
addMapping("withMirror", BlockGlazedTerracotta.class, "func_185471_a");
addMapping("withRotation", BlockGlazedTerracotta.class, "func_185499_a");
addMapping("quantityDroppedWithBonus", BlockGlowstone.class, "func_149679_a");
addMapping("quantityDropped", BlockGlowstone.class, "func_149745_a");
addMapping("getMapColor", BlockGlowstone.class, "func_180659_g");
addMapping("getItemDropped", BlockGlowstone.class, "func_180660_a");
addMapping("getMetaFromState", BlockGrass.class, "func_176201_c");
addMapping("getActualState", BlockGrass.class, "func_176221_a");
addMapping("canGrow", BlockGrass.class, "func_176473_a");
addMapping("grow", BlockGrass.class, "func_176474_b");
addMapping("updateTick", BlockGrass.class, "func_180650_b");
addMapping("getItemDropped", BlockGrass.class, "func_180660_a");
addMapping("createBlockState", BlockGrass.class, "func_180661_e");
addMapping("getBlockLayer", BlockGrass.class, "func_180664_k");
addMapping("canUseBonemeal", BlockGrass.class, "func_180670_a");
addMapping("isOpaqueCube", BlockGrassPath.class, "func_149662_c");
addMapping("isFullCube", BlockGrassPath.class, "func_149686_d");
addMapping("onBlockAdded", BlockGrassPath.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockGrassPath.class, "func_176225_a");
addMapping("getItemDropped", BlockGrassPath.class, "func_180660_a");
addMapping("getItem", BlockGrassPath.class, "func_185473_a");
addMapping("getBoundingBox", BlockGrassPath.class, "func_185496_a");
addMapping("neighborChanged", BlockGrassPath.class, "func_189540_a");
addMapping("updateBlockState", BlockGrassPath.class, "func_190971_b");
addMapping("getBlockFaceShape", BlockGrassPath.class, "func_193383_a");
addMapping("getMapColor", BlockGravel.class, "func_180659_g");
addMapping("getItemDropped", BlockGravel.class, "func_180660_a");
addMapping("getDustColor", BlockGravel.class, "func_189876_x");
addMapping("isDouble", BlockHalfStoneSlab.class, "func_176552_j");
addMapping("isDouble", BlockHalfStoneSlabNew.class, "func_176552_j");
addMapping("isDouble", BlockHalfWoodSlab.class, "func_176552_j");
addMapping("getMapColor", BlockHardenedClay.class, "func_180659_g");
addMapping("onFallenUpon", BlockHay.class, "func_180658_a");
addMapping("getRenderType", BlockHopper.class, "func_149645_b");
addMapping("isOpaqueCube", BlockHopper.class, "func_149662_c");
addMapping("isFullCube", BlockHopper.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockHopper.class, "func_149740_M");
addMapping("createNewTileEntity", BlockHopper.class, "func_149915_a");
addMapping("isEnabled", BlockHopper.class, "func_149917_c");
addMapping("getMetaFromState", BlockHopper.class, "func_176201_c");
addMapping("getStateFromMeta", BlockHopper.class, "func_176203_a");
addMapping("onBlockAdded", BlockHopper.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockHopper.class, "func_176225_a");
addMapping("updateState", BlockHopper.class, "func_176427_e");
addMapping("getFacing", BlockHopper.class, "func_176428_b");
addMapping("onBlockPlacedBy", BlockHopper.class, "func_180633_a");
addMapping("onBlockActivated", BlockHopper.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockHopper.class, "func_180641_l");
addMapping("getStateForPlacement", BlockHopper.class, "func_180642_a");
addMapping("createBlockState", BlockHopper.class, "func_180661_e");
addMapping("breakBlock", BlockHopper.class, "func_180663_b");
addMapping("getBlockLayer", BlockHopper.class, "func_180664_k");
addMapping("withMirror", BlockHopper.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockHopper.class, "func_185477_a");
addMapping("isTopSolid", BlockHopper.class, "func_185481_k");
addMapping("getBoundingBox", BlockHopper.class, "func_185496_a");
addMapping("withRotation", BlockHopper.class, "func_185499_a");
addMapping("neighborChanged", BlockHopper.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockHopper.class, "func_193383_a");
addMapping("quantityDropped", BlockHugeMushroom.class, "func_149745_a");
addMapping("getMetaFromState", BlockHugeMushroom.class, "func_176201_c");
addMapping("getStateFromMeta", BlockHugeMushroom.class, "func_176203_a");
addMapping("getStateForPlacement", BlockHugeMushroom.class, "func_180642_a");
addMapping("getMapColor", BlockHugeMushroom.class, "func_180659_g");
addMapping("getItemDropped", BlockHugeMushroom.class, "func_180660_a");
addMapping("createBlockState", BlockHugeMushroom.class, "func_180661_e");
addMapping("withMirror", BlockHugeMushroom.class, "func_185471_a");
addMapping("getItem", BlockHugeMushroom.class, "func_185473_a");
addMapping("withRotation", BlockHugeMushroom.class, "func_185499_a");
addMapping("getMobilityFlag", BlockIce.class, "func_149656_h");
addMapping("quantityDropped", BlockIce.class, "func_149745_a");
addMapping("updateTick", BlockIce.class, "func_180650_b");
addMapping("harvestBlock", BlockIce.class, "func_180657_a");
addMapping("getBlockLayer", BlockIce.class, "func_180664_k");
addMapping("turnIntoWater", BlockIce.class, "func_185679_b");
addMapping("getRenderType", BlockJukebox.class, "func_149645_b");
addMapping("hasComparatorInputOverride", BlockJukebox.class, "func_149740_M");
addMapping("createNewTileEntity", BlockJukebox.class, "func_149915_a");
addMapping("getMetaFromState", BlockJukebox.class, "func_176201_c");
addMapping("getStateFromMeta", BlockJukebox.class, "func_176203_a");
addMapping("insertRecord", BlockJukebox.class, "func_176431_a");
addMapping("onBlockActivated", BlockJukebox.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockJukebox.class, "func_180641_l");
addMapping("dropBlockAsItemWithChance", BlockJukebox.class, "func_180653_a");
addMapping("createBlockState", BlockJukebox.class, "func_180661_e");
addMapping("breakBlock", BlockJukebox.class, "func_180663_b");
addMapping("dropRecord", BlockJukebox.class, "func_180678_e");
addMapping("registerFixesJukebox", BlockJukebox.class, "func_189873_a");
addMapping("isOpaqueCube", BlockLadder.class, "func_149662_c");
addMapping("isFullCube", BlockLadder.class, "func_149686_d");
addMapping("canPlaceBlockOnSide", BlockLadder.class, "func_176198_a");
addMapping("getMetaFromState", BlockLadder.class, "func_176201_c");
addMapping("getStateFromMeta", BlockLadder.class, "func_176203_a");
addMapping("getStateForPlacement", BlockLadder.class, "func_180642_a");
addMapping("createBlockState", BlockLadder.class, "func_180661_e");
addMapping("getBlockLayer", BlockLadder.class, "func_180664_k");
addMapping("withMirror", BlockLadder.class, "func_185471_a");
addMapping("getBoundingBox", BlockLadder.class, "func_185496_a");
addMapping("withRotation", BlockLadder.class, "func_185499_a");
addMapping("neighborChanged", BlockLadder.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockLadder.class, "func_193383_a");
addMapping("canAttachTo", BlockLadder.class, "func_193392_c");
addMapping("isOpaqueCube", BlockLeaves.class, "func_149662_c");
addMapping("quantityDropped", BlockLeaves.class, "func_149745_a");
addMapping("setGraphicsLevel", BlockLeaves.class, "func_150122_b");
addMapping("causesSuffocation", BlockLeaves.class, "func_176214_u");
addMapping("shouldSideBeRendered", BlockLeaves.class, "func_176225_a");
addMapping("getSaplingDropChance", BlockLeaves.class, "func_176232_d");
addMapping("getWoodType", BlockLeaves.class, "func_176233_b");
addMapping("dropApple", BlockLeaves.class, "func_176234_a");
addMapping("destroy", BlockLeaves.class, "func_176235_d");
addMapping("updateTick", BlockLeaves.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockLeaves.class, "func_180653_a");
addMapping("randomDisplayTick", BlockLeaves.class, "func_180655_c");
addMapping("getItemDropped", BlockLeaves.class, "func_180660_a");
addMapping("breakBlock", BlockLeaves.class, "func_180663_b");
addMapping("getBlockLayer", BlockLeaves.class, "func_180664_k");
addMapping("isOpaqueCube", BlockLever.class, "func_149662_c");
addMapping("isFullCube", BlockLever.class, "func_149686_d");
addMapping("canProvidePower", BlockLever.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockLever.class, "func_176196_c");
addMapping("canPlaceBlockOnSide", BlockLever.class, "func_176198_a");
addMapping("getMetaFromState", BlockLever.class, "func_176201_c");
addMapping("getStateFromMeta", BlockLever.class, "func_176203_a");
addMapping("getStrongPower", BlockLever.class, "func_176211_b");
addMapping("onBlockActivated", BlockLever.class, "func_180639_a");
addMapping("getStateForPlacement", BlockLever.class, "func_180642_a");
addMapping("getCollisionBoundingBox", BlockLever.class, "func_180646_a");
addMapping("getWeakPower", BlockLever.class, "func_180656_a");
addMapping("createBlockState", BlockLever.class, "func_180661_e");
addMapping("breakBlock", BlockLever.class, "func_180663_b");
addMapping("canAttachTo", BlockLever.class, "func_181090_a");
addMapping("checkCanSurvive", BlockLever.class, "func_181091_e");
addMapping("withMirror", BlockLever.class, "func_185471_a");
addMapping("getBoundingBox", BlockLever.class, "func_185496_a");
addMapping("withRotation", BlockLever.class, "func_185499_a");
addMapping("neighborChanged", BlockLever.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockLever.class, "func_193383_a");
addMapping("getMetaFromState", BlockLilyPad.class, "func_176201_c");
addMapping("onEntityCollidedWithBlock", BlockLilyPad.class, "func_180634_a");
addMapping("canBlockStay", BlockLilyPad.class, "func_180671_f");
addMapping("addCollisionBoxToList", BlockLilyPad.class, "func_185477_a");
addMapping("getBoundingBox", BlockLilyPad.class, "func_185496_a");
addMapping("canSustainBush", BlockLilyPad.class, "func_185514_i");
addMapping("getRenderType", BlockLiquid.class, "func_149645_b");
addMapping("isOpaqueCube", BlockLiquid.class, "func_149662_c");
addMapping("isFullCube", BlockLiquid.class, "func_149686_d");
addMapping("tickRate", BlockLiquid.class, "func_149738_a");
addMapping("quantityDropped", BlockLiquid.class, "func_149745_a");
addMapping("getLiquidHeightPercent", BlockLiquid.class, "func_149801_b");
addMapping("modifyAcceleration", BlockLiquid.class, "func_176197_a");
addMapping("getMetaFromState", BlockLiquid.class, "func_176201_c");
addMapping("getStateFromMeta", BlockLiquid.class, "func_176203_a");
addMapping("isPassable", BlockLiquid.class, "func_176205_b");
addMapping("canCollideCheck", BlockLiquid.class, "func_176209_a");
addMapping("causesDownwardCurrent", BlockLiquid.class, "func_176212_b");
addMapping("onBlockAdded", BlockLiquid.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockLiquid.class, "func_176225_a");
addMapping("getFlowingBlock", BlockLiquid.class, "func_176361_a");
addMapping("getStaticBlock", BlockLiquid.class, "func_176363_b");
addMapping("shouldRenderSides", BlockLiquid.class, "func_176364_g");
addMapping("checkForMixing", BlockLiquid.class, "func_176365_e");
addMapping("getCollisionBoundingBox", BlockLiquid.class, "func_180646_a");
addMapping("randomDisplayTick", BlockLiquid.class, "func_180655_c");
addMapping("getItemDropped", BlockLiquid.class, "func_180660_a");
addMapping("createBlockState", BlockLiquid.class, "func_180661_e");
addMapping("getBlockLayer", BlockLiquid.class, "func_180664_k");
addMapping("triggerMixEffects", BlockLiquid.class, "func_180688_d");
addMapping("getPackedLightmapCoords", BlockLiquid.class, "func_185484_c");
addMapping("getBoundingBox", BlockLiquid.class, "func_185496_a");
addMapping("neighborChanged", BlockLiquid.class, "func_189540_a");
addMapping("getDepth", BlockLiquid.class, "func_189542_i");
addMapping("getFlow", BlockLiquid.class, "func_189543_a");
addMapping("getSlopeAngle", BlockLiquid.class, "func_189544_a");
addMapping("getRenderedDepth", BlockLiquid.class, "func_189545_x");
addMapping("getLiquidHeight", BlockLiquid.class, "func_190972_g");
addMapping("getBlockLiquidHeight", BlockLiquid.class, "func_190973_f");
addMapping("getBlockFaceShape", BlockLiquid.class, "func_193383_a");
addMapping("getStateForPlacement", BlockLog.class, "func_180642_a");
addMapping("breakBlock", BlockLog.class, "func_180663_b");
addMapping("withRotation", BlockLog.class, "func_185499_a");
addMapping("onEntityWalk", BlockMagma.class, "func_176199_a");
addMapping("updateTick", BlockMagma.class, "func_180650_b");
addMapping("getMapColor", BlockMagma.class, "func_180659_g");
addMapping("getPackedLightmapCoords", BlockMagma.class, "func_185484_c");
addMapping("canEntitySpawn", BlockMagma.class, "func_189872_a");
addMapping("quantityDroppedWithBonus", BlockMelon.class, "func_149679_a");
addMapping("quantityDropped", BlockMelon.class, "func_149745_a");
addMapping("getItemDropped", BlockMelon.class, "func_180660_a");
addMapping("getRenderType", BlockMobSpawner.class, "func_149645_b");
addMapping("isOpaqueCube", BlockMobSpawner.class, "func_149662_c");
addMapping("quantityDropped", BlockMobSpawner.class, "func_149745_a");
addMapping("createNewTileEntity", BlockMobSpawner.class, "func_149915_a");
addMapping("dropBlockAsItemWithChance", BlockMobSpawner.class, "func_180653_a");
addMapping("getItemDropped", BlockMobSpawner.class, "func_180660_a");
addMapping("getBlockLayer", BlockMobSpawner.class, "func_180664_k");
addMapping("getItem", BlockMobSpawner.class, "func_185473_a");
addMapping("canPlaceBlockAt", BlockMushroom.class, "func_176196_c");
addMapping("canGrow", BlockMushroom.class, "func_176473_a");
addMapping("grow", BlockMushroom.class, "func_176474_b");
addMapping("generateBigMushroom", BlockMushroom.class, "func_176485_d");
addMapping("updateTick", BlockMushroom.class, "func_180650_b");
addMapping("canUseBonemeal", BlockMushroom.class, "func_180670_a");
addMapping("canBlockStay", BlockMushroom.class, "func_180671_f");
addMapping("getBoundingBox", BlockMushroom.class, "func_185496_a");
addMapping("canSustainBush", BlockMushroom.class, "func_185514_i");
addMapping("getMetaFromState", BlockMycelium.class, "func_176201_c");
addMapping("getActualState", BlockMycelium.class, "func_176221_a");
addMapping("updateTick", BlockMycelium.class, "func_180650_b");
addMapping("randomDisplayTick", BlockMycelium.class, "func_180655_c");
addMapping("getItemDropped", BlockMycelium.class, "func_180660_a");
addMapping("createBlockState", BlockMycelium.class, "func_180661_e");
addMapping("getMapColor", BlockNetherBrick.class, "func_180659_g");
addMapping("quantityDropped", BlockNetherWart.class, "func_149745_a");
addMapping("getMetaFromState", BlockNetherWart.class, "func_176201_c");
addMapping("getStateFromMeta", BlockNetherWart.class, "func_176203_a");
addMapping("updateTick", BlockNetherWart.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockNetherWart.class, "func_180653_a");
addMapping("getItemDropped", BlockNetherWart.class, "func_180660_a");
addMapping("createBlockState", BlockNetherWart.class, "func_180661_e");
addMapping("canBlockStay", BlockNetherWart.class, "func_180671_f");
addMapping("getItem", BlockNetherWart.class, "func_185473_a");
addMapping("getBoundingBox", BlockNetherWart.class, "func_185496_a");
addMapping("canSustainBush", BlockNetherWart.class, "func_185514_i");
addMapping("getMapColor", BlockNetherrack.class, "func_180659_g");
addMapping("getSubBlocks", BlockNewLeaf.class, "func_149666_a");
addMapping("getMetaFromState", BlockNewLeaf.class, "func_176201_c");
addMapping("getStateFromMeta", BlockNewLeaf.class, "func_176203_a");
addMapping("getWoodType", BlockNewLeaf.class, "func_176233_b");
addMapping("dropApple", BlockNewLeaf.class, "func_176234_a");
addMapping("getSilkTouchDrop", BlockNewLeaf.class, "func_180643_i");
addMapping("damageDropped", BlockNewLeaf.class, "func_180651_a");
addMapping("harvestBlock", BlockNewLeaf.class, "func_180657_a");
addMapping("createBlockState", BlockNewLeaf.class, "func_180661_e");
addMapping("getItem", BlockNewLeaf.class, "func_185473_a");
addMapping("getSubBlocks", BlockNewLog.class, "func_149666_a");
addMapping("getMetaFromState", BlockNewLog.class, "func_176201_c");
addMapping("getStateFromMeta", BlockNewLog.class, "func_176203_a");
addMapping("getSilkTouchDrop", BlockNewLog.class, "func_180643_i");
addMapping("damageDropped", BlockNewLog.class, "func_180651_a");
addMapping("getMapColor", BlockNewLog.class, "func_180659_g");
addMapping("createBlockState", BlockNewLog.class, "func_180661_e");
addMapping("getRenderType", BlockNote.class, "func_149645_b");
addMapping("createNewTileEntity", BlockNote.class, "func_149915_a");
addMapping("onBlockActivated", BlockNote.class, "func_180639_a");
addMapping("onBlockClicked", BlockNote.class, "func_180649_a");
addMapping("getInstrument", BlockNote.class, "func_185576_e");
addMapping("eventReceived", BlockNote.class, "func_189539_a");
addMapping("neighborChanged", BlockNote.class, "func_189540_a");
addMapping("canProvidePower", BlockObserver.class, "func_149744_f");
addMapping("getMetaFromState", BlockObserver.class, "func_176201_c");
addMapping("getStateFromMeta", BlockObserver.class, "func_176203_a");
addMapping("getStrongPower", BlockObserver.class, "func_176211_b");
addMapping("onBlockAdded", BlockObserver.class, "func_176213_c");
addMapping("getStateForPlacement", BlockObserver.class, "func_180642_a");
addMapping("updateTick", BlockObserver.class, "func_180650_b");
addMapping("getWeakPower", BlockObserver.class, "func_180656_a");
addMapping("createBlockState", BlockObserver.class, "func_180661_e");
addMapping("breakBlock", BlockObserver.class, "func_180663_b");
addMapping("withMirror", BlockObserver.class, "func_185471_a");
addMapping("withRotation", BlockObserver.class, "func_185499_a");
addMapping("neighborChanged", BlockObserver.class, "func_189540_a");
addMapping("startSignal", BlockObserver.class, "func_190960_d");
addMapping("updateNeighborsInFront", BlockObserver.class, "func_190961_e");
addMapping("observedNeighborChanged", BlockObserver.class, "func_190962_b");
addMapping("getMapColor", BlockObsidian.class, "func_180659_g");
addMapping("getItemDropped", BlockObsidian.class, "func_180660_a");
addMapping("getSubBlocks", BlockOldLeaf.class, "func_149666_a");
addMapping("getMetaFromState", BlockOldLeaf.class, "func_176201_c");
addMapping("getStateFromMeta", BlockOldLeaf.class, "func_176203_a");
addMapping("getSaplingDropChance", BlockOldLeaf.class, "func_176232_d");
addMapping("getWoodType", BlockOldLeaf.class, "func_176233_b");
addMapping("dropApple", BlockOldLeaf.class, "func_176234_a");
addMapping("getSilkTouchDrop", BlockOldLeaf.class, "func_180643_i");
addMapping("damageDropped", BlockOldLeaf.class, "func_180651_a");
addMapping("harvestBlock", BlockOldLeaf.class, "func_180657_a");
addMapping("createBlockState", BlockOldLeaf.class, "func_180661_e");
addMapping("getSubBlocks", BlockOldLog.class, "func_149666_a");
addMapping("getMetaFromState", BlockOldLog.class, "func_176201_c");
addMapping("getStateFromMeta", BlockOldLog.class, "func_176203_a");
addMapping("getSilkTouchDrop", BlockOldLog.class, "func_180643_i");
addMapping("damageDropped", BlockOldLog.class, "func_180651_a");
addMapping("getMapColor", BlockOldLog.class, "func_180659_g");
addMapping("createBlockState", BlockOldLog.class, "func_180661_e");
addMapping("quantityDroppedWithBonus", BlockOre.class, "func_149679_a");
addMapping("quantityDropped", BlockOre.class, "func_149745_a");
addMapping("damageDropped", BlockOre.class, "func_180651_a");
addMapping("dropBlockAsItemWithChance", BlockOre.class, "func_180653_a");
addMapping("getItemDropped", BlockOre.class, "func_180660_a");
addMapping("getItem", BlockOre.class, "func_185473_a");
addMapping("quantityDropped", BlockPackedIce.class, "func_149745_a");
addMapping("isOpaqueCube", BlockPane.class, "func_149662_c");
addMapping("isFullCube", BlockPane.class, "func_149686_d");
addMapping("canSilkHarvest", BlockPane.class, "func_149700_E");
addMapping("getMetaFromState", BlockPane.class, "func_176201_c");
addMapping("getActualState", BlockPane.class, "func_176221_a");
addMapping("shouldSideBeRendered", BlockPane.class, "func_176225_a");
addMapping("getItemDropped", BlockPane.class, "func_180660_a");
addMapping("createBlockState", BlockPane.class, "func_180661_e");
addMapping("getBlockLayer", BlockPane.class, "func_180664_k");
addMapping("withMirror", BlockPane.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockPane.class, "func_185477_a");
addMapping("getBoundingBox", BlockPane.class, "func_185496_a");
addMapping("withRotation", BlockPane.class, "func_185499_a");
addMapping("getBoundingBoxIndex", BlockPane.class, "func_185728_i");
addMapping("getBoundingBoxIndex", BlockPane.class, "func_185729_a");
addMapping("getBlockFaceShape", BlockPane.class, "func_193383_a");
addMapping("attachesTo", BlockPane.class, "func_193393_b");
addMapping("isExcepBlockForAttachWithPiston", BlockPane.class, "func_193394_e");
addMapping("isOpaqueCube", BlockPistonBase.class, "func_149662_c");
addMapping("isFullCube", BlockPistonBase.class, "func_149686_d");
addMapping("getMetaFromState", BlockPistonBase.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPistonBase.class, "func_176203_a");
addMapping("onBlockAdded", BlockPistonBase.class, "func_176213_c");
addMapping("causesSuffocation", BlockPistonBase.class, "func_176214_u");
addMapping("checkForMove", BlockPistonBase.class, "func_176316_e");
addMapping("getFacing", BlockPistonBase.class, "func_176317_b");
addMapping("shouldBeExtended", BlockPistonBase.class, "func_176318_b");
addMapping("doMove", BlockPistonBase.class, "func_176319_a");
addMapping("onBlockPlacedBy", BlockPistonBase.class, "func_180633_a");
addMapping("getStateForPlacement", BlockPistonBase.class, "func_180642_a");
addMapping("createBlockState", BlockPistonBase.class, "func_180661_e");
addMapping("withMirror", BlockPistonBase.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockPistonBase.class, "func_185477_a");
addMapping("isTopSolid", BlockPistonBase.class, "func_185481_k");
addMapping("getBoundingBox", BlockPistonBase.class, "func_185496_a");
addMapping("withRotation", BlockPistonBase.class, "func_185499_a");
addMapping("canPush", BlockPistonBase.class, "func_185646_a");
addMapping("eventReceived", BlockPistonBase.class, "func_189539_a");
addMapping("neighborChanged", BlockPistonBase.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockPistonBase.class, "func_193383_a");
addMapping("isOpaqueCube", BlockPistonExtension.class, "func_149662_c");
addMapping("isFullCube", BlockPistonExtension.class, "func_149686_d");
addMapping("quantityDropped", BlockPistonExtension.class, "func_149745_a");
addMapping("canPlaceBlockAt", BlockPistonExtension.class, "func_176196_c");
addMapping("canPlaceBlockOnSide", BlockPistonExtension.class, "func_176198_a");
addMapping("getMetaFromState", BlockPistonExtension.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPistonExtension.class, "func_176203_a");
addMapping("onBlockHarvested", BlockPistonExtension.class, "func_176208_a");
addMapping("shouldSideBeRendered", BlockPistonExtension.class, "func_176225_a");
addMapping("getFacing", BlockPistonExtension.class, "func_176322_b");
addMapping("createBlockState", BlockPistonExtension.class, "func_180661_e");
addMapping("breakBlock", BlockPistonExtension.class, "func_180663_b");
addMapping("withMirror", BlockPistonExtension.class, "func_185471_a");
addMapping("getItem", BlockPistonExtension.class, "func_185473_a");
addMapping("addCollisionBoxToList", BlockPistonExtension.class, "func_185477_a");
addMapping("isTopSolid", BlockPistonExtension.class, "func_185481_k");
addMapping("getBoundingBox", BlockPistonExtension.class, "func_185496_a");
addMapping("withRotation", BlockPistonExtension.class, "func_185499_a");
addMapping("getArmShape", BlockPistonExtension.class, "func_185633_i");
addMapping("neighborChanged", BlockPistonExtension.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockPistonExtension.class, "func_193383_a");
addMapping("isOpaqueCube", BlockPistonMoving.class, "func_149662_c");
addMapping("isFullCube", BlockPistonMoving.class, "func_149686_d");
addMapping("createNewTileEntity", BlockPistonMoving.class, "func_149915_a");
addMapping("canPlaceBlockAt", BlockPistonMoving.class, "func_176196_c");
addMapping("canPlaceBlockOnSide", BlockPistonMoving.class, "func_176198_a");
addMapping("getMetaFromState", BlockPistonMoving.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPistonMoving.class, "func_176203_a");
addMapping("onBlockDestroyedByPlayer", BlockPistonMoving.class, "func_176206_d");
addMapping("collisionRayTrace", BlockPistonMoving.class, "func_180636_a");
addMapping("onBlockActivated", BlockPistonMoving.class, "func_180639_a");
addMapping("getCollisionBoundingBox", BlockPistonMoving.class, "func_180646_a");
addMapping("dropBlockAsItemWithChance", BlockPistonMoving.class, "func_180653_a");
addMapping("getItemDropped", BlockPistonMoving.class, "func_180660_a");
addMapping("createBlockState", BlockPistonMoving.class, "func_180661_e");
addMapping("breakBlock", BlockPistonMoving.class, "func_180663_b");
addMapping("withMirror", BlockPistonMoving.class, "func_185471_a");
addMapping("getItem", BlockPistonMoving.class, "func_185473_a");
addMapping("addCollisionBoxToList", BlockPistonMoving.class, "func_185477_a");
addMapping("getBoundingBox", BlockPistonMoving.class, "func_185496_a");
addMapping("withRotation", BlockPistonMoving.class, "func_185499_a");
addMapping("createTilePiston", BlockPistonMoving.class, "func_185588_a");
addMapping("getTilePistonAt", BlockPistonMoving.class, "func_185589_c");
addMapping("neighborChanged", BlockPistonMoving.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockPistonMoving.class, "func_193383_a");
addMapping("getSubBlocks", BlockPlanks.class, "func_149666_a");
addMapping("getMetaFromState", BlockPlanks.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPlanks.class, "func_176203_a");
addMapping("damageDropped", BlockPlanks.class, "func_180651_a");
addMapping("getMapColor", BlockPlanks.class, "func_180659_g");
addMapping("createBlockState", BlockPlanks.class, "func_180661_e");
addMapping("isFullCube", BlockPortal.class, "func_149686_d");
addMapping("quantityDropped", BlockPortal.class, "func_149745_a");
addMapping("getMetaFromState", BlockPortal.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPortal.class, "func_176203_a");
addMapping("shouldSideBeRendered", BlockPortal.class, "func_176225_a");
addMapping("trySpawnPortal", BlockPortal.class, "func_176548_d");
addMapping("getMetaForAxis", BlockPortal.class, "func_176549_a");
addMapping("onEntityCollidedWithBlock", BlockPortal.class, "func_180634_a");
addMapping("getCollisionBoundingBox", BlockPortal.class, "func_180646_a");
addMapping("updateTick", BlockPortal.class, "func_180650_b");
addMapping("randomDisplayTick", BlockPortal.class, "func_180655_c");
addMapping("createBlockState", BlockPortal.class, "func_180661_e");
addMapping("getBlockLayer", BlockPortal.class, "func_180664_k");
addMapping("createPatternHelper", BlockPortal.class, "func_181089_f");
addMapping("getItem", BlockPortal.class, "func_185473_a");
addMapping("getBoundingBox", BlockPortal.class, "func_185496_a");
addMapping("withRotation", BlockPortal.class, "func_185499_a");
addMapping("neighborChanged", BlockPortal.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockPortal.class, "func_193383_a");
addMapping("getCrop", BlockPotato.class, "func_149865_P");
addMapping("getSeed", BlockPotato.class, "func_149866_i");
addMapping("dropBlockAsItemWithChance", BlockPotato.class, "func_180653_a");
addMapping("getBoundingBox", BlockPotato.class, "func_185496_a");
addMapping("getMetaFromState", BlockPressurePlate.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPressurePlate.class, "func_176203_a");
addMapping("setRedstoneStrength", BlockPressurePlate.class, "func_176575_a");
addMapping("getRedstoneStrength", BlockPressurePlate.class, "func_176576_e");
addMapping("createBlockState", BlockPressurePlate.class, "func_180661_e");
addMapping("computeRedstoneStrength", BlockPressurePlate.class, "func_180669_e");
addMapping("playClickOnSound", BlockPressurePlate.class, "func_185507_b");
addMapping("playClickOffSound", BlockPressurePlate.class, "func_185508_c");
addMapping("tickRate", BlockPressurePlateWeighted.class, "func_149738_a");
addMapping("getMetaFromState", BlockPressurePlateWeighted.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPressurePlateWeighted.class, "func_176203_a");
addMapping("setRedstoneStrength", BlockPressurePlateWeighted.class, "func_176575_a");
addMapping("getRedstoneStrength", BlockPressurePlateWeighted.class, "func_176576_e");
addMapping("createBlockState", BlockPressurePlateWeighted.class, "func_180661_e");
addMapping("computeRedstoneStrength", BlockPressurePlateWeighted.class, "func_180669_e");
addMapping("playClickOnSound", BlockPressurePlateWeighted.class, "func_185507_b");
addMapping("playClickOffSound", BlockPressurePlateWeighted.class, "func_185508_c");
addMapping("getSubBlocks", BlockPrismarine.class, "func_149666_a");
addMapping("getLocalizedName", BlockPrismarine.class, "func_149732_F");
addMapping("getMetaFromState", BlockPrismarine.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPrismarine.class, "func_176203_a");
addMapping("damageDropped", BlockPrismarine.class, "func_180651_a");
addMapping("getMapColor", BlockPrismarine.class, "func_180659_g");
addMapping("createBlockState", BlockPrismarine.class, "func_180661_e");
addMapping("canPlaceBlockAt", BlockPumpkin.class, "func_176196_c");
addMapping("getMetaFromState", BlockPumpkin.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPumpkin.class, "func_176203_a");
addMapping("onBlockAdded", BlockPumpkin.class, "func_176213_c");
addMapping("getGolemPattern", BlockPumpkin.class, "func_176388_T");
addMapping("getGolemBasePattern", BlockPumpkin.class, "func_176389_S");
addMapping("canDispenserPlace", BlockPumpkin.class, "func_176390_d");
addMapping("getSnowmanPattern", BlockPumpkin.class, "func_176391_l");
addMapping("getSnowmanBasePattern", BlockPumpkin.class, "func_176392_j");
addMapping("getStateForPlacement", BlockPumpkin.class, "func_180642_a");
addMapping("createBlockState", BlockPumpkin.class, "func_180661_e");
addMapping("trySpawnGolem", BlockPumpkin.class, "func_180673_e");
addMapping("withMirror", BlockPumpkin.class, "func_185471_a");
addMapping("withRotation", BlockPumpkin.class, "func_185499_a");
addMapping("getUnlocalizedName", BlockPurpurSlab.class, "func_150002_b");
addMapping("getMetaFromState", BlockPurpurSlab.class, "func_176201_c");
addMapping("getStateFromMeta", BlockPurpurSlab.class, "func_176203_a");
addMapping("getVariantProperty", BlockPurpurSlab.class, "func_176551_l");
addMapping("getItemDropped", BlockPurpurSlab.class, "func_180660_a");
addMapping("createBlockState", BlockPurpurSlab.class, "func_180661_e");
addMapping("getItem", BlockPurpurSlab.class, "func_185473_a");
addMapping("getTypeForItem", BlockPurpurSlab.class, "func_185674_a");
addMapping("getSubBlocks", BlockQuartz.class, "func_149666_a");
addMapping("getMetaFromState", BlockQuartz.class, "func_176201_c");
addMapping("getStateFromMeta", BlockQuartz.class, "func_176203_a");
addMapping("getStateForPlacement", BlockQuartz.class, "func_180642_a");
addMapping("getSilkTouchDrop", BlockQuartz.class, "func_180643_i");
addMapping("damageDropped", BlockQuartz.class, "func_180651_a");
addMapping("getMapColor", BlockQuartz.class, "func_180659_g");
addMapping("createBlockState", BlockQuartz.class, "func_180661_e");
addMapping("withRotation", BlockQuartz.class, "func_185499_a");
addMapping("getMetaFromState", BlockRail.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRail.class, "func_176203_a");
addMapping("getShapeProperty", BlockRail.class, "func_176560_l");
addMapping("createBlockState", BlockRail.class, "func_180661_e");
addMapping("withMirror", BlockRail.class, "func_185471_a");
addMapping("withRotation", BlockRail.class, "func_185499_a");
addMapping("updateState", BlockRail.class, "func_189541_b");
addMapping("getMobilityFlag", BlockRailBase.class, "func_149656_h");
addMapping("isOpaqueCube", BlockRailBase.class, "func_149662_c");
addMapping("isFullCube", BlockRailBase.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockRailBase.class, "func_176196_c");
addMapping("onBlockAdded", BlockRailBase.class, "func_176213_c");
addMapping("getShapeProperty", BlockRailBase.class, "func_176560_l");
addMapping("isRailBlock", BlockRailBase.class, "func_176562_d");
addMapping("isRailBlock", BlockRailBase.class, "func_176563_d");
addMapping("updateDir", BlockRailBase.class, "func_176564_a");
addMapping("getCollisionBoundingBox", BlockRailBase.class, "func_180646_a");
addMapping("breakBlock", BlockRailBase.class, "func_180663_b");
addMapping("getBlockLayer", BlockRailBase.class, "func_180664_k");
addMapping("getBoundingBox", BlockRailBase.class, "func_185496_a");
addMapping("neighborChanged", BlockRailBase.class, "func_189540_a");
addMapping("updateState", BlockRailBase.class, "func_189541_b");
addMapping("getBlockFaceShape", BlockRailBase.class, "func_193383_a");
addMapping("tickRate", BlockRailDetector.class, "func_149738_a");
addMapping("hasComparatorInputOverride", BlockRailDetector.class, "func_149740_M");
addMapping("canProvidePower", BlockRailDetector.class, "func_149744_f");
addMapping("getMetaFromState", BlockRailDetector.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRailDetector.class, "func_176203_a");
addMapping("getStrongPower", BlockRailDetector.class, "func_176211_b");
addMapping("onBlockAdded", BlockRailDetector.class, "func_176213_c");
addMapping("getShapeProperty", BlockRailDetector.class, "func_176560_l");
addMapping("updatePoweredState", BlockRailDetector.class, "func_176570_e");
addMapping("findMinecarts", BlockRailDetector.class, "func_176571_a");
addMapping("getDectectionBox", BlockRailDetector.class, "func_176572_a");
addMapping("onEntityCollidedWithBlock", BlockRailDetector.class, "func_180634_a");
addMapping("getComparatorInputOverride", BlockRailDetector.class, "func_180641_l");
addMapping("randomTick", BlockRailDetector.class, "func_180645_a");
addMapping("updateTick", BlockRailDetector.class, "func_180650_b");
addMapping("getWeakPower", BlockRailDetector.class, "func_180656_a");
addMapping("createBlockState", BlockRailDetector.class, "func_180661_e");
addMapping("withMirror", BlockRailDetector.class, "func_185471_a");
addMapping("withRotation", BlockRailDetector.class, "func_185499_a");
addMapping("updateConnectedRails", BlockRailDetector.class, "func_185592_b");
addMapping("getMetaFromState", BlockRailPowered.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRailPowered.class, "func_176203_a");
addMapping("getShapeProperty", BlockRailPowered.class, "func_176560_l");
addMapping("findPoweredRailSignal", BlockRailPowered.class, "func_176566_a");
addMapping("isSameRailWithPower", BlockRailPowered.class, "func_176567_a");
addMapping("createBlockState", BlockRailPowered.class, "func_180661_e");
addMapping("withMirror", BlockRailPowered.class, "func_185471_a");
addMapping("withRotation", BlockRailPowered.class, "func_185499_a");
addMapping("updateState", BlockRailPowered.class, "func_189541_b");
addMapping("getBlockType", BlockRedFlower.class, "func_176495_j");
addMapping("getSubBlocks", BlockRedSandstone.class, "func_149666_a");
addMapping("getMetaFromState", BlockRedSandstone.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRedSandstone.class, "func_176203_a");
addMapping("damageDropped", BlockRedSandstone.class, "func_180651_a");
addMapping("createBlockState", BlockRedSandstone.class, "func_180661_e");
addMapping("getLocalizedName", BlockRedstoneComparator.class, "func_149732_F");
addMapping("createNewTileEntity", BlockRedstoneComparator.class, "func_149915_a");
addMapping("getMetaFromState", BlockRedstoneComparator.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRedstoneComparator.class, "func_176203_a");
addMapping("onBlockAdded", BlockRedstoneComparator.class, "func_176213_c");
addMapping("calculateInputStrength", BlockRedstoneComparator.class, "func_176397_f");
addMapping("updateState", BlockRedstoneComparator.class, "func_176398_g");
addMapping("getDelay", BlockRedstoneComparator.class, "func_176403_d");
addMapping("shouldBePowered", BlockRedstoneComparator.class, "func_176404_e");
addMapping("isPowered", BlockRedstoneComparator.class, "func_176406_l");
addMapping("getActiveSignal", BlockRedstoneComparator.class, "func_176408_a");
addMapping("calculateOutput", BlockRedstoneComparator.class, "func_176460_j");
addMapping("findItemFrame", BlockRedstoneComparator.class, "func_176461_a");
addMapping("onStateChange", BlockRedstoneComparator.class, "func_176462_k");
addMapping("onBlockActivated", BlockRedstoneComparator.class, "func_180639_a");
addMapping("getStateForPlacement", BlockRedstoneComparator.class, "func_180642_a");
addMapping("updateTick", BlockRedstoneComparator.class, "func_180650_b");
addMapping("getItemDropped", BlockRedstoneComparator.class, "func_180660_a");
addMapping("createBlockState", BlockRedstoneComparator.class, "func_180661_e");
addMapping("breakBlock", BlockRedstoneComparator.class, "func_180663_b");
addMapping("getPoweredState", BlockRedstoneComparator.class, "func_180674_e");
addMapping("getUnpoweredState", BlockRedstoneComparator.class, "func_180675_k");
addMapping("withMirror", BlockRedstoneComparator.class, "func_185471_a");
addMapping("getItem", BlockRedstoneComparator.class, "func_185473_a");
addMapping("withRotation", BlockRedstoneComparator.class, "func_185499_a");
addMapping("eventReceived", BlockRedstoneComparator.class, "func_189539_a");
addMapping("isOpaqueCube", BlockRedstoneDiode.class, "func_149662_c");
addMapping("isAssociatedBlock", BlockRedstoneDiode.class, "func_149667_c");
addMapping("isFullCube", BlockRedstoneDiode.class, "func_149686_d");
addMapping("canProvidePower", BlockRedstoneDiode.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockRedstoneDiode.class, "func_176196_c");
addMapping("onBlockDestroyedByPlayer", BlockRedstoneDiode.class, "func_176206_d");
addMapping("getStrongPower", BlockRedstoneDiode.class, "func_176211_b");
addMapping("onBlockAdded", BlockRedstoneDiode.class, "func_176213_c");
addMapping("shouldSideBeRendered", BlockRedstoneDiode.class, "func_176225_a");
addMapping("calculateInputStrength", BlockRedstoneDiode.class, "func_176397_f");
addMapping("updateState", BlockRedstoneDiode.class, "func_176398_g");
addMapping("getTickDelay", BlockRedstoneDiode.class, "func_176399_m");
addMapping("notifyNeighbors", BlockRedstoneDiode.class, "func_176400_h");
addMapping("getPowerOnSide", BlockRedstoneDiode.class, "func_176401_c");
addMapping("isFacingTowardsRepeater", BlockRedstoneDiode.class, "func_176402_i");
addMapping("getDelay", BlockRedstoneDiode.class, "func_176403_d");
addMapping("shouldBePowered", BlockRedstoneDiode.class, "func_176404_e");
addMapping("isLocked", BlockRedstoneDiode.class, "func_176405_b");
addMapping("isPowered", BlockRedstoneDiode.class, "func_176406_l");
addMapping("getPowerOnSides", BlockRedstoneDiode.class, "func_176407_c");
addMapping("getActiveSignal", BlockRedstoneDiode.class, "func_176408_a");
addMapping("canBlockStay", BlockRedstoneDiode.class, "func_176409_d");
addMapping("onBlockPlacedBy", BlockRedstoneDiode.class, "func_180633_a");
addMapping("getStateForPlacement", BlockRedstoneDiode.class, "func_180642_a");
addMapping("randomTick", BlockRedstoneDiode.class, "func_180645_a");
addMapping("updateTick", BlockRedstoneDiode.class, "func_180650_b");
addMapping("getWeakPower", BlockRedstoneDiode.class, "func_180656_a");
addMapping("getBlockLayer", BlockRedstoneDiode.class, "func_180664_k");
addMapping("getPoweredState", BlockRedstoneDiode.class, "func_180674_e");
addMapping("getUnpoweredState", BlockRedstoneDiode.class, "func_180675_k");
addMapping("getBoundingBox", BlockRedstoneDiode.class, "func_185496_a");
addMapping("isAlternateInput", BlockRedstoneDiode.class, "func_185545_A");
addMapping("isDiode", BlockRedstoneDiode.class, "func_185546_B");
addMapping("isSameDiode", BlockRedstoneDiode.class, "func_185547_C");
addMapping("neighborChanged", BlockRedstoneDiode.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockRedstoneDiode.class, "func_193383_a");
addMapping("onBlockAdded", BlockRedstoneLight.class, "func_176213_c");
addMapping("getSilkTouchDrop", BlockRedstoneLight.class, "func_180643_i");
addMapping("updateTick", BlockRedstoneLight.class, "func_180650_b");
addMapping("getItemDropped", BlockRedstoneLight.class, "func_180660_a");
addMapping("getItem", BlockRedstoneLight.class, "func_185473_a");
addMapping("neighborChanged", BlockRedstoneLight.class, "func_189540_a");
addMapping("quantityDroppedWithBonus", BlockRedstoneOre.class, "func_149679_a");
addMapping("tickRate", BlockRedstoneOre.class, "func_149738_a");
addMapping("quantityDropped", BlockRedstoneOre.class, "func_149745_a");
addMapping("onEntityWalk", BlockRedstoneOre.class, "func_176199_a");
addMapping("activate", BlockRedstoneOre.class, "func_176352_d");
addMapping("onBlockActivated", BlockRedstoneOre.class, "func_180639_a");
addMapping("getSilkTouchDrop", BlockRedstoneOre.class, "func_180643_i");
addMapping("onBlockClicked", BlockRedstoneOre.class, "func_180649_a");
addMapping("updateTick", BlockRedstoneOre.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockRedstoneOre.class, "func_180653_a");
addMapping("randomDisplayTick", BlockRedstoneOre.class, "func_180655_c");
addMapping("getItemDropped", BlockRedstoneOre.class, "func_180660_a");
addMapping("spawnParticles", BlockRedstoneOre.class, "func_180691_e");
addMapping("getItem", BlockRedstoneOre.class, "func_185473_a");
addMapping("getLocalizedName", BlockRedstoneRepeater.class, "func_149732_F");
addMapping("getMetaFromState", BlockRedstoneRepeater.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRedstoneRepeater.class, "func_176203_a");
addMapping("getActualState", BlockRedstoneRepeater.class, "func_176221_a");
addMapping("getDelay", BlockRedstoneRepeater.class, "func_176403_d");
addMapping("isLocked", BlockRedstoneRepeater.class, "func_176405_b");
addMapping("onBlockActivated", BlockRedstoneRepeater.class, "func_180639_a");
addMapping("randomDisplayTick", BlockRedstoneRepeater.class, "func_180655_c");
addMapping("getItemDropped", BlockRedstoneRepeater.class, "func_180660_a");
addMapping("createBlockState", BlockRedstoneRepeater.class, "func_180661_e");
addMapping("breakBlock", BlockRedstoneRepeater.class, "func_180663_b");
addMapping("getPoweredState", BlockRedstoneRepeater.class, "func_180674_e");
addMapping("getUnpoweredState", BlockRedstoneRepeater.class, "func_180675_k");
addMapping("withMirror", BlockRedstoneRepeater.class, "func_185471_a");
addMapping("getItem", BlockRedstoneRepeater.class, "func_185473_a");
addMapping("withRotation", BlockRedstoneRepeater.class, "func_185499_a");
addMapping("isAlternateInput", BlockRedstoneRepeater.class, "func_185545_A");
addMapping("isAssociatedBlock", BlockRedstoneTorch.class, "func_149667_c");
addMapping("tickRate", BlockRedstoneTorch.class, "func_149738_a");
addMapping("canProvidePower", BlockRedstoneTorch.class, "func_149744_f");
addMapping("getStrongPower", BlockRedstoneTorch.class, "func_176211_b");
addMapping("onBlockAdded", BlockRedstoneTorch.class, "func_176213_c");
addMapping("shouldBeOff", BlockRedstoneTorch.class, "func_176597_g");
addMapping("isBurnedOut", BlockRedstoneTorch.class, "func_176598_a");
addMapping("randomTick", BlockRedstoneTorch.class, "func_180645_a");
addMapping("updateTick", BlockRedstoneTorch.class, "func_180650_b");
addMapping("randomDisplayTick", BlockRedstoneTorch.class, "func_180655_c");
addMapping("getWeakPower", BlockRedstoneTorch.class, "func_180656_a");
addMapping("getItemDropped", BlockRedstoneTorch.class, "func_180660_a");
addMapping("breakBlock", BlockRedstoneTorch.class, "func_180663_b");
addMapping("getItem", BlockRedstoneTorch.class, "func_185473_a");
addMapping("neighborChanged", BlockRedstoneTorch.class, "func_189540_a");
addMapping("isOpaqueCube", BlockRedstoneWire.class, "func_149662_c");
addMapping("isFullCube", BlockRedstoneWire.class, "func_149686_d");
addMapping("canProvidePower", BlockRedstoneWire.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockRedstoneWire.class, "func_176196_c");
addMapping("getMetaFromState", BlockRedstoneWire.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRedstoneWire.class, "func_176203_a");
addMapping("getStrongPower", BlockRedstoneWire.class, "func_176211_b");
addMapping("onBlockAdded", BlockRedstoneWire.class, "func_176213_c");
addMapping("getActualState", BlockRedstoneWire.class, "func_176221_a");
addMapping("colorMultiplier", BlockRedstoneWire.class, "func_176337_b");
addMapping("updateSurroundingRedstone", BlockRedstoneWire.class, "func_176338_e");
addMapping("isPowerSourceAt", BlockRedstoneWire.class, "func_176339_d");
addMapping("canConnectUpwardsTo", BlockRedstoneWire.class, "func_176340_e");
addMapping("getAttachPosition", BlockRedstoneWire.class, "func_176341_c");
addMapping("getMaxCurrentStrength", BlockRedstoneWire.class, "func_176342_a");
addMapping("canConnectTo", BlockRedstoneWire.class, "func_176343_a");
addMapping("notifyWireNeighborsOfStateChange", BlockRedstoneWire.class, "func_176344_d");
addMapping("calculateCurrentChanges", BlockRedstoneWire.class, "func_176345_a");
addMapping("canConnectUpwardsTo", BlockRedstoneWire.class, "func_176346_d");
addMapping("getCollisionBoundingBox", BlockRedstoneWire.class, "func_180646_a");
addMapping("randomDisplayTick", BlockRedstoneWire.class, "func_180655_c");
addMapping("getWeakPower", BlockRedstoneWire.class, "func_180656_a");
addMapping("getItemDropped", BlockRedstoneWire.class, "func_180660_a");
addMapping("createBlockState", BlockRedstoneWire.class, "func_180661_e");
addMapping("breakBlock", BlockRedstoneWire.class, "func_180663_b");
addMapping("getBlockLayer", BlockRedstoneWire.class, "func_180664_k");
addMapping("withMirror", BlockRedstoneWire.class, "func_185471_a");
addMapping("getItem", BlockRedstoneWire.class, "func_185473_a");
addMapping("getBoundingBox", BlockRedstoneWire.class, "func_185496_a");
addMapping("withRotation", BlockRedstoneWire.class, "func_185499_a");
addMapping("getAABBIndex", BlockRedstoneWire.class, "func_185699_x");
addMapping("neighborChanged", BlockRedstoneWire.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockRedstoneWire.class, "func_193383_a");
addMapping("isOpaqueCube", BlockReed.class, "func_149662_c");
addMapping("isFullCube", BlockReed.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockReed.class, "func_176196_c");
addMapping("getMetaFromState", BlockReed.class, "func_176201_c");
addMapping("getStateFromMeta", BlockReed.class, "func_176203_a");
addMapping("checkForDrop", BlockReed.class, "func_176353_e");
addMapping("canBlockStay", BlockReed.class, "func_176354_d");
addMapping("getCollisionBoundingBox", BlockReed.class, "func_180646_a");
addMapping("updateTick", BlockReed.class, "func_180650_b");
addMapping("getItemDropped", BlockReed.class, "func_180660_a");
addMapping("createBlockState", BlockReed.class, "func_180661_e");
addMapping("getBlockLayer", BlockReed.class, "func_180664_k");
addMapping("getItem", BlockReed.class, "func_185473_a");
addMapping("getBoundingBox", BlockReed.class, "func_185496_a");
addMapping("neighborChanged", BlockReed.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockReed.class, "func_193383_a");
addMapping("getMetaFromState", BlockRotatedPillar.class, "func_176201_c");
addMapping("getStateFromMeta", BlockRotatedPillar.class, "func_176203_a");
addMapping("getStateForPlacement", BlockRotatedPillar.class, "func_180642_a");
addMapping("getSilkTouchDrop", BlockRotatedPillar.class, "func_180643_i");
addMapping("createBlockState", BlockRotatedPillar.class, "func_180661_e");
addMapping("withRotation", BlockRotatedPillar.class, "func_185499_a");
addMapping("getSubBlocks", BlockSand.class, "func_149666_a");
addMapping("getMetaFromState", BlockSand.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSand.class, "func_176203_a");
addMapping("damageDropped", BlockSand.class, "func_180651_a");
addMapping("getMapColor", BlockSand.class, "func_180659_g");
addMapping("createBlockState", BlockSand.class, "func_180661_e");
addMapping("getDustColor", BlockSand.class, "func_189876_x");
addMapping("getSubBlocks", BlockSandStone.class, "func_149666_a");
addMapping("getMetaFromState", BlockSandStone.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSandStone.class, "func_176203_a");
addMapping("damageDropped", BlockSandStone.class, "func_180651_a");
addMapping("getMapColor", BlockSandStone.class, "func_180659_g");
addMapping("createBlockState", BlockSandStone.class, "func_180661_e");
addMapping("getSubBlocks", BlockSapling.class, "func_149666_a");
addMapping("getLocalizedName", BlockSapling.class, "func_149732_F");
addMapping("getMetaFromState", BlockSapling.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSapling.class, "func_176203_a");
addMapping("canGrow", BlockSapling.class, "func_176473_a");
addMapping("grow", BlockSapling.class, "func_176474_b");
addMapping("generateTree", BlockSapling.class, "func_176476_e");
addMapping("isTypeAt", BlockSapling.class, "func_176477_a");
addMapping("grow", BlockSapling.class, "func_176478_d");
addMapping("updateTick", BlockSapling.class, "func_180650_b");
addMapping("damageDropped", BlockSapling.class, "func_180651_a");
addMapping("createBlockState", BlockSapling.class, "func_180661_e");
addMapping("canUseBonemeal", BlockSapling.class, "func_180670_a");
addMapping("isTwoByTwoOfType", BlockSapling.class, "func_181624_a");
addMapping("getBoundingBox", BlockSapling.class, "func_185496_a");
addMapping("quantityDroppedWithBonus", BlockSeaLantern.class, "func_149679_a");
addMapping("canSilkHarvest", BlockSeaLantern.class, "func_149700_E");
addMapping("quantityDropped", BlockSeaLantern.class, "func_149745_a");
addMapping("getMapColor", BlockSeaLantern.class, "func_180659_g");
addMapping("getItemDropped", BlockSeaLantern.class, "func_180660_a");
addMapping("getRenderType", BlockShulkerBox.class, "func_149645_b");
addMapping("getMobilityFlag", BlockShulkerBox.class, "func_149656_h");
addMapping("isOpaqueCube", BlockShulkerBox.class, "func_149662_c");
addMapping("isFullCube", BlockShulkerBox.class, "func_149686_d");
addMapping("hasComparatorInputOverride", BlockShulkerBox.class, "func_149740_M");
addMapping("createNewTileEntity", BlockShulkerBox.class, "func_149915_a");
addMapping("getMetaFromState", BlockShulkerBox.class, "func_176201_c");
addMapping("getStateFromMeta", BlockShulkerBox.class, "func_176203_a");
addMapping("onBlockHarvested", BlockShulkerBox.class, "func_176208_a");
addMapping("causesSuffocation", BlockShulkerBox.class, "func_176214_u");
addMapping("onBlockPlacedBy", BlockShulkerBox.class, "func_180633_a");
addMapping("onBlockActivated", BlockShulkerBox.class, "func_180639_a");
addMapping("getComparatorInputOverride", BlockShulkerBox.class, "func_180641_l");
addMapping("getStateForPlacement", BlockShulkerBox.class, "func_180642_a");
addMapping("dropBlockAsItemWithChance", BlockShulkerBox.class, "func_180653_a");
addMapping("createBlockState", BlockShulkerBox.class, "func_180661_e");
addMapping("breakBlock", BlockShulkerBox.class, "func_180663_b");
addMapping("withMirror", BlockShulkerBox.class, "func_185471_a");
addMapping("getItem", BlockShulkerBox.class, "func_185473_a");
addMapping("getBoundingBox", BlockShulkerBox.class, "func_185496_a");
addMapping("withRotation", BlockShulkerBox.class, "func_185499_a");
addMapping("hasCustomBreakingProgress", BlockShulkerBox.class, "func_190946_v");
addMapping("addInformation", BlockShulkerBox.class, "func_190948_a");
addMapping("getBlockByColor", BlockShulkerBox.class, "func_190952_a");
addMapping("getColoredItemStack", BlockShulkerBox.class, "func_190953_b");
addMapping("getColorFromBlock", BlockShulkerBox.class, "func_190954_c");
addMapping("getColorFromItem", BlockShulkerBox.class, "func_190955_b");
addMapping("getColor", BlockShulkerBox.class, "func_190956_e");
addMapping("getBlockFaceShape", BlockShulkerBox.class, "func_193383_a");
addMapping("isOpaqueCube", BlockSign.class, "func_149662_c");
addMapping("isFullCube", BlockSign.class, "func_149686_d");
addMapping("createNewTileEntity", BlockSign.class, "func_149915_a");
addMapping("canPlaceBlockAt", BlockSign.class, "func_176196_c");
addMapping("isPassable", BlockSign.class, "func_176205_b");
addMapping("onBlockActivated", BlockSign.class, "func_180639_a");
addMapping("getCollisionBoundingBox", BlockSign.class, "func_180646_a");
addMapping("getItemDropped", BlockSign.class, "func_180660_a");
addMapping("canSpawnInBlock", BlockSign.class, "func_181623_g");
addMapping("getItem", BlockSign.class, "func_185473_a");
addMapping("getBoundingBox", BlockSign.class, "func_185496_a");
addMapping("hasCustomBreakingProgress", BlockSign.class, "func_190946_v");
addMapping("getBlockFaceShape", BlockSign.class, "func_193383_a");
addMapping("getSubBlocks", BlockSilverfish.class, "func_149666_a");
addMapping("quantityDropped", BlockSilverfish.class, "func_149745_a");
addMapping("getMetaFromState", BlockSilverfish.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSilverfish.class, "func_176203_a");
addMapping("canContainSilverfish", BlockSilverfish.class, "func_176377_d");
addMapping("getSilkTouchDrop", BlockSilverfish.class, "func_180643_i");
addMapping("dropBlockAsItemWithChance", BlockSilverfish.class, "func_180653_a");
addMapping("createBlockState", BlockSilverfish.class, "func_180661_e");
addMapping("getItem", BlockSilverfish.class, "func_185473_a");
addMapping("isOpaqueCube", BlockSkull.class, "func_149662_c");
addMapping("isFullCube", BlockSkull.class, "func_149686_d");
addMapping("getLocalizedName", BlockSkull.class, "func_149732_F");
addMapping("createNewTileEntity", BlockSkull.class, "func_149915_a");
addMapping("getMetaFromState", BlockSkull.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSkull.class, "func_176203_a");
addMapping("onBlockHarvested", BlockSkull.class, "func_176208_a");
addMapping("getWitherBasePattern", BlockSkull.class, "func_176414_j");
addMapping("canDispenserPlace", BlockSkull.class, "func_176415_b");
addMapping("getWitherPattern", BlockSkull.class, "func_176416_l");
addMapping("getStateForPlacement", BlockSkull.class, "func_180642_a");
addMapping("dropBlockAsItemWithChance", BlockSkull.class, "func_180653_a");
addMapping("getItemDropped", BlockSkull.class, "func_180660_a");
addMapping("createBlockState", BlockSkull.class, "func_180661_e");
addMapping("breakBlock", BlockSkull.class, "func_180663_b");
addMapping("checkWitherSpawn", BlockSkull.class, "func_180679_a");
addMapping("withMirror", BlockSkull.class, "func_185471_a");
addMapping("getItem", BlockSkull.class, "func_185473_a");
addMapping("getBoundingBox", BlockSkull.class, "func_185496_a");
addMapping("withRotation", BlockSkull.class, "func_185499_a");
addMapping("hasCustomBreakingProgress", BlockSkull.class, "func_190946_v");
addMapping("getBlockFaceShape", BlockSkull.class, "func_193383_a");
addMapping("isOpaqueCube", BlockSlab.class, "func_149662_c");
addMapping("isFullCube", BlockSlab.class, "func_149686_d");
addMapping("canSilkHarvest", BlockSlab.class, "func_149700_E");
addMapping("quantityDropped", BlockSlab.class, "func_149745_a");
addMapping("getUnlocalizedName", BlockSlab.class, "func_150002_b");
addMapping("shouldSideBeRendered", BlockSlab.class, "func_176225_a");
addMapping("getVariantProperty", BlockSlab.class, "func_176551_l");
addMapping("isDouble", BlockSlab.class, "func_176552_j");
addMapping("getStateForPlacement", BlockSlab.class, "func_180642_a");
addMapping("isTopSolid", BlockSlab.class, "func_185481_k");
addMapping("getBoundingBox", BlockSlab.class, "func_185496_a");
addMapping("getTypeForItem", BlockSlab.class, "func_185674_a");
addMapping("isHalfSlab", BlockSlab.class, "func_185675_i");
addMapping("getBlockFaceShape", BlockSlab.class, "func_193383_a");
addMapping("onEntityWalk", BlockSlime.class, "func_176199_a");
addMapping("onLanded", BlockSlime.class, "func_176216_a");
addMapping("onFallenUpon", BlockSlime.class, "func_180658_a");
addMapping("getBlockLayer", BlockSlime.class, "func_180664_k");
addMapping("isOpaqueCube", BlockSnow.class, "func_149662_c");
addMapping("isFullCube", BlockSnow.class, "func_149686_d");
addMapping("quantityDropped", BlockSnow.class, "func_149745_a");
addMapping("canPlaceBlockAt", BlockSnow.class, "func_176196_c");
addMapping("isReplaceable", BlockSnow.class, "func_176200_f");
addMapping("getMetaFromState", BlockSnow.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSnow.class, "func_176203_a");
addMapping("isPassable", BlockSnow.class, "func_176205_b");
addMapping("shouldSideBeRendered", BlockSnow.class, "func_176225_a");
addMapping("checkAndDropBlock", BlockSnow.class, "func_176314_e");
addMapping("getCollisionBoundingBox", BlockSnow.class, "func_180646_a");
addMapping("updateTick", BlockSnow.class, "func_180650_b");
addMapping("harvestBlock", BlockSnow.class, "func_180657_a");
addMapping("getItemDropped", BlockSnow.class, "func_180660_a");
addMapping("createBlockState", BlockSnow.class, "func_180661_e");
addMapping("isTopSolid", BlockSnow.class, "func_185481_k");
addMapping("getBoundingBox", BlockSnow.class, "func_185496_a");
addMapping("neighborChanged", BlockSnow.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockSnow.class, "func_193383_a");
addMapping("quantityDropped", BlockSnowBlock.class, "func_149745_a");
addMapping("updateTick", BlockSnowBlock.class, "func_180650_b");
addMapping("getItemDropped", BlockSnowBlock.class, "func_180660_a");
addMapping("onEntityCollidedWithBlock", BlockSoulSand.class, "func_180634_a");
addMapping("getCollisionBoundingBox", BlockSoulSand.class, "func_180646_a");
addMapping("getBlockTileEntity", BlockSourceImpl.class, "func_150835_j");
addMapping("getBlockPos", BlockSourceImpl.class, "func_180699_d");
addMapping("getBlockState", BlockSourceImpl.class, "func_189992_e");
addMapping("getX", BlockSourceImpl.class, "func_82615_a");
addMapping("getZ", BlockSourceImpl.class, "func_82616_c");
addMapping("getY", BlockSourceImpl.class, "func_82617_b");
addMapping("getWorld", BlockSourceImpl.class, "func_82618_k");
addMapping("getSubBlocks", BlockSponge.class, "func_149666_a");
addMapping("getLocalizedName", BlockSponge.class, "func_149732_F");
addMapping("getMetaFromState", BlockSponge.class, "func_176201_c");
addMapping("getStateFromMeta", BlockSponge.class, "func_176203_a");
addMapping("onBlockAdded", BlockSponge.class, "func_176213_c");
addMapping("tryAbsorb", BlockSponge.class, "func_176311_e");
addMapping("absorb", BlockSponge.class, "func_176312_d");
addMapping("damageDropped", BlockSponge.class, "func_180651_a");
addMapping("randomDisplayTick", BlockSponge.class, "func_180655_c");
addMapping("createBlockState", BlockSponge.class, "func_180661_e");
addMapping("neighborChanged", BlockSponge.class, "func_189540_a");
addMapping("getSubBlocks", BlockStainedGlass.class, "func_149666_a");
addMapping("isFullCube", BlockStainedGlass.class, "func_149686_d");
addMapping("canSilkHarvest", BlockStainedGlass.class, "func_149700_E");
addMapping("quantityDropped", BlockStainedGlass.class, "func_149745_a");
addMapping("getMetaFromState", BlockStainedGlass.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStainedGlass.class, "func_176203_a");
addMapping("onBlockAdded", BlockStainedGlass.class, "func_176213_c");
addMapping("damageDropped", BlockStainedGlass.class, "func_180651_a");
addMapping("getMapColor", BlockStainedGlass.class, "func_180659_g");
addMapping("createBlockState", BlockStainedGlass.class, "func_180661_e");
addMapping("breakBlock", BlockStainedGlass.class, "func_180663_b");
addMapping("getBlockLayer", BlockStainedGlass.class, "func_180664_k");
addMapping("getSubBlocks", BlockStainedGlassPane.class, "func_149666_a");
addMapping("getMetaFromState", BlockStainedGlassPane.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStainedGlassPane.class, "func_176203_a");
addMapping("onBlockAdded", BlockStainedGlassPane.class, "func_176213_c");
addMapping("damageDropped", BlockStainedGlassPane.class, "func_180651_a");
addMapping("getMapColor", BlockStainedGlassPane.class, "func_180659_g");
addMapping("createBlockState", BlockStainedGlassPane.class, "func_180661_e");
addMapping("breakBlock", BlockStainedGlassPane.class, "func_180663_b");
addMapping("getBlockLayer", BlockStainedGlassPane.class, "func_180664_k");
addMapping("withMirror", BlockStainedGlassPane.class, "func_185471_a");
addMapping("withRotation", BlockStainedGlassPane.class, "func_185499_a");
addMapping("getMapColor", BlockStainedHardenedClay.class, "func_180659_g");
addMapping("getExplosionResistance", BlockStairs.class, "func_149638_a");
addMapping("isOpaqueCube", BlockStairs.class, "func_149662_c");
addMapping("isFullCube", BlockStairs.class, "func_149686_d");
addMapping("isCollidable", BlockStairs.class, "func_149703_v");
addMapping("tickRate", BlockStairs.class, "func_149738_a");
addMapping("canPlaceBlockAt", BlockStairs.class, "func_176196_c");
addMapping("modifyAcceleration", BlockStairs.class, "func_176197_a");
addMapping("onEntityWalk", BlockStairs.class, "func_176199_a");
addMapping("getMetaFromState", BlockStairs.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStairs.class, "func_176203_a");
addMapping("onBlockDestroyedByPlayer", BlockStairs.class, "func_176206_d");
addMapping("canCollideCheck", BlockStairs.class, "func_176209_a");
addMapping("onBlockAdded", BlockStairs.class, "func_176213_c");
addMapping("getActualState", BlockStairs.class, "func_176221_a");
addMapping("collisionRayTrace", BlockStairs.class, "func_180636_a");
addMapping("onBlockActivated", BlockStairs.class, "func_180639_a");
addMapping("getSelectedBoundingBox", BlockStairs.class, "func_180640_a");
addMapping("getStateForPlacement", BlockStairs.class, "func_180642_a");
addMapping("onBlockClicked", BlockStairs.class, "func_180649_a");
addMapping("updateTick", BlockStairs.class, "func_180650_b");
addMapping("onBlockDestroyedByExplosion", BlockStairs.class, "func_180652_a");
addMapping("randomDisplayTick", BlockStairs.class, "func_180655_c");
addMapping("getMapColor", BlockStairs.class, "func_180659_g");
addMapping("createBlockState", BlockStairs.class, "func_180661_e");
addMapping("breakBlock", BlockStairs.class, "func_180663_b");
addMapping("getBlockLayer", BlockStairs.class, "func_180664_k");
addMapping("withMirror", BlockStairs.class, "func_185471_a");
addMapping("addCollisionBoxToList", BlockStairs.class, "func_185477_a");
addMapping("isTopSolid", BlockStairs.class, "func_185481_k");
addMapping("getPackedLightmapCoords", BlockStairs.class, "func_185484_c");
addMapping("withRotation", BlockStairs.class, "func_185499_a");
addMapping("isDifferentStairs", BlockStairs.class, "func_185704_d");
addMapping("getCollEighthBlock", BlockStairs.class, "func_185705_z");
addMapping("getStairsShape", BlockStairs.class, "func_185706_d");
addMapping("getCollQuarterBlock", BlockStairs.class, "func_185707_y");
addMapping("getCollisionBoxList", BlockStairs.class, "func_185708_x");
addMapping("isBlockStairs", BlockStairs.class, "func_185709_i");
addMapping("getBlockFaceShape", BlockStairs.class, "func_193383_a");
addMapping("getMetaFromState", BlockStandingSign.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStandingSign.class, "func_176203_a");
addMapping("createBlockState", BlockStandingSign.class, "func_180661_e");
addMapping("withMirror", BlockStandingSign.class, "func_185471_a");
addMapping("withRotation", BlockStandingSign.class, "func_185499_a");
addMapping("neighborChanged", BlockStandingSign.class, "func_189540_a");
addMapping("getCanBlockBurn", BlockStaticLiquid.class, "func_176368_m");
addMapping("isSurroundingBlockFlammable", BlockStaticLiquid.class, "func_176369_e");
addMapping("updateLiquid", BlockStaticLiquid.class, "func_176370_f");
addMapping("updateTick", BlockStaticLiquid.class, "func_180650_b");
addMapping("neighborChanged", BlockStaticLiquid.class, "func_189540_a");
addMapping("getMetaFromState", BlockStem.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStem.class, "func_176203_a");
addMapping("getActualState", BlockStem.class, "func_176221_a");
addMapping("canGrow", BlockStem.class, "func_176473_a");
addMapping("grow", BlockStem.class, "func_176474_b");
addMapping("getSeedItem", BlockStem.class, "func_176481_j");
addMapping("growStem", BlockStem.class, "func_176482_g");
addMapping("updateTick", BlockStem.class, "func_180650_b");
addMapping("dropBlockAsItemWithChance", BlockStem.class, "func_180653_a");
addMapping("getItemDropped", BlockStem.class, "func_180660_a");
addMapping("createBlockState", BlockStem.class, "func_180661_e");
addMapping("canUseBonemeal", BlockStem.class, "func_180670_a");
addMapping("getItem", BlockStem.class, "func_185473_a");
addMapping("getBoundingBox", BlockStem.class, "func_185496_a");
addMapping("canSustainBush", BlockStem.class, "func_185514_i");
addMapping("getSubBlocks", BlockStone.class, "func_149666_a");
addMapping("getLocalizedName", BlockStone.class, "func_149732_F");
addMapping("getMetaFromState", BlockStone.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStone.class, "func_176203_a");
addMapping("damageDropped", BlockStone.class, "func_180651_a");
addMapping("getMapColor", BlockStone.class, "func_180659_g");
addMapping("getItemDropped", BlockStone.class, "func_180660_a");
addMapping("createBlockState", BlockStone.class, "func_180661_e");
addMapping("getSubBlocks", BlockStoneBrick.class, "func_149666_a");
addMapping("getMetaFromState", BlockStoneBrick.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStoneBrick.class, "func_176203_a");
addMapping("damageDropped", BlockStoneBrick.class, "func_180651_a");
addMapping("createBlockState", BlockStoneBrick.class, "func_180661_e");
addMapping("getSubBlocks", BlockStoneSlab.class, "func_149666_a");
addMapping("getUnlocalizedName", BlockStoneSlab.class, "func_150002_b");
addMapping("getMetaFromState", BlockStoneSlab.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStoneSlab.class, "func_176203_a");
addMapping("getVariantProperty", BlockStoneSlab.class, "func_176551_l");
addMapping("damageDropped", BlockStoneSlab.class, "func_180651_a");
addMapping("getMapColor", BlockStoneSlab.class, "func_180659_g");
addMapping("getItemDropped", BlockStoneSlab.class, "func_180660_a");
addMapping("createBlockState", BlockStoneSlab.class, "func_180661_e");
addMapping("getItem", BlockStoneSlab.class, "func_185473_a");
addMapping("getTypeForItem", BlockStoneSlab.class, "func_185674_a");
addMapping("getSubBlocks", BlockStoneSlabNew.class, "func_149666_a");
addMapping("getLocalizedName", BlockStoneSlabNew.class, "func_149732_F");
addMapping("getUnlocalizedName", BlockStoneSlabNew.class, "func_150002_b");
addMapping("getMetaFromState", BlockStoneSlabNew.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStoneSlabNew.class, "func_176203_a");
addMapping("getVariantProperty", BlockStoneSlabNew.class, "func_176551_l");
addMapping("damageDropped", BlockStoneSlabNew.class, "func_180651_a");
addMapping("getMapColor", BlockStoneSlabNew.class, "func_180659_g");
addMapping("getItemDropped", BlockStoneSlabNew.class, "func_180660_a");
addMapping("createBlockState", BlockStoneSlabNew.class, "func_180661_e");
addMapping("getItem", BlockStoneSlabNew.class, "func_185473_a");
addMapping("getTypeForItem", BlockStoneSlabNew.class, "func_185674_a");
addMapping("getRenderType", BlockStructure.class, "func_149645_b");
addMapping("quantityDropped", BlockStructure.class, "func_149745_a");
addMapping("createNewTileEntity", BlockStructure.class, "func_149915_a");
addMapping("getMetaFromState", BlockStructure.class, "func_176201_c");
addMapping("getStateFromMeta", BlockStructure.class, "func_176203_a");
addMapping("onBlockPlacedBy", BlockStructure.class, "func_180633_a");
addMapping("onBlockActivated", BlockStructure.class, "func_180639_a");
addMapping("getStateForPlacement", BlockStructure.class, "func_180642_a");
addMapping("createBlockState", BlockStructure.class, "func_180661_e");
addMapping("neighborChanged", BlockStructure.class, "func_189540_a");
addMapping("trigger", BlockStructure.class, "func_189874_a");
addMapping("getRenderType", BlockStructureVoid.class, "func_149645_b");
addMapping("getMobilityFlag", BlockStructureVoid.class, "func_149656_h");
addMapping("isOpaqueCube", BlockStructureVoid.class, "func_149662_c");
addMapping("isFullCube", BlockStructureVoid.class, "func_149686_d");
addMapping("getCollisionBoundingBox", BlockStructureVoid.class, "func_180646_a");
addMapping("dropBlockAsItemWithChance", BlockStructureVoid.class, "func_180653_a");
addMapping("getAmbientOcclusionLightValue", BlockStructureVoid.class, "func_185485_f");
addMapping("getBoundingBox", BlockStructureVoid.class, "func_185496_a");
addMapping("getBlockFaceShape", BlockStructureVoid.class, "func_193383_a");
addMapping("canDropFromExplosion", BlockTNT.class, "func_149659_a");
addMapping("getMetaFromState", BlockTNT.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTNT.class, "func_176203_a");
addMapping("onBlockDestroyedByPlayer", BlockTNT.class, "func_176206_d");
addMapping("onBlockAdded", BlockTNT.class, "func_176213_c");
addMapping("onEntityCollidedWithBlock", BlockTNT.class, "func_180634_a");
addMapping("onBlockActivated", BlockTNT.class, "func_180639_a");
addMapping("onBlockDestroyedByExplosion", BlockTNT.class, "func_180652_a");
addMapping("createBlockState", BlockTNT.class, "func_180661_e");
addMapping("explode", BlockTNT.class, "func_180692_a");
addMapping("neighborChanged", BlockTNT.class, "func_189540_a");
addMapping("getSubBlocks", BlockTallGrass.class, "func_149666_a");
addMapping("quantityDroppedWithBonus", BlockTallGrass.class, "func_149679_a");
addMapping("isReplaceable", BlockTallGrass.class, "func_176200_f");
addMapping("getMetaFromState", BlockTallGrass.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTallGrass.class, "func_176203_a");
addMapping("getOffsetType", BlockTallGrass.class, "func_176218_Q");
addMapping("canGrow", BlockTallGrass.class, "func_176473_a");
addMapping("grow", BlockTallGrass.class, "func_176474_b");
addMapping("harvestBlock", BlockTallGrass.class, "func_180657_a");
addMapping("getItemDropped", BlockTallGrass.class, "func_180660_a");
addMapping("createBlockState", BlockTallGrass.class, "func_180661_e");
addMapping("canUseBonemeal", BlockTallGrass.class, "func_180670_a");
addMapping("canBlockStay", BlockTallGrass.class, "func_180671_f");
addMapping("getItem", BlockTallGrass.class, "func_185473_a");
addMapping("getBoundingBox", BlockTallGrass.class, "func_185496_a");
addMapping("isOpaqueCube", BlockTorch.class, "func_149662_c");
addMapping("isFullCube", BlockTorch.class, "func_149686_d");
addMapping("canPlaceBlockAt", BlockTorch.class, "func_176196_c");
addMapping("getMetaFromState", BlockTorch.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTorch.class, "func_176203_a");
addMapping("onBlockAdded", BlockTorch.class, "func_176213_c");
addMapping("onNeighborChangeInternal", BlockTorch.class, "func_176592_e");
addMapping("checkForDrop", BlockTorch.class, "func_176593_f");
addMapping("canPlaceOn", BlockTorch.class, "func_176594_d");
addMapping("canPlaceAt", BlockTorch.class, "func_176595_b");
addMapping("getStateForPlacement", BlockTorch.class, "func_180642_a");
addMapping("getCollisionBoundingBox", BlockTorch.class, "func_180646_a");
addMapping("randomDisplayTick", BlockTorch.class, "func_180655_c");
addMapping("createBlockState", BlockTorch.class, "func_180661_e");
addMapping("getBlockLayer", BlockTorch.class, "func_180664_k");
addMapping("withMirror", BlockTorch.class, "func_185471_a");
addMapping("getBoundingBox", BlockTorch.class, "func_185496_a");
addMapping("withRotation", BlockTorch.class, "func_185499_a");
addMapping("neighborChanged", BlockTorch.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockTorch.class, "func_193383_a");
addMapping("isOpaqueCube", BlockTrapDoor.class, "func_149662_c");
addMapping("isFullCube", BlockTrapDoor.class, "func_149686_d");
addMapping("canPlaceBlockOnSide", BlockTrapDoor.class, "func_176198_a");
addMapping("getMetaFromState", BlockTrapDoor.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTrapDoor.class, "func_176203_a");
addMapping("isPassable", BlockTrapDoor.class, "func_176205_b");
addMapping("getFacing", BlockTrapDoor.class, "func_176281_b");
addMapping("getMetaForFacing", BlockTrapDoor.class, "func_176282_a");
addMapping("onBlockActivated", BlockTrapDoor.class, "func_180639_a");
addMapping("getStateForPlacement", BlockTrapDoor.class, "func_180642_a");
addMapping("createBlockState", BlockTrapDoor.class, "func_180661_e");
addMapping("getBlockLayer", BlockTrapDoor.class, "func_180664_k");
addMapping("withMirror", BlockTrapDoor.class, "func_185471_a");
addMapping("getBoundingBox", BlockTrapDoor.class, "func_185496_a");
addMapping("withRotation", BlockTrapDoor.class, "func_185499_a");
addMapping("playSound", BlockTrapDoor.class, "func_185731_a");
addMapping("neighborChanged", BlockTrapDoor.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockTrapDoor.class, "func_193383_a");
addMapping("isOpaqueCube", BlockTripWire.class, "func_149662_c");
addMapping("isFullCube", BlockTripWire.class, "func_149686_d");
addMapping("getMetaFromState", BlockTripWire.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTripWire.class, "func_176203_a");
addMapping("onBlockHarvested", BlockTripWire.class, "func_176208_a");
addMapping("onBlockAdded", BlockTripWire.class, "func_176213_c");
addMapping("getActualState", BlockTripWire.class, "func_176221_a");
addMapping("notifyHook", BlockTripWire.class, "func_176286_e");
addMapping("isConnectedTo", BlockTripWire.class, "func_176287_c");
addMapping("updateState", BlockTripWire.class, "func_176288_d");
addMapping("onEntityCollidedWithBlock", BlockTripWire.class, "func_180634_a");
addMapping("randomTick", BlockTripWire.class, "func_180645_a");
addMapping("getCollisionBoundingBox", BlockTripWire.class, "func_180646_a");
addMapping("updateTick", BlockTripWire.class, "func_180650_b");
addMapping("getItemDropped", BlockTripWire.class, "func_180660_a");
addMapping("createBlockState", BlockTripWire.class, "func_180661_e");
addMapping("breakBlock", BlockTripWire.class, "func_180663_b");
addMapping("getBlockLayer", BlockTripWire.class, "func_180664_k");
addMapping("withMirror", BlockTripWire.class, "func_185471_a");
addMapping("getItem", BlockTripWire.class, "func_185473_a");
addMapping("getBoundingBox", BlockTripWire.class, "func_185496_a");
addMapping("withRotation", BlockTripWire.class, "func_185499_a");
addMapping("getBlockFaceShape", BlockTripWire.class, "func_193383_a");
addMapping("isOpaqueCube", BlockTripWireHook.class, "func_149662_c");
addMapping("isFullCube", BlockTripWireHook.class, "func_149686_d");
addMapping("canProvidePower", BlockTripWireHook.class, "func_149744_f");
addMapping("canPlaceBlockAt", BlockTripWireHook.class, "func_176196_c");
addMapping("canPlaceBlockOnSide", BlockTripWireHook.class, "func_176198_a");
addMapping("getMetaFromState", BlockTripWireHook.class, "func_176201_c");
addMapping("getStateFromMeta", BlockTripWireHook.class, "func_176203_a");
addMapping("getStrongPower", BlockTripWireHook.class, "func_176211_b");
addMapping("calculateState", BlockTripWireHook.class, "func_176260_a");
addMapping("checkForDrop", BlockTripWireHook.class, "func_176261_e");
addMapping("notifyNeighbors", BlockTripWireHook.class, "func_176262_b");
addMapping("onBlockPlacedBy", BlockTripWireHook.class, "func_180633_a");
addMapping("getStateForPlacement", BlockTripWireHook.class, "func_180642_a");
addMapping("randomTick", BlockTripWireHook.class, "func_180645_a");
addMapping("getCollisionBoundingBox", BlockTripWireHook.class, "func_180646_a");
addMapping("updateTick", BlockTripWireHook.class, "func_180650_b");
addMapping("getWeakPower", BlockTripWireHook.class, "func_180656_a");
addMapping("createBlockState", BlockTripWireHook.class, "func_180661_e");
addMapping("breakBlock", BlockTripWireHook.class, "func_180663_b");
addMapping("getBlockLayer", BlockTripWireHook.class, "func_180664_k");
addMapping("playSound", BlockTripWireHook.class, "func_180694_a");
addMapping("withMirror", BlockTripWireHook.class, "func_185471_a");
addMapping("getBoundingBox", BlockTripWireHook.class, "func_185496_a");
addMapping("withRotation", BlockTripWireHook.class, "func_185499_a");
addMapping("neighborChanged", BlockTripWireHook.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockTripWireHook.class, "func_193383_a");
addMapping("isOpaqueCube", BlockVine.class, "func_149662_c");
addMapping("isFullCube", BlockVine.class, "func_149686_d");
addMapping("quantityDropped", BlockVine.class, "func_149745_a");
addMapping("canPlaceBlockOnSide", BlockVine.class, "func_176198_a");
addMapping("isReplaceable", BlockVine.class, "func_176200_f");
addMapping("getMetaFromState", BlockVine.class, "func_176201_c");
addMapping("getStateFromMeta", BlockVine.class, "func_176203_a");
addMapping("getActualState", BlockVine.class, "func_176221_a");
addMapping("getPropertyFor", BlockVine.class, "func_176267_a");
addMapping("getNumGrownFaces", BlockVine.class, "func_176268_d");
addMapping("recheckGrownSides", BlockVine.class, "func_176269_e");
addMapping("getStateForPlacement", BlockVine.class, "func_180642_a");
addMapping("getCollisionBoundingBox", BlockVine.class, "func_180646_a");
addMapping("updateTick", BlockVine.class, "func_180650_b");
addMapping("harvestBlock", BlockVine.class, "func_180657_a");
addMapping("getItemDropped", BlockVine.class, "func_180660_a");
addMapping("createBlockState", BlockVine.class, "func_180661_e");
addMapping("getBlockLayer", BlockVine.class, "func_180664_k");
addMapping("withMirror", BlockVine.class, "func_185471_a");
addMapping("getBoundingBox", BlockVine.class, "func_185496_a");
addMapping("withRotation", BlockVine.class, "func_185499_a");
addMapping("neighborChanged", BlockVine.class, "func_189540_a");
addMapping("getBlockFaceShape", BlockVine.class, "func_193383_a");
addMapping("canAttachTo", BlockVine.class, "func_193395_a");
addMapping("isAcceptableNeighbor", BlockVine.class, "func_193396_c");
addMapping("isExceptBlockForAttaching", BlockVine.class, "func_193397_e");
addMapping("isOpaqueCube", BlockWall.class, "func_149662_c");
addMapping("getSubBlocks", BlockWall.class, "func_149666_a");
addMapping("isFullCube", BlockWall.class, "func_149686_d");
addMapping("getLocalizedName", BlockWall.class, "func_149732_F");
addMapping("getMetaFromState", BlockWall.class, "func_176201_c");
addMapping("getStateFromMeta", BlockWall.class, "func_176203_a");
addMapping("isPassable", BlockWall.class, "func_176205_b");
addMapping("getActualState", BlockWall.class, "func_176221_a");
addMapping("shouldSideBeRendered", BlockWall.class, "func_176225_a");
addMapping("canConnectTo", BlockWall.class, "func_176253_e");
addMapping("getCollisionBoundingBox", BlockWall.class, "func_180646_a");
addMapping("damageDropped", BlockWall.class, "func_180651_a");
addMapping("createBlockState", BlockWall.class, "func_180661_e");
addMapping("addCollisionBoxToList", BlockWall.class, "func_185477_a");
addMapping("getBoundingBox", BlockWall.class, "func_185496_a");
addMapping("getAABBIndex", BlockWall.class, "func_185749_i");
addMapping("getBlockFaceShape", BlockWall.class, "func_193383_a");
addMapping("isExcepBlockForAttachWithPiston", BlockWall.class, "func_194143_e");
addMapping("getMetaFromState", BlockWallSign.class, "func_176201_c");
addMapping("getStateFromMeta", BlockWallSign.class, "func_176203_a");
addMapping("createBlockState", BlockWallSign.class, "func_180661_e");
addMapping("withMirror", BlockWallSign.class, "func_185471_a");
addMapping("getBoundingBox", BlockWallSign.class, "func_185496_a");
addMapping("withRotation", BlockWallSign.class, "func_185499_a");
addMapping("neighborChanged", BlockWallSign.class, "func_189540_a");
addMapping("isOpaqueCube", BlockWeb.class, "func_149662_c");
addMapping("isFullCube", BlockWeb.class, "func_149686_d");
addMapping("canSilkHarvest", BlockWeb.class, "func_149700_E");
addMapping("onEntityCollidedWithBlock", BlockWeb.class, "func_180634_a");
addMapping("getCollisionBoundingBox", BlockWeb.class, "func_180646_a");
addMapping("harvestBlock", BlockWeb.class, "func_180657_a");
addMapping("getItemDropped", BlockWeb.class, "func_180660_a");
addMapping("getBlockLayer", BlockWeb.class, "func_180664_k");
addMapping("getBlockFaceShape", BlockWeb.class, "func_193383_a");
addMapping("getSubBlocks", BlockWoodSlab.class, "func_149666_a");
addMapping("getUnlocalizedName", BlockWoodSlab.class, "func_150002_b");
addMapping("getMetaFromState", BlockWoodSlab.class, "func_176201_c");
addMapping("getStateFromMeta", BlockWoodSlab.class, "func_176203_a");
addMapping("getVariantProperty", BlockWoodSlab.class, "func_176551_l");
addMapping("damageDropped", BlockWoodSlab.class, "func_180651_a");
addMapping("getMapColor", BlockWoodSlab.class, "func_180659_g");
addMapping("getItemDropped", BlockWoodSlab.class, "func_180660_a");
addMapping("createBlockState", BlockWoodSlab.class, "func_180661_e");
addMapping("getItem", BlockWoodSlab.class, "func_185473_a");
addMapping("getTypeForItem", BlockWoodSlab.class, "func_185674_a");
addMapping("onBlockActivated", BlockWorkbench.class, "func_180639_a");
addMapping("getBlockType", BlockYellowFlower.class, "func_176495_j");
addMapping("canGrow", IGrowable.class, "func_176473_a");
addMapping("grow", IGrowable.class, "func_176474_b");
addMapping("canUseBonemeal", IGrowable.class, "func_180670_a");
addMapping("createNewTileEntity", ITileEntityProvider.class, "func_149915_a");
addMapping("getPlaceSound", SoundType.class, "func_185841_e");
addMapping("getFallSound", SoundType.class, "func_185842_g");
addMapping("getVolume", SoundType.class, "func_185843_a");
addMapping("getStepSound", SoundType.class, "func_185844_d");
addMapping("getBreakSound", SoundType.class, "func_185845_c");
addMapping("getHitSound", SoundType.class, "func_185846_f");
addMapping("getPitch", SoundType.class, "func_185847_b");
addMapping("getMapColor", MapColor.class, "func_151643_b");
addMapping("getBlockColor", MapColor.class, "func_193558_a");
addMapping("getMaterialMapColor", Material.class, "func_151565_r");
addMapping("getMobilityFlag", Material.class, "func_186274_m");
addMapping("getCanBurn", Material.class, "func_76217_h");
addMapping("isOpaque", Material.class, "func_76218_k");
addMapping("setNoPushMobility", Material.class, "func_76219_n");
addMapping("isSolid", Material.class, "func_76220_a");
addMapping("setRequiresTool", Material.class, "func_76221_f");
addMapping("isReplaceable", Material.class, "func_76222_j");
addMapping("setTranslucent", Material.class, "func_76223_p");
addMapping("isLiquid", Material.class, "func_76224_d");
addMapping("setImmovableMobility", Material.class, "func_76225_o");
addMapping("setBurning", Material.class, "func_76226_g");
addMapping("blocksLight", Material.class, "func_76228_b");
addMapping("isToolNotRequired", Material.class, "func_76229_l");
addMapping("blocksMovement", Material.class, "func_76230_c");
addMapping("setReplaceable", Material.class, "func_76231_i");
addMapping("setAdventureModeExempt", Material.class, "func_85158_p");
addMapping("isSolid", MaterialLiquid.class, "func_76220_a");
addMapping("isLiquid", MaterialLiquid.class, "func_76224_d");
addMapping("blocksMovement", MaterialLiquid.class, "func_76230_c");
addMapping("isSolid", MaterialLogic.class, "func_76220_a");
addMapping("blocksLight", MaterialLogic.class, "func_76228_b");
addMapping("blocksMovement", MaterialLogic.class, "func_76230_c");
addMapping("isSolid", MaterialPortal.class, "func_76220_a");
addMapping("blocksLight", MaterialPortal.class, "func_76228_b");
addMapping("blocksMovement", MaterialPortal.class, "func_76230_c");
addMapping("isSolid", MaterialTransparent.class, "func_76220_a");
addMapping("blocksLight", MaterialTransparent.class, "func_76228_b");
addMapping("blocksMovement", MaterialTransparent.class, "func_76230_c");
addMapping("getValueClass", IProperty.class, "func_177699_b");
addMapping("getAllowedValues", IProperty.class, "func_177700_c");
addMapping("getName", IProperty.class, "func_177701_a");
addMapping("getName", IProperty.class, "func_177702_a");
addMapping("parseValue", IProperty.class, "func_185929_b");
addMapping("getAllowedValues", PropertyBool.class, "func_177700_c");
addMapping("getName", PropertyBool.class, "func_177702_a");
addMapping("create", PropertyBool.class, "func_177716_a");
addMapping("parseValue", PropertyBool.class, "func_185929_b");
addMapping("create", PropertyDirection.class, "func_177712_a");
addMapping("create", PropertyDirection.class, "func_177713_a");
addMapping("create", PropertyDirection.class, "func_177714_a");
addMapping("getAllowedValues", PropertyEnum.class, "func_177700_c");
addMapping("getName", PropertyEnum.class, "func_177702_a");
addMapping("create", PropertyEnum.class, "func_177706_a");
addMapping("create", PropertyEnum.class, "func_177707_a");
addMapping("create", PropertyEnum.class, "func_177708_a");
addMapping("create", PropertyEnum.class, "func_177709_a");
addMapping("parseValue", PropertyEnum.class, "func_185929_b");
addMapping("getValueClass", PropertyHelper.class, "func_177699_b");
addMapping("getName", PropertyHelper.class, "func_177701_a");
addMapping("getAllowedValues", PropertyInteger.class, "func_177700_c");
addMapping("getName", PropertyInteger.class, "func_177702_a");
addMapping("create", PropertyInteger.class, "func_177719_a");
addMapping("parseValue", PropertyInteger.class, "func_185929_b");
addMapping("addBranchingBlocks", BlockPistonStructureHelper.class, "func_177250_b");
addMapping("addBlockLine", BlockPistonStructureHelper.class, "func_177251_a");
addMapping("getBlocksToDestroy", BlockPistonStructureHelper.class, "func_177252_d");
addMapping("canMove", BlockPistonStructureHelper.class, "func_177253_a");
addMapping("getBlocksToMove", BlockPistonStructureHelper.class, "func_177254_c");
addMapping("reorderListAtCollision", BlockPistonStructureHelper.class, "func_177255_a");
addMapping("cycleProperty", BlockStateBase.class, "func_177231_a");
addMapping("cyclePropertyValue", BlockStateBase.class, "func_177232_a");
addMapping("getValidStates", BlockStateContainer.class, "func_177619_a");
addMapping("getAllowedValues", BlockStateContainer.class, "func_177620_e");
addMapping("getBaseState", BlockStateContainer.class, "func_177621_b");
addMapping("getBlock", BlockStateContainer.class, "func_177622_c");
addMapping("getProperties", BlockStateContainer.class, "func_177623_d");
addMapping("validateProperty", BlockStateContainer.class, "func_185919_a");
addMapping("getProperty", BlockStateContainer.class, "func_185920_a");
addMapping("getTileEntity", BlockWorldState.class, "func_177507_b");
addMapping("getPos", BlockWorldState.class, "func_177508_d");
addMapping("getBlockState", BlockWorldState.class, "func_177509_a");
addMapping("hasState", BlockWorldState.class, "func_177510_a");
addMapping("neighborChanged", IBlockBehaviors.class, "func_189546_a");
addMapping("onBlockEventReceived", IBlockBehaviors.class, "func_189547_a");
addMapping("getBlockHardness", IBlockProperties.class, "func_185887_b");
addMapping("getComparatorInputOverride", IBlockProperties.class, "func_185888_a");
addMapping("getPackedLightmapCoords", IBlockProperties.class, "func_185889_a");
addMapping("getCollisionBoundingBox", IBlockProperties.class, "func_185890_d");
addMapping("getLightOpacity", IBlockProperties.class, "func_185891_c");
addMapping("getAmbientOcclusionLightValue", IBlockProperties.class, "func_185892_j");
addMapping("getStrongPower", IBlockProperties.class, "func_185893_b");
addMapping("shouldSideBeRendered", IBlockProperties.class, "func_185894_c");
addMapping("isTranslucent", IBlockProperties.class, "func_185895_e");
addMapping("isTopSolid", IBlockProperties.class, "func_185896_q");
addMapping("canProvidePower", IBlockProperties.class, "func_185897_m");
addMapping("isBlockNormalCube", IBlockProperties.class, "func_185898_k");
addMapping("getActualState", IBlockProperties.class, "func_185899_b");
addMapping("getBoundingBox", IBlockProperties.class, "func_185900_c");
addMapping("getRenderType", IBlockProperties.class, "func_185901_i");
addMapping("withMirror", IBlockProperties.class, "func_185902_a");
addMapping("getPlayerRelativeBlockHardness", IBlockProperties.class, "func_185903_a");
addMapping("getMaterial", IBlockProperties.class, "func_185904_a");
addMapping("getMobilityFlag", IBlockProperties.class, "func_185905_o");
addMapping("getLightValue", IBlockProperties.class, "func_185906_d");
addMapping("withRotation", IBlockProperties.class, "func_185907_a");
addMapping("addCollisionBoxToList", IBlockProperties.class, "func_185908_a");
addMapping("getMapColor", IBlockProperties.class, "func_185909_g");
addMapping("collisionRayTrace", IBlockProperties.class, "func_185910_a");
addMapping("getWeakPower", IBlockProperties.class, "func_185911_a");
addMapping("hasComparatorInputOverride", IBlockProperties.class, "func_185912_n");
addMapping("isFullBlock", IBlockProperties.class, "func_185913_b");
addMapping("isOpaqueCube", IBlockProperties.class, "func_185914_p");
addMapping("isNormalCube", IBlockProperties.class, "func_185915_l");
addMapping("useNeighborBrightness", IBlockProperties.class, "func_185916_f");
addMapping("isFullCube", IBlockProperties.class, "func_185917_h");
addMapping("getSelectedBoundingBox", IBlockProperties.class, "func_185918_c");
addMapping("canEntitySpawn", IBlockProperties.class, "func_189884_a");
addMapping("hasCustomBreakingProgress", IBlockProperties.class, "func_191057_i");
addMapping("causesSuffocation", IBlockProperties.class, "func_191058_s");
addMapping("getOffset", IBlockProperties.class, "func_191059_e");
addMapping("getBlockFaceShape", IBlockProperties.class, "func_193401_d");
addMapping("withProperty", IBlockState.class, "func_177226_a");
addMapping("getPropertyKeys", IBlockState.class, "func_177227_a");
addMapping("getProperties", IBlockState.class, "func_177228_b");
addMapping("getValue", IBlockState.class, "func_177229_b");
addMapping("getBlock", IBlockState.class, "func_177230_c");
addMapping("cycleProperty", IBlockState.class, "func_177231_a");
addMapping("forBlock", BlockMatcher.class, "func_177642_a");
addMapping("forMaterial", BlockMaterialMatcher.class, "func_189886_a");
addMapping("match", BlockPattern.class, "func_177681_a");
addMapping("checkPatternAt", BlockPattern.class, "func_177682_a");
addMapping("translateOffset", BlockPattern.class, "func_177683_a");
addMapping("getPalmLength", BlockPattern.class, "func_177684_c");
addMapping("getThumbLength", BlockPattern.class, "func_177685_b");
addMapping("createLoadingCache", BlockPattern.class, "func_181627_a");
addMapping("getFingerLength", BlockPattern.class, "func_185922_a");
addMapping("where", BlockStateMatcher.class, "func_177637_a");
addMapping("forBlock", BlockStateMatcher.class, "func_177638_a");
addMapping("matches", BlockStateMatcher.class, "func_185927_a");
addMapping("checkMissingPredicates", FactoryBlockPattern.class, "func_177657_d");
addMapping("makePredicateArray", FactoryBlockPattern.class, "func_177658_c");
addMapping("aisle", FactoryBlockPattern.class, "func_177659_a");
addMapping("start", FactoryBlockPattern.class, "func_177660_a");
addMapping("build", FactoryBlockPattern.class, "func_177661_b");
addMapping("where", FactoryBlockPattern.class, "func_177662_a");
addMapping("setDoneWorking", LoadingScreenRenderer.class, "func_146586_a");
addMapping("setLoadingProgress", LoadingScreenRenderer.class, "func_73718_a");
addMapping("displayLoadingString", LoadingScreenRenderer.class, "func_73719_c");
addMapping("displaySavingString", LoadingScreenRenderer.class, "func_73720_a");
addMapping("resetProgressAndMessage", LoadingScreenRenderer.class, "func_73721_b");
addMapping("displayString", LoadingScreenRenderer.class, "func_73722_d");
addMapping("getSession", Minecraft.class, "func_110432_I");
addMapping("getTextureManager", Minecraft.class, "func_110434_K");
addMapping("refreshResources", Minecraft.class, "func_110436_a");
addMapping("getProxy", Minecraft.class, "func_110437_J");
addMapping("getResourcePackRepository", Minecraft.class, "func_110438_M");
addMapping("updateDisplayMode", Minecraft.class, "func_110441_Q");
addMapping("getResourceManager", Minecraft.class, "func_110442_L");
addMapping("getLanguageManager", Minecraft.class, "func_135016_M");
addMapping("getCurrentServerData", Minecraft.class, "func_147104_D");
addMapping("isFramerateLimitBelowMax", Minecraft.class, "func_147107_h");
addMapping("displayGuiScreen", Minecraft.class, "func_147108_a");
addMapping("getAmbientMusicType", Minecraft.class, "func_147109_W");
addMapping("getFramebuffer", Minecraft.class, "func_147110_a");
addMapping("isJava64bit", Minecraft.class, "func_147111_S");
addMapping("middleClickMouse", Minecraft.class, "func_147112_ai");
addMapping("isGamePaused", Minecraft.class, "func_147113_T");
addMapping("getConnection", Minecraft.class, "func_147114_u");
addMapping("sendClickBlockToController", Minecraft.class, "func_147115_a");
addMapping("clickMouse", Minecraft.class, "func_147116_af");
addMapping("getTextureMapBlocks", Minecraft.class, "func_147117_R");
addMapping("getSoundHandler", Minecraft.class, "func_147118_V");
addMapping("updateFramebufferSize", Minecraft.class, "func_147119_ah");
addMapping("rightClickMouse", Minecraft.class, "func_147121_ag");
addMapping("isJvm64bit", Minecraft.class, "func_147122_X");
addMapping("readImageToBuffer", Minecraft.class, "func_152340_a");
addMapping("getSkinManager", Minecraft.class, "func_152342_ad");
addMapping("addScheduledTask", Minecraft.class, "func_152343_a");
addMapping("addScheduledTask", Minecraft.class, "func_152344_a");
addMapping("isCallingFromMinecraftThread", Minecraft.class, "func_152345_ab");
addMapping("getSessionService", Minecraft.class, "func_152347_ac");
addMapping("dispatchKeypresses", Minecraft.class, "func_152348_aa");
addMapping("isUnicode", Minecraft.class, "func_152349_b");
addMapping("setWindowIcon", Minecraft.class, "func_175594_ao");
addMapping("getItemRenderer", Minecraft.class, "func_175597_ag");
addMapping("getRenderManager", Minecraft.class, "func_175598_ae");
addMapping("getRenderItem", Minecraft.class, "func_175599_af");
addMapping("getVersion", Minecraft.class, "func_175600_c");
addMapping("updateDisplay", Minecraft.class, "func_175601_h");
addMapping("getBlockRendererDispatcher", Minecraft.class, "func_175602_ab");
addMapping("scheduleResourcesRefresh", Minecraft.class, "func_175603_A");
addMapping("checkWindowResize", Minecraft.class, "func_175604_i");
addMapping("setInitialDisplayMode", Minecraft.class, "func_175605_an");
addMapping("getRenderViewEntity", Minecraft.class, "func_175606_aa");
addMapping("setRenderViewEntity", Minecraft.class, "func_175607_a");
addMapping("registerMetadataSerializers", Minecraft.class, "func_175608_ak");
addMapping("createDisplay", Minecraft.class, "func_175609_am");
addMapping("getDebugFPS", Minecraft.class, "func_175610_ah");
addMapping("drawSplashScreen", Minecraft.class, "func_180510_a");
addMapping("getProfileProperties", Minecraft.class, "func_181037_M");
addMapping("getMusicTicker", Minecraft.class, "func_181535_r");
addMapping("draw", Minecraft.class, "func_181536_a");
addMapping("setConnectedToRealms", Minecraft.class, "func_181537_a");
addMapping("getCurrentAction", Minecraft.class, "func_181538_aA");
addMapping("getFrameTimer", Minecraft.class, "func_181539_aj");
addMapping("isConnectedToRealms", Minecraft.class, "func_181540_al");
addMapping("processKeyBinds", Minecraft.class, "func_184117_aA");
addMapping("runTickKeyboard", Minecraft.class, "func_184118_az");
addMapping("storeTEInStack", Minecraft.class, "func_184119_a");
addMapping("getRenderPartialTicks", Minecraft.class, "func_184121_ak");
addMapping("processKeyF3", Minecraft.class, "func_184122_c");
addMapping("getVersionType", Minecraft.class, "func_184123_d");
addMapping("runTickMouse", Minecraft.class, "func_184124_aB");
addMapping("getBlockColors", Minecraft.class, "func_184125_al");
addMapping("getDataFixer", Minecraft.class, "func_184126_aj");
addMapping("isReducedDebug", Minecraft.class, "func_189648_am");
addMapping("debugFeedbackTranslated", Minecraft.class, "func_190521_a");
addMapping("getTutorial", Minecraft.class, "func_193032_ao");
addMapping("getToastGui", Minecraft.class, "func_193033_an");
addMapping("populateSearchTreeManager", Minecraft.class, "func_193986_ar");
addMapping("getSearchTree", Minecraft.class, "func_193987_a");
addMapping("getTickLength", Minecraft.class, "func_193989_ak");
addMapping("addServerStatsToSnooper", Minecraft.class, "func_70000_a");
addMapping("addServerTypeToSnooper", Minecraft.class, "func_70001_b");
addMapping("isSnooperEnabled", Minecraft.class, "func_70002_Q");
addMapping("setServerData", Minecraft.class, "func_71351_a");
addMapping("toggleFullscreen", Minecraft.class, "func_71352_k");
addMapping("loadWorld", Minecraft.class, "func_71353_a");
addMapping("setDimensionAndSpawnPlayer", Minecraft.class, "func_71354_a");
addMapping("isDemo", Minecraft.class, "func_71355_q");
addMapping("isSingleplayer", Minecraft.class, "func_71356_B");
addMapping("getSaveLoader", Minecraft.class, "func_71359_d");
addMapping("checkGLError", Minecraft.class, "func_71361_d");
addMapping("stopIntegratedServer", Minecraft.class, "func_71363_D");
addMapping("setIngameNotInFocus", Minecraft.class, "func_71364_i");
addMapping("displayDebugInfo", Minecraft.class, "func_71366_a");
addMapping("getGLMaximumTextureSize", Minecraft.class, "func_71369_N");
addMapping("resize", Minecraft.class, "func_71370_a");
addMapping("launchIntegratedServer", Minecraft.class, "func_71371_a");
addMapping("isFullScreen", Minecraft.class, "func_71372_G");
addMapping("isFancyGraphicsEnabled", Minecraft.class, "func_71375_t");
addMapping("displayCrashReport", Minecraft.class, "func_71377_b");
addMapping("getPlayerUsageSnooper", Minecraft.class, "func_71378_E");
addMapping("isAmbientOcclusionEnabled", Minecraft.class, "func_71379_u");
addMapping("setIngameFocus", Minecraft.class, "func_71381_h");
addMapping("isGuiEnabled", Minecraft.class, "func_71382_s");
addMapping("updateDebugProfilerName", Minecraft.class, "func_71383_b");
addMapping("init", Minecraft.class, "func_71384_a");
addMapping("displayInGameMenu", Minecraft.class, "func_71385_j");
addMapping("getSystemTime", Minecraft.class, "func_71386_F");
addMapping("isIntegratedServerRunning", Minecraft.class, "func_71387_A");
addMapping("startTimerHackThread", Minecraft.class, "func_71389_H");
addMapping("addGraphicsAndWorldToCrashReport", Minecraft.class, "func_71396_d");
addMapping("freeMemory", Minecraft.class, "func_71398_f");
addMapping("shutdown", Minecraft.class, "func_71400_g");
addMapping("getIntegratedServer", Minecraft.class, "func_71401_C");
addMapping("loadWorld", Minecraft.class, "func_71403_a");
addMapping("crashed", Minecraft.class, "func_71404_a");
addMapping("shutdownMinecraftApplet", Minecraft.class, "func_71405_e");
addMapping("runTick", Minecraft.class, "func_71407_l");
addMapping("getMinecraft", Minecraft.class, "func_71410_x");
addMapping("runGameLoop", Minecraft.class, "func_71411_J");
addMapping("getLimitFramerate", Minecraft.class, "func_90020_K");
addMapping("run", Minecraft.class, "func_99999_d");
addMapping("update", ElytraSound.class, "func_73660_a");
addMapping("update", GuardianSound.class, "func_73660_a");
addMapping("getXPosF", ISound.class, "func_147649_g");
addMapping("getSoundLocation", ISound.class, "func_147650_b");
addMapping("getZPosF", ISound.class, "func_147651_i");
addMapping("getRepeatDelay", ISound.class, "func_147652_d");
addMapping("getVolume", ISound.class, "func_147653_e");
addMapping("getYPosF", ISound.class, "func_147654_h");
addMapping("getPitch", ISound.class, "func_147655_f");
addMapping("getAttenuationType", ISound.class, "func_147656_j");
addMapping("canRepeat", ISound.class, "func_147657_c");
addMapping("getSound", ISound.class, "func_184364_b");
addMapping("getCategory", ISound.class, "func_184365_d");
addMapping("createAccessor", ISound.class, "func_184366_a");
addMapping("cloneEntry", ISoundEventAccessor.class, "func_148720_g");
addMapping("getWeight", ISoundEventAccessor.class, "func_148721_a");
addMapping("soundPlay", ISoundEventListener.class, "func_184067_a");
addMapping("isDonePlaying", ITickableSound.class, "func_147667_k");
addMapping("isDonePlaying", MovingSound.class, "func_147667_k");
addMapping("update", MovingSoundMinecart.class, "func_73660_a");
addMapping("update", MovingSoundMinecartRiding.class, "func_73660_a");
addMapping("playMusic", MusicTicker.class, "func_181558_a");
addMapping("update", MusicTicker.class, "func_73660_a");
addMapping("getXPosF", PositionedSound.class, "func_147649_g");
addMapping("getSoundLocation", PositionedSound.class, "func_147650_b");
addMapping("getZPosF", PositionedSound.class, "func_147651_i");
addMapping("getRepeatDelay", PositionedSound.class, "func_147652_d");
addMapping("getVolume", PositionedSound.class, "func_147653_e");
addMapping("getYPosF", PositionedSound.class, "func_147654_h");
addMapping("getPitch", PositionedSound.class, "func_147655_f");
addMapping("getAttenuationType", PositionedSound.class, "func_147656_j");
addMapping("canRepeat", PositionedSound.class, "func_147657_c");
addMapping("getSound", PositionedSound.class, "func_184364_b");
addMapping("getCategory", PositionedSound.class, "func_184365_d");
addMapping("createAccessor", PositionedSound.class, "func_184366_a");
addMapping("getMusicRecord", PositionedSoundRecord.class, "func_184370_a");
addMapping("getMasterRecord", PositionedSoundRecord.class, "func_184371_a");
addMapping("getRecordSoundRecord", PositionedSoundRecord.class, "func_184372_a");
addMapping("getRecord", PositionedSoundRecord.class, "func_194007_a");
addMapping("cloneEntry", Sound.class, "func_148720_g");
addMapping("getWeight", Sound.class, "func_148721_a");
addMapping("getSoundLocation", Sound.class, "func_188719_a");
addMapping("getSoundAsOggLocation", Sound.class, "func_188721_b");
addMapping("getType", Sound.class, "func_188722_g");
addMapping("isStreaming", Sound.class, "func_188723_h");
addMapping("getVolume", Sound.class, "func_188724_c");
addMapping("getPitch", Sound.class, "func_188725_d");
addMapping("cloneEntry", SoundEventAccessor.class, "func_148720_g");
addMapping("getWeight", SoundEventAccessor.class, "func_148721_a");
addMapping("getSubtitle", SoundEventAccessor.class, "func_188712_c");
addMapping("getLocation", SoundEventAccessor.class, "func_188714_b");
addMapping("addSound", SoundEventAccessor.class, "func_188715_a");
addMapping("onResourceManagerReload", SoundHandler.class, "func_110549_a");
addMapping("playDelayedSound", SoundHandler.class, "func_147681_a");
addMapping("playSound", SoundHandler.class, "func_147682_a");
addMapping("stopSound", SoundHandler.class, "func_147683_b");
addMapping("unloadSounds", SoundHandler.class, "func_147685_d");
addMapping("resumeSounds", SoundHandler.class, "func_147687_e");
addMapping("pauseSounds", SoundHandler.class, "func_147689_b");
addMapping("stopSounds", SoundHandler.class, "func_147690_c");
addMapping("setListener", SoundHandler.class, "func_147691_a");
addMapping("isSoundPlaying", SoundHandler.class, "func_147692_c");
addMapping("loadSoundResource", SoundHandler.class, "func_147693_a");
addMapping("getSoundMap", SoundHandler.class, "func_175085_a");
addMapping("getAccessor", SoundHandler.class, "func_184398_a");
addMapping("setSoundLevel", SoundHandler.class, "func_184399_a");
addMapping("removeListener", SoundHandler.class, "func_184400_b");
addMapping("validateSoundResource", SoundHandler.class, "func_184401_a");
addMapping("addListener", SoundHandler.class, "func_184402_a");
addMapping("stop", SoundHandler.class, "func_189520_a");
addMapping("update", SoundHandler.class, "func_73660_a");
addMapping("canReplaceExisting", SoundList.class, "func_148574_b");
addMapping("getSounds", SoundList.class, "func_188700_a");
addMapping("getSubtitle", SoundList.class, "func_188701_c");
addMapping("deserializeType", SoundListSerializer.class, "func_188732_a");
addMapping("deserializeSounds", SoundListSerializer.class, "func_188733_a");
addMapping("deserializeSound", SoundListSerializer.class, "func_188734_b");
addMapping("reloadSoundSystem", SoundManager.class, "func_148596_a");
addMapping("isSoundPlaying", SoundManager.class, "func_148597_a");
addMapping("playDelayedSound", SoundManager.class, "func_148599_a");
addMapping("stopSound", SoundManager.class, "func_148602_b");
addMapping("resumeAllSounds", SoundManager.class, "func_148604_f");
addMapping("updateAllSounds", SoundManager.class, "func_148605_d");
addMapping("loadSoundSystem", SoundManager.class, "func_148608_i");
addMapping("pauseAllSounds", SoundManager.class, "func_148610_e");
addMapping("playSound", SoundManager.class, "func_148611_c");
addMapping("getURLForSoundResource", SoundManager.class, "func_148612_a");
addMapping("unloadSoundSystem", SoundManager.class, "func_148613_b");
addMapping("stopAllSounds", SoundManager.class, "func_148614_c");
addMapping("setListener", SoundManager.class, "func_148615_a");
addMapping("getVolume", SoundManager.class, "func_188769_a");
addMapping("getClampedVolume", SoundManager.class, "func_188770_e");
addMapping("setVolume", SoundManager.class, "func_188771_a");
addMapping("getClampedPitch", SoundManager.class, "func_188772_d");
addMapping("removeListener", SoundManager.class, "func_188773_b");
addMapping("addListener", SoundManager.class, "func_188774_a");
addMapping("stop", SoundManager.class, "func_189567_a");
addMapping("createUnderlyingMap", SoundRegistry.class, "func_148740_a");
addMapping("clearMap", SoundRegistry.class, "func_148763_c");
addMapping("add", SoundRegistry.class, "func_186803_a");
addMapping("getLocationCape", AbstractClientPlayer.class, "func_110303_q");
addMapping("getDownloadImageSkin", AbstractClientPlayer.class, "func_110304_a");
addMapping("getLocationSkin", AbstractClientPlayer.class, "func_110306_p");
addMapping("getLocationSkin", AbstractClientPlayer.class, "func_110311_f");
addMapping("hasPlayerInfo", AbstractClientPlayer.class, "func_152122_n");
addMapping("hasSkin", AbstractClientPlayer.class, "func_152123_o");
addMapping("isSpectator", AbstractClientPlayer.class, "func_175149_v");
addMapping("getSkinType", AbstractClientPlayer.class, "func_175154_l");
addMapping("getPlayerInfo", AbstractClientPlayer.class, "func_175155_b");
addMapping("getFovModifier", AbstractClientPlayer.class, "func_175156_o");
addMapping("isCreative", AbstractClientPlayer.class, "func_184812_l_");
addMapping("isPlayerInfoSet", AbstractClientPlayer.class, "func_184833_s");
addMapping("getLocationElytra", AbstractClientPlayer.class, "func_184834_t");
addMapping("sendMessage", EntityOtherPlayerMP.class, "func_145747_a");
addMapping("getPosition", EntityOtherPlayerMP.class, "func_180425_c");
addMapping("setPositionAndRotationDirect", EntityOtherPlayerMP.class, "func_180426_a");
addMapping("canUseCommand", EntityOtherPlayerMP.class, "func_70003_b");
addMapping("onUpdate", EntityOtherPlayerMP.class, "func_70071_h_");
addMapping("attackEntityFrom", EntityOtherPlayerMP.class, "func_70097_a");
addMapping("isInRangeToRenderDist", EntityOtherPlayerMP.class, "func_70112_a");
addMapping("onLivingUpdate", EntityOtherPlayerMP.class, "func_70636_d");
addMapping("isRidingHorse", EntityPlayerSP.class, "func_110317_t");
addMapping("sendHorseJump", EntityPlayerSP.class, "func_110318_g");
addMapping("getHorseJumpPower", EntityPlayerSP.class, "func_110319_bJ");
addMapping("getServerBrand", EntityPlayerSP.class, "func_142021_k");
addMapping("sendMessage", EntityPlayerSP.class, "func_145747_a");
addMapping("pushOutOfBlocks", EntityPlayerSP.class, "func_145771_j");
addMapping("sendStatusMessage", EntityPlayerSP.class, "func_146105_b");
addMapping("getStatFileWriter", EntityPlayerSP.class, "func_146107_m");
addMapping("openEditSign", EntityPlayerSP.class, "func_175141_a");
addMapping("isUser", EntityPlayerSP.class, "func_175144_cb");
addMapping("setServerBrand", EntityPlayerSP.class, "func_175158_f");
addMapping("closeScreenAndDropStack", EntityPlayerSP.class, "func_175159_q");
addMapping("isCurrentViewEntity", EntityPlayerSP.class, "func_175160_A");
addMapping("onUpdateWalkingPlayer", EntityPlayerSP.class, "func_175161_p");
addMapping("isOpenBlockSpace", EntityPlayerSP.class, "func_175162_d");
addMapping("sendHorseInventory", EntityPlayerSP.class, "func_175163_u");
addMapping("getPosition", EntityPlayerSP.class, "func_180425_c");
addMapping("displayGui", EntityPlayerSP.class, "func_180468_a");
addMapping("displayVillagerTradeGui", EntityPlayerSP.class, "func_180472_a");
addMapping("playSound", EntityPlayerSP.class, "func_184185_a");
addMapping("startRiding", EntityPlayerSP.class, "func_184205_a");
addMapping("notifyDataManagerChange", EntityPlayerSP.class, "func_184206_a");
addMapping("dismountRidingEntity", EntityPlayerSP.class, "func_184210_p");
addMapping("isHandActive", EntityPlayerSP.class, "func_184587_cr");
addMapping("removeActivePotionEffect", EntityPlayerSP.class, "func_184596_c");
addMapping("setActiveHand", EntityPlayerSP.class, "func_184598_c");
addMapping("getActiveHand", EntityPlayerSP.class, "func_184600_cs");
addMapping("resetActiveHand", EntityPlayerSP.class, "func_184602_cy");
addMapping("swingArm", EntityPlayerSP.class, "func_184609_a");
addMapping("displayGuiEditCommandCart", EntityPlayerSP.class, "func_184809_a");
addMapping("openBook", EntityPlayerSP.class, "func_184814_a");
addMapping("dropItemAndGetStack", EntityPlayerSP.class, "func_184816_a");
addMapping("displayGuiCommandBlock", EntityPlayerSP.class, "func_184824_a");
addMapping("openGuiHorseInventory", EntityPlayerSP.class, "func_184826_a");
addMapping("isRowingBoat", EntityPlayerSP.class, "func_184838_M");
addMapping("setPermissionLevel", EntityPlayerSP.class, "func_184839_n");
addMapping("getPermissionLevel", EntityPlayerSP.class, "func_184840_I");
addMapping("openEditStructure", EntityPlayerSP.class, "func_189807_a");
addMapping("isAutoJumpEnabled", EntityPlayerSP.class, "func_189809_N");
addMapping("updateAutoJump", EntityPlayerSP.class, "func_189810_i");
addMapping("getRecipeBook", EntityPlayerSP.class, "func_192035_E");
addMapping("removeRecipeHighlight", EntityPlayerSP.class, "func_193103_a");
addMapping("canUseCommand", EntityPlayerSP.class, "func_70003_b");
addMapping("setSprinting", EntityPlayerSP.class, "func_70031_b");
addMapping("onUpdate", EntityPlayerSP.class, "func_70071_h_");
addMapping("move", EntityPlayerSP.class, "func_70091_d");
addMapping("isSneaking", EntityPlayerSP.class, "func_70093_af");
addMapping("attackEntityFrom", EntityPlayerSP.class, "func_70097_a");
addMapping("updateRidden", EntityPlayerSP.class, "func_70098_U");
addMapping("handleStatusUpdate", EntityPlayerSP.class, "func_70103_a");
addMapping("isServerWorld", EntityPlayerSP.class, "func_70613_aW");
addMapping("updateEntityActionState", EntityPlayerSP.class, "func_70626_be");
addMapping("onLivingUpdate", EntityPlayerSP.class, "func_70636_d");
addMapping("damageEntity", EntityPlayerSP.class, "func_70665_d");
addMapping("getLook", EntityPlayerSP.class, "func_70676_i");
addMapping("heal", EntityPlayerSP.class, "func_70691_i");
addMapping("respawnPlayer", EntityPlayerSP.class, "func_71004_bE");
addMapping("displayGUIChest", EntityPlayerSP.class, "func_71007_a");
addMapping("onCriticalHit", EntityPlayerSP.class, "func_71009_b");
addMapping("sendPlayerAbilities", EntityPlayerSP.class, "func_71016_p");
addMapping("dropItem", EntityPlayerSP.class, "func_71040_bB");
addMapping("onEnchantmentCritical", EntityPlayerSP.class, "func_71047_c");
addMapping("closeScreen", EntityPlayerSP.class, "func_71053_j");
addMapping("addStat", EntityPlayerSP.class, "func_71064_a");
addMapping("setPlayerSPHealth", EntityPlayerSP.class, "func_71150_b");
addMapping("setXPStats", EntityPlayerSP.class, "func_71152_a");
addMapping("sendChatMessage", EntityPlayerSP.class, "func_71165_d");
addMapping("setPercent", BossInfoClient.class, "func_186735_a");
addMapping("getPercent", BossInfoClient.class, "func_186738_f");
addMapping("updateFromPacket", BossInfoClient.class, "func_186765_a");
addMapping("getChatComponent", ChatLine.class, "func_151461_a");
addMapping("getChatLineID", ChatLine.class, "func_74539_c");
addMapping("getUpdatedCounter", ChatLine.class, "func_74540_b");
addMapping("onResourceManagerReload", FontRenderer.class, "func_110549_a");
addMapping("getUnicodePageLocation", FontRenderer.class, "func_111271_a");
addMapping("readFontTexture", FontRenderer.class, "func_111272_d");
addMapping("bidiReorder", FontRenderer.class, "func_147647_b");
addMapping("drawStringWithShadow", FontRenderer.class, "func_175063_a");
addMapping("getColorCode", FontRenderer.class, "func_175064_b");
addMapping("drawString", FontRenderer.class, "func_175065_a");
addMapping("renderString", FontRenderer.class, "func_180455_b");
addMapping("renderChar", FontRenderer.class, "func_181559_a");
addMapping("renderStringAtPos", FontRenderer.class, "func_78255_a");
addMapping("getStringWidth", FontRenderer.class, "func_78256_a");
addMapping("loadGlyphTexture", FontRenderer.class, "func_78257_a");
addMapping("sizeStringToWidth", FontRenderer.class, "func_78259_e");
addMapping("getBidiFlag", FontRenderer.class, "func_78260_a");
addMapping("trimStringToWidth", FontRenderer.class, "func_78262_a");
addMapping("getCharWidth", FontRenderer.class, "func_78263_a");
addMapping("setUnicodeFlag", FontRenderer.class, "func_78264_a");
addMapping("resetStyles", FontRenderer.class, "func_78265_b");
addMapping("renderDefaultChar", FontRenderer.class, "func_78266_a");
addMapping("getWordWrappedHeight", FontRenderer.class, "func_78267_b");
addMapping("renderSplitString", FontRenderer.class, "func_78268_b");
addMapping("trimStringToWidth", FontRenderer.class, "func_78269_a");
addMapping("isFormatSpecial", FontRenderer.class, "func_78270_c");
addMapping("listFormattedStringToWidth", FontRenderer.class, "func_78271_c");
addMapping("isFormatColor", FontRenderer.class, "func_78272_b");
addMapping("trimStringNewline", FontRenderer.class, "func_78273_d");
addMapping("renderStringAligned", FontRenderer.class, "func_78274_b");
addMapping("setBidiFlag", FontRenderer.class, "func_78275_b");
addMapping("drawString", FontRenderer.class, "func_78276_b");
addMapping("renderUnicodeChar", FontRenderer.class, "func_78277_a");
addMapping("drawSplitString", FontRenderer.class, "func_78279_b");
addMapping("wrapFormattedStringToWidth", FontRenderer.class, "func_78280_d");
addMapping("getFormatFromString", FontRenderer.class, "func_78282_e");
addMapping("getUnicodeFlag", FontRenderer.class, "func_82883_a");
addMapping("readGlyphSizes", FontRenderer.class, "func_98306_d");
addMapping("drawModalRectWithCustomSizedTexture", Gui.class, "func_146110_a");
addMapping("drawScaledCustomSizeModalRect", Gui.class, "func_152125_a");
addMapping("drawTexturedModalRect", Gui.class, "func_175174_a");
addMapping("drawTexturedModalRect", Gui.class, "func_175175_a");
addMapping("drawVerticalLine", Gui.class, "func_73728_b");
addMapping("drawTexturedModalRect", Gui.class, "func_73729_b");
addMapping("drawHorizontalLine", Gui.class, "func_73730_a");
addMapping("drawString", Gui.class, "func_73731_b");
addMapping("drawCenteredString", Gui.class, "func_73732_a");
addMapping("drawGradientRect", Gui.class, "func_73733_a");
addMapping("drawRect", Gui.class, "func_73734_a");
addMapping("renderBossHealth", GuiBossOverlay.class, "func_184051_a");
addMapping("render", GuiBossOverlay.class, "func_184052_a");
addMapping("shouldDarkenSky", GuiBossOverlay.class, "func_184053_e");
addMapping("shouldPlayEndBossMusic", GuiBossOverlay.class, "func_184054_d");
addMapping("read", GuiBossOverlay.class, "func_184055_a");
addMapping("shouldCreateFog", GuiBossOverlay.class, "func_184056_f");
addMapping("clearBossInfos", GuiBossOverlay.class, "func_184057_b");
addMapping("drawButtonForegroundLayer", GuiButton.class, "func_146111_b");
addMapping("playPressSound", GuiButton.class, "func_146113_a");
addMapping("getHoverState", GuiButton.class, "func_146114_a");
addMapping("isMouseOver", GuiButton.class, "func_146115_a");
addMapping("mousePressed", GuiButton.class, "func_146116_c");
addMapping("getButtonWidth", GuiButton.class, "func_146117_b");
addMapping("mouseReleased", GuiButton.class, "func_146118_a");
addMapping("mouseDragged", GuiButton.class, "func_146119_b");
addMapping("setWidth", GuiButton.class, "func_175211_a");
addMapping("drawButton", GuiButton.class, "func_191745_a");
addMapping("drawButton", GuiButtonImage.class, "func_191745_a");
addMapping("setPosition", GuiButtonImage.class, "func_191746_c");
addMapping("drawButton", GuiButtonLanguage.class, "func_191745_a");
addMapping("getHoverState", GuiButtonRealmsProxy.class, "func_146114_a");
addMapping("mousePressed", GuiButtonRealmsProxy.class, "func_146116_c");
addMapping("getButtonWidth", GuiButtonRealmsProxy.class, "func_146117_b");
addMapping("mouseReleased", GuiButtonRealmsProxy.class, "func_146118_a");
addMapping("mouseDragged", GuiButtonRealmsProxy.class, "func_146119_b");
addMapping("setText", GuiButtonRealmsProxy.class, "func_154311_a");
addMapping("getYImage", GuiButtonRealmsProxy.class, "func_154312_c");
addMapping("setEnabled", GuiButtonRealmsProxy.class, "func_154313_b");
addMapping("getId", GuiButtonRealmsProxy.class, "func_154314_d");
addMapping("getEnabled", GuiButtonRealmsProxy.class, "func_154315_e");
addMapping("getPositionY", GuiButtonRealmsProxy.class, "func_154316_f");
addMapping("getRealmsButton", GuiButtonRealmsProxy.class, "func_154317_g");
addMapping("getHeight", GuiButtonRealmsProxy.class, "func_175232_g");
addMapping("drawButton", GuiButtonToggle.class, "func_191745_a");
addMapping("initTextureValues", GuiButtonToggle.class, "func_191751_a");
addMapping("setPosition", GuiButtonToggle.class, "func_191752_c");
addMapping("setStateTriggered", GuiButtonToggle.class, "func_191753_b");
addMapping("isStateTriggered", GuiButtonToggle.class, "func_191754_c");
addMapping("handleMouseInput", GuiChat.class, "func_146274_d");
addMapping("onGuiClosed", GuiChat.class, "func_146281_b");
addMapping("getSentHistory", GuiChat.class, "func_146402_a");
addMapping("setText", GuiChat.class, "func_175274_a");
addMapping("setCompletions", GuiChat.class, "func_184072_a");
addMapping("drawScreen", GuiChat.class, "func_73863_a");
addMapping("mouseClicked", GuiChat.class, "func_73864_a");
addMapping("initGui", GuiChat.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiChat.class, "func_73868_f");
addMapping("keyTyped", GuiChat.class, "func_73869_a");
addMapping("updateScreen", GuiChat.class, "func_73876_c");
addMapping("drawBackground", GuiClickableScrolledSelectionListProxy.class, "func_148123_a");
addMapping("getSize", GuiClickableScrolledSelectionListProxy.class, "func_148127_b");
addMapping("isSelected", GuiClickableScrolledSelectionListProxy.class, "func_148131_a");
addMapping("getScrollBarX", GuiClickableScrolledSelectionListProxy.class, "func_148137_d");
addMapping("getContentHeight", GuiClickableScrolledSelectionListProxy.class, "func_148138_e");
addMapping("elementClicked", GuiClickableScrolledSelectionListProxy.class, "func_148144_a");
addMapping("handleMouseInput", GuiClickableScrolledSelectionListProxy.class, "func_178039_p");
addMapping("mouseY", GuiClickableScrolledSelectionListProxy.class, "func_178042_f");
addMapping("renderSelected", GuiClickableScrolledSelectionListProxy.class, "func_178043_a");
addMapping("width", GuiClickableScrolledSelectionListProxy.class, "func_178044_e");
addMapping("mouseX", GuiClickableScrolledSelectionListProxy.class, "func_178045_g");
addMapping("drawSlot", GuiClickableScrolledSelectionListProxy.class, "func_192637_a");
addMapping("drawSelectionBox", GuiClickableScrolledSelectionListProxy.class, "func_192638_a");
addMapping("onGuiClosed", GuiCommandBlock.class, "func_146281_b");
addMapping("actionPerformed", GuiCommandBlock.class, "func_146284_a");
addMapping("updateCmdOutput", GuiCommandBlock.class, "func_175388_a");
addMapping("setCompletions", GuiCommandBlock.class, "func_184072_a");
addMapping("updateMode", GuiCommandBlock.class, "func_184073_g");
addMapping("nextMode", GuiCommandBlock.class, "func_184074_h");
addMapping("updateGui", GuiCommandBlock.class, "func_184075_a");
addMapping("updateAutoExec", GuiCommandBlock.class, "func_184076_j");
addMapping("updateConditional", GuiCommandBlock.class, "func_184077_i");
addMapping("drawScreen", GuiCommandBlock.class, "func_73863_a");
addMapping("mouseClicked", GuiCommandBlock.class, "func_73864_a");
addMapping("initGui", GuiCommandBlock.class, "func_73866_w_");
addMapping("keyTyped", GuiCommandBlock.class, "func_73869_a");
addMapping("updateScreen", GuiCommandBlock.class, "func_73876_c");
addMapping("actionPerformed", GuiConfirmOpenLink.class, "func_146284_a");
addMapping("disableSecurityWarning", GuiConfirmOpenLink.class, "func_146358_g");
addMapping("copyLinkToClipboard", GuiConfirmOpenLink.class, "func_146359_e");
addMapping("drawScreen", GuiConfirmOpenLink.class, "func_73863_a");
addMapping("initGui", GuiConfirmOpenLink.class, "func_73866_w_");
addMapping("handleMouseInput", GuiControls.class, "func_146274_d");
addMapping("actionPerformed", GuiControls.class, "func_146284_a");
addMapping("mouseReleased", GuiControls.class, "func_146286_b");
addMapping("drawScreen", GuiControls.class, "func_73863_a");
addMapping("mouseClicked", GuiControls.class, "func_73864_a");
addMapping("initGui", GuiControls.class, "func_73866_w_");
addMapping("keyTyped", GuiControls.class, "func_73869_a");
addMapping("handleMouseInput", GuiCreateFlatWorld.class, "func_146274_d");
addMapping("actionPerformed", GuiCreateFlatWorld.class, "func_146284_a");
addMapping("onLayersChanged", GuiCreateFlatWorld.class, "func_146375_g");
addMapping("hasSelectedLayer", GuiCreateFlatWorld.class, "func_146382_i");
addMapping("setPreset", GuiCreateFlatWorld.class, "func_146383_a");
addMapping("getPreset", GuiCreateFlatWorld.class, "func_146384_e");
addMapping("drawScreen", GuiCreateFlatWorld.class, "func_73863_a");
addMapping("initGui", GuiCreateFlatWorld.class, "func_73866_w_");
addMapping("onGuiClosed", GuiCreateWorld.class, "func_146281_b");
addMapping("actionPerformed", GuiCreateWorld.class, "func_146284_a");
addMapping("calcSaveDirName", GuiCreateWorld.class, "func_146314_g");
addMapping("toggleMoreWorldOptions", GuiCreateWorld.class, "func_146315_i");
addMapping("showMoreWorldOptions", GuiCreateWorld.class, "func_146316_a");
addMapping("getUncollidingSaveDirName", GuiCreateWorld.class, "func_146317_a");
addMapping("recreateFromExistingWorld", GuiCreateWorld.class, "func_146318_a");
addMapping("updateDisplayState", GuiCreateWorld.class, "func_146319_h");
addMapping("canSelectCurWorldType", GuiCreateWorld.class, "func_175299_g");
addMapping("drawScreen", GuiCreateWorld.class, "func_73863_a");
addMapping("mouseClicked", GuiCreateWorld.class, "func_73864_a");
addMapping("initGui", GuiCreateWorld.class, "func_73866_w_");
addMapping("keyTyped", GuiCreateWorld.class, "func_73869_a");
addMapping("updateScreen", GuiCreateWorld.class, "func_73876_c");
addMapping("actionPerformed", GuiCustomizeSkin.class, "func_146284_a");
addMapping("getMessage", GuiCustomizeSkin.class, "func_175358_a");
addMapping("drawScreen", GuiCustomizeSkin.class, "func_73863_a");
addMapping("initGui", GuiCustomizeSkin.class, "func_73866_w_");
addMapping("keyTyped", GuiCustomizeSkin.class, "func_73869_a");
addMapping("handleMouseInput", GuiCustomizeWorldScreen.class, "func_146274_d");
addMapping("actionPerformed", GuiCustomizeWorldScreen.class, "func_146284_a");
addMapping("mouseReleased", GuiCustomizeWorldScreen.class, "func_146286_b");
addMapping("getText", GuiCustomizeWorldScreen.class, "func_175318_a");
addMapping("setEntryValue", GuiCustomizeWorldScreen.class, "func_175319_a");
addMapping("setEntryValue", GuiCustomizeWorldScreen.class, "func_175320_a");
addMapping("setEntryValue", GuiCustomizeWorldScreen.class, "func_175321_a");
addMapping("enterConfirmation", GuiCustomizeWorldScreen.class, "func_175322_b");
addMapping("saveValues", GuiCustomizeWorldScreen.class, "func_175323_a");
addMapping("loadValues", GuiCustomizeWorldScreen.class, "func_175324_a");
addMapping("createPagedList", GuiCustomizeWorldScreen.class, "func_175325_f");
addMapping("restoreDefaults", GuiCustomizeWorldScreen.class, "func_175326_g");
addMapping("modifyFocusValue", GuiCustomizeWorldScreen.class, "func_175327_a");
addMapping("updatePageControls", GuiCustomizeWorldScreen.class, "func_175328_i");
addMapping("setConfirmationControls", GuiCustomizeWorldScreen.class, "func_175329_a");
addMapping("getFormattedValue", GuiCustomizeWorldScreen.class, "func_175330_b");
addMapping("exitConfirmation", GuiCustomizeWorldScreen.class, "func_175331_h");
addMapping("setSettingsModified", GuiCustomizeWorldScreen.class, "func_181031_a");
addMapping("drawScreen", GuiCustomizeWorldScreen.class, "func_73863_a");
addMapping("mouseClicked", GuiCustomizeWorldScreen.class, "func_73864_a");
addMapping("initGui", GuiCustomizeWorldScreen.class, "func_73866_w_");
addMapping("keyTyped", GuiCustomizeWorldScreen.class, "func_73869_a");
addMapping("actionPerformed", GuiDisconnected.class, "func_146284_a");
addMapping("drawScreen", GuiDisconnected.class, "func_73863_a");
addMapping("initGui", GuiDisconnected.class, "func_73866_w_");
addMapping("keyTyped", GuiDisconnected.class, "func_73869_a");
addMapping("drawScreen", GuiDownloadTerrain.class, "func_73863_a");
addMapping("initGui", GuiDownloadTerrain.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiDownloadTerrain.class, "func_73868_f");
addMapping("keyTyped", GuiDownloadTerrain.class, "func_73869_a");
addMapping("updateScreen", GuiDownloadTerrain.class, "func_73876_c");
addMapping("drawGuiContainerBackgroundLayer", GuiEnchantment.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiEnchantment.class, "func_146979_b");
addMapping("tickBook", GuiEnchantment.class, "func_147068_g");
addMapping("drawScreen", GuiEnchantment.class, "func_73863_a");
addMapping("mouseClicked", GuiEnchantment.class, "func_73864_a");
addMapping("updateScreen", GuiEnchantment.class, "func_73876_c");
addMapping("actionPerformed", GuiErrorScreen.class, "func_146284_a");
addMapping("drawScreen", GuiErrorScreen.class, "func_73863_a");
addMapping("initGui", GuiErrorScreen.class, "func_73866_w_");
addMapping("keyTyped", GuiErrorScreen.class, "func_73869_a");
addMapping("handleMouseInput", GuiFlatPresets.class, "func_146274_d");
addMapping("onGuiClosed", GuiFlatPresets.class, "func_146281_b");
addMapping("actionPerformed", GuiFlatPresets.class, "func_146284_a");
addMapping("registerPreset", GuiFlatPresets.class, "func_146421_a");
addMapping("updateButtonValidity", GuiFlatPresets.class, "func_146426_g");
addMapping("hasValidSelection", GuiFlatPresets.class, "func_146430_p");
addMapping("registerPreset", GuiFlatPresets.class, "func_175354_a");
addMapping("drawScreen", GuiFlatPresets.class, "func_73863_a");
addMapping("mouseClicked", GuiFlatPresets.class, "func_73864_a");
addMapping("initGui", GuiFlatPresets.class, "func_73866_w_");
addMapping("keyTyped", GuiFlatPresets.class, "func_73869_a");
addMapping("updateScreen", GuiFlatPresets.class, "func_73876_c");
addMapping("actionPerformed", GuiGameOver.class, "func_146284_a");
addMapping("getClickedComponentAt", GuiGameOver.class, "func_184870_b");
addMapping("drawScreen", GuiGameOver.class, "func_73863_a");
addMapping("initGui", GuiGameOver.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiGameOver.class, "func_73868_f");
addMapping("keyTyped", GuiGameOver.class, "func_73869_a");
addMapping("updateScreen", GuiGameOver.class, "func_73876_c");
addMapping("confirmClicked", GuiGameOver.class, "func_73878_a");
addMapping("drawGuiContainerBackgroundLayer", GuiHopper.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiHopper.class, "func_146979_b");
addMapping("drawScreen", GuiHopper.class, "func_73863_a");
addMapping("setOverlayMessage", GuiIngame.class, "func_110326_a");
addMapping("getChatGUI", GuiIngame.class, "func_146158_b");
addMapping("renderExpBar", GuiIngame.class, "func_175176_b");
addMapping("setDefaultTitlesTimes", GuiIngame.class, "func_175177_a");
addMapping("displayTitle", GuiIngame.class, "func_175178_a");
addMapping("getFontRenderer", GuiIngame.class, "func_175179_f");
addMapping("renderGameOverlay", GuiIngame.class, "func_175180_a");
addMapping("getTabList", GuiIngame.class, "func_175181_h");
addMapping("renderDemo", GuiIngame.class, "func_175185_b");
addMapping("renderHorseJumpBar", GuiIngame.class, "func_175186_a");
addMapping("getSpectatorGui", GuiIngame.class, "func_175187_g");
addMapping("setOverlayMessage", GuiIngame.class, "func_175188_a");
addMapping("renderPortal", GuiIngame.class, "func_180474_b");
addMapping("renderScoreboard", GuiIngame.class, "func_180475_a");
addMapping("renderPumpkinOverlay", GuiIngame.class, "func_180476_e");
addMapping("renderPlayerStats", GuiIngame.class, "func_180477_d");
addMapping("renderHotbar", GuiIngame.class, "func_180479_a");
addMapping("renderVignette", GuiIngame.class, "func_180480_a");
addMapping("resetPlayersOverlayFooterHeader", GuiIngame.class, "func_181029_i");
addMapping("renderSelectedItem", GuiIngame.class, "func_181551_a");
addMapping("renderHotbarItem", GuiIngame.class, "func_184044_a");
addMapping("renderAttackIndicator", GuiIngame.class, "func_184045_a");
addMapping("getBossOverlay", GuiIngame.class, "func_184046_j");
addMapping("renderMountHealth", GuiIngame.class, "func_184047_e");
addMapping("renderPotionEffects", GuiIngame.class, "func_184048_a");
addMapping("addChatMessage", GuiIngame.class, "func_191742_a");
addMapping("updateTick", GuiIngame.class, "func_73831_a");
addMapping("setRecordPlayingMessage", GuiIngame.class, "func_73833_a");
addMapping("getUpdateCounter", GuiIngame.class, "func_73834_c");
addMapping("actionPerformed", GuiIngameMenu.class, "func_146284_a");
addMapping("drawScreen", GuiIngameMenu.class, "func_73863_a");
addMapping("initGui", GuiIngameMenu.class, "func_73866_w_");
addMapping("updateScreen", GuiIngameMenu.class, "func_73876_c");
addMapping("getSize", GuiKeyBindingList.class, "func_148127_b");
addMapping("getScrollBarX", GuiKeyBindingList.class, "func_148137_d");
addMapping("getListWidth", GuiKeyBindingList.class, "func_148139_c");
addMapping("getListEntry", GuiKeyBindingList.class, "func_148180_b");
addMapping("drawLabel", GuiLabel.class, "func_146159_a");
addMapping("drawLabelBackground", GuiLabel.class, "func_146160_b");
addMapping("addLine", GuiLabel.class, "func_175202_a");
addMapping("setCentered", GuiLabel.class, "func_175203_a");
addMapping("handleMouseInput", GuiLanguage.class, "func_146274_d");
addMapping("actionPerformed", GuiLanguage.class, "func_146284_a");
addMapping("drawScreen", GuiLanguage.class, "func_73863_a");
addMapping("initGui", GuiLanguage.class, "func_73866_w_");
addMapping("mousePressed", GuiListButton.class, "func_146116_c");
addMapping("setValue", GuiListButton.class, "func_175212_b");
addMapping("buildDisplayString", GuiListButton.class, "func_175213_c");
addMapping("drawBackground", GuiListExtended.class, "func_148123_a");
addMapping("isSelected", GuiListExtended.class, "func_148131_a");
addMapping("elementClicked", GuiListExtended.class, "func_148144_a");
addMapping("mouseClicked", GuiListExtended.class, "func_148179_a");
addMapping("getListEntry", GuiListExtended.class, "func_148180_b");
addMapping("mouseReleased", GuiListExtended.class, "func_148181_b");
addMapping("drawSlot", GuiListExtended.class, "func_192637_a");
addMapping("updateItemPos", GuiListExtended.class, "func_192639_a");
addMapping("getSize", GuiListWorldSelection.class, "func_148127_b");
addMapping("isSelected", GuiListWorldSelection.class, "func_148131_a");
addMapping("getScrollBarX", GuiListWorldSelection.class, "func_148137_d");
addMapping("getListWidth", GuiListWorldSelection.class, "func_148139_c");
addMapping("getListEntry", GuiListWorldSelection.class, "func_148180_b");
addMapping("selectWorld", GuiListWorldSelection.class, "func_186792_d");
addMapping("getSelectedWorld", GuiListWorldSelection.class, "func_186794_f");
addMapping("refreshList", GuiListWorldSelection.class, "func_186795_e");
addMapping("getGuiWorldSelection", GuiListWorldSelection.class, "func_186796_g");
addMapping("mouseReleased", GuiListWorldSelectionEntry.class, "func_148277_b");
addMapping("mousePressed", GuiListWorldSelectionEntry.class, "func_148278_a");
addMapping("loadServerIcon", GuiListWorldSelectionEntry.class, "func_186769_f");
addMapping("joinWorld", GuiListWorldSelectionEntry.class, "func_186774_a");
addMapping("deleteWorld", GuiListWorldSelectionEntry.class, "func_186776_b");
addMapping("loadWorld", GuiListWorldSelectionEntry.class, "func_186777_e");
addMapping("editWorld", GuiListWorldSelectionEntry.class, "func_186778_c");
addMapping("recreateWorld", GuiListWorldSelectionEntry.class, "func_186779_d");
addMapping("updatePosition", GuiListWorldSelectionEntry.class, "func_192633_a");
addMapping("drawEntry", GuiListWorldSelectionEntry.class, "func_192634_a");
addMapping("setLocked", GuiLockIconButton.class, "func_175229_b");
addMapping("isLocked", GuiLockIconButton.class, "func_175230_c");
addMapping("drawButton", GuiLockIconButton.class, "func_191745_a");
addMapping("switchToRealms", GuiMainMenu.class, "func_140005_i");
addMapping("onGuiClosed", GuiMainMenu.class, "func_146281_b");
addMapping("actionPerformed", GuiMainMenu.class, "func_146284_a");
addMapping("areRealmsNotificationsEnabled", GuiMainMenu.class, "func_183501_a");
addMapping("drawScreen", GuiMainMenu.class, "func_73863_a");
addMapping("mouseClicked", GuiMainMenu.class, "func_73864_a");
addMapping("initGui", GuiMainMenu.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiMainMenu.class, "func_73868_f");
addMapping("keyTyped", GuiMainMenu.class, "func_73869_a");
addMapping("updateScreen", GuiMainMenu.class, "func_73876_c");
addMapping("confirmClicked", GuiMainMenu.class, "func_73878_a");
addMapping("rotateAndBlurSkybox", GuiMainMenu.class, "func_73968_a");
addMapping("addSingleplayerMultiplayerButtons", GuiMainMenu.class, "func_73969_a");
addMapping("drawPanorama", GuiMainMenu.class, "func_73970_b");
addMapping("renderSkybox", GuiMainMenu.class, "func_73971_c");
addMapping("addDemoButtons", GuiMainMenu.class, "func_73972_b");
addMapping("actionPerformed", GuiMemoryErrorScreen.class, "func_146284_a");
addMapping("drawScreen", GuiMemoryErrorScreen.class, "func_73863_a");
addMapping("initGui", GuiMemoryErrorScreen.class, "func_73866_w_");
addMapping("keyTyped", GuiMemoryErrorScreen.class, "func_73869_a");
addMapping("actionPerformed", GuiMerchant.class, "func_146284_a");
addMapping("drawGuiContainerBackgroundLayer", GuiMerchant.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiMerchant.class, "func_146979_b");
addMapping("getMerchant", GuiMerchant.class, "func_147035_g");
addMapping("drawScreen", GuiMerchant.class, "func_73863_a");
addMapping("initGui", GuiMerchant.class, "func_73866_w_");
addMapping("updateScreen", GuiMerchant.class, "func_73876_c");
addMapping("handleMouseInput", GuiMultiplayer.class, "func_146274_d");
addMapping("onGuiClosed", GuiMultiplayer.class, "func_146281_b");
addMapping("actionPerformed", GuiMultiplayer.class, "func_146284_a");
addMapping("mouseReleased", GuiMultiplayer.class, "func_146286_b");
addMapping("getOldServerPinger", GuiMultiplayer.class, "func_146789_i");
addMapping("selectServer", GuiMultiplayer.class, "func_146790_a");
addMapping("connectToServer", GuiMultiplayer.class, "func_146791_a");
addMapping("refreshServerList", GuiMultiplayer.class, "func_146792_q");
addMapping("setHoveringText", GuiMultiplayer.class, "func_146793_a");
addMapping("createButtons", GuiMultiplayer.class, "func_146794_g");
addMapping("getServerList", GuiMultiplayer.class, "func_146795_p");
addMapping("connectToSelected", GuiMultiplayer.class, "func_146796_h");
addMapping("moveServerUp", GuiMultiplayer.class, "func_175391_a");
addMapping("canMoveUp", GuiMultiplayer.class, "func_175392_a");
addMapping("moveServerDown", GuiMultiplayer.class, "func_175393_b");
addMapping("canMoveDown", GuiMultiplayer.class, "func_175394_b");
addMapping("drawScreen", GuiMultiplayer.class, "func_73863_a");
addMapping("mouseClicked", GuiMultiplayer.class, "func_73864_a");
addMapping("initGui", GuiMultiplayer.class, "func_73866_w_");
addMapping("keyTyped", GuiMultiplayer.class, "func_73869_a");
addMapping("updateScreen", GuiMultiplayer.class, "func_73876_c");
addMapping("confirmClicked", GuiMultiplayer.class, "func_73878_a");
addMapping("printChatMessage", GuiNewChat.class, "func_146227_a");
addMapping("getChatWidth", GuiNewChat.class, "func_146228_f");
addMapping("scroll", GuiNewChat.class, "func_146229_b");
addMapping("drawChat", GuiNewChat.class, "func_146230_a");
addMapping("clearChatMessages", GuiNewChat.class, "func_146231_a");
addMapping("getLineCount", GuiNewChat.class, "func_146232_i");
addMapping("calculateChatboxWidth", GuiNewChat.class, "func_146233_a");
addMapping("printChatMessageWithOptionalDeletion", GuiNewChat.class, "func_146234_a");
addMapping("getChatComponent", GuiNewChat.class, "func_146236_a");
addMapping("setChatLine", GuiNewChat.class, "func_146237_a");
addMapping("getSentMessages", GuiNewChat.class, "func_146238_c");
addMapping("addToSentMessages", GuiNewChat.class, "func_146239_a");
addMapping("resetScroll", GuiNewChat.class, "func_146240_d");
addMapping("getChatOpen", GuiNewChat.class, "func_146241_e");
addMapping("deleteChatLine", GuiNewChat.class, "func_146242_c");
addMapping("calculateChatboxHeight", GuiNewChat.class, "func_146243_b");
addMapping("getChatScale", GuiNewChat.class, "func_146244_h");
addMapping("refreshChat", GuiNewChat.class, "func_146245_b");
addMapping("getChatHeight", GuiNewChat.class, "func_146246_g");
addMapping("getOption", GuiOptionButton.class, "func_146136_c");
addMapping("getHoverState", GuiOptionSlider.class, "func_146114_a");
addMapping("mousePressed", GuiOptionSlider.class, "func_146116_c");
addMapping("mouseReleased", GuiOptionSlider.class, "func_146118_a");
addMapping("mouseDragged", GuiOptionSlider.class, "func_146119_b");
addMapping("actionPerformed", GuiOptions.class, "func_146284_a");
addMapping("getDifficultyText", GuiOptions.class, "func_175355_a");
addMapping("drawScreen", GuiOptions.class, "func_73863_a");
addMapping("initGui", GuiOptions.class, "func_73866_w_");
addMapping("keyTyped", GuiOptions.class, "func_73869_a");
addMapping("confirmClicked", GuiOptions.class, "func_73878_a");
addMapping("getSize", GuiOptionsRowList.class, "func_148127_b");
addMapping("getScrollBarX", GuiOptionsRowList.class, "func_148137_d");
addMapping("getListWidth", GuiOptionsRowList.class, "func_148139_c");
addMapping("getListEntry", GuiOptionsRowList.class, "func_148180_b");
addMapping("createButton", GuiOptionsRowList.class, "func_148182_a");
addMapping("renderDebugInfo", GuiOverlayDebug.class, "func_175237_a");
addMapping("getDebugInfoRight", GuiOverlayDebug.class, "func_175238_c");
addMapping("renderDebugInfoRight", GuiOverlayDebug.class, "func_175239_b");
addMapping("bytesToMb", GuiOverlayDebug.class, "func_175240_a");
addMapping("renderDebugInfoLeft", GuiOverlayDebug.class, "func_180798_a");
addMapping("getFrameColor", GuiOverlayDebug.class, "func_181552_c");
addMapping("blendColors", GuiOverlayDebug.class, "func_181553_a");
addMapping("renderLagometer", GuiOverlayDebug.class, "func_181554_e");
addMapping("getSize", GuiPageButtonList.class, "func_148127_b");
addMapping("getScrollBarX", GuiPageButtonList.class, "func_148137_d");
addMapping("getListWidth", GuiPageButtonList.class, "func_148139_c");
addMapping("mouseClicked", GuiPageButtonList.class, "func_148179_a");
addMapping("getListEntry", GuiPageButtonList.class, "func_148180_b");
addMapping("populateEntries", GuiPageButtonList.class, "func_178055_t");
addMapping("getFocusedControl", GuiPageButtonList.class, "func_178056_g");
addMapping("getPageCount", GuiPageButtonList.class, "func_178057_f");
addMapping("createEntry", GuiPageButtonList.class, "func_178058_a");
addMapping("getPage", GuiPageButtonList.class, "func_178059_e");
addMapping("markVisibility", GuiPageButtonList.class, "func_178060_e");
addMapping("getComponent", GuiPageButtonList.class, "func_178061_c");
addMapping("onKeyPressed", GuiPageButtonList.class, "func_178062_a");
addMapping("createLabel", GuiPageButtonList.class, "func_178063_a");
addMapping("nextPage", GuiPageButtonList.class, "func_178064_i");
addMapping("createButton", GuiPageButtonList.class, "func_178065_a");
addMapping("setComponentVisibility", GuiPageButtonList.class, "func_178066_a");
addMapping("createSlider", GuiPageButtonList.class, "func_178067_a");
addMapping("createTextField", GuiPageButtonList.class, "func_178068_a");
addMapping("populateComponents", GuiPageButtonList.class, "func_178069_s");
addMapping("previousPage", GuiPageButtonList.class, "func_178071_h");
addMapping("setActive", GuiPageButtonList.class, "func_181155_a");
addMapping("setPage", GuiPageButtonList.class, "func_181156_c");
addMapping("getPlayerName", GuiPlayerTabOverlay.class, "func_175243_a");
addMapping("setHeader", GuiPlayerTabOverlay.class, "func_175244_b");
addMapping("drawPing", GuiPlayerTabOverlay.class, "func_175245_a");
addMapping("updatePlayerList", GuiPlayerTabOverlay.class, "func_175246_a");
addMapping("drawScoreboardValues", GuiPlayerTabOverlay.class, "func_175247_a");
addMapping("setFooter", GuiPlayerTabOverlay.class, "func_175248_a");
addMapping("renderPlayerlist", GuiPlayerTabOverlay.class, "func_175249_a");
addMapping("resetFooterHeader", GuiPlayerTabOverlay.class, "func_181030_a");
addMapping("onGuiClosed", GuiRepair.class, "func_146281_b");
addMapping("drawGuiContainerBackgroundLayer", GuiRepair.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiRepair.class, "func_146979_b");
addMapping("renameItem", GuiRepair.class, "func_147090_g");
addMapping("sendAllWindowProperties", GuiRepair.class, "func_175173_a");
addMapping("sendAllContents", GuiRepair.class, "func_71110_a");
addMapping("sendSlotContents", GuiRepair.class, "func_71111_a");
addMapping("sendWindowProperty", GuiRepair.class, "func_71112_a");
addMapping("drawScreen", GuiRepair.class, "func_73863_a");
addMapping("mouseClicked", GuiRepair.class, "func_73864_a");
addMapping("initGui", GuiRepair.class, "func_73866_w_");
addMapping("keyTyped", GuiRepair.class, "func_73869_a");
addMapping("getListHeader", GuiResourcePackAvailable.class, "func_148202_k");
addMapping("getSize", GuiResourcePackList.class, "func_148127_b");
addMapping("drawListHeader", GuiResourcePackList.class, "func_148129_a");
addMapping("getScrollBarX", GuiResourcePackList.class, "func_148137_d");
addMapping("getListWidth", GuiResourcePackList.class, "func_148139_c");
addMapping("getListEntry", GuiResourcePackList.class, "func_148180_b");
addMapping("getList", GuiResourcePackList.class, "func_148201_l");
addMapping("getListHeader", GuiResourcePackList.class, "func_148202_k");
addMapping("getListHeader", GuiResourcePackSelected.class, "func_148202_k");
addMapping("handleInput", GuiScreen.class, "func_146269_k");
addMapping("drawWorldBackground", GuiScreen.class, "func_146270_b");
addMapping("isCtrlKeyDown", GuiScreen.class, "func_146271_m");
addMapping("isShiftKeyDown", GuiScreen.class, "func_146272_n");
addMapping("mouseClickMove", GuiScreen.class, "func_146273_a");
addMapping("handleMouseInput", GuiScreen.class, "func_146274_d");
addMapping("setClipboardString", GuiScreen.class, "func_146275_d");
addMapping("drawDefaultBackground", GuiScreen.class, "func_146276_q_");
addMapping("getClipboardString", GuiScreen.class, "func_146277_j");
addMapping("drawBackground", GuiScreen.class, "func_146278_c");
addMapping("drawHoveringText", GuiScreen.class, "func_146279_a");
addMapping("setWorldAndResolution", GuiScreen.class, "func_146280_a");
addMapping("onGuiClosed", GuiScreen.class, "func_146281_b");
addMapping("handleKeyboardInput", GuiScreen.class, "func_146282_l");
addMapping("drawHoveringText", GuiScreen.class, "func_146283_a");
addMapping("actionPerformed", GuiScreen.class, "func_146284_a");
addMapping("renderToolTip", GuiScreen.class, "func_146285_a");
addMapping("mouseReleased", GuiScreen.class, "func_146286_b");
addMapping("handleComponentHover", GuiScreen.class, "func_175272_a");
addMapping("onResize", GuiScreen.class, "func_175273_b");
addMapping("setText", GuiScreen.class, "func_175274_a");
addMapping("sendChatMessage", GuiScreen.class, "func_175275_f");
addMapping("handleComponentClick", GuiScreen.class, "func_175276_a");
addMapping("isKeyComboCtrlX", GuiScreen.class, "func_175277_d");
addMapping("isKeyComboCtrlA", GuiScreen.class, "func_175278_g");
addMapping("isKeyComboCtrlV", GuiScreen.class, "func_175279_e");
addMapping("isKeyComboCtrlC", GuiScreen.class, "func_175280_f");
addMapping("sendChatMessage", GuiScreen.class, "func_175281_b");
addMapping("openWebLink", GuiScreen.class, "func_175282_a");
addMapping("isAltKeyDown", GuiScreen.class, "func_175283_s");
addMapping("setGuiSize", GuiScreen.class, "func_183500_a");
addMapping("addButton", GuiScreen.class, "func_189646_b");
addMapping("getItemToolTip", GuiScreen.class, "func_191927_a");
addMapping("setFocused", GuiScreen.class, "func_193975_a");
addMapping("isFocused", GuiScreen.class, "func_193976_p");
addMapping("drawScreen", GuiScreen.class, "func_73863_a");
addMapping("mouseClicked", GuiScreen.class, "func_73864_a");
addMapping("initGui", GuiScreen.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiScreen.class, "func_73868_f");
addMapping("keyTyped", GuiScreen.class, "func_73869_a");
addMapping("updateScreen", GuiScreen.class, "func_73876_c");
addMapping("confirmClicked", GuiScreen.class, "func_73878_a");
addMapping("onGuiClosed", GuiScreenAddServer.class, "func_146281_b");
addMapping("actionPerformed", GuiScreenAddServer.class, "func_146284_a");
addMapping("drawScreen", GuiScreenAddServer.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenAddServer.class, "func_73864_a");
addMapping("initGui", GuiScreenAddServer.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenAddServer.class, "func_73869_a");
addMapping("updateScreen", GuiScreenAddServer.class, "func_73876_c");
addMapping("onGuiClosed", GuiScreenBook.class, "func_146281_b");
addMapping("actionPerformed", GuiScreenBook.class, "func_146284_a");
addMapping("pageGetCurrent", GuiScreenBook.class, "func_146456_p");
addMapping("pageSetCurrent", GuiScreenBook.class, "func_146457_a");
addMapping("pageInsertIntoCurrent", GuiScreenBook.class, "func_146459_b");
addMapping("keyTypedInTitle", GuiScreenBook.class, "func_146460_c");
addMapping("addNewPage", GuiScreenBook.class, "func_146461_i");
addMapping("sendBookToServer", GuiScreenBook.class, "func_146462_a");
addMapping("keyTypedInBook", GuiScreenBook.class, "func_146463_b");
addMapping("updateButtons", GuiScreenBook.class, "func_146464_h");
addMapping("handleComponentClick", GuiScreenBook.class, "func_175276_a");
addMapping("getClickedComponentAt", GuiScreenBook.class, "func_175385_b");
addMapping("drawScreen", GuiScreenBook.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenBook.class, "func_73864_a");
addMapping("initGui", GuiScreenBook.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenBook.class, "func_73869_a");
addMapping("updateScreen", GuiScreenBook.class, "func_73876_c");
addMapping("handleMouseInput", GuiScreenCustomizePresets.class, "func_146274_d");
addMapping("onGuiClosed", GuiScreenCustomizePresets.class, "func_146281_b");
addMapping("actionPerformed", GuiScreenCustomizePresets.class, "func_146284_a");
addMapping("updateButtonValidity", GuiScreenCustomizePresets.class, "func_175304_a");
addMapping("hasValidSelection", GuiScreenCustomizePresets.class, "func_175305_g");
addMapping("drawScreen", GuiScreenCustomizePresets.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenCustomizePresets.class, "func_73864_a");
addMapping("initGui", GuiScreenCustomizePresets.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenCustomizePresets.class, "func_73869_a");
addMapping("updateScreen", GuiScreenCustomizePresets.class, "func_73876_c");
addMapping("drawDefaultBackground", GuiScreenDemo.class, "func_146276_q_");
addMapping("actionPerformed", GuiScreenDemo.class, "func_146284_a");
addMapping("drawScreen", GuiScreenDemo.class, "func_73863_a");
addMapping("initGui", GuiScreenDemo.class, "func_73866_w_");
addMapping("actionPerformed", GuiScreenOptionsSounds.class, "func_146284_a");
addMapping("getDisplayString", GuiScreenOptionsSounds.class, "func_184097_a");
addMapping("drawScreen", GuiScreenOptionsSounds.class, "func_73863_a");
addMapping("initGui", GuiScreenOptionsSounds.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenOptionsSounds.class, "func_73869_a");
addMapping("drawWorldBackground", GuiScreenRealmsProxy.class, "func_146270_b");
addMapping("mouseClickMove", GuiScreenRealmsProxy.class, "func_146273_a");
addMapping("handleMouseInput", GuiScreenRealmsProxy.class, "func_146274_d");
addMapping("drawDefaultBackground", GuiScreenRealmsProxy.class, "func_146276_q_");
addMapping("drawHoveringText", GuiScreenRealmsProxy.class, "func_146279_a");
addMapping("onGuiClosed", GuiScreenRealmsProxy.class, "func_146281_b");
addMapping("handleKeyboardInput", GuiScreenRealmsProxy.class, "func_146282_l");
addMapping("drawHoveringText", GuiScreenRealmsProxy.class, "func_146283_a");
addMapping("actionPerformed", GuiScreenRealmsProxy.class, "func_146284_a");
addMapping("renderToolTip", GuiScreenRealmsProxy.class, "func_146285_a");
addMapping("mouseReleased", GuiScreenRealmsProxy.class, "func_146286_b");
addMapping("fontDrawShadow", GuiScreenRealmsProxy.class, "func_154319_c");
addMapping("buttons", GuiScreenRealmsProxy.class, "func_154320_j");
addMapping("getProxy", GuiScreenRealmsProxy.class, "func_154321_a");
addMapping("drawString", GuiScreenRealmsProxy.class, "func_154322_b");
addMapping("fontSplit", GuiScreenRealmsProxy.class, "func_154323_a");
addMapping("buttonsClear", GuiScreenRealmsProxy.class, "func_154324_i");
addMapping("drawCenteredString", GuiScreenRealmsProxy.class, "func_154325_a");
addMapping("getStringWidth", GuiScreenRealmsProxy.class, "func_154326_c");
addMapping("buttonsAdd", GuiScreenRealmsProxy.class, "func_154327_a");
addMapping("buttonsRemove", GuiScreenRealmsProxy.class, "func_154328_b");
addMapping("getFontHeight", GuiScreenRealmsProxy.class, "func_154329_h");
addMapping("drawTexturedModalRect", GuiScreenRealmsProxy.class, "func_73729_b");
addMapping("drawGradientRect", GuiScreenRealmsProxy.class, "func_73733_a");
addMapping("drawScreen", GuiScreenRealmsProxy.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenRealmsProxy.class, "func_73864_a");
addMapping("initGui", GuiScreenRealmsProxy.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiScreenRealmsProxy.class, "func_73868_f");
addMapping("keyTyped", GuiScreenRealmsProxy.class, "func_73869_a");
addMapping("updateScreen", GuiScreenRealmsProxy.class, "func_73876_c");
addMapping("confirmClicked", GuiScreenRealmsProxy.class, "func_73878_a");
addMapping("handleMouseInput", GuiScreenResourcePacks.class, "func_146274_d");
addMapping("actionPerformed", GuiScreenResourcePacks.class, "func_146284_a");
addMapping("mouseReleased", GuiScreenResourcePacks.class, "func_146286_b");
addMapping("hasResourcePackEntry", GuiScreenResourcePacks.class, "func_146961_a");
addMapping("getListContaining", GuiScreenResourcePacks.class, "func_146962_b");
addMapping("getSelectedResourcePacks", GuiScreenResourcePacks.class, "func_146963_h");
addMapping("getAvailableResourcePacks", GuiScreenResourcePacks.class, "func_146964_g");
addMapping("markChanged", GuiScreenResourcePacks.class, "func_175288_g");
addMapping("drawScreen", GuiScreenResourcePacks.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenResourcePacks.class, "func_73864_a");
addMapping("initGui", GuiScreenResourcePacks.class, "func_73866_w_");
addMapping("onGuiClosed", GuiScreenServerList.class, "func_146281_b");
addMapping("actionPerformed", GuiScreenServerList.class, "func_146284_a");
addMapping("drawScreen", GuiScreenServerList.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenServerList.class, "func_73864_a");
addMapping("initGui", GuiScreenServerList.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenServerList.class, "func_73869_a");
addMapping("updateScreen", GuiScreenServerList.class, "func_73876_c");
addMapping("setDoneWorking", GuiScreenWorking.class, "func_146586_a");
addMapping("setLoadingProgress", GuiScreenWorking.class, "func_73718_a");
addMapping("displayLoadingString", GuiScreenWorking.class, "func_73719_c");
addMapping("displaySavingString", GuiScreenWorking.class, "func_73720_a");
addMapping("resetProgressAndMessage", GuiScreenWorking.class, "func_73721_b");
addMapping("drawScreen", GuiScreenWorking.class, "func_73863_a");
addMapping("actionPerformed", GuiShareToLan.class, "func_146284_a");
addMapping("updateDisplayNames", GuiShareToLan.class, "func_146595_g");
addMapping("drawScreen", GuiShareToLan.class, "func_73863_a");
addMapping("initGui", GuiShareToLan.class, "func_73866_w_");
addMapping("drawBackground", GuiSimpleScrolledSelectionListProxy.class, "func_148123_a");
addMapping("getSize", GuiSimpleScrolledSelectionListProxy.class, "func_148127_b");
addMapping("drawScreen", GuiSimpleScrolledSelectionListProxy.class, "func_148128_a");
addMapping("isSelected", GuiSimpleScrolledSelectionListProxy.class, "func_148131_a");
addMapping("getScrollBarX", GuiSimpleScrolledSelectionListProxy.class, "func_148137_d");
addMapping("getContentHeight", GuiSimpleScrolledSelectionListProxy.class, "func_148138_e");
addMapping("elementClicked", GuiSimpleScrolledSelectionListProxy.class, "func_148144_a");
addMapping("handleMouseInput", GuiSimpleScrolledSelectionListProxy.class, "func_178039_p");
addMapping("getMouseY", GuiSimpleScrolledSelectionListProxy.class, "func_178047_f");
addMapping("getWidth", GuiSimpleScrolledSelectionListProxy.class, "func_178048_e");
addMapping("getMouseX", GuiSimpleScrolledSelectionListProxy.class, "func_178049_g");
addMapping("drawSlot", GuiSimpleScrolledSelectionListProxy.class, "func_192637_a");
addMapping("actionPerformed", GuiSleepMP.class, "func_146284_a");
addMapping("wakeFromSleep", GuiSleepMP.class, "func_146418_g");
addMapping("initGui", GuiSleepMP.class, "func_73866_w_");
addMapping("keyTyped", GuiSleepMP.class, "func_73869_a");
addMapping("getHoverState", GuiSlider.class, "func_146114_a");
addMapping("mousePressed", GuiSlider.class, "func_146116_c");
addMapping("mouseReleased", GuiSlider.class, "func_146118_a");
addMapping("mouseDragged", GuiSlider.class, "func_146119_b");
addMapping("getSliderPosition", GuiSlider.class, "func_175217_d");
addMapping("setSliderValue", GuiSlider.class, "func_175218_a");
addMapping("setSliderPosition", GuiSlider.class, "func_175219_a");
addMapping("getSliderValue", GuiSlider.class, "func_175220_c");
addMapping("getDisplayString", GuiSlider.class, "func_175221_e");
addMapping("bindAmountScrolled", GuiSlot.class, "func_148121_k");
addMapping("setDimensions", GuiSlot.class, "func_148122_a");
addMapping("drawBackground", GuiSlot.class, "func_148123_a");
addMapping("getSlotIndexFromScreenCoords", GuiSlot.class, "func_148124_c");
addMapping("getEnabled", GuiSlot.class, "func_148125_i");
addMapping("getSize", GuiSlot.class, "func_148127_b");
addMapping("drawScreen", GuiSlot.class, "func_148128_a");
addMapping("drawListHeader", GuiSlot.class, "func_148129_a");
addMapping("isSelected", GuiSlot.class, "func_148131_a");
addMapping("clickedHeader", GuiSlot.class, "func_148132_a");
addMapping("setHasListHeader", GuiSlot.class, "func_148133_a");
addMapping("registerScrollButtons", GuiSlot.class, "func_148134_d");
addMapping("getMaxScroll", GuiSlot.class, "func_148135_f");
addMapping("overlayBackground", GuiSlot.class, "func_148136_c");
addMapping("getScrollBarX", GuiSlot.class, "func_148137_d");
addMapping("getContentHeight", GuiSlot.class, "func_148138_e");
addMapping("getListWidth", GuiSlot.class, "func_148139_c");
addMapping("setSlotXBoundsFromLeft", GuiSlot.class, "func_148140_g");
addMapping("isMouseYWithinSlotBounds", GuiSlot.class, "func_148141_e");
addMapping("renderDecorations", GuiSlot.class, "func_148142_b");
addMapping("setEnabled", GuiSlot.class, "func_148143_b");
addMapping("elementClicked", GuiSlot.class, "func_148144_a");
addMapping("scrollBy", GuiSlot.class, "func_148145_f");
addMapping("getSlotHeight", GuiSlot.class, "func_148146_j");
addMapping("actionPerformed", GuiSlot.class, "func_148147_a");
addMapping("getAmountScrolled", GuiSlot.class, "func_148148_g");
addMapping("handleMouseInput", GuiSlot.class, "func_178039_p");
addMapping("drawSlot", GuiSlot.class, "func_192637_a");
addMapping("drawSelectionBox", GuiSlot.class, "func_192638_a");
addMapping("updateItemPos", GuiSlot.class, "func_192639_a");
addMapping("setShowSelectionBox", GuiSlot.class, "func_193651_b");
addMapping("drawBackground", GuiSlotRealmsProxy.class, "func_148123_a");
addMapping("getSize", GuiSlotRealmsProxy.class, "func_148127_b");
addMapping("isSelected", GuiSlotRealmsProxy.class, "func_148131_a");
addMapping("getScrollBarX", GuiSlotRealmsProxy.class, "func_148137_d");
addMapping("getContentHeight", GuiSlotRealmsProxy.class, "func_148138_e");
addMapping("elementClicked", GuiSlotRealmsProxy.class, "func_148144_a");
addMapping("getMouseX", GuiSlotRealmsProxy.class, "func_154337_m");
addMapping("getWidth", GuiSlotRealmsProxy.class, "func_154338_k");
addMapping("getMouseY", GuiSlotRealmsProxy.class, "func_154339_l");
addMapping("handleMouseInput", GuiSlotRealmsProxy.class, "func_178039_p");
addMapping("drawSlot", GuiSlotRealmsProxy.class, "func_192637_a");
addMapping("handleMouseInput", GuiSnooper.class, "func_146274_d");
addMapping("actionPerformed", GuiSnooper.class, "func_146284_a");
addMapping("drawScreen", GuiSnooper.class, "func_73863_a");
addMapping("initGui", GuiSnooper.class, "func_73866_w_");
addMapping("onSpectatorMenuClosed", GuiSpectator.class, "func_175257_a");
addMapping("renderPage", GuiSpectator.class, "func_175258_a");
addMapping("onMouseScroll", GuiSpectator.class, "func_175259_b");
addMapping("onHotbarSelected", GuiSpectator.class, "func_175260_a");
addMapping("onMiddleClick", GuiSpectator.class, "func_175261_b");
addMapping("isMenuActive", GuiSpectator.class, "func_175262_a");
addMapping("renderSelectedItem", GuiSpectator.class, "func_175263_a");
addMapping("renderTooltip", GuiSpectator.class, "func_175264_a");
addMapping("getHotbarAlpha", GuiSpectator.class, "func_175265_c");
addMapping("renderSlot", GuiSpectator.class, "func_175266_a");
addMapping("soundPlay", GuiSubtitleOverlay.class, "func_184067_a");
addMapping("renderSubtitles", GuiSubtitleOverlay.class, "func_184068_a");
addMapping("deleteFromCursor", GuiTextField.class, "func_146175_b");
addMapping("getVisible", GuiTextField.class, "func_146176_q");
addMapping("deleteWords", GuiTextField.class, "func_146177_a");
addMapping("updateCursorCounter", GuiTextField.class, "func_146178_a");
addMapping("getText", GuiTextField.class, "func_146179_b");
addMapping("setText", GuiTextField.class, "func_146180_a");
addMapping("getEnableBackgroundDrawing", GuiTextField.class, "func_146181_i");
addMapping("moveCursorBy", GuiTextField.class, "func_146182_d");
addMapping("getNthWordFromPos", GuiTextField.class, "func_146183_a");
addMapping("setEnabled", GuiTextField.class, "func_146184_c");
addMapping("setEnableBackgroundDrawing", GuiTextField.class, "func_146185_a");
addMapping("getSelectionEnd", GuiTextField.class, "func_146186_n");
addMapping("getNthWordFromCursor", GuiTextField.class, "func_146187_c");
addMapping("drawSelectionBox", GuiTextField.class, "func_146188_c");
addMapping("setVisible", GuiTextField.class, "func_146189_e");
addMapping("setCursorPosition", GuiTextField.class, "func_146190_e");
addMapping("writeText", GuiTextField.class, "func_146191_b");
addMapping("mouseClicked", GuiTextField.class, "func_146192_a");
addMapping("setTextColor", GuiTextField.class, "func_146193_g");
addMapping("drawTextBox", GuiTextField.class, "func_146194_f");
addMapping("setFocused", GuiTextField.class, "func_146195_b");
addMapping("setCursorPositionZero", GuiTextField.class, "func_146196_d");
addMapping("getNthWordFromPosWS", GuiTextField.class, "func_146197_a");
addMapping("getCursorPosition", GuiTextField.class, "func_146198_h");
addMapping("setSelectionPos", GuiTextField.class, "func_146199_i");
addMapping("getWidth", GuiTextField.class, "func_146200_o");
addMapping("textboxKeyTyped", GuiTextField.class, "func_146201_a");
addMapping("setCursorPositionEnd", GuiTextField.class, "func_146202_e");
addMapping("setMaxStringLength", GuiTextField.class, "func_146203_f");
addMapping("setDisabledTextColour", GuiTextField.class, "func_146204_h");
addMapping("setCanLoseFocus", GuiTextField.class, "func_146205_d");
addMapping("isFocused", GuiTextField.class, "func_146206_l");
addMapping("getSelectedText", GuiTextField.class, "func_146207_c");
addMapping("getMaxStringLength", GuiTextField.class, "func_146208_g");
addMapping("setValidator", GuiTextField.class, "func_175205_a");
addMapping("getId", GuiTextField.class, "func_175206_d");
addMapping("setGuiResponder", GuiTextField.class, "func_175207_a");
addMapping("setResponderEntryValue", GuiTextField.class, "func_190516_a");
addMapping("splitText", GuiUtilRenderComponents.class, "func_178908_a");
addMapping("removeTextColorsIfConfigured", GuiUtilRenderComponents.class, "func_178909_a");
addMapping("handleMouseInput", GuiVideoSettings.class, "func_146274_d");
addMapping("actionPerformed", GuiVideoSettings.class, "func_146284_a");
addMapping("mouseReleased", GuiVideoSettings.class, "func_146286_b");
addMapping("drawScreen", GuiVideoSettings.class, "func_73863_a");
addMapping("mouseClicked", GuiVideoSettings.class, "func_73864_a");
addMapping("initGui", GuiVideoSettings.class, "func_73866_w_");
addMapping("keyTyped", GuiVideoSettings.class, "func_73869_a");
addMapping("sendRespawnPacket", GuiWinGame.class, "func_146574_g");
addMapping("drawWinGameScreen", GuiWinGame.class, "func_146575_b");
addMapping("drawScreen", GuiWinGame.class, "func_73863_a");
addMapping("initGui", GuiWinGame.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiWinGame.class, "func_73868_f");
addMapping("keyTyped", GuiWinGame.class, "func_73869_a");
addMapping("updateScreen", GuiWinGame.class, "func_73876_c");
addMapping("onGuiClosed", GuiWorldEdit.class, "func_146281_b");
addMapping("actionPerformed", GuiWorldEdit.class, "func_146284_a");
addMapping("drawScreen", GuiWorldEdit.class, "func_73863_a");
addMapping("mouseClicked", GuiWorldEdit.class, "func_73864_a");
addMapping("initGui", GuiWorldEdit.class, "func_73866_w_");
addMapping("keyTyped", GuiWorldEdit.class, "func_73869_a");
addMapping("updateScreen", GuiWorldEdit.class, "func_73876_c");
addMapping("handleMouseInput", GuiWorldSelection.class, "func_146274_d");
addMapping("actionPerformed", GuiWorldSelection.class, "func_146284_a");
addMapping("mouseReleased", GuiWorldSelection.class, "func_146286_b");
addMapping("setVersionTooltip", GuiWorldSelection.class, "func_184861_a");
addMapping("postInit", GuiWorldSelection.class, "func_184862_a");
addMapping("selectWorld", GuiWorldSelection.class, "func_184863_a");
addMapping("drawScreen", GuiWorldSelection.class, "func_73863_a");
addMapping("mouseClicked", GuiWorldSelection.class, "func_73864_a");
addMapping("initGui", GuiWorldSelection.class, "func_73866_w_");
addMapping("actionPerformed", GuiYesNo.class, "func_146284_a");
addMapping("setButtonDelay", GuiYesNo.class, "func_146350_a");
addMapping("drawScreen", GuiYesNo.class, "func_73863_a");
addMapping("initGui", GuiYesNo.class, "func_73866_w_");
addMapping("updateScreen", GuiYesNo.class, "func_73876_c");
addMapping("confirmClicked", GuiYesNoCallback.class, "func_73878_a");
addMapping("onStatsUpdated", IProgressMeter.class, "func_193026_g");
addMapping("updateMapTexture", MapItemRenderer.class, "func_148246_a");
addMapping("getMapRendererInstance", MapItemRenderer.class, "func_148248_b");
addMapping("clearLoadedMaps", MapItemRenderer.class, "func_148249_a");
addMapping("renderMap", MapItemRenderer.class, "func_148250_a");
addMapping("getMapInstanceIfExists", MapItemRenderer.class, "func_191205_a");
addMapping("getData", MapItemRenderer.class, "func_191207_a");
addMapping("getScaledHeight_double", ScaledResolution.class, "func_78324_d");
addMapping("getScaleFactor", ScaledResolution.class, "func_78325_e");
addMapping("getScaledWidth", ScaledResolution.class, "func_78326_a");
addMapping("getScaledWidth_double", ScaledResolution.class, "func_78327_c");
addMapping("getScaledHeight", ScaledResolution.class, "func_78328_b");
addMapping("actionPerformed", ScreenChatOptions.class, "func_146284_a");
addMapping("updateNarratorButton", ScreenChatOptions.class, "func_193024_a");
addMapping("drawScreen", ScreenChatOptions.class, "func_73863_a");
addMapping("initGui", ScreenChatOptions.class, "func_73866_w_");
addMapping("keyTyped", ScreenChatOptions.class, "func_73869_a");
addMapping("mouseReleased", ServerListEntryLanDetected.class, "func_148277_b");
addMapping("mousePressed", ServerListEntryLanDetected.class, "func_148278_a");
addMapping("getServerData", ServerListEntryLanDetected.class, "func_189995_a");
addMapping("updatePosition", ServerListEntryLanDetected.class, "func_192633_a");
addMapping("drawEntry", ServerListEntryLanDetected.class, "func_192634_a");
addMapping("mouseReleased", ServerListEntryLanScan.class, "func_148277_b");
addMapping("mousePressed", ServerListEntryLanScan.class, "func_148278_a");
addMapping("updatePosition", ServerListEntryLanScan.class, "func_192633_a");
addMapping("drawEntry", ServerListEntryLanScan.class, "func_192634_a");
addMapping("mouseReleased", ServerListEntryNormal.class, "func_148277_b");
addMapping("mousePressed", ServerListEntryNormal.class, "func_148278_a");
addMapping("getServerData", ServerListEntryNormal.class, "func_148296_a");
addMapping("prepareServerIcon", ServerListEntryNormal.class, "func_148297_b");
addMapping("drawTextureAt", ServerListEntryNormal.class, "func_178012_a");
addMapping("canJoin", ServerListEntryNormal.class, "func_178013_b");
addMapping("updatePosition", ServerListEntryNormal.class, "func_192633_a");
addMapping("drawEntry", ServerListEntryNormal.class, "func_192634_a");
addMapping("getSize", ServerSelectionList.class, "func_148127_b");
addMapping("isSelected", ServerSelectionList.class, "func_148131_a");
addMapping("getScrollBarX", ServerSelectionList.class, "func_148137_d");
addMapping("getListWidth", ServerSelectionList.class, "func_148139_c");
addMapping("getListEntry", ServerSelectionList.class, "func_148180_b");
addMapping("setSelectedSlotIndex", ServerSelectionList.class, "func_148192_c");
addMapping("getSelected", ServerSelectionList.class, "func_148193_k");
addMapping("updateNetworkServers", ServerSelectionList.class, "func_148194_a");
addMapping("updateOnlineServers", ServerSelectionList.class, "func_148195_a");
addMapping("handleMouseInput", GuiStats.class, "func_146274_d");
addMapping("actionPerformed", GuiStats.class, "func_146284_a");
addMapping("drawStatsScreen", GuiStats.class, "func_146521_a");
addMapping("drawSprite", GuiStats.class, "func_146527_c");
addMapping("drawButtonBackground", GuiStats.class, "func_146531_b");
addMapping("onStatsUpdated", GuiStats.class, "func_193026_g");
addMapping("initLists", GuiStats.class, "func_193028_a");
addMapping("initButtons", GuiStats.class, "func_193029_f");
addMapping("drawScreen", GuiStats.class, "func_73863_a");
addMapping("initGui", GuiStats.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiStats.class, "func_73868_f");
addMapping("getId", AdvancementState.class, "func_192667_a");
addMapping("getX", AdvancementTabType.class, "func_192648_a");
addMapping("getMax", AdvancementTabType.class, "func_192650_a");
addMapping("draw", AdvancementTabType.class, "func_192651_a");
addMapping("drawIcon", AdvancementTabType.class, "func_192652_a");
addMapping("getY", AdvancementTabType.class, "func_192653_b");
addMapping("isMouseOver", AdvancementTabType.class, "func_192654_a");
addMapping("isMouseOver", GuiAdvancement.class, "func_191816_c");
addMapping("draw", GuiAdvancement.class, "func_191817_b");
addMapping("getFirstVisibleParent", GuiAdvancement.class, "func_191818_a");
addMapping("drawConnectivity", GuiAdvancement.class, "func_191819_a");
addMapping("getY", GuiAdvancement.class, "func_191820_c");
addMapping("drawHover", GuiAdvancement.class, "func_191821_a");
addMapping("addGuiAdvancement", GuiAdvancement.class, "func_191822_a");
addMapping("getX", GuiAdvancement.class, "func_191823_d");
addMapping("getAdvancementProgress", GuiAdvancement.class, "func_191824_a");
addMapping("attachToParent", GuiAdvancement.class, "func_191825_b");
addMapping("renderRepeating", GuiAdvancement.class, "func_192993_a");
addMapping("render9Sprite", GuiAdvancement.class, "func_192994_a");
addMapping("findOptimalLines", GuiAdvancement.class, "func_192995_a");
addMapping("isMouseOver", GuiAdvancementTab.class, "func_191793_c");
addMapping("getAdvancementGui", GuiAdvancementTab.class, "func_191794_b");
addMapping("getTitle", GuiAdvancementTab.class, "func_191795_d");
addMapping("drawIcon", GuiAdvancementTab.class, "func_191796_a");
addMapping("scroll", GuiAdvancementTab.class, "func_191797_b");
addMapping("drawTab", GuiAdvancementTab.class, "func_191798_a");
addMapping("drawContents", GuiAdvancementTab.class, "func_191799_a");
addMapping("addAdvancement", GuiAdvancementTab.class, "func_191800_a");
addMapping("drawToolTips", GuiAdvancementTab.class, "func_192991_a");
addMapping("getScreen", GuiAdvancementTab.class, "func_193934_g");
addMapping("getAdvancement", GuiAdvancementTab.class, "func_193935_c");
addMapping("create", GuiAdvancementTab.class, "func_193936_a");
addMapping("addGuiAdvancement", GuiAdvancementTab.class, "func_193937_a");
addMapping("onGuiClosed", GuiScreenAdvancements.class, "func_146281_b");
addMapping("rootAdvancementRemoved", GuiScreenAdvancements.class, "func_191928_b");
addMapping("nonRootAdvancementRemoved", GuiScreenAdvancements.class, "func_191929_d");
addMapping("advancementsCleared", GuiScreenAdvancements.class, "func_191930_a");
addMapping("rootAdvancementAdded", GuiScreenAdvancements.class, "func_191931_a");
addMapping("nonRootAdvancementAdded", GuiScreenAdvancements.class, "func_191932_c");
addMapping("onUpdateAdvancementProgress", GuiScreenAdvancements.class, "func_191933_a");
addMapping("renderWindow", GuiScreenAdvancements.class, "func_191934_b");
addMapping("getTab", GuiScreenAdvancements.class, "func_191935_f");
addMapping("renderInside", GuiScreenAdvancements.class, "func_191936_c");
addMapping("renderToolTips", GuiScreenAdvancements.class, "func_191937_d");
addMapping("getAdvancementGui", GuiScreenAdvancements.class, "func_191938_e");
addMapping("setSelectedTab", GuiScreenAdvancements.class, "func_193982_e");
addMapping("drawScreen", GuiScreenAdvancements.class, "func_73863_a");
addMapping("mouseClicked", GuiScreenAdvancements.class, "func_73864_a");
addMapping("initGui", GuiScreenAdvancements.class, "func_73866_w_");
addMapping("keyTyped", GuiScreenAdvancements.class, "func_73869_a");
addMapping("say", IChatListener.class, "func_192576_a");
addMapping("say", NarratorChatListener.class, "func_192576_a");
addMapping("isActive", NarratorChatListener.class, "func_193640_a");
addMapping("announceMode", NarratorChatListener.class, "func_193641_a");
addMapping("clear", NarratorChatListener.class, "func_193642_b");
addMapping("say", NormalChatListener.class, "func_192576_a");
addMapping("say", OverlayChatListener.class, "func_192576_a");
addMapping("sendAllWindowProperties", CreativeCrafting.class, "func_175173_a");
addMapping("sendAllContents", CreativeCrafting.class, "func_71110_a");
addMapping("sendSlotContents", CreativeCrafting.class, "func_71111_a");
addMapping("sendWindowProperty", CreativeCrafting.class, "func_71112_a");
addMapping("actionPerformed", GuiBeacon.class, "func_146284_a");
addMapping("drawGuiContainerBackgroundLayer", GuiBeacon.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiBeacon.class, "func_146979_b");
addMapping("drawScreen", GuiBeacon.class, "func_73863_a");
addMapping("initGui", GuiBeacon.class, "func_73866_w_");
addMapping("updateScreen", GuiBeacon.class, "func_73876_c");
addMapping("drawGuiContainerBackgroundLayer", GuiBrewingStand.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiBrewingStand.class, "func_146979_b");
addMapping("drawScreen", GuiBrewingStand.class, "func_73863_a");
addMapping("drawGuiContainerBackgroundLayer", GuiChest.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiChest.class, "func_146979_b");
addMapping("drawScreen", GuiChest.class, "func_73863_a");
addMapping("mouseClickMove", GuiContainer.class, "func_146273_a");
addMapping("onGuiClosed", GuiContainer.class, "func_146281_b");
addMapping("mouseReleased", GuiContainer.class, "func_146286_b");
addMapping("getSlotAtPosition", GuiContainer.class, "func_146975_c");
addMapping("drawGuiContainerBackgroundLayer", GuiContainer.class, "func_146976_a");
addMapping("drawSlot", GuiContainer.class, "func_146977_a");
addMapping("isPointInRegion", GuiContainer.class, "func_146978_c");
addMapping("drawGuiContainerForegroundLayer", GuiContainer.class, "func_146979_b");
addMapping("updateDragSplitting", GuiContainer.class, "func_146980_g");
addMapping("isMouseOverSlot", GuiContainer.class, "func_146981_a");
addMapping("drawItemStack", GuiContainer.class, "func_146982_a");
addMapping("checkHotbarKeys", GuiContainer.class, "func_146983_a");
addMapping("handleMouseClick", GuiContainer.class, "func_184098_a");
addMapping("renderHoveredToolTip", GuiContainer.class, "func_191948_b");
addMapping("hasClickedOutside", GuiContainer.class, "func_193983_c");
addMapping("drawScreen", GuiContainer.class, "func_73863_a");
addMapping("mouseClicked", GuiContainer.class, "func_73864_a");
addMapping("initGui", GuiContainer.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiContainer.class, "func_73868_f");
addMapping("keyTyped", GuiContainer.class, "func_73869_a");
addMapping("updateScreen", GuiContainer.class, "func_73876_c");
addMapping("handleMouseInput", GuiContainerCreative.class, "func_146274_d");
addMapping("onGuiClosed", GuiContainerCreative.class, "func_146281_b");
addMapping("actionPerformed", GuiContainerCreative.class, "func_146284_a");
addMapping("renderToolTip", GuiContainerCreative.class, "func_146285_a");
addMapping("mouseReleased", GuiContainerCreative.class, "func_146286_b");
addMapping("drawGuiContainerBackgroundLayer", GuiContainerCreative.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiContainerCreative.class, "func_146979_b");
addMapping("isMouseOverTab", GuiContainerCreative.class, "func_147049_a");
addMapping("setCurrentCreativeTab", GuiContainerCreative.class, "func_147050_b");
addMapping("drawTab", GuiContainerCreative.class, "func_147051_a");
addMapping("renderCreativeInventoryHoveringText", GuiContainerCreative.class, "func_147052_b");
addMapping("updateCreativeSearch", GuiContainerCreative.class, "func_147053_i");
addMapping("needsScrollBars", GuiContainerCreative.class, "func_147055_p");
addMapping("getSelectedTabIndex", GuiContainerCreative.class, "func_147056_g");
addMapping("updateActivePotionEffects", GuiContainerCreative.class, "func_175378_g");
addMapping("handleMouseClick", GuiContainerCreative.class, "func_184098_a");
addMapping("handleHotbarSnapshots", GuiContainerCreative.class, "func_192044_a");
addMapping("drawScreen", GuiContainerCreative.class, "func_73863_a");
addMapping("mouseClicked", GuiContainerCreative.class, "func_73864_a");
addMapping("initGui", GuiContainerCreative.class, "func_73866_w_");
addMapping("keyTyped", GuiContainerCreative.class, "func_73869_a");
addMapping("updateScreen", GuiContainerCreative.class, "func_73876_c");
addMapping("onGuiClosed", GuiCrafting.class, "func_146281_b");
addMapping("actionPerformed", GuiCrafting.class, "func_146284_a");
addMapping("drawGuiContainerBackgroundLayer", GuiCrafting.class, "func_146976_a");
addMapping("isPointInRegion", GuiCrafting.class, "func_146978_c");
addMapping("drawGuiContainerForegroundLayer", GuiCrafting.class, "func_146979_b");
addMapping("handleMouseClick", GuiCrafting.class, "func_184098_a");
addMapping("recipesUpdated", GuiCrafting.class, "func_192043_J_");
addMapping("hasClickedOutside", GuiCrafting.class, "func_193983_c");
addMapping("drawScreen", GuiCrafting.class, "func_73863_a");
addMapping("mouseClicked", GuiCrafting.class, "func_73864_a");
addMapping("initGui", GuiCrafting.class, "func_73866_w_");
addMapping("keyTyped", GuiCrafting.class, "func_73869_a");
addMapping("updateScreen", GuiCrafting.class, "func_73876_c");
addMapping("drawGuiContainerBackgroundLayer", GuiDispenser.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiDispenser.class, "func_146979_b");
addMapping("drawScreen", GuiDispenser.class, "func_73863_a");
addMapping("onGuiClosed", GuiEditCommandBlockMinecart.class, "func_146281_b");
addMapping("actionPerformed", GuiEditCommandBlockMinecart.class, "func_146284_a");
addMapping("setCompletions", GuiEditCommandBlockMinecart.class, "func_184072_a");
addMapping("updateCommandOutput", GuiEditCommandBlockMinecart.class, "func_184087_a");
addMapping("drawScreen", GuiEditCommandBlockMinecart.class, "func_73863_a");
addMapping("mouseClicked", GuiEditCommandBlockMinecart.class, "func_73864_a");
addMapping("initGui", GuiEditCommandBlockMinecart.class, "func_73866_w_");
addMapping("keyTyped", GuiEditCommandBlockMinecart.class, "func_73869_a");
addMapping("updateScreen", GuiEditCommandBlockMinecart.class, "func_73876_c");
addMapping("onGuiClosed", GuiEditSign.class, "func_146281_b");
addMapping("actionPerformed", GuiEditSign.class, "func_146284_a");
addMapping("drawScreen", GuiEditSign.class, "func_73863_a");
addMapping("initGui", GuiEditSign.class, "func_73866_w_");
addMapping("keyTyped", GuiEditSign.class, "func_73869_a");
addMapping("updateScreen", GuiEditSign.class, "func_73876_c");
addMapping("onGuiClosed", GuiEditStructure.class, "func_146281_b");
addMapping("actionPerformed", GuiEditStructure.class, "func_146284_a");
addMapping("updateToggleAirButton", GuiEditStructure.class, "func_189814_f");
addMapping("updateToggleBoundingBox", GuiEditStructure.class, "func_189815_g");
addMapping("updateMirrorButton", GuiEditStructure.class, "func_189816_h");
addMapping("parseCoordinate", GuiEditStructure.class, "func_189817_c");
addMapping("parseIntegrity", GuiEditStructure.class, "func_189819_b");
addMapping("sendToServer", GuiEditStructure.class, "func_189820_b");
addMapping("parseSeed", GuiEditStructure.class, "func_189821_a");
addMapping("updateEntitiesButton", GuiEditStructure.class, "func_189822_a");
addMapping("updateMode", GuiEditStructure.class, "func_189823_j");
addMapping("updateDirectionButtons", GuiEditStructure.class, "func_189824_i");
addMapping("isValidCharacterForName", GuiEditStructure.class, "func_190301_b");
addMapping("drawScreen", GuiEditStructure.class, "func_73863_a");
addMapping("mouseClicked", GuiEditStructure.class, "func_73864_a");
addMapping("initGui", GuiEditStructure.class, "func_73866_w_");
addMapping("doesGuiPauseGame", GuiEditStructure.class, "func_73868_f");
addMapping("keyTyped", GuiEditStructure.class, "func_73869_a");
addMapping("updateScreen", GuiEditStructure.class, "func_73876_c");
addMapping("drawGuiContainerBackgroundLayer", GuiFurnace.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiFurnace.class, "func_146979_b");
addMapping("getCookProgressScaled", GuiFurnace.class, "func_175381_h");
addMapping("getBurnLeftScaled", GuiFurnace.class, "func_175382_i");
addMapping("drawScreen", GuiFurnace.class, "func_73863_a");
addMapping("onGuiClosed", GuiInventory.class, "func_146281_b");
addMapping("actionPerformed", GuiInventory.class, "func_146284_a");
addMapping("mouseReleased", GuiInventory.class, "func_146286_b");
addMapping("drawGuiContainerBackgroundLayer", GuiInventory.class, "func_146976_a");
addMapping("isPointInRegion", GuiInventory.class, "func_146978_c");
addMapping("drawGuiContainerForegroundLayer", GuiInventory.class, "func_146979_b");
addMapping("drawEntityOnScreen", GuiInventory.class, "func_147046_a");
addMapping("handleMouseClick", GuiInventory.class, "func_184098_a");
addMapping("recipesUpdated", GuiInventory.class, "func_192043_J_");
addMapping("hasClickedOutside", GuiInventory.class, "func_193983_c");
addMapping("drawScreen", GuiInventory.class, "func_73863_a");
addMapping("mouseClicked", GuiInventory.class, "func_73864_a");
addMapping("initGui", GuiInventory.class, "func_73866_w_");
addMapping("keyTyped", GuiInventory.class, "func_73869_a");
addMapping("updateScreen", GuiInventory.class, "func_73876_c");
addMapping("drawGuiContainerBackgroundLayer", GuiScreenHorseInventory.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiScreenHorseInventory.class, "func_146979_b");
addMapping("drawScreen", GuiScreenHorseInventory.class, "func_73863_a");
addMapping("drawGuiContainerBackgroundLayer", GuiShulkerBox.class, "func_146976_a");
addMapping("drawGuiContainerForegroundLayer", GuiShulkerBox.class, "func_146979_b");
addMapping("drawScreen", GuiShulkerBox.class, "func_73863_a");
addMapping("get", GhostRecipe.class, "func_192681_a");
addMapping("clear", GhostRecipe.class, "func_192682_a");
addMapping("size", GhostRecipe.class, "func_192684_b");
addMapping("setRecipe", GhostRecipe.class, "func_192685_a");
addMapping("getRecipe", GhostRecipe.class, "func_192686_c");
addMapping("addIngredient", GhostRecipe.class, "func_194187_a");
addMapping("render", GhostRecipe.class, "func_194188_a");
addMapping("getButtonWidth", GuiButtonRecipe.class, "func_146117_b");
addMapping("drawButton", GuiButtonRecipe.class, "func_191745_a");
addMapping("setPosition", GuiButtonRecipe.class, "func_191770_c");
addMapping("getList", GuiButtonRecipe.class, "func_191771_c");
addMapping("getToolTipText", GuiButtonRecipe.class, "func_191772_a");
addMapping("getRecipe", GuiButtonRecipe.class, "func_193760_e");
addMapping("getOrderedRecipes", GuiButtonRecipe.class, "func_193927_f");
addMapping("init", GuiButtonRecipe.class, "func_193928_a");
addMapping("isOnlyOption", GuiButtonRecipe.class, "func_193929_d");
addMapping("drawButton", GuiButtonRecipeTab.class, "func_191745_a");
addMapping("getCategory", GuiButtonRecipeTab.class, "func_191764_e");
addMapping("startAnimation", GuiButtonRecipeTab.class, "func_193918_a");
addMapping("updateVisibility", GuiButtonRecipeTab.class, "func_193919_e");
addMapping("renderIcon", GuiButtonRecipeTab.class, "func_193920_a");
addMapping("init", GuiRecipeBook.class, "func_191856_a");
addMapping("keyPressed", GuiRecipeBook.class, "func_191859_a");
addMapping("render", GuiRecipeBook.class, "func_191861_a");
addMapping("mouseClicked", GuiRecipeBook.class, "func_191862_a");
addMapping("renderGhostRecipe", GuiRecipeBook.class, "func_191864_a");
addMapping("toggleVisibility", GuiRecipeBook.class, "func_191866_a");
addMapping("removed", GuiRecipeBook.class, "func_191871_c");
addMapping("slotClicked", GuiRecipeBook.class, "func_191874_a");
addMapping("renderTooltip", GuiRecipeBook.class, "func_191876_c");
addMapping("isVisible", GuiRecipeBook.class, "func_191878_b");
addMapping("isOffsetNextToMainGUI", GuiRecipeBook.class, "func_191880_f");
addMapping("recipesShown", GuiRecipeBook.class, "func_193001_a");
addMapping("updateCollections", GuiRecipeBook.class, "func_193003_g");
addMapping("setVisible", GuiRecipeBook.class, "func_193006_a");
addMapping("updateScreenPosition", GuiRecipeBook.class, "func_193011_a");
addMapping("placeRecipe", GuiRecipeBook.class, "func_193013_a");
addMapping("initVisuals", GuiRecipeBook.class, "func_193014_a");
addMapping("renderGhostRecipeTooltip", GuiRecipeBook.class, "func_193015_d");
addMapping("pirateRecipe", GuiRecipeBook.class, "func_193716_a");
addMapping("testClearCraftingGrid", GuiRecipeBook.class, "func_193941_i");
addMapping("updateStackedContents", GuiRecipeBook.class, "func_193942_g");
addMapping("getStackSize", GuiRecipeBook.class, "func_193943_a");
addMapping("setContainerRecipe", GuiRecipeBook.class, "func_193945_a");
addMapping("findSpot", GuiRecipeBook.class, "func_193946_a");
addMapping("recipesUpdated", GuiRecipeBook.class, "func_193948_e");
addMapping("updateTabs", GuiRecipeBook.class, "func_193949_f");
addMapping("handleRecipeClicked", GuiRecipeBook.class, "func_193950_a");
addMapping("setupGhostRecipe", GuiRecipeBook.class, "func_193951_a");
addMapping("clearCraftingGrid", GuiRecipeBook.class, "func_193954_a");
addMapping("hasClickedOutside", GuiRecipeBook.class, "func_193955_c");
addMapping("sendUpdateSettings", GuiRecipeBook.class, "func_193956_j");
addMapping("tick", GuiRecipeBook.class, "func_193957_d");
addMapping("isVisible", GuiRecipeOverlay.class, "func_191839_a");
addMapping("render", GuiRecipeOverlay.class, "func_191842_a");
addMapping("init", GuiRecipeOverlay.class, "func_191845_a");
addMapping("nineInchSprite", GuiRecipeOverlay.class, "func_191846_c");
addMapping("setVisible", GuiRecipeOverlay.class, "func_192999_a");
addMapping("getLastRecipeClicked", GuiRecipeOverlay.class, "func_193967_b");
addMapping("buttonClicked", GuiRecipeOverlay.class, "func_193968_a");
addMapping("getRecipeList", GuiRecipeOverlay.class, "func_193971_a");
addMapping("recipesUpdated", IRecipeShownListener.class, "func_192043_J_");
addMapping("recipesShown", IRecipeUpdateListener.class, "func_193001_a");
addMapping("renderTooltip", RecipeBookPage.class, "func_193721_a");
addMapping("addListener", RecipeBookPage.class, "func_193732_a");
addMapping("render", RecipeBookPage.class, "func_194191_a");
addMapping("updateLists", RecipeBookPage.class, "func_194192_a");
addMapping("getLastClickedRecipe", RecipeBookPage.class, "func_194193_a");
addMapping("init", RecipeBookPage.class, "func_194194_a");
addMapping("recipesShown", RecipeBookPage.class, "func_194195_a");
addMapping("mouseClicked", RecipeBookPage.class, "func_194196_a");
addMapping("updateArrowButtons", RecipeBookPage.class, "func_194197_e");
addMapping("updateButtonsForPage", RecipeBookPage.class, "func_194198_d");
addMapping("getLastClickedRecipeList", RecipeBookPage.class, "func_194199_b");
addMapping("setInvisible", RecipeBookPage.class, "func_194200_c");
addMapping("containsCraftableRecipes", RecipeList.class, "func_192708_c");
addMapping("add", RecipeList.class, "func_192709_a");
addMapping("getRecipes", RecipeList.class, "func_192711_b");
addMapping("getDisplayRecipes", RecipeList.class, "func_194207_b");
addMapping("getRecipes", RecipeList.class, "func_194208_a");
addMapping("isNotEmpty", RecipeList.class, "func_194209_a");
addMapping("canCraft", RecipeList.class, "func_194210_a");
addMapping("hasSingleResultItem", RecipeList.class, "func_194211_e");
addMapping("containsValidRecipes", RecipeList.class, "func_194212_c");
addMapping("isCraftable", RecipeList.class, "func_194213_a");
addMapping("updateKnownRecipes", RecipeList.class, "func_194214_a");
addMapping("getItems", BaseSpectatorGroup.class, "func_178669_a");
addMapping("getPrompt", BaseSpectatorGroup.class, "func_178670_b");
addMapping("selectItem", ISpectatorMenuObject.class, "func_178661_a");
addMapping("isEnabled", ISpectatorMenuObject.class, "func_178662_A_");
addMapping("renderIcon", ISpectatorMenuObject.class, "func_178663_a");
addMapping("getSpectatorName", ISpectatorMenuObject.class, "func_178664_z_");
addMapping("onSpectatorMenuClosed", ISpectatorMenuRecipient.class, "func_175257_a");
addMapping("getItems", ISpectatorMenuView.class, "func_178669_a");
addMapping("getPrompt", ISpectatorMenuView.class, "func_178670_b");
addMapping("selectItem", PlayerMenuObject.class, "func_178661_a");
addMapping("isEnabled", PlayerMenuObject.class, "func_178662_A_");
addMapping("renderIcon", PlayerMenuObject.class, "func_178663_a");
addMapping("getSpectatorName", PlayerMenuObject.class, "func_178664_z_");
addMapping("exit", SpectatorMenu.class, "func_178641_d");
addMapping("getItems", SpectatorMenu.class, "func_178642_a");
addMapping("getItem", SpectatorMenu.class, "func_178643_a");
addMapping("selectSlot", SpectatorMenu.class, "func_178644_b");
addMapping("getSelectedItem", SpectatorMenu.class, "func_178645_b");
addMapping("getCurrentPage", SpectatorMenu.class, "func_178646_f");
addMapping("selectCategory", SpectatorMenu.class, "func_178647_a");
addMapping("getSelectedSlot", SpectatorMenu.class, "func_178648_e");
addMapping("getSelectedCategory", SpectatorMenu.class, "func_178650_c");
addMapping("getObject", SpectatorDetails.class, "func_178680_a");
addMapping("getSelectedSlot", SpectatorDetails.class, "func_178681_b");
addMapping("selectItem", TeleportToPlayer.class, "func_178661_a");
addMapping("isEnabled", TeleportToPlayer.class, "func_178662_A_");
addMapping("renderIcon", TeleportToPlayer.class, "func_178663_a");
addMapping("getSpectatorName", TeleportToPlayer.class, "func_178664_z_");
addMapping("getItems", TeleportToPlayer.class, "func_178669_a");
addMapping("getPrompt", TeleportToPlayer.class, "func_178670_b");
addMapping("selectItem", TeleportToTeam.class, "func_178661_a");
addMapping("isEnabled", TeleportToTeam.class, "func_178662_A_");
addMapping("renderIcon", TeleportToTeam.class, "func_178663_a");
addMapping("getSpectatorName", TeleportToTeam.class, "func_178664_z_");
addMapping("getItems", TeleportToTeam.class, "func_178669_a");
addMapping("getPrompt", TeleportToTeam.class, "func_178670_b");
addMapping("draw", AdvancementToast.class, "func_193653_a");
addMapping("drawToast", GuiToast.class, "func_191783_a");
addMapping("clear", GuiToast.class, "func_191788_b");
addMapping("add", GuiToast.class, "func_192988_a");
addMapping("getMinecraft", GuiToast.class, "func_192989_b");
addMapping("getToast", GuiToast.class, "func_192990_a");
addMapping("getType", IToast.class, "func_193652_b");
addMapping("draw", IToast.class, "func_193653_a");
addMapping("draw", RecipeToast.class, "func_193653_a");
addMapping("addRecipeOutput", RecipeToast.class, "func_193664_a");
addMapping("addOrUpdate", RecipeToast.class, "func_193665_a");
addMapping("getType", SystemToast.class, "func_193652_b");
addMapping("draw", SystemToast.class, "func_193653_a");
addMapping("setDisplayedText", SystemToast.class, "func_193656_a");
addMapping("addOrUpdate", SystemToast.class, "func_193657_a");
addMapping("draw", TutorialToast.class, "func_193653_a");
addMapping("setProgress", TutorialToast.class, "func_193669_a");
addMapping("hide", TutorialToast.class, "func_193670_a");
addMapping("isNullOrEmpty", Main.class, "func_110121_a");
addMapping("renderMultipass", IMultipassModel.class, "func_187054_b");
addMapping("postRenderArm", ModelArmorStand.class, "func_187073_a");
addMapping("setRotationAngles", ModelArmorStand.class, "func_78087_a");
addMapping("render", ModelArmorStand.class, "func_78088_a");
addMapping("setRotationAngles", ModelArmorStandArmor.class, "func_78087_a");
addMapping("renderBanner", ModelBanner.class, "func_178687_a");
addMapping("copyModelAngles", ModelBase.class, "func_178685_a");
addMapping("setModelAttributes", ModelBase.class, "func_178686_a");
addMapping("getTextureOffset", ModelBase.class, "func_78084_a");
addMapping("setTextureOffset", ModelBase.class, "func_78085_a");
addMapping("setLivingAnimations", ModelBase.class, "func_78086_a");
addMapping("setRotationAngles", ModelBase.class, "func_78087_a");
addMapping("render", ModelBase.class, "func_78088_a");
addMapping("getRandomModelBox", ModelBase.class, "func_85181_a");
addMapping("setRotationAngles", ModelBat.class, "func_78087_a");
addMapping("render", ModelBat.class, "func_78088_a");
addMapping("preparePiece", ModelBed.class, "func_193769_a");
addMapping("getModelVersion", ModelBed.class, "func_193770_a");
addMapping("render", ModelBed.class, "func_193771_b");
addMapping("setModelAttributes", ModelBiped.class, "func_178686_a");
addMapping("setVisible", ModelBiped.class, "func_178719_a");
addMapping("getMainHand", ModelBiped.class, "func_187072_a");
addMapping("postRenderArm", ModelBiped.class, "func_187073_a");
addMapping("getArmForSide", ModelBiped.class, "func_187074_a");
addMapping("setRotationAngles", ModelBiped.class, "func_78087_a");
addMapping("render", ModelBiped.class, "func_78088_a");
addMapping("setRotationAngles", ModelBlaze.class, "func_78087_a");
addMapping("render", ModelBlaze.class, "func_78088_a");
addMapping("renderMultipass", ModelBoat.class, "func_187054_b");
addMapping("renderPaddle", ModelBoat.class, "func_187055_a");
addMapping("makePaddle", ModelBoat.class, "func_187056_a");
addMapping("render", ModelBoat.class, "func_78088_a");
addMapping("setRotationAngles", ModelBook.class, "func_78087_a");
addMapping("render", ModelBook.class, "func_78088_a");
addMapping("render", ModelBox.class, "func_178780_a");
addMapping("setBoxName", ModelBox.class, "func_78244_a");
addMapping("renderAll", ModelChest.class, "func_78231_a");
addMapping("setRotationAngles", ModelChicken.class, "func_78087_a");
addMapping("render", ModelChicken.class, "func_78088_a");
addMapping("setRotationAngles", ModelCreeper.class, "func_78087_a");
addMapping("render", ModelCreeper.class, "func_78088_a");
addMapping("setLivingAnimations", ModelDragon.class, "func_78086_a");
addMapping("render", ModelDragon.class, "func_78088_a");
addMapping("updateRotations", ModelDragon.class, "func_78214_a");
addMapping("render", ModelDragonHead.class, "func_78088_a");
addMapping("setRotationAngles", ModelElytra.class, "func_78087_a");
addMapping("render", ModelElytra.class, "func_78088_a");
addMapping("render", ModelEnderCrystal.class, "func_78088_a");
addMapping("setRotationAngles", ModelEnderMite.class, "func_78087_a");
addMapping("render", ModelEnderMite.class, "func_78088_a");
addMapping("setRotationAngles", ModelEnderman.class, "func_78087_a");
addMapping("render", ModelEvokerFangs.class, "func_78088_a");
addMapping("setRotationAngles", ModelGhast.class, "func_78087_a");
addMapping("render", ModelGhast.class, "func_78088_a");
addMapping("setRotationAngles", ModelGuardian.class, "func_78087_a");
addMapping("render", ModelGuardian.class, "func_78088_a");
addMapping("updateHorseRotation", ModelHorse.class, "func_110683_a");
addMapping("setLivingAnimations", ModelHorse.class, "func_78086_a");
addMapping("render", ModelHorse.class, "func_78088_a");
addMapping("setRotationAngles", ModelHumanoidHead.class, "func_78087_a");
addMapping("render", ModelHumanoidHead.class, "func_78088_a");
addMapping("getArm", ModelIllager.class, "func_191216_a");
addMapping("setRotationAngles", ModelIllager.class, "func_78087_a");
addMapping("render", ModelIllager.class, "func_78088_a");
addMapping("setLivingAnimations", ModelIronGolem.class, "func_78086_a");
addMapping("setRotationAngles", ModelIronGolem.class, "func_78087_a");
addMapping("render", ModelIronGolem.class, "func_78088_a");
addMapping("triangleWave", ModelIronGolem.class, "func_78172_a");
addMapping("setRotationAngles", ModelLeashKnot.class, "func_78087_a");
addMapping("render", ModelLeashKnot.class, "func_78088_a");
addMapping("render", ModelLlama.class, "func_78088_a");
addMapping("render", ModelLlamaSpit.class, "func_78088_a");
addMapping("setLivingAnimations", ModelMagmaCube.class, "func_78086_a");
addMapping("render", ModelMagmaCube.class, "func_78088_a");
addMapping("render", ModelMinecart.class, "func_78088_a");
addMapping("setLivingAnimations", ModelOcelot.class, "func_78086_a");
addMapping("setRotationAngles", ModelOcelot.class, "func_78087_a");
addMapping("render", ModelOcelot.class, "func_78088_a");
addMapping("setLivingAnimations", ModelParrot.class, "func_78086_a");
addMapping("setRotationAngles", ModelParrot.class, "func_78087_a");
addMapping("render", ModelParrot.class, "func_78088_a");
addMapping("setVisible", ModelPlayer.class, "func_178719_a");
addMapping("renderDeadmau5Head", ModelPlayer.class, "func_178727_b");
addMapping("renderCape", ModelPlayer.class, "func_178728_c");
addMapping("postRenderArm", ModelPlayer.class, "func_187073_a");
addMapping("setRotationAngles", ModelPlayer.class, "func_78087_a");
addMapping("render", ModelPlayer.class, "func_78088_a");
addMapping("setRotationAngles", ModelPolarBear.class, "func_78087_a");
addMapping("render", ModelPolarBear.class, "func_78088_a");
addMapping("setRotationAngles", ModelQuadruped.class, "func_78087_a");
addMapping("render", ModelQuadruped.class, "func_78088_a");
addMapping("setRotationOffset", ModelRabbit.class, "func_178691_a");
addMapping("setLivingAnimations", ModelRabbit.class, "func_78086_a");
addMapping("setRotationAngles", ModelRabbit.class, "func_78087_a");
addMapping("render", ModelRabbit.class, "func_78088_a");
addMapping("addBox", ModelRenderer.class, "func_178769_a");
addMapping("setTextureOffset", ModelRenderer.class, "func_78784_a");
addMapping("render", ModelRenderer.class, "func_78785_a");
addMapping("addBox", ModelRenderer.class, "func_78786_a");
addMapping("setTextureSize", ModelRenderer.class, "func_78787_b");
addMapping("compileDisplayList", ModelRenderer.class, "func_78788_d");
addMapping("addBox", ModelRenderer.class, "func_78789_a");
addMapping("addBox", ModelRenderer.class, "func_78790_a");
addMapping("renderWithRotation", ModelRenderer.class, "func_78791_b");
addMapping("addChild", ModelRenderer.class, "func_78792_a");
addMapping("setRotationPoint", ModelRenderer.class, "func_78793_a");
addMapping("postRender", ModelRenderer.class, "func_78794_c");
addMapping("setLivingAnimations", ModelSheep1.class, "func_78086_a");
addMapping("setRotationAngles", ModelSheep1.class, "func_78087_a");
addMapping("setLivingAnimations", ModelSheep2.class, "func_78086_a");
addMapping("setRotationAngles", ModelSheep2.class, "func_78087_a");
addMapping("render", ModelShield.class, "func_187062_a");
addMapping("setRotationAngles", ModelShulker.class, "func_78087_a");
addMapping("render", ModelShulker.class, "func_78088_a");
addMapping("setRotationAngles", ModelShulkerBullet.class, "func_78087_a");
addMapping("render", ModelShulkerBullet.class, "func_78088_a");
addMapping("renderSign", ModelSign.class, "func_78164_a");
addMapping("setRotationAngles", ModelSilverfish.class, "func_78087_a");
addMapping("render", ModelSilverfish.class, "func_78088_a");
addMapping("postRenderArm", ModelSkeleton.class, "func_187073_a");
addMapping("setLivingAnimations", ModelSkeleton.class, "func_78086_a");
addMapping("setRotationAngles", ModelSkeleton.class, "func_78087_a");
addMapping("setRotationAngles", ModelSkeletonHead.class, "func_78087_a");
addMapping("render", ModelSkeletonHead.class, "func_78088_a");
addMapping("render", ModelSlime.class, "func_78088_a");
addMapping("setRotationAngles", ModelSnowMan.class, "func_78087_a");
addMapping("render", ModelSnowMan.class, "func_78088_a");
addMapping("setRotationAngles", ModelSpider.class, "func_78087_a");
addMapping("render", ModelSpider.class, "func_78088_a");
addMapping("setRotationAngles", ModelSquid.class, "func_78087_a");
addMapping("render", ModelSquid.class, "func_78088_a");
addMapping("getModelVersion", ModelVex.class, "func_191228_a");
addMapping("setRotationAngles", ModelVex.class, "func_78087_a");
addMapping("render", ModelVex.class, "func_78088_a");
addMapping("setRotationAngles", ModelVillager.class, "func_78087_a");
addMapping("render", ModelVillager.class, "func_78088_a");
addMapping("setRotationAngles", ModelWitch.class, "func_78087_a");
addMapping("setLivingAnimations", ModelWither.class, "func_78086_a");
addMapping("setRotationAngles", ModelWither.class, "func_78087_a");
addMapping("render", ModelWither.class, "func_78088_a");
addMapping("setLivingAnimations", ModelWolf.class, "func_78086_a");
addMapping("setRotationAngles", ModelWolf.class, "func_78087_a");
addMapping("render", ModelWolf.class, "func_78088_a");
addMapping("setRotationAngles", ModelZombie.class, "func_78087_a");
addMapping("setRotationAngles", ModelZombieVillager.class, "func_78087_a");
addMapping("setTexturePosition", PositionTextureVertex.class, "func_78240_a");
addMapping("draw", TexturedQuad.class, "func_178765_a");
addMapping("flipFace", TexturedQuad.class, "func_78235_a");
addMapping("provideChunk", ChunkProviderClient.class, "func_186025_d");
addMapping("getLoadedChunk", ChunkProviderClient.class, "func_186026_b");
addMapping("isChunkGeneratedAt", ChunkProviderClient.class, "func_191062_e");
addMapping("makeString", ChunkProviderClient.class, "func_73148_d");
addMapping("tick", ChunkProviderClient.class, "func_73156_b");
addMapping("loadChunk", ChunkProviderClient.class, "func_73158_c");
addMapping("unloadChunk", ChunkProviderClient.class, "func_73234_b");
addMapping("setListener", ClientAdvancementManager.class, "func_192798_a");
addMapping("read", ClientAdvancementManager.class, "func_192799_a");
addMapping("getAdvancementList", ClientAdvancementManager.class, "func_194229_a");
addMapping("setSelectedTab", ClientAdvancementManager.class, "func_194230_a");
addMapping("actionPerformed", GuiConnecting.class, "func_146284_a");
addMapping("connect", GuiConnecting.class, "func_146367_a");
addMapping("drawScreen", GuiConnecting.class, "func_73863_a");
addMapping("initGui", GuiConnecting.class, "func_73866_w_");
addMapping("keyTyped", GuiConnecting.class, "func_73869_a");
addMapping("updateScreen", GuiConnecting.class, "func_73876_c");
addMapping("isRidingHorse", PlayerControllerMP.class, "func_110738_j");
addMapping("isSpectatorMode", PlayerControllerMP.class, "func_178887_k");
addMapping("getCurrentGameType", PlayerControllerMP.class, "func_178889_l");
addMapping("clickBlockCreative", PlayerControllerMP.class, "func_178891_a");
addMapping("isHittingPosition", PlayerControllerMP.class, "func_178893_a");
addMapping("clickBlock", PlayerControllerMP.class, "func_180511_b");
addMapping("onPlayerDamageBlock", PlayerControllerMP.class, "func_180512_c");
addMapping("getIsHittingBlock", PlayerControllerMP.class, "func_181040_m");
addMapping("interactWithEntity", PlayerControllerMP.class, "func_187097_a");
addMapping("windowClick", PlayerControllerMP.class, "func_187098_a");
addMapping("processRightClickBlock", PlayerControllerMP.class, "func_187099_a");
addMapping("pickItem", PlayerControllerMP.class, "func_187100_a");
addMapping("processRightClick", PlayerControllerMP.class, "func_187101_a");
addMapping("interactWithEntity", PlayerControllerMP.class, "func_187102_a");
addMapping("onPlayerDestroyBlock", PlayerControllerMP.class, "func_187103_a");
addMapping("createPlayer", PlayerControllerMP.class, "func_192830_a");
addMapping("handleRecipePlacement", PlayerControllerMP.class, "func_192831_a");
addMapping("flipPlayer", PlayerControllerMP.class, "func_78745_b");
addMapping("setGameType", PlayerControllerMP.class, "func_78746_a");
addMapping("isSpectator", PlayerControllerMP.class, "func_78747_a");
addMapping("setPlayerCapabilities", PlayerControllerMP.class, "func_78748_a");
addMapping("extendedReach", PlayerControllerMP.class, "func_78749_i");
addMapping("syncCurrentPlayItem", PlayerControllerMP.class, "func_78750_j");
addMapping("sendPacketDropItem", PlayerControllerMP.class, "func_78752_a");
addMapping("shouldDrawHUD", PlayerControllerMP.class, "func_78755_b");
addMapping("sendEnchantPacket", PlayerControllerMP.class, "func_78756_a");
addMapping("getBlockReachDistance", PlayerControllerMP.class, "func_78757_d");
addMapping("isInCreativeMode", PlayerControllerMP.class, "func_78758_h");
addMapping("sendSlotPacket", PlayerControllerMP.class, "func_78761_a");
addMapping("isNotCreative", PlayerControllerMP.class, "func_78762_g");
addMapping("gameIsSurvivalOrAdventure", PlayerControllerMP.class, "func_78763_f");
addMapping("attackEntity", PlayerControllerMP.class, "func_78764_a");
addMapping("updateController", PlayerControllerMP.class, "func_78765_e");
addMapping("onStoppedUsingItem", PlayerControllerMP.class, "func_78766_c");
addMapping("resetBlockRemoving", PlayerControllerMP.class, "func_78767_c");
addMapping("fromString", ServerAddress.class, "func_78860_a");
addMapping("getIP", ServerAddress.class, "func_78861_a");
addMapping("getInt", ServerAddress.class, "func_78862_a");
addMapping("getServerAddress", ServerAddress.class, "func_78863_b");
addMapping("getPort", ServerAddress.class, "func_78864_b");
addMapping("setBase64EncodedIconData", ServerData.class, "func_147407_a");
addMapping("getBase64EncodedIconData", ServerData.class, "func_147409_e");
addMapping("copyFrom", ServerData.class, "func_152583_a");
addMapping("setResourceMode", ServerData.class, "func_152584_a");
addMapping("getResourceMode", ServerData.class, "func_152586_b");
addMapping("isOnLAN", ServerData.class, "func_181041_d");
addMapping("getNBTCompound", ServerData.class, "func_78836_a");
addMapping("getServerDataFromNBTCompound", ServerData.class, "func_78837_a");
addMapping("set", ServerList.class, "func_147413_a");
addMapping("saveSingleServer", ServerList.class, "func_147414_b");
addMapping("addServerData", ServerList.class, "func_78849_a");
addMapping("getServerData", ServerList.class, "func_78850_a");
addMapping("removeServerData", ServerList.class, "func_78851_b");
addMapping("loadServerList", ServerList.class, "func_78853_a");
addMapping("saveServerList", ServerList.class, "func_78855_b");
addMapping("countServers", ServerList.class, "func_78856_c");
addMapping("swapServers", ServerList.class, "func_78857_a");
addMapping("getAdFromPingResponse", ThreadLanServerPing.class, "func_77523_b");
addMapping("getMotdFromPingResponse", ThreadLanServerPing.class, "func_77524_a");
addMapping("getPingResponse", ThreadLanServerPing.class, "func_77525_a");
addMapping("updateBlocks", WorldClient.class, "func_147456_g");
addMapping("playMoodSoundAndCheckLight", WorldClient.class, "func_147467_a");
addMapping("isChunkLoaded", WorldClient.class, "func_175680_a");
addMapping("invalidateRegionAndSetBlock", WorldClient.class, "func_180503_b");
addMapping("playSound", WorldClient.class, "func_184134_a");
addMapping("sendPacketToServer", WorldClient.class, "func_184135_a");
addMapping("playSound", WorldClient.class, "func_184148_a");
addMapping("showBarrierParticles", WorldClient.class, "func_184153_a");
addMapping("refreshVisibleChunks", WorldClient.class, "func_184154_a");
addMapping("playSound", WorldClient.class, "func_184156_a");
addMapping("tick", WorldClient.class, "func_72835_b");
addMapping("spawnEntity", WorldClient.class, "func_72838_d");
addMapping("onEntityRemoved", WorldClient.class, "func_72847_b");
addMapping("getChunkProvider", WorldClient.class, "func_72863_F");
addMapping("setWorldTime", WorldClient.class, "func_72877_b");
addMapping("sendQuittingDisconnectingPacket", WorldClient.class, "func_72882_A");
addMapping("removeEntity", WorldClient.class, "func_72900_e");
addMapping("addWorldInfoToCrashReport", WorldClient.class, "func_72914_a");
addMapping("onEntityAdded", WorldClient.class, "func_72923_a");
addMapping("createChunkProvider", WorldClient.class, "func_72970_h");
addMapping("updateWeather", WorldClient.class, "func_72979_l");
addMapping("removeAllEntities", WorldClient.class, "func_73022_a");
addMapping("doPreChunk", WorldClient.class, "func_73025_a");
addMapping("addEntityToWorld", WorldClient.class, "func_73027_a");
addMapping("removeEntityFromWorld", WorldClient.class, "func_73028_b");
addMapping("doVoidFogParticles", WorldClient.class, "func_73029_E");
addMapping("invalidateBlockReceiveRegion", WorldClient.class, "func_73031_a");
addMapping("getEntityByID", WorldClient.class, "func_73045_a");
addMapping("makeFireworks", WorldClient.class, "func_92088_a");
addMapping("setWorldScoreboard", WorldClient.class, "func_96443_a");
addMapping("getServerMotd", LanServerInfo.class, "func_77487_a");
addMapping("getServerIpPort", LanServerInfo.class, "func_77488_b");
addMapping("updateLastSeen", LanServerInfo.class, "func_77489_c");
addMapping("onDisconnect", NetHandlerHandshakeMemory.class, "func_147231_a");
addMapping("processHandshake", NetHandlerHandshakeMemory.class, "func_147383_a");
addMapping("onDisconnect", NetHandlerLoginClient.class, "func_147231_a");
addMapping("handleDisconnect", NetHandlerLoginClient.class, "func_147388_a");
addMapping("handleEncryptionRequest", NetHandlerLoginClient.class, "func_147389_a");
addMapping("handleLoginSuccess", NetHandlerLoginClient.class, "func_147390_a");
addMapping("getSessionService", NetHandlerLoginClient.class, "func_147391_c");
addMapping("handleEnableCompression", NetHandlerLoginClient.class, "func_180464_a");
addMapping("onDisconnect", NetHandlerPlayClient.class, "func_147231_a");
addMapping("handleBlockChange", NetHandlerPlayClient.class, "func_147234_a");
addMapping("handleSpawnObject", NetHandlerPlayClient.class, "func_147235_a");
addMapping("handleEntityStatus", NetHandlerPlayClient.class, "func_147236_a");
addMapping("handleSpawnPlayer", NetHandlerPlayClient.class, "func_147237_a");
addMapping("handleDestroyEntities", NetHandlerPlayClient.class, "func_147238_a");
addMapping("handleConfirmTransaction", NetHandlerPlayClient.class, "func_147239_a");
addMapping("handleCustomPayload", NetHandlerPlayClient.class, "func_147240_a");
addMapping("handleWindowItems", NetHandlerPlayClient.class, "func_147241_a");
addMapping("handleEntityEquipment", NetHandlerPlayClient.class, "func_147242_a");
addMapping("handleEntityAttach", NetHandlerPlayClient.class, "func_147243_a");
addMapping("handleEntityVelocity", NetHandlerPlayClient.class, "func_147244_a");
addMapping("handleWindowProperty", NetHandlerPlayClient.class, "func_147245_a");
addMapping("handleCollectItem", NetHandlerPlayClient.class, "func_147246_a");
addMapping("handleTeams", NetHandlerPlayClient.class, "func_147247_a");
addMapping("handleUpdateHealth", NetHandlerPlayClient.class, "func_147249_a");
addMapping("handleUpdateScore", NetHandlerPlayClient.class, "func_147250_a");
addMapping("handleChat", NetHandlerPlayClient.class, "func_147251_a");
addMapping("handleChangeGameState", NetHandlerPlayClient.class, "func_147252_a");
addMapping("handleDisconnect", NetHandlerPlayClient.class, "func_147253_a");
addMapping("handleDisplayObjective", NetHandlerPlayClient.class, "func_147254_a");
addMapping("handlePlayerListItem", NetHandlerPlayClient.class, "func_147256_a");
addMapping("handleHeldItemChange", NetHandlerPlayClient.class, "func_147257_a");
addMapping("handleEntityMovement", NetHandlerPlayClient.class, "func_147259_a");
addMapping("handleEntityEffect", NetHandlerPlayClient.class, "func_147260_a");
addMapping("handleBlockAction", NetHandlerPlayClient.class, "func_147261_a");
addMapping("handleRemoveEntityEffect", NetHandlerPlayClient.class, "func_147262_a");
addMapping("handleChunkData", NetHandlerPlayClient.class, "func_147263_a");
addMapping("handleMaps", NetHandlerPlayClient.class, "func_147264_a");
addMapping("handleOpenWindow", NetHandlerPlayClient.class, "func_147265_a");
addMapping("handleSetSlot", NetHandlerPlayClient.class, "func_147266_a");
addMapping("handleEntityHeadLook", NetHandlerPlayClient.class, "func_147267_a");
addMapping("handleSignEditorOpen", NetHandlerPlayClient.class, "func_147268_a");
addMapping("handlePlayerAbilities", NetHandlerPlayClient.class, "func_147270_a");
addMapping("handleSpawnPosition", NetHandlerPlayClient.class, "func_147271_a");
addMapping("handleKeepAlive", NetHandlerPlayClient.class, "func_147272_a");
addMapping("handleUpdateTileEntity", NetHandlerPlayClient.class, "func_147273_a");
addMapping("handleTabComplete", NetHandlerPlayClient.class, "func_147274_a");
addMapping("handleEntityTeleport", NetHandlerPlayClient.class, "func_147275_a");
addMapping("handleCloseWindow", NetHandlerPlayClient.class, "func_147276_a");
addMapping("handleEffect", NetHandlerPlayClient.class, "func_147277_a");
addMapping("handleUseBed", NetHandlerPlayClient.class, "func_147278_a");
addMapping("handleAnimation", NetHandlerPlayClient.class, "func_147279_a");
addMapping("handleRespawn", NetHandlerPlayClient.class, "func_147280_a");
addMapping("handleSpawnMob", NetHandlerPlayClient.class, "func_147281_a");
addMapping("handleJoinGame", NetHandlerPlayClient.class, "func_147282_a");
addMapping("handleExplosion", NetHandlerPlayClient.class, "func_147283_a");
addMapping("handleEntityMetadata", NetHandlerPlayClient.class, "func_147284_a");
addMapping("handleTimeUpdate", NetHandlerPlayClient.class, "func_147285_a");
addMapping("handleSpawnExperienceOrb", NetHandlerPlayClient.class, "func_147286_a");
addMapping("handleMultiBlockChange", NetHandlerPlayClient.class, "func_147287_a");
addMapping("handleSpawnPainting", NetHandlerPlayClient.class, "func_147288_a");
addMapping("handleParticles", NetHandlerPlayClient.class, "func_147289_a");
addMapping("handleEntityProperties", NetHandlerPlayClient.class, "func_147290_a");
addMapping("handleScoreboardObjective", NetHandlerPlayClient.class, "func_147291_a");
addMapping("handleSpawnGlobalEntity", NetHandlerPlayClient.class, "func_147292_a");
addMapping("handleStatistics", NetHandlerPlayClient.class, "func_147293_a");
addMapping("handleBlockBreakAnim", NetHandlerPlayClient.class, "func_147294_a");
addMapping("handleSetExperience", NetHandlerPlayClient.class, "func_147295_a");
addMapping("cleanup", NetHandlerPlayClient.class, "func_147296_c");
addMapping("sendPacket", NetHandlerPlayClient.class, "func_147297_a");
addMapping("getNetworkManager", NetHandlerPlayClient.class, "func_147298_b");
addMapping("handleWorldBorder", NetHandlerPlayClient.class, "func_175093_a");
addMapping("handleCamera", NetHandlerPlayClient.class, "func_175094_a");
addMapping("handleResourcePack", NetHandlerPlayClient.class, "func_175095_a");
addMapping("handlePlayerListHeaderFooter", NetHandlerPlayClient.class, "func_175096_a");
addMapping("handleCombatEvent", NetHandlerPlayClient.class, "func_175098_a");
addMapping("handleTitle", NetHandlerPlayClient.class, "func_175099_a");
addMapping("handleServerDifficulty", NetHandlerPlayClient.class, "func_175101_a");
addMapping("getPlayerInfo", NetHandlerPlayClient.class, "func_175102_a");
addMapping("getPlayerInfo", NetHandlerPlayClient.class, "func_175104_a");
addMapping("getGameProfile", NetHandlerPlayClient.class, "func_175105_e");
addMapping("getPlayerInfoMap", NetHandlerPlayClient.class, "func_175106_d");
addMapping("handleMoveVehicle", NetHandlerPlayClient.class, "func_184323_a");
addMapping("handleCooldown", NetHandlerPlayClient.class, "func_184324_a");
addMapping("handleUpdateBossInfo", NetHandlerPlayClient.class, "func_184325_a");
addMapping("processChunkUnload", NetHandlerPlayClient.class, "func_184326_a");
addMapping("handleSoundEffect", NetHandlerPlayClient.class, "func_184327_a");
addMapping("handleSetPassengers", NetHandlerPlayClient.class, "func_184328_a");
addMapping("handleCustomSound", NetHandlerPlayClient.class, "func_184329_a");
addMapping("handlePlayerPosLook", NetHandlerPlayClient.class, "func_184330_a");
addMapping("createDownloadCallback", NetHandlerPlayClient.class, "func_189686_f");
addMapping("validateResourcePackUrl", NetHandlerPlayClient.class, "func_189688_b");
addMapping("handleRecipeBook", NetHandlerPlayClient.class, "func_191980_a");
addMapping("handleAdvancementInfo", NetHandlerPlayClient.class, "func_191981_a");
addMapping("getAdvancementManager", NetHandlerPlayClient.class, "func_191982_f");
addMapping("handleSelectAdvancementsTab", NetHandlerPlayClient.class, "func_194022_a");
addMapping("getLastHealth", NetworkPlayerInfo.class, "func_178835_l");
addMapping("setLastHealth", NetworkPlayerInfo.class, "func_178836_b");
addMapping("getLocationSkin", NetworkPlayerInfo.class, "func_178837_g");
addMapping("setResponseTime", NetworkPlayerInfo.class, "func_178838_a");
addMapping("setGameType", NetworkPlayerInfo.class, "func_178839_a");
addMapping("loadPlayerTextures", NetworkPlayerInfo.class, "func_178841_j");
addMapping("setRenderVisibilityId", NetworkPlayerInfo.class, "func_178843_c");
addMapping("setHealthBlinkTime", NetworkPlayerInfo.class, "func_178844_b");
addMapping("getGameProfile", NetworkPlayerInfo.class, "func_178845_a");
addMapping("setLastHealthTime", NetworkPlayerInfo.class, "func_178846_a");
addMapping("getLastHealthTime", NetworkPlayerInfo.class, "func_178847_n");
addMapping("getGameType", NetworkPlayerInfo.class, "func_178848_b");
addMapping("getPlayerTeam", NetworkPlayerInfo.class, "func_178850_i");
addMapping("getSkinType", NetworkPlayerInfo.class, "func_178851_f");
addMapping("getResponseTime", NetworkPlayerInfo.class, "func_178853_c");
addMapping("getDisplayName", NetworkPlayerInfo.class, "func_178854_k");
addMapping("getRenderVisibilityId", NetworkPlayerInfo.class, "func_178855_p");
addMapping("hasLocationSkin", NetworkPlayerInfo.class, "func_178856_e");
addMapping("setDisplayHealth", NetworkPlayerInfo.class, "func_178857_c");
addMapping("getHealthBlinkTime", NetworkPlayerInfo.class, "func_178858_o");
addMapping("setDisplayName", NetworkPlayerInfo.class, "func_178859_a");
addMapping("getDisplayHealth", NetworkPlayerInfo.class, "func_178860_m");
addMapping("getLocationCape", NetworkPlayerInfo.class, "func_178861_h");
addMapping("getLocationElytra", NetworkPlayerInfo.class, "func_187106_i");
addMapping("pingPendingNetworks", ServerPinger.class, "func_147223_a");
addMapping("ping", ServerPinger.class, "func_147224_a");
addMapping("tryCompatibilityPing", ServerPinger.class, "func_147225_b");
addMapping("clearPendingNetworks", ServerPinger.class, "func_147226_b");
addMapping("renderParticle", Barrier.class, "func_180434_a");
addMapping("getFXLayer", Barrier.class, "func_70537_b");
addMapping("createParticle", IParticleFactory.class, "func_178902_a");
addMapping("renderParticle", Particle.class, "func_180434_a");
addMapping("setBoundingBox", Particle.class, "func_187108_a");
addMapping("setPosition", Particle.class, "func_187109_b");
addMapping("move", Particle.class, "func_187110_a");
addMapping("shouldDisableDepth", Particle.class, "func_187111_c");
addMapping("setExpired", Particle.class, "func_187112_i");
addMapping("isAlive", Particle.class, "func_187113_k");
addMapping("setMaxAge", Particle.class, "func_187114_a");
addMapping("setSize", Particle.class, "func_187115_a");
addMapping("getBoundingBox", Particle.class, "func_187116_l");
addMapping("setParticleTexture", Particle.class, "func_187117_a");
addMapping("resetPositionToBB", Particle.class, "func_187118_j");
addMapping("onUpdate", Particle.class, "func_189213_a");
addMapping("getBrightnessForRender", Particle.class, "func_189214_a");
addMapping("getRedColorF", Particle.class, "func_70534_d");
addMapping("getBlueColorF", Particle.class, "func_70535_g");
addMapping("setParticleTextureIndex", Particle.class, "func_70536_a");
addMapping("getFXLayer", Particle.class, "func_70537_b");
addMapping("setRBGColorF", Particle.class, "func_70538_b");
addMapping("multipleParticleScaleBy", Particle.class, "func_70541_f");
addMapping("getGreenColorF", Particle.class, "func_70542_f");
addMapping("multiplyVelocity", Particle.class, "func_70543_e");
addMapping("setAlphaF", Particle.class, "func_82338_g");
addMapping("nextTextureIndexX", Particle.class, "func_94053_h");
addMapping("renderParticle", ParticleBreaking.class, "func_180434_a");
addMapping("getFXLayer", ParticleBreaking.class, "func_70537_b");
addMapping("onUpdate", ParticleBubble.class, "func_189213_a");
addMapping("renderParticle", ParticleCloud.class, "func_180434_a");
addMapping("onUpdate", ParticleCloud.class, "func_189213_a");
addMapping("renderParticle", ParticleCrit.class, "func_180434_a");
addMapping("onUpdate", ParticleCrit.class, "func_189213_a");
addMapping("init", ParticleDigging.class, "func_174845_l");
addMapping("setBlockPos", ParticleDigging.class, "func_174846_a");
addMapping("renderParticle", ParticleDigging.class, "func_180434_a");
addMapping("multiplyColor", ParticleDigging.class, "func_187154_b");
addMapping("getBrightnessForRender", ParticleDigging.class, "func_189214_a");
addMapping("getFXLayer", ParticleDigging.class, "func_70537_b");
addMapping("renderParticle", ParticleDragonBreath.class, "func_180434_a");
addMapping("onUpdate", ParticleDragonBreath.class, "func_189213_a");
addMapping("onUpdate", ParticleDrip.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleDrip.class, "func_189214_a");
addMapping("renderParticle", ParticleEmitter.class, "func_180434_a");
addMapping("onUpdate", ParticleEmitter.class, "func_189213_a");
addMapping("getFXLayer", ParticleEmitter.class, "func_70537_b");
addMapping("move", ParticleEnchantmentTable.class, "func_187110_a");
addMapping("onUpdate", ParticleEnchantmentTable.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleEnchantmentTable.class, "func_189214_a");
addMapping("move", ParticleEndRod.class, "func_187110_a");
addMapping("onUpdate", ParticleExplosion.class, "func_189213_a");
addMapping("renderParticle", ParticleExplosionHuge.class, "func_180434_a");
addMapping("onUpdate", ParticleExplosionHuge.class, "func_189213_a");
addMapping("getFXLayer", ParticleExplosionHuge.class, "func_70537_b");
addMapping("renderParticle", ParticleExplosionLarge.class, "func_180434_a");
addMapping("onUpdate", ParticleExplosionLarge.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleExplosionLarge.class, "func_189214_a");
addMapping("getFXLayer", ParticleExplosionLarge.class, "func_70537_b");
addMapping("renderParticle", ParticleFallingDust.class, "func_180434_a");
addMapping("onUpdate", ParticleFallingDust.class, "func_189213_a");
addMapping("renderParticle", ParticleFlame.class, "func_180434_a");
addMapping("move", ParticleFlame.class, "func_187110_a");
addMapping("onUpdate", ParticleFlame.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleFlame.class, "func_189214_a");
addMapping("renderParticle", ParticleFootStep.class, "func_180434_a");
addMapping("onUpdate", ParticleFootStep.class, "func_189213_a");
addMapping("getFXLayer", ParticleFootStep.class, "func_70537_b");
addMapping("renderParticle", ParticleHeart.class, "func_180434_a");
addMapping("onUpdate", ParticleHeart.class, "func_189213_a");
addMapping("renderParticle", ParticleItemPickup.class, "func_180434_a");
addMapping("onUpdate", ParticleItemPickup.class, "func_189213_a");
addMapping("getFXLayer", ParticleItemPickup.class, "func_70537_b");
addMapping("renderParticle", ParticleLava.class, "func_180434_a");
addMapping("onUpdate", ParticleLava.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleLava.class, "func_189214_a");
addMapping("updateEffectLayer", ParticleManager.class, "func_178922_a");
addMapping("tickParticle", ParticleManager.class, "func_178923_d");
addMapping("emitParticleAtEntity", ParticleManager.class, "func_178926_a");
addMapping("spawnEffectParticle", ParticleManager.class, "func_178927_a");
addMapping("registerParticle", ParticleManager.class, "func_178929_a");
addMapping("registerVanillaParticles", ParticleManager.class, "func_178930_c");
addMapping("addBlockHitEffects", ParticleManager.class, "func_180532_a");
addMapping("addBlockDestroyEffects", ParticleManager.class, "func_180533_a");
addMapping("tickParticleList", ParticleManager.class, "func_187240_a");
addMapping("emitParticleAtEntity", ParticleManager.class, "func_191271_a");
addMapping("updateEffects", ParticleManager.class, "func_78868_a");
addMapping("getStatistics", ParticleManager.class, "func_78869_b");
addMapping("clearEffects", ParticleManager.class, "func_78870_a");
addMapping("renderLitParticles", ParticleManager.class, "func_78872_b");
addMapping("addEffect", ParticleManager.class, "func_78873_a");
addMapping("renderParticles", ParticleManager.class, "func_78874_a");
addMapping("renderParticle", ParticleMobAppearance.class, "func_180434_a");
addMapping("onUpdate", ParticleMobAppearance.class, "func_189213_a");
addMapping("getFXLayer", ParticleMobAppearance.class, "func_70537_b");
addMapping("renderParticle", ParticleNote.class, "func_180434_a");
addMapping("onUpdate", ParticleNote.class, "func_189213_a");
addMapping("renderParticle", ParticlePortal.class, "func_180434_a");
addMapping("move", ParticlePortal.class, "func_187110_a");
addMapping("onUpdate", ParticlePortal.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticlePortal.class, "func_189214_a");
addMapping("onUpdate", ParticleRain.class, "func_189213_a");
addMapping("renderParticle", ParticleRedstone.class, "func_180434_a");
addMapping("onUpdate", ParticleRedstone.class, "func_189213_a");
addMapping("shouldDisableDepth", ParticleSimpleAnimated.class, "func_187111_c");
addMapping("setColorFade", ParticleSimpleAnimated.class, "func_187145_d");
addMapping("setColor", ParticleSimpleAnimated.class, "func_187146_c");
addMapping("onUpdate", ParticleSimpleAnimated.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleSimpleAnimated.class, "func_189214_a");
addMapping("setBaseAirFriction", ParticleSimpleAnimated.class, "func_191238_f");
addMapping("renderParticle", ParticleSmokeNormal.class, "func_180434_a");
addMapping("onUpdate", ParticleSmokeNormal.class, "func_189213_a");
addMapping("renderParticle", ParticleSnowShovel.class, "func_180434_a");
addMapping("onUpdate", ParticleSnowShovel.class, "func_189213_a");
addMapping("shouldDisableDepth", ParticleSpell.class, "func_187111_c");
addMapping("onUpdate", ParticleSpell.class, "func_189213_a");
addMapping("setBaseSpellTextureIndex", ParticleSpell.class, "func_70589_b");
addMapping("onUpdate", ParticleSpit.class, "func_189213_a");
addMapping("onUpdate", ParticleSuspend.class, "func_189213_a");
addMapping("move", ParticleSuspendedTown.class, "func_187110_a");
addMapping("onUpdate", ParticleSuspendedTown.class, "func_189213_a");
addMapping("renderParticle", ParticleSweepAttack.class, "func_180434_a");
addMapping("onUpdate", ParticleSweepAttack.class, "func_189213_a");
addMapping("getBrightnessForRender", ParticleSweepAttack.class, "func_189214_a");
addMapping("getFXLayer", ParticleSweepAttack.class, "func_70537_b");
addMapping("onUpdate", ParticleWaterWake.class, "func_189213_a");
addMapping("getGuiID", ContainerLocalMenu.class, "func_174875_k");
addMapping("createContainer", ContainerLocalMenu.class, "func_174876_a");
addMapping("setField", ContainerLocalMenu.class, "func_174885_b");
addMapping("getField", ContainerLocalMenu.class, "func_174887_a_");
addMapping("getFieldCount", ContainerLocalMenu.class, "func_174890_g");
addMapping("getLockCode", ContainerLocalMenu.class, "func_174891_i");
addMapping("setLockCode", ContainerLocalMenu.class, "func_174892_a");
addMapping("isLocked", ContainerLocalMenu.class, "func_174893_q_");
addMapping("getDisplayName", LocalBlockIntercommunication.class, "func_145748_c_");
addMapping("hasCustomName", LocalBlockIntercommunication.class, "func_145818_k_");
addMapping("getGuiID", LocalBlockIntercommunication.class, "func_174875_k");
addMapping("createContainer", LocalBlockIntercommunication.class, "func_174876_a");
addMapping("getName", LocalBlockIntercommunication.class, "func_70005_c_");
addMapping("getRotationZ", ActiveRenderInfo.class, "func_178803_d");
addMapping("getRotationYZ", ActiveRenderInfo.class, "func_178805_e");
addMapping("projectViewFromEntity", ActiveRenderInfo.class, "func_178806_a");
addMapping("getRotationXY", ActiveRenderInfo.class, "func_178807_f");
addMapping("getRotationX", ActiveRenderInfo.class, "func_178808_b");
addMapping("getRotationXZ", ActiveRenderInfo.class, "func_178809_c");
addMapping("getBlockStateAtEntityViewpoint", ActiveRenderInfo.class, "func_186703_a");
addMapping("updateRenderInfo", ActiveRenderInfo.class, "func_74583_a");
addMapping("initAtlasSprites", BlockFluidRenderer.class, "func_178268_a");
addMapping("getFluidHeight", BlockFluidRenderer.class, "func_178269_a");
addMapping("renderFluid", BlockFluidRenderer.class, "func_178270_a");
addMapping("renderModelBrightnessColor", BlockModelRenderer.class, "func_178262_a");
addMapping("renderModelBrightnessColorQuads", BlockModelRenderer.class, "func_178264_a");
addMapping("renderModelBrightness", BlockModelRenderer.class, "func_178266_a");
addMapping("renderModel", BlockModelRenderer.class, "func_178267_a");
addMapping("renderQuadsSmooth", BlockModelRenderer.class, "func_187492_a");
addMapping("renderModel", BlockModelRenderer.class, "func_187493_a");
addMapping("fillQuadBounds", BlockModelRenderer.class, "func_187494_a");
addMapping("renderModelBrightnessColor", BlockModelRenderer.class, "func_187495_a");
addMapping("renderQuadsFlat", BlockModelRenderer.class, "func_187496_a");
addMapping("renderModelFlat", BlockModelRenderer.class, "func_187497_c");
addMapping("renderModelSmooth", BlockModelRenderer.class, "func_187498_b");
addMapping("registerAllBlocks", BlockModelShapes.class, "func_178119_d");
addMapping("getBlockStateMapper", BlockModelShapes.class, "func_178120_a");
addMapping("registerBlockWithStateMapper", BlockModelShapes.class, "func_178121_a");
addMapping("getTexture", BlockModelShapes.class, "func_178122_a");
addMapping("registerBuiltInBlocks", BlockModelShapes.class, "func_178123_a");
addMapping("reloadModels", BlockModelShapes.class, "func_178124_c");
addMapping("getModelForState", BlockModelShapes.class, "func_178125_b");
addMapping("getModelManager", BlockModelShapes.class, "func_178126_b");
addMapping("onResourceManagerReload", BlockRendererDispatcher.class, "func_110549_a");
addMapping("renderBlockBrightness", BlockRendererDispatcher.class, "func_175016_a");
addMapping("renderBlock", BlockRendererDispatcher.class, "func_175018_a");
addMapping("getBlockModelRenderer", BlockRendererDispatcher.class, "func_175019_b");
addMapping("renderBlockDamage", BlockRendererDispatcher.class, "func_175020_a");
addMapping("getBlockModelShapes", BlockRendererDispatcher.class, "func_175023_a");
addMapping("getModelForState", BlockRendererDispatcher.class, "func_184389_a");
addMapping("putBrightness4", BufferBuilder.class, "func_178962_a");
addMapping("reset", BufferBuilder.class, "func_178965_a");
addMapping("getByteBuffer", BufferBuilder.class, "func_178966_f");
addMapping("putColor4", BufferBuilder.class, "func_178968_d");
addMapping("setTranslation", BufferBuilder.class, "func_178969_c");
addMapping("putColorRGBA", BufferBuilder.class, "func_178972_a");
addMapping("getVertexFormat", BufferBuilder.class, "func_178973_g");
addMapping("putNormal", BufferBuilder.class, "func_178975_e");
addMapping("finishDrawing", BufferBuilder.class, "func_178977_d");
addMapping("putColorMultiplier", BufferBuilder.class, "func_178978_a");
addMapping("getDrawMode", BufferBuilder.class, "func_178979_i");
addMapping("addVertexData", BufferBuilder.class, "func_178981_a");
addMapping("putPosition", BufferBuilder.class, "func_178987_a");
addMapping("getVertexCount", BufferBuilder.class, "func_178989_h");
addMapping("putColorRGB_F4", BufferBuilder.class, "func_178990_f");
addMapping("setVertexState", BufferBuilder.class, "func_178993_a");
addMapping("putColorRGB_F", BufferBuilder.class, "func_178994_b");
addMapping("pos", BufferBuilder.class, "func_181662_b");
addMapping("normal", BufferBuilder.class, "func_181663_c");
addMapping("getBufferSize", BufferBuilder.class, "func_181664_j");
addMapping("getDistanceSq", BufferBuilder.class, "func_181665_a");
addMapping("color", BufferBuilder.class, "func_181666_a");
addMapping("nextVertexFormatIndex", BufferBuilder.class, "func_181667_k");
addMapping("begin", BufferBuilder.class, "func_181668_a");
addMapping("color", BufferBuilder.class, "func_181669_b");
addMapping("growBuffer", BufferBuilder.class, "func_181670_b");
addMapping("getVertexState", BufferBuilder.class, "func_181672_a");
addMapping("sortVertexData", BufferBuilder.class, "func_181674_a");
addMapping("endVertex", BufferBuilder.class, "func_181675_d");
addMapping("lightmap", BufferBuilder.class, "func_187314_a");
addMapping("tex", BufferBuilder.class, "func_187315_a");
addMapping("putColor", BufferBuilder.class, "func_192836_a");
addMapping("getColorIndex", BufferBuilder.class, "func_78909_a");
addMapping("noColor", BufferBuilder.class, "func_78914_f");
addMapping("renderChestBrightness", ChestRenderer.class, "func_178175_a");
addMapping("renderChunkLayer", ChunkRenderContainer.class, "func_178001_a");
addMapping("addRenderChunk", ChunkRenderContainer.class, "func_178002_a");
addMapping("preRenderChunk", ChunkRenderContainer.class, "func_178003_a");
addMapping("initialize", ChunkRenderContainer.class, "func_178004_a");
addMapping("getPosition", DestroyBlockProgress.class, "func_180246_b");
addMapping("getPartialBlockDamage", DestroyBlockProgress.class, "func_73106_e");
addMapping("setPartialBlockDamage", DestroyBlockProgress.class, "func_73107_a");
addMapping("getCreationCloudUpdateTick", DestroyBlockProgress.class, "func_82743_f");
addMapping("setCloudUpdateTick", DestroyBlockProgress.class, "func_82744_b");
addMapping("onResourceManagerReload", EntityRenderer.class, "func_110549_a");
addMapping("getMapItemRenderer", EntityRenderer.class, "func_147701_i");
addMapping("isShaderActive", EntityRenderer.class, "func_147702_a");
addMapping("updateShaderGroupSize", EntityRenderer.class, "func_147704_a");
addMapping("getShaderGroup", EntityRenderer.class, "func_147706_e");
addMapping("renderStreamIndicator", EntityRenderer.class, "func_152430_c");
addMapping("loadEntityShader", EntityRenderer.class, "func_175066_a");
addMapping("renderWorldPass", EntityRenderer.class, "func_175068_a");
addMapping("loadShader", EntityRenderer.class, "func_175069_a");
addMapping("isDrawBlockOutline", EntityRenderer.class, "func_175070_n");
addMapping("switchUseShader", EntityRenderer.class, "func_175071_c");
addMapping("disableLightmap", EntityRenderer.class, "func_175072_h");
addMapping("enableLightmap", EntityRenderer.class, "func_180436_i");
addMapping("renderCloudsCheck", EntityRenderer.class, "func_180437_a");
addMapping("getNightVisionBrightness", EntityRenderer.class, "func_180438_a");
addMapping("stopUseShader", EntityRenderer.class, "func_181022_b");
addMapping("updateCameraAndRender", EntityRenderer.class, "func_181560_a");
addMapping("createWorldIcon", EntityRenderer.class, "func_184373_n");
addMapping("drawNameplate", EntityRenderer.class, "func_189692_a");
addMapping("renderItemActivation", EntityRenderer.class, "func_190563_a");
addMapping("resetData", EntityRenderer.class, "func_190564_k");
addMapping("displayItemActivation", EntityRenderer.class, "func_190565_a");
addMapping("setupFogColor", EntityRenderer.class, "func_191514_d");
addMapping("updateRenderer", EntityRenderer.class, "func_78464_a");
addMapping("updateFogColor", EntityRenderer.class, "func_78466_h");
addMapping("orientCamera", EntityRenderer.class, "func_78467_g");
addMapping("setupFog", EntityRenderer.class, "func_78468_a");
addMapping("setFogColorBuffer", EntityRenderer.class, "func_78469_a");
addMapping("updateTorchFlicker", EntityRenderer.class, "func_78470_f");
addMapping("renderWorld", EntityRenderer.class, "func_78471_a");
addMapping("updateLightmap", EntityRenderer.class, "func_78472_g");
addMapping("getMouseOver", EntityRenderer.class, "func_78473_a");
addMapping("renderRainSnow", EntityRenderer.class, "func_78474_d");
addMapping("applyBobbing", EntityRenderer.class, "func_78475_f");
addMapping("renderHand", EntityRenderer.class, "func_78476_b");
addMapping("updateFovModifierHand", EntityRenderer.class, "func_78477_e");
addMapping("setupOverlayRendering", EntityRenderer.class, "func_78478_c");
addMapping("setupCameraTransform", EntityRenderer.class, "func_78479_a");
addMapping("getFOVModifier", EntityRenderer.class, "func_78481_a");
addMapping("hurtCameraEffect", EntityRenderer.class, "func_78482_e");
addMapping("addRainParticles", EntityRenderer.class, "func_78484_h");
addMapping("getVertexInformation", EnumFaceDirection.class, "func_179025_a");
addMapping("getFacing", EnumFaceDirection.class, "func_179027_a");
addMapping("deleteDisplayLists", GLAllocation.class, "func_178874_a");
addMapping("deleteDisplayLists", GLAllocation.class, "func_74523_b");
addMapping("createDirectByteBuffer", GLAllocation.class, "func_74524_c");
addMapping("generateDisplayLists", GLAllocation.class, "func_74526_a");
addMapping("createDirectIntBuffer", GLAllocation.class, "func_74527_f");
addMapping("createDirectFloatBuffer", GLAllocation.class, "func_74529_h");
addMapping("clearColor", GlStateManager.class, "func_179082_a");
addMapping("viewport", GlStateManager.class, "func_179083_b");
addMapping("disableBlend", GlStateManager.class, "func_179084_k");
addMapping("enableLight", GlStateManager.class, "func_179085_a");
addMapping("clear", GlStateManager.class, "func_179086_m");
addMapping("enableTexGenCoord", GlStateManager.class, "func_179087_a");
addMapping("enablePolygonOffset", GlStateManager.class, "func_179088_q");
addMapping("enableCull", GlStateManager.class, "func_179089_o");
addMapping("disableTexture2D", GlStateManager.class, "func_179090_x");
addMapping("enableRescaleNormal", GlStateManager.class, "func_179091_B");
addMapping("alphaFunc", GlStateManager.class, "func_179092_a");
addMapping("setFog", GlStateManager.class, "func_179093_d");
addMapping("pushMatrix", GlStateManager.class, "func_179094_E");
addMapping("setFogDensity", GlStateManager.class, "func_179095_a");
addMapping("loadIdentity", GlStateManager.class, "func_179096_D");
addMapping("disableDepth", GlStateManager.class, "func_179097_i");
addMapping("enableTexture2D", GlStateManager.class, "func_179098_w");
addMapping("popAttrib", GlStateManager.class, "func_179099_b");
addMapping("disableTexGenCoord", GlStateManager.class, "func_179100_b");
addMapping("disableRescaleNormal", GlStateManager.class, "func_179101_C");
addMapping("setFogStart", GlStateManager.class, "func_179102_b");
addMapping("shadeModel", GlStateManager.class, "func_179103_j");
addMapping("colorMaterial", GlStateManager.class, "func_179104_a");
addMapping("texGen", GlStateManager.class, "func_179105_a");
addMapping("disableFog", GlStateManager.class, "func_179106_n");
addMapping("cullFace", GlStateManager.class, "func_179107_e");
addMapping("enableNormalize", GlStateManager.class, "func_179108_z");
addMapping("translate", GlStateManager.class, "func_179109_b");
addMapping("multMatrix", GlStateManager.class, "func_179110_a");
addMapping("getFloat", GlStateManager.class, "func_179111_a");
addMapping("blendFunc", GlStateManager.class, "func_179112_b");
addMapping("disablePolygonOffset", GlStateManager.class, "func_179113_r");
addMapping("rotate", GlStateManager.class, "func_179114_b");
addMapping("enableColorLogic", GlStateManager.class, "func_179115_u");
addMapping("colorLogicOp", GlStateManager.class, "func_179116_f");
addMapping("resetColor", GlStateManager.class, "func_179117_G");
addMapping("disableAlpha", GlStateManager.class, "func_179118_c");
addMapping("disableColorMaterial", GlStateManager.class, "func_179119_h");
addMapping("tryBlendFuncSeparate", GlStateManager.class, "func_179120_a");
addMapping("popMatrix", GlStateManager.class, "func_179121_F");
addMapping("disableLight", GlStateManager.class, "func_179122_b");
addMapping("pushAttrib", GlStateManager.class, "func_179123_a");
addMapping("color", GlStateManager.class, "func_179124_c");
addMapping("texGenCoord", GlStateManager.class, "func_179125_c");
addMapping("enableDepth", GlStateManager.class, "func_179126_j");
addMapping("enableFog", GlStateManager.class, "func_179127_m");
addMapping("matrixMode", GlStateManager.class, "func_179128_n");
addMapping("disableCull", GlStateManager.class, "func_179129_p");
addMapping("ortho", GlStateManager.class, "func_179130_a");
addMapping("color", GlStateManager.class, "func_179131_c");
addMapping("depthMask", GlStateManager.class, "func_179132_a");
addMapping("disableNormalize", GlStateManager.class, "func_179133_A");
addMapping("disableColorLogic", GlStateManager.class, "func_179134_v");
addMapping("colorMask", GlStateManager.class, "func_179135_a");
addMapping("doPolygonOffset", GlStateManager.class, "func_179136_a");
addMapping("translate", GlStateManager.class, "func_179137_b");
addMapping("setActiveTexture", GlStateManager.class, "func_179138_g");
addMapping("scale", GlStateManager.class, "func_179139_a");
addMapping("disableLighting", GlStateManager.class, "func_179140_f");
addMapping("enableAlpha", GlStateManager.class, "func_179141_d");
addMapping("enableColorMaterial", GlStateManager.class, "func_179142_g");
addMapping("depthFunc", GlStateManager.class, "func_179143_c");
addMapping("bindTexture", GlStateManager.class, "func_179144_i");
addMapping("enableLighting", GlStateManager.class, "func_179145_e");
addMapping("generateTexture", GlStateManager.class, "func_179146_y");
addMapping("enableBlend", GlStateManager.class, "func_179147_l");
addMapping("callList", GlStateManager.class, "func_179148_o");
addMapping("texGen", GlStateManager.class, "func_179149_a");
addMapping("deleteTexture", GlStateManager.class, "func_179150_h");
addMapping("clearDepth", GlStateManager.class, "func_179151_a");
addMapping("scale", GlStateManager.class, "func_179152_a");
addMapping("setFogEnd", GlStateManager.class, "func_179153_c");
addMapping("glGetInteger", GlStateManager.class, "func_187397_v");
addMapping("glBlendEquation", GlStateManager.class, "func_187398_d");
addMapping("glTexEnvi", GlStateManager.class, "func_187399_a");
addMapping("glColorPointer", GlStateManager.class, "func_187400_c");
addMapping("blendFunc", GlStateManager.class, "func_187401_a");
addMapping("glFog", GlStateManager.class, "func_187402_b");
addMapping("glTexParameterf", GlStateManager.class, "func_187403_b");
addMapping("glTexCoordPointer", GlStateManager.class, "func_187404_a");
addMapping("glTexCoordPointer", GlStateManager.class, "func_187405_c");
addMapping("glColorPointer", GlStateManager.class, "func_187406_e");
addMapping("cullFace", GlStateManager.class, "func_187407_a");
addMapping("enableBlendProfile", GlStateManager.class, "func_187408_a");
addMapping("glPolygonMode", GlStateManager.class, "func_187409_d");
addMapping("glEnableClientState", GlStateManager.class, "func_187410_q");
addMapping("glGetTexLevelParameteri", GlStateManager.class, "func_187411_c");
addMapping("glFogi", GlStateManager.class, "func_187412_c");
addMapping("glReadPixels", GlStateManager.class, "func_187413_a");
addMapping("glTexSubImage2D", GlStateManager.class, "func_187414_b");
addMapping("glEndList", GlStateManager.class, "func_187415_K");
addMapping("glGetString", GlStateManager.class, "func_187416_u");
addMapping("disableOutlineMode", GlStateManager.class, "func_187417_n");
addMapping("quatToGlMatrix", GlStateManager.class, "func_187418_a");
addMapping("glTexImage2D", GlStateManager.class, "func_187419_a");
addMapping("glVertexPointer", GlStateManager.class, "func_187420_d");
addMapping("glTexParameteri", GlStateManager.class, "func_187421_b");
addMapping("colorLogicOp", GlStateManager.class, "func_187422_a");
addMapping("glNewList", GlStateManager.class, "func_187423_f");
addMapping("glLightModel", GlStateManager.class, "func_187424_a");
addMapping("glPixelStorei", GlStateManager.class, "func_187425_g");
addMapping("glTexCoord2f", GlStateManager.class, "func_187426_b");
addMapping("glVertexPointer", GlStateManager.class, "func_187427_b");
addMapping("tryBlendFuncSeparate", GlStateManager.class, "func_187428_a");
addMapping("glDisableClientState", GlStateManager.class, "func_187429_p");
addMapping("setFog", GlStateManager.class, "func_187430_a");
addMapping("enableOutlineMode", GlStateManager.class, "func_187431_e");
addMapping("glNormal3f", GlStateManager.class, "func_187432_a");
addMapping("glGetTexImage", GlStateManager.class, "func_187433_a");
addMapping("glGetError", GlStateManager.class, "func_187434_L");
addMapping("glVertex3f", GlStateManager.class, "func_187435_e");
addMapping("glTexEnvf", GlStateManager.class, "func_187436_a");
addMapping("glEnd", GlStateManager.class, "func_187437_J");
addMapping("glLight", GlStateManager.class, "func_187438_a");
addMapping("glDrawArrays", GlStateManager.class, "func_187439_f");
addMapping("disableBlendProfile", GlStateManager.class, "func_187440_b");
addMapping("glLineWidth", GlStateManager.class, "func_187441_d");
addMapping("glGenLists", GlStateManager.class, "func_187442_t");
addMapping("glCopyTexSubImage2D", GlStateManager.class, "func_187443_a");
addMapping("rotate", GlStateManager.class, "func_187444_a");
addMapping("glGetInteger", GlStateManager.class, "func_187445_a");
addMapping("glNormalPointer", GlStateManager.class, "func_187446_a");
addMapping("glBegin", GlStateManager.class, "func_187447_r");
addMapping("glTexEnv", GlStateManager.class, "func_187448_b");
addMapping("glDeleteLists", GlStateManager.class, "func_187449_e");
addMapping("skinAvailable", IImageBuffer.class, "func_152634_a");
addMapping("parseUserSkin", IImageBuffer.class, "func_78432_a");
addMapping("skinAvailable", ImageBufferDownload.class, "func_152634_a");
addMapping("setAreaTransparent", ImageBufferDownload.class, "func_189559_a");
addMapping("parseUserSkin", ImageBufferDownload.class, "func_78432_a");
addMapping("setAreaOpaque", ImageBufferDownload.class, "func_78433_b");
addMapping("drawActivePotionEffects", InventoryEffectRenderer.class, "func_147044_g");
addMapping("updateActivePotionEffects", InventoryEffectRenderer.class, "func_175378_g");
addMapping("drawScreen", InventoryEffectRenderer.class, "func_73863_a");
addMapping("initGui", InventoryEffectRenderer.class, "func_73866_w_");
addMapping("getModelLocation", ItemMeshDefinition.class, "func_178113_a");
addMapping("register", ItemModelMesher.class, "func_178080_a");
addMapping("getIndex", ItemModelMesher.class, "func_178081_c");
addMapping("getParticleIcon", ItemModelMesher.class, "func_178082_a");
addMapping("getModelManager", ItemModelMesher.class, "func_178083_a");
addMapping("getMetadata", ItemModelMesher.class, "func_178084_b");
addMapping("rebuildCache", ItemModelMesher.class, "func_178085_b");
addMapping("register", ItemModelMesher.class, "func_178086_a");
addMapping("getParticleIcon", ItemModelMesher.class, "func_178087_a");
addMapping("getItemModel", ItemModelMesher.class, "func_178088_b");
addMapping("getItemModel", ItemModelMesher.class, "func_178089_a");
addMapping("renderItem", ItemRenderer.class, "func_178099_a");
addMapping("getMapAngleFromPitch", ItemRenderer.class, "func_178100_c");
addMapping("rotateArroundXAndY", ItemRenderer.class, "func_178101_a");
addMapping("renderBlockInHand", ItemRenderer.class, "func_178108_a");
addMapping("transformFirstPerson", ItemRenderer.class, "func_187453_a");
addMapping("transformEatFirstPerson", ItemRenderer.class, "func_187454_a");
addMapping("renderArm", ItemRenderer.class, "func_187455_a");
addMapping("renderArmFirstPerson", ItemRenderer.class, "func_187456_a");
addMapping("renderItemInFirstPerson", ItemRenderer.class, "func_187457_a");
addMapping("rotateArm", ItemRenderer.class, "func_187458_c");
addMapping("transformSideFirstPerson", ItemRenderer.class, "func_187459_b");
addMapping("resetEquippedProgress", ItemRenderer.class, "func_187460_a");
addMapping("renderMapFirstPerson", ItemRenderer.class, "func_187461_a");
addMapping("renderItemSide", ItemRenderer.class, "func_187462_a");
addMapping("renderMapFirstPerson", ItemRenderer.class, "func_187463_a");
addMapping("setLightmap", ItemRenderer.class, "func_187464_b");
addMapping("renderMapFirstPersonSide", ItemRenderer.class, "func_187465_a");
addMapping("renderArms", ItemRenderer.class, "func_187466_c");
addMapping("renderItemInFirstPerson", ItemRenderer.class, "func_78440_a");
addMapping("updateEquippedItem", ItemRenderer.class, "func_78441_a");
addMapping("renderFireInFirstPerson", ItemRenderer.class, "func_78442_d");
addMapping("renderOverlays", ItemRenderer.class, "func_78447_b");
addMapping("renderWaterOverlayTexture", ItemRenderer.class, "func_78448_c");
addMapping("glBlendFunc", OpenGlHelper.class, "func_148821_a");
addMapping("isFramebufferEnabled", OpenGlHelper.class, "func_148822_b");
addMapping("glGetShaderi", OpenGlHelper.class, "func_153157_c");
addMapping("glGetShaderInfoLog", OpenGlHelper.class, "func_153158_d");
addMapping("glUniform4", OpenGlHelper.class, "func_153159_d");
addMapping("glUniformMatrix4", OpenGlHelper.class, "func_153160_c");
addMapping("glUseProgram", OpenGlHelper.class, "func_153161_d");
addMapping("glUniform4", OpenGlHelper.class, "func_153162_d");
addMapping("glUniform1i", OpenGlHelper.class, "func_153163_f");
addMapping("glGetAttribLocation", OpenGlHelper.class, "func_153164_b");
addMapping("glGenFramebuffers", OpenGlHelper.class, "func_153165_e");
addMapping("glGetProgramInfoLog", OpenGlHelper.class, "func_153166_e");
addMapping("glCheckFramebufferStatus", OpenGlHelper.class, "func_153167_i");
addMapping("glUniform1", OpenGlHelper.class, "func_153168_a");
addMapping("glShaderSource", OpenGlHelper.class, "func_153169_a");
addMapping("glCompileShader", OpenGlHelper.class, "func_153170_c");
addMapping("glBindFramebuffer", OpenGlHelper.class, "func_153171_g");
addMapping("getLogText", OpenGlHelper.class, "func_153172_c");
addMapping("glUniformMatrix2", OpenGlHelper.class, "func_153173_a");
addMapping("glDeleteFramebuffers", OpenGlHelper.class, "func_153174_h");
addMapping("glGetProgrami", OpenGlHelper.class, "func_153175_a");
addMapping("glBindRenderbuffer", OpenGlHelper.class, "func_153176_h");
addMapping("glUniform2", OpenGlHelper.class, "func_153177_b");
addMapping("glAttachShader", OpenGlHelper.class, "func_153178_b");
addMapping("glLinkProgram", OpenGlHelper.class, "func_153179_f");
addMapping("glDeleteShader", OpenGlHelper.class, "func_153180_a");
addMapping("glUniform1", OpenGlHelper.class, "func_153181_a");
addMapping("glUniform2", OpenGlHelper.class, "func_153182_b");
addMapping("glCreateProgram", OpenGlHelper.class, "func_153183_d");
addMapping("glDeleteRenderbuffers", OpenGlHelper.class, "func_153184_g");
addMapping("glGenRenderbuffers", OpenGlHelper.class, "func_153185_f");
addMapping("glRenderbufferStorage", OpenGlHelper.class, "func_153186_a");
addMapping("glDeleteProgram", OpenGlHelper.class, "func_153187_e");
addMapping("glFramebufferTexture2D", OpenGlHelper.class, "func_153188_a");
addMapping("glUniformMatrix3", OpenGlHelper.class, "func_153189_b");
addMapping("glFramebufferRenderbuffer", OpenGlHelper.class, "func_153190_b");
addMapping("glUniform3", OpenGlHelper.class, "func_153191_c");
addMapping("glUniform3", OpenGlHelper.class, "func_153192_c");
addMapping("areShadersSupported", OpenGlHelper.class, "func_153193_b");
addMapping("glGetUniformLocation", OpenGlHelper.class, "func_153194_a");
addMapping("glCreateShader", OpenGlHelper.class, "func_153195_b");
addMapping("glBufferData", OpenGlHelper.class, "func_176071_a");
addMapping("glBindBuffer", OpenGlHelper.class, "func_176072_g");
addMapping("glGenBuffers", OpenGlHelper.class, "func_176073_e");
addMapping("glDeleteBuffers", OpenGlHelper.class, "func_176074_g");
addMapping("useVbo", OpenGlHelper.class, "func_176075_f");
addMapping("getCpu", OpenGlHelper.class, "func_183029_j");
addMapping("renderDirections", OpenGlHelper.class, "func_188785_m");
addMapping("openFile", OpenGlHelper.class, "func_188786_a");
addMapping("setClientActiveTexture", OpenGlHelper.class, "func_77472_b");
addMapping("setActiveTexture", OpenGlHelper.class, "func_77473_a");
addMapping("initializeTextures", OpenGlHelper.class, "func_77474_a");
addMapping("setLightmapTextureCoords", OpenGlHelper.class, "func_77475_a");
addMapping("getWorldRendererByLayer", RegionRenderCacheBuilder.class, "func_179038_a");
addMapping("getWorldRendererByLayerId", RegionRenderCacheBuilder.class, "func_179039_a");
addMapping("onResourceManagerReload", RenderGlobal.class, "func_110549_a");
addMapping("markBlockRangeForRenderUpdate", RenderGlobal.class, "func_147585_a");
addMapping("notifyLightSet", RenderGlobal.class, "func_174959_b");
addMapping("getViewVector", RenderGlobal.class, "func_174962_a");
addMapping("generateStars", RenderGlobal.class, "func_174963_q");
addMapping("generateSky2", RenderGlobal.class, "func_174964_o");
addMapping("cleanupDamagedBlocks", RenderGlobal.class, "func_174965_a");
addMapping("makeEntityOutlineShader", RenderGlobal.class, "func_174966_b");
addMapping("updateChunks", RenderGlobal.class, "func_174967_a");
addMapping("renderSky", RenderGlobal.class, "func_174968_a");
addMapping("postRenderDamagedBlocks", RenderGlobal.class, "func_174969_t");
addMapping("setupTerrain", RenderGlobal.class, "func_174970_a");
addMapping("updateDestroyBlockIcons", RenderGlobal.class, "func_174971_n");
addMapping("spawnParticle", RenderGlobal.class, "func_174972_a");
addMapping("spawnParticle0", RenderGlobal.class, "func_174974_b");
addMapping("renderEntityOutlineFramebuffer", RenderGlobal.class, "func_174975_c");
addMapping("renderSky", RenderGlobal.class, "func_174976_a");
addMapping("renderBlockLayer", RenderGlobal.class, "func_174977_a");
addMapping("getVisibleFacings", RenderGlobal.class, "func_174978_c");
addMapping("setDisplayListEntitiesDirty", RenderGlobal.class, "func_174979_m");
addMapping("generateSky", RenderGlobal.class, "func_174980_p");
addMapping("drawBlockDamageTexture", RenderGlobal.class, "func_174981_a");
addMapping("renderBlockLayer", RenderGlobal.class, "func_174982_a");
addMapping("fixTerrainFrustum", RenderGlobal.class, "func_174984_a");
addMapping("isRenderEntityOutlines", RenderGlobal.class, "func_174985_d");
addMapping("stopChunkUpdates", RenderGlobal.class, "func_174986_e");
addMapping("playEvent", RenderGlobal.class, "func_180439_a");
addMapping("broadcastSound", RenderGlobal.class, "func_180440_a");
addMapping("sendBlockBreakProgress", RenderGlobal.class, "func_180441_b");
addMapping("spawnParticle", RenderGlobal.class, "func_180442_a");
addMapping("preRenderDamagedBlocks", RenderGlobal.class, "func_180443_s");
addMapping("renderStars", RenderGlobal.class, "func_180444_a");
addMapping("renderCloudsFancy", RenderGlobal.class, "func_180445_c");
addMapping("renderEntities", RenderGlobal.class, "func_180446_a");
addMapping("renderClouds", RenderGlobal.class, "func_180447_b");
addMapping("renderSkyEnd", RenderGlobal.class, "func_180448_r");
addMapping("renderWorldBorder", RenderGlobal.class, "func_180449_a");
addMapping("updateTileEntities", RenderGlobal.class, "func_181023_a");
addMapping("getRenderChunkOffset", RenderGlobal.class, "func_181562_a");
addMapping("playSoundToAllNearExcept", RenderGlobal.class, "func_184375_a");
addMapping("notifyBlockUpdate", RenderGlobal.class, "func_184376_a");
addMapping("playRecord", RenderGlobal.class, "func_184377_a");
addMapping("getRenderedChunks", RenderGlobal.class, "func_184382_g");
addMapping("isOutlineActive", RenderGlobal.class, "func_184383_a");
addMapping("hasNoChunkUpdates", RenderGlobal.class, "func_184384_n");
addMapping("markBlocksForUpdate", RenderGlobal.class, "func_184385_a");
addMapping("addChainedFilledBoxVertices", RenderGlobal.class, "func_189693_b");
addMapping("drawBoundingBox", RenderGlobal.class, "func_189694_a");
addMapping("renderFilledBox", RenderGlobal.class, "func_189695_b");
addMapping("renderFilledBox", RenderGlobal.class, "func_189696_b");
addMapping("drawSelectionBoundingBox", RenderGlobal.class, "func_189697_a");
addMapping("drawBoundingBox", RenderGlobal.class, "func_189698_a");
addMapping("spawnParticle", RenderGlobal.class, "func_190570_a");
addMapping("spawnParticle0", RenderGlobal.class, "func_190571_b");
addMapping("calculateParticleLevel", RenderGlobal.class, "func_190572_a");
addMapping("setPartying", RenderGlobal.class, "func_193054_a");
addMapping("onEntityAdded", RenderGlobal.class, "func_72703_a");
addMapping("onEntityRemoved", RenderGlobal.class, "func_72709_b");
addMapping("loadRenderers", RenderGlobal.class, "func_72712_a");
addMapping("createBindEntityOutlineFbs", RenderGlobal.class, "func_72720_a");
addMapping("hasCloudFog", RenderGlobal.class, "func_72721_a");
addMapping("getDebugInfoEntities", RenderGlobal.class, "func_72723_d");
addMapping("deleteAllDisplayLists", RenderGlobal.class, "func_72728_f");
addMapping("drawSelectionBox", RenderGlobal.class, "func_72731_b");
addMapping("setWorldAndLoadRenderers", RenderGlobal.class, "func_72732_a");
addMapping("updateClouds", RenderGlobal.class, "func_72734_e");
addMapping("getDebugInfoRenders", RenderGlobal.class, "func_72735_c");
addMapping("setColorBuffer", RenderHelper.class, "func_74517_a");
addMapping("disableStandardItemLighting", RenderHelper.class, "func_74518_a");
addMapping("enableStandardItemLighting", RenderHelper.class, "func_74519_b");
addMapping("enableGUIStandardItemLighting", RenderHelper.class, "func_74520_c");
addMapping("setColorBuffer", RenderHelper.class, "func_74521_a");
addMapping("onResourceManagerReload", RenderItem.class, "func_110549_a");
addMapping("registerBlock", RenderItem.class, "func_175029_a");
addMapping("renderItemOverlays", RenderItem.class, "func_175030_a");
addMapping("registerBlock", RenderItem.class, "func_175031_a");
addMapping("getItemModelMesher", RenderItem.class, "func_175037_a");
addMapping("putQuadNormal", RenderItem.class, "func_175038_a");
addMapping("registerItems", RenderItem.class, "func_175041_b");
addMapping("renderItemIntoGUI", RenderItem.class, "func_175042_a");
addMapping("registerItem", RenderItem.class, "func_175047_a");
addMapping("registerItem", RenderItem.class, "func_175048_a");
addMapping("shouldRenderItemIn3D", RenderItem.class, "func_175050_a");
addMapping("renderItemAndEffectIntoGUI", RenderItem.class, "func_180450_b");
addMapping("setupGuiTransform", RenderItem.class, "func_180452_a");
addMapping("renderItemOverlayIntoGUI", RenderItem.class, "func_180453_a");
addMapping("renderItem", RenderItem.class, "func_180454_a");
addMapping("renderItem", RenderItem.class, "func_181564_a");
addMapping("draw", RenderItem.class, "func_181565_a");
addMapping("isThereOneNegativeScale", RenderItem.class, "func_183005_a");
addMapping("renderItemAndEffectIntoGUI", RenderItem.class, "func_184391_a");
addMapping("renderItem", RenderItem.class, "func_184392_a");
addMapping("getItemModelWithOverrides", RenderItem.class, "func_184393_a");
addMapping("renderItemModel", RenderItem.class, "func_184394_a");
addMapping("renderModel", RenderItem.class, "func_191961_a");
addMapping("renderItemModelIntoGUI", RenderItem.class, "func_191962_a");
addMapping("renderModel", RenderItem.class, "func_191965_a");
addMapping("renderEffect", RenderItem.class, "func_191966_a");
addMapping("renderModel", RenderItem.class, "func_191967_a");
addMapping("renderQuad", RenderItem.class, "func_191969_a");
addMapping("renderQuads", RenderItem.class, "func_191970_a");
addMapping("renderChunkLayer", RenderList.class, "func_178001_a");
addMapping("getBuffer", Tessellator.class, "func_178180_c");
addMapping("getInstance", Tessellator.class, "func_178181_a");
addMapping("draw", Tessellator.class, "func_78381_a");
addMapping("loadTexture", ThreadDownloadImageData.class, "func_110551_a");
addMapping("getGlTextureId", ThreadDownloadImageData.class, "func_110552_b");
addMapping("checkTextureUploaded", ThreadDownloadImageData.class, "func_147640_e");
addMapping("setBufferedImage", ThreadDownloadImageData.class, "func_147641_a");
addMapping("loadTextureFromServer", ThreadDownloadImageData.class, "func_152433_a");
addMapping("renderChunkLayer", VboRenderList.class, "func_178001_a");
addMapping("setupArrayPointers", VboRenderList.class, "func_178010_a");
addMapping("setVertexBuffer", VertexBufferUploader.class, "func_178178_a");
addMapping("draw", VertexBufferUploader.class, "func_181679_a");
addMapping("getBaseCoordinate", ViewFrustum.class, "func_178157_a");
addMapping("createRenderChunks", ViewFrustum.class, "func_178158_a");
addMapping("setCountChunksXYZ", ViewFrustum.class, "func_178159_a");
addMapping("deleteGlResources", ViewFrustum.class, "func_178160_a");
addMapping("getRenderChunk", ViewFrustum.class, "func_178161_a");
addMapping("updateChunkPositions", ViewFrustum.class, "func_178163_a");
addMapping("markBlocksForUpdate", ViewFrustum.class, "func_187474_a");
addMapping("draw", WorldVertexBufferUploader.class, "func_181679_a");
addMapping("getVertexData", BakedQuad.class, "func_178209_a");
addMapping("getFace", BakedQuad.class, "func_178210_d");
addMapping("getTintIndex", BakedQuad.class, "func_178211_c");
addMapping("hasTintIndex", BakedQuad.class, "func_178212_b");
addMapping("getSprite", BakedQuad.class, "func_187508_a");
addMapping("remapQuad", BakedQuadRetextured.class, "func_178217_e");
addMapping("getVertexRotatedRev", BlockFaceUV.class, "func_178345_c");
addMapping("getVertexV", BlockFaceUV.class, "func_178346_b");
addMapping("getVertexRotated", BlockFaceUV.class, "func_178347_d");
addMapping("getVertexU", BlockFaceUV.class, "func_178348_a");
addMapping("setUvs", BlockFaceUV.class, "func_178349_a");
addMapping("setDefaultUvs", BlockPart.class, "func_178235_a");
addMapping("getFaceUvs", BlockPart.class, "func_178236_a");
addMapping("getItemCameraTransforms", BuiltInModel.class, "func_177552_f");
addMapping("getParticleTexture", BuiltInModel.class, "func_177554_e");
addMapping("isAmbientOcclusion", BuiltInModel.class, "func_177555_b");
addMapping("isGui3d", BuiltInModel.class, "func_177556_c");
addMapping("getQuads", BuiltInModel.class, "func_188616_a");
addMapping("getOverrides", BuiltInModel.class, "func_188617_f");
addMapping("isBuiltInRenderer", BuiltInModel.class, "func_188618_c");
addMapping("getPositionsDiv16", FaceBakery.class, "func_178403_a");
addMapping("storeVertexData", FaceBakery.class, "func_178404_a");
addMapping("rotateScale", FaceBakery.class, "func_178406_a");
addMapping("rotatePart", FaceBakery.class, "func_178407_a");
addMapping("applyFacing", FaceBakery.class, "func_178408_a");
addMapping("getFacingFromVertexData", FaceBakery.class, "func_178410_a");
addMapping("getMatrixIdentity", FaceBakery.class, "func_178411_a");
addMapping("getFaceBrightness", FaceBakery.class, "func_178412_b");
addMapping("getFaceShadeColor", FaceBakery.class, "func_178413_a");
addMapping("makeBakedQuad", FaceBakery.class, "func_178414_a");
addMapping("applyUVLock", FaceBakery.class, "func_188010_a");
addMapping("rotateVertex", FaceBakery.class, "func_188011_a");
addMapping("makeQuadVertexData", FaceBakery.class, "func_188012_a");
addMapping("addUvRotation", FaceBakery.class, "func_188013_a");
addMapping("getIndex", FaceBakery.class, "func_188014_a");
addMapping("fillVertexData", FaceBakery.class, "func_188015_a");
addMapping("getItemCameraTransforms", IBakedModel.class, "func_177552_f");
addMapping("getParticleTexture", IBakedModel.class, "func_177554_e");
addMapping("isAmbientOcclusion", IBakedModel.class, "func_177555_b");
addMapping("isGui3d", IBakedModel.class, "func_177556_c");
addMapping("getQuads", IBakedModel.class, "func_188616_a");
addMapping("getOverrides", IBakedModel.class, "func_188617_f");
addMapping("isBuiltInRenderer", IBakedModel.class, "func_188618_c");
addMapping("hasCustomTransform", ItemCameraTransforms.class, "func_181687_c");
addMapping("getTransform", ItemCameraTransforms.class, "func_181688_b");
addMapping("applyTransform", ItemCameraTransforms.class, "func_181689_a");
addMapping("applyTransformSide", ItemCameraTransforms.class, "func_188034_a");
addMapping("makeQuaternion", ItemCameraTransforms.class, "func_188035_a");
addMapping("isTransparent", ItemModelGenerator.class, "func_178391_a");
addMapping("makeItemModel", ItemModelGenerator.class, "func_178392_a");
addMapping("getSpans", ItemModelGenerator.class, "func_178393_a");
addMapping("getBlockParts", ItemModelGenerator.class, "func_178394_a");
addMapping("createOrExpandSpan", ItemModelGenerator.class, "func_178395_a");
addMapping("checkTransition", ItemModelGenerator.class, "func_178396_a");
addMapping("getBlockParts", ItemModelGenerator.class, "func_178397_a");
addMapping("getLocation", ItemOverride.class, "func_188026_a");
addMapping("matchesItemStack", ItemOverride.class, "func_188027_a");
addMapping("applyOverride", ItemOverrideList.class, "func_188021_a");
addMapping("registerVariant", ModelBakery.class, "func_177569_a");
addMapping("setupModelRegistry", ModelBakery.class, "func_177570_a");
addMapping("getItemsTextureLocations", ModelBakery.class, "func_177571_k");
addMapping("loadSprites", ModelBakery.class, "func_177572_j");
addMapping("getParentPath", ModelBakery.class, "func_177573_e");
addMapping("loadModels", ModelBakery.class, "func_177574_i");
addMapping("getVariantsTextureLocations", ModelBakery.class, "func_177575_g");
addMapping("getParentLocation", ModelBakery.class, "func_177576_f");
addMapping("loadVariantItemModels", ModelBakery.class, "func_177577_b");
addMapping("bakeModel", ModelBakery.class, "func_177578_a");
addMapping("getModelLocation", ModelBakery.class, "func_177580_d");
addMapping("hasItemModel", ModelBakery.class, "func_177581_b");
addMapping("makeItemModel", ModelBakery.class, "func_177582_d");
addMapping("getItemLocation", ModelBakery.class, "func_177583_a");
addMapping("getTextureLocations", ModelBakery.class, "func_177585_a");
addMapping("getModelBlockDefinition", ModelBakery.class, "func_177586_a");
addMapping("isCustomRenderer", ModelBakery.class, "func_177587_c");
addMapping("bakeBlockModels", ModelBakery.class, "func_177588_f");
addMapping("makeBakedQuad", ModelBakery.class, "func_177589_a");
addMapping("loadItemModels", ModelBakery.class, "func_177590_d");
addMapping("registerVariantNames", ModelBakery.class, "func_177592_e");
addMapping("makeItemModels", ModelBakery.class, "func_177593_l");
addMapping("loadModel", ModelBakery.class, "func_177594_c");
addMapping("loadVariantModels", ModelBakery.class, "func_177595_c");
addMapping("getVariantNames", ModelBakery.class, "func_177596_a");
addMapping("loadModelsCheck", ModelBakery.class, "func_177597_h");
addMapping("getBlockstateLocation", ModelBakery.class, "func_188631_b");
addMapping("loadMultipartMBD", ModelBakery.class, "func_188632_a");
addMapping("addModelParentLocation", ModelBakery.class, "func_188633_a");
addMapping("loadItemModel", ModelBakery.class, "func_188634_a");
addMapping("bakeItemModels", ModelBakery.class, "func_188635_i");
addMapping("loadModelBlockDefinition", ModelBakery.class, "func_188636_a");
addMapping("loadMultipartVariantModels", ModelBakery.class, "func_188637_e");
addMapping("loadVariantList", ModelBakery.class, "func_188638_a");
addMapping("createRandomModelForVariantList", ModelBakery.class, "func_188639_a");
addMapping("loadBlocks", ModelBakery.class, "func_188640_b");
addMapping("loadStaticModels", ModelBakery.class, "func_191401_d");
addMapping("deserialize", ModelBlock.class, "func_178294_a");
addMapping("hasParent", ModelBlock.class, "func_178295_k");
addMapping("getElements", ModelBlock.class, "func_178298_a");
addMapping("getParentFromMap", ModelBlock.class, "func_178299_a");
addMapping("isTexturePresent", ModelBlock.class, "func_178300_b");
addMapping("resolveTextureName", ModelBlock.class, "func_178302_a");
addMapping("isResolved", ModelBlock.class, "func_178303_d");
addMapping("startsWithHash", ModelBlock.class, "func_178304_d");
addMapping("getParentLocation", ModelBlock.class, "func_178305_e");
addMapping("deserialize", ModelBlock.class, "func_178307_a");
addMapping("resolveTextureName", ModelBlock.class, "func_178308_c");
addMapping("isAmbientOcclusion", ModelBlock.class, "func_178309_b");
addMapping("getRootModel", ModelBlock.class, "func_178310_f");
addMapping("isGui3d", ModelBlock.class, "func_178311_c");
addMapping("checkModelHierarchy", ModelBlock.class, "func_178312_b");
addMapping("getTransform", ModelBlock.class, "func_181681_a");
addMapping("getAllTransforms", ModelBlock.class, "func_181682_g");
addMapping("getOverrideLocations", ModelBlock.class, "func_187965_e");
addMapping("getOverrides", ModelBlock.class, "func_187966_f");
addMapping("createOverrides", ModelBlock.class, "func_187967_g");
addMapping("parseFromReader", ModelBlockDefinition.class, "func_178331_a");
addMapping("hasVariant", ModelBlockDefinition.class, "func_188000_b");
addMapping("getMultipartData", ModelBlockDefinition.class, "func_188001_c");
addMapping("hasMultipartData", ModelBlockDefinition.class, "func_188002_b");
addMapping("getMultipartVariants", ModelBlockDefinition.class, "func_188003_a");
addMapping("getVariant", ModelBlockDefinition.class, "func_188004_c");
addMapping("onResourceManagerReload", ModelManager.class, "func_110549_a");
addMapping("getMissingModel", ModelManager.class, "func_174951_a");
addMapping("getTextureMap", ModelManager.class, "func_174952_b");
addMapping("getModel", ModelManager.class, "func_174953_a");
addMapping("getBlockModelShapes", ModelManager.class, "func_174954_c");
addMapping("parsePathString", ModelResourceLocation.class, "func_177517_b");
addMapping("getVariant", ModelResourceLocation.class, "func_177518_c");
addMapping("rotateVertex", ModelRotation.class, "func_177520_a");
addMapping("combineXY", ModelRotation.class, "func_177521_b");
addMapping("rotateFace", ModelRotation.class, "func_177523_a");
addMapping("getModelRotation", ModelRotation.class, "func_177524_a");
addMapping("getMatrix4d", ModelRotation.class, "func_177525_a");
addMapping("getItemCameraTransforms", MultipartBakedModel.class, "func_177552_f");
addMapping("getParticleTexture", MultipartBakedModel.class, "func_177554_e");
addMapping("isAmbientOcclusion", MultipartBakedModel.class, "func_177555_b");
addMapping("isGui3d", MultipartBakedModel.class, "func_177556_c");
addMapping("getQuads", MultipartBakedModel.class, "func_188616_a");
addMapping("getOverrides", MultipartBakedModel.class, "func_188617_f");
addMapping("isBuiltInRenderer", MultipartBakedModel.class, "func_188618_c");
addMapping("getItemCameraTransforms", SimpleBakedModel.class, "func_177552_f");
addMapping("getParticleTexture", SimpleBakedModel.class, "func_177554_e");
addMapping("isAmbientOcclusion", SimpleBakedModel.class, "func_177555_b");
addMapping("isGui3d", SimpleBakedModel.class, "func_177556_c");
addMapping("getQuads", SimpleBakedModel.class, "func_188616_a");
addMapping("getOverrides", SimpleBakedModel.class, "func_188617_f");
addMapping("isBuiltInRenderer", SimpleBakedModel.class, "func_188618_c");
addMapping("getModelLocation", Variant.class, "func_188046_a");
addMapping("getWeight", Variant.class, "func_188047_d");
addMapping("getRotation", Variant.class, "func_188048_b");
addMapping("isUvLock", Variant.class, "func_188049_c");
addMapping("getVariantList", VariantList.class, "func_188114_a");
addMapping("getItemCameraTransforms", WeightedBakedModel.class, "func_177552_f");
addMapping("getParticleTexture", WeightedBakedModel.class, "func_177554_e");
addMapping("isAmbientOcclusion", WeightedBakedModel.class, "func_177555_b");
addMapping("isGui3d", WeightedBakedModel.class, "func_177556_c");
addMapping("getQuads", WeightedBakedModel.class, "func_188616_a");
addMapping("getOverrides", WeightedBakedModel.class, "func_188617_f");
addMapping("isBuiltInRenderer", WeightedBakedModel.class, "func_188618_c");
addMapping("getRandomModel", WeightedBakedModel.class, "func_188627_a");
addMapping("getPredicate", ConditionAnd.class, "func_188118_a");
addMapping("getPredicate", ConditionOr.class, "func_188118_a");
addMapping("getPredicate", ConditionPropertyValue.class, "func_188118_a");
addMapping("makePredicate", ConditionPropertyValue.class, "func_188123_a");
addMapping("getPredicate", ICondition.class, "func_188118_a");
addMapping("getStateContainer", Multipart.class, "func_188135_c");
addMapping("getSelectors", Multipart.class, "func_188136_a");
addMapping("getVariants", Multipart.class, "func_188137_b");
addMapping("setStateContainer", Multipart.class, "func_188138_a");
addMapping("getVariantList", Selector.class, "func_188165_a");
addMapping("getPredicate", Selector.class, "func_188166_a");
addMapping("putAllStateModelLocations", BlockStateMapper.class, "func_178446_a");
addMapping("registerBlockStateMapper", BlockStateMapper.class, "func_178447_a");
addMapping("registerBuiltInBlocks", BlockStateMapper.class, "func_178448_a");
addMapping("getVariants", BlockStateMapper.class, "func_188181_b");
addMapping("getBlockstateLocations", BlockStateMapper.class, "func_188182_a");
addMapping("getModelResourceLocation", DefaultStateMapper.class, "func_178132_a");
addMapping("putStateModelLocations", IStateMapper.class, "func_178130_a");
addMapping("getModelResourceLocation", StateMap.class, "func_178132_a");
addMapping("removeName", StateMap.class, "func_187490_a");
addMapping("putStateModelLocations", StateMapperBase.class, "func_178130_a");
addMapping("getPropertyString", StateMapperBase.class, "func_178131_a");
addMapping("getModelResourceLocation", StateMapperBase.class, "func_178132_a");
addMapping("getPropertyName", StateMapperBase.class, "func_187489_a");
addMapping("setStatus", ChunkCompileTaskGenerator.class, "func_178535_a");
addMapping("getRenderChunk", ChunkCompileTaskGenerator.class, "func_178536_b");
addMapping("isFinished", ChunkCompileTaskGenerator.class, "func_178537_h");
addMapping("getType", ChunkCompileTaskGenerator.class, "func_178538_g");
addMapping("addFinishRunnable", ChunkCompileTaskGenerator.class, "func_178539_a");
addMapping("getLock", ChunkCompileTaskGenerator.class, "func_178540_f");
addMapping("setRegionRenderCacheBuilder", ChunkCompileTaskGenerator.class, "func_178541_a");
addMapping("finish", ChunkCompileTaskGenerator.class, "func_178542_e");
addMapping("setCompiledChunk", ChunkCompileTaskGenerator.class, "func_178543_a");
addMapping("getCompiledChunk", ChunkCompileTaskGenerator.class, "func_178544_c");
addMapping("getRegionRenderCacheBuilder", ChunkCompileTaskGenerator.class, "func_178545_d");
addMapping("getStatus", ChunkCompileTaskGenerator.class, "func_178546_a");
addMapping("getDistanceSq", ChunkCompileTaskGenerator.class, "func_188228_i");
addMapping("getDebugInfo", ChunkRenderDispatcher.class, "func_178504_a");
addMapping("updateChunkNow", ChunkRenderDispatcher.class, "func_178505_b");
addMapping("uploadVertexBuffer", ChunkRenderDispatcher.class, "func_178506_a");
addMapping("updateChunkLater", ChunkRenderDispatcher.class, "func_178507_a");
addMapping("updateTransparencyLater", ChunkRenderDispatcher.class, "func_178509_c");
addMapping("uploadDisplayList", ChunkRenderDispatcher.class, "func_178510_a");
addMapping("getNextChunkUpdate", ChunkRenderDispatcher.class, "func_178511_d");
addMapping("freeRenderBuilder", ChunkRenderDispatcher.class, "func_178512_a");
addMapping("clearChunkUpdates", ChunkRenderDispatcher.class, "func_178513_e");
addMapping("stopChunkUpdates", ChunkRenderDispatcher.class, "func_178514_b");
addMapping("allocateRenderBuilder", ChunkRenderDispatcher.class, "func_178515_c");
addMapping("runChunkUploads", ChunkRenderDispatcher.class, "func_178516_a");
addMapping("stopWorkerThreads", ChunkRenderDispatcher.class, "func_188244_g");
addMapping("uploadChunk", ChunkRenderDispatcher.class, "func_188245_a");
addMapping("hasChunkUpdates", ChunkRenderDispatcher.class, "func_188247_f");
addMapping("hasNoFreeRenderBuilders", ChunkRenderDispatcher.class, "func_188248_h");
addMapping("freeRenderBuilder", ChunkRenderWorker.class, "func_178473_b");
addMapping("processTask", ChunkRenderWorker.class, "func_178474_a");
addMapping("getRegionRenderCacheBuilder", ChunkRenderWorker.class, "func_178475_b");
addMapping("isChunkExisting", ChunkRenderWorker.class, "func_188263_a");
addMapping("notifyToStop", ChunkRenderWorker.class, "func_188264_a");
addMapping("getTileEntities", CompiledChunk.class, "func_178485_b");
addMapping("setLayerUsed", CompiledChunk.class, "func_178486_a");
addMapping("getState", CompiledChunk.class, "func_178487_c");
addMapping("setVisibility", CompiledChunk.class, "func_178488_a");
addMapping("isEmpty", CompiledChunk.class, "func_178489_a");
addMapping("addTileEntity", CompiledChunk.class, "func_178490_a");
addMapping("isLayerEmpty", CompiledChunk.class, "func_178491_b");
addMapping("isLayerStarted", CompiledChunk.class, "func_178492_d");
addMapping("setLayerStarted", CompiledChunk.class, "func_178493_c");
addMapping("setState", CompiledChunk.class, "func_178494_a");
addMapping("isVisible", CompiledChunk.class, "func_178495_a");
addMapping("create", IRenderChunkFactory.class, "func_189565_a");
addMapping("create", ListChunkFactory.class, "func_189565_a");
addMapping("deleteGlResources", ListedRenderChunk.class, "func_178566_a");
addMapping("getDisplayList", ListedRenderChunk.class, "func_178600_a");
addMapping("getVertexBufferByLayer", RenderChunk.class, "func_178565_b");
addMapping("deleteGlResources", RenderChunk.class, "func_178566_a");
addMapping("initModelviewMatrix", RenderChunk.class, "func_178567_n");
addMapping("getPosition", RenderChunk.class, "func_178568_j");
addMapping("needsUpdate", RenderChunk.class, "func_178569_m");
addMapping("resortTransparency", RenderChunk.class, "func_178570_a");
addMapping("getCompiledChunk", RenderChunk.class, "func_178571_g");
addMapping("multModelviewMatrix", RenderChunk.class, "func_178572_f");
addMapping("preRenderBlocks", RenderChunk.class, "func_178573_a");
addMapping("makeCompileTaskChunk", RenderChunk.class, "func_178574_d");
addMapping("setNeedsUpdate", RenderChunk.class, "func_178575_a");
addMapping("setFrameIndex", RenderChunk.class, "func_178577_a");
addMapping("finishCompileTask", RenderChunk.class, "func_178578_b");
addMapping("getLockCompileTask", RenderChunk.class, "func_178579_c");
addMapping("setCompiledChunk", RenderChunk.class, "func_178580_a");
addMapping("rebuildChunk", RenderChunk.class, "func_178581_b");
addMapping("makeCompileTaskTransparency", RenderChunk.class, "func_178582_e");
addMapping("postRenderBlocks", RenderChunk.class, "func_178584_a");
addMapping("stopCompileTask", RenderChunk.class, "func_178585_h");
addMapping("getBlockPosOffset16", RenderChunk.class, "func_181701_a");
addMapping("getDistanceSq", RenderChunk.class, "func_188280_f");
addMapping("needsImmediateUpdate", RenderChunk.class, "func_188281_o");
addMapping("clearNeedsUpdate", RenderChunk.class, "func_188282_m");
addMapping("getWorld", RenderChunk.class, "func_188283_p");
addMapping("setPosition", RenderChunk.class, "func_189562_a");
addMapping("rebuildWorldView", RenderChunk.class, "func_189563_q");
addMapping("setAllVisible", SetVisibility.class, "func_178618_a");
addMapping("setVisible", SetVisibility.class, "func_178619_a");
addMapping("setManyVisible", SetVisibility.class, "func_178620_a");
addMapping("isVisible", SetVisibility.class, "func_178621_a");
addMapping("create", VboChunkFactory.class, "func_189565_a");
addMapping("getNeighborIndexAtFace", VisGraph.class, "func_178603_a");
addMapping("floodFill", VisGraph.class, "func_178604_a");
addMapping("getIndex", VisGraph.class, "func_178605_a");
addMapping("setOpaqueCube", VisGraph.class, "func_178606_a");
addMapping("computeVisibility", VisGraph.class, "func_178607_a");
addMapping("getIndex", VisGraph.class, "func_178608_c");
addMapping("getVisibleFacings", VisGraph.class, "func_178609_b");
addMapping("addEdges", VisGraph.class, "func_178610_a");
addMapping("registerBlockColorHandler", BlockColors.class, "func_186722_a");
addMapping("init", BlockColors.class, "func_186723_a");
addMapping("colorMultiplier", BlockColors.class, "func_186724_a");
addMapping("getColor", BlockColors.class, "func_189991_a");
addMapping("colorMultiplier", IBlockColor.class, "func_186720_a");
addMapping("colorMultiplier", IItemColor.class, "func_186726_a");
addMapping("colorMultiplier", ItemColors.class, "func_186728_a");
addMapping("init", ItemColors.class, "func_186729_a");
addMapping("registerItemColorHandler", ItemColors.class, "func_186730_a");
addMapping("registerItemColorHandler", ItemColors.class, "func_186731_a");
addMapping("dot", ClippingHelper.class, "func_178624_a");
addMapping("isBoxInFrustum", ClippingHelper.class, "func_78553_b");
addMapping("normalize", ClippingHelperImpl.class, "func_180547_a");
addMapping("getInstance", ClippingHelperImpl.class, "func_78558_a");
addMapping("init", ClippingHelperImpl.class, "func_78560_b");
addMapping("isBoundingBoxInFrustum", Frustum.class, "func_78546_a");
addMapping("setPosition", Frustum.class, "func_78547_a");
addMapping("isBoxInFrustum", Frustum.class, "func_78548_b");
addMapping("isBoundingBoxInFrustum", ICamera.class, "func_78546_a");
addMapping("setPosition", ICamera.class, "func_78547_a");
addMapping("renderDebug", DebugRenderer.class, "func_190073_a");
addMapping("shouldRender", DebugRenderer.class, "func_190074_a");
addMapping("toggleChunkBorders", DebugRenderer.class, "func_190075_b");
addMapping("renderDebugText", DebugRenderer.class, "func_190076_a");
addMapping("renderDebugText", DebugRenderer.class, "func_191556_a");
addMapping("render", DebugRendererChunkBorder.class, "func_190060_a");
addMapping("render", DebugRendererCollisionBox.class, "func_190060_a");
addMapping("render", DebugRendererHeightMap.class, "func_190060_a");
addMapping("render", DebugRendererNeighborsUpdate.class, "func_190060_a");
addMapping("addUpdate", DebugRendererNeighborsUpdate.class, "func_191553_a");
addMapping("addPath", DebugRendererPathfinding.class, "func_188289_a");
addMapping("render", DebugRendererPathfinding.class, "func_190060_a");
addMapping("addDistanceToPlayer", DebugRendererPathfinding.class, "func_190066_a");
addMapping("renderPathLine", DebugRendererPathfinding.class, "func_190067_a");
addMapping("render", DebugRendererSolidFace.class, "func_190060_a");
addMapping("render", DebugRendererWater.class, "func_190060_a");
addMapping("getEntityTexture", Render.class, "func_110775_a");
addMapping("bindTexture", Render.class, "func_110776_a");
addMapping("renderLivingLabel", Render.class, "func_147906_a");
addMapping("renderName", Render.class, "func_177067_a");
addMapping("getRenderManager", Render.class, "func_177068_d");
addMapping("canRenderName", Render.class, "func_177070_b");
addMapping("shouldRender", Render.class, "func_177071_a");
addMapping("bindEntityTexture", Render.class, "func_180548_c");
addMapping("isMultipass", Render.class, "func_188295_H_");
addMapping("renderEntityName", Render.class, "func_188296_a");
addMapping("setRenderOutlines", Render.class, "func_188297_a");
addMapping("getTeamColor", Render.class, "func_188298_c");
addMapping("renderShadowSingle", Render.class, "func_188299_a");
addMapping("renderMultipass", Render.class, "func_188300_b");
addMapping("renderShadow", Render.class, "func_76975_c");
addMapping("renderEntityOnFire", Render.class, "func_76977_a");
addMapping("renderOffsetAABB", Render.class, "func_76978_a");
addMapping("doRenderShadowAndFire", Render.class, "func_76979_b");
addMapping("getWorldFromRenderManager", Render.class, "func_76982_b");
addMapping("getFontRendererFromRenderManager", Render.class, "func_76983_a");
addMapping("doRender", Render.class, "func_76986_a");
addMapping("getEntityTexture", RenderAbstractHorse.class, "func_110775_a");
addMapping("preRenderCallback", RenderAbstractHorse.class, "func_77041_b");
addMapping("getEntityTexture", RenderAreaEffectCloud.class, "func_110775_a");
addMapping("getEntityTexture", RenderArmorStand.class, "func_110775_a");
addMapping("canRenderName", RenderArmorStand.class, "func_177070_b");
addMapping("getMainModel", RenderArmorStand.class, "func_177087_b");
addMapping("doRender", RenderArmorStand.class, "func_76986_a");
addMapping("applyRotations", RenderArmorStand.class, "func_77043_a");
addMapping("doRender", RenderArrow.class, "func_76986_a");
addMapping("getEntityTexture", RenderBat.class, "func_110775_a");
addMapping("preRenderCallback", RenderBat.class, "func_77041_b");
addMapping("applyRotations", RenderBat.class, "func_77043_a");
addMapping("getEntityTexture", RenderBiped.class, "func_110775_a");
addMapping("transformHeldFull3DItemLayer", RenderBiped.class, "func_82422_c");
addMapping("getEntityTexture", RenderBlaze.class, "func_110775_a");
addMapping("getEntityTexture", RenderBoat.class, "func_110775_a");
addMapping("isMultipass", RenderBoat.class, "func_188295_H_");
addMapping("renderMultipass", RenderBoat.class, "func_188300_b");
addMapping("setupTranslation", RenderBoat.class, "func_188309_a");
addMapping("setupRotation", RenderBoat.class, "func_188311_a");
addMapping("doRender", RenderBoat.class, "func_76986_a");
addMapping("getEntityTexture", RenderCaveSpider.class, "func_110775_a");
addMapping("preRenderCallback", RenderCaveSpider.class, "func_77041_b");
addMapping("getEntityTexture", RenderChicken.class, "func_110775_a");
addMapping("handleRotationFloat", RenderChicken.class, "func_77044_a");
addMapping("getEntityTexture", RenderCow.class, "func_110775_a");
addMapping("getEntityTexture", RenderCreeper.class, "func_110775_a");
addMapping("getColorMultiplier", RenderCreeper.class, "func_77030_a");
addMapping("preRenderCallback", RenderCreeper.class, "func_77041_b");
addMapping("getEntityTexture", RenderDragon.class, "func_110775_a");
addMapping("renderCrystalBeams", RenderDragon.class, "func_188325_a");
addMapping("doRender", RenderDragon.class, "func_76986_a");
addMapping("renderModel", RenderDragon.class, "func_77036_a");
addMapping("applyRotations", RenderDragon.class, "func_77043_a");
addMapping("getEntityTexture", RenderDragonFireball.class, "func_110775_a");
addMapping("doRender", RenderDragonFireball.class, "func_76986_a");
addMapping("getEntityTexture", RenderElderGuardian.class, "func_110775_a");
addMapping("preRenderCallback", RenderElderGuardian.class, "func_77041_b");
addMapping("getEntityTexture", RenderEnderCrystal.class, "func_110775_a");
addMapping("shouldRender", RenderEnderCrystal.class, "func_177071_a");
addMapping("doRender", RenderEnderCrystal.class, "func_76986_a");
addMapping("getEntityTexture", RenderEnderman.class, "func_110775_a");
addMapping("getMainModel", RenderEnderman.class, "func_177087_b");
addMapping("doRender", RenderEnderman.class, "func_76986_a");
addMapping("getEntityTexture", RenderEndermite.class, "func_110775_a");
addMapping("getDeathMaxRotation", RenderEndermite.class, "func_77037_a");
addMapping("getEntityTexture", RenderEntity.class, "func_110775_a");
addMapping("doRender", RenderEntity.class, "func_76986_a");
addMapping("getEntityTexture", RenderEntityItem.class, "func_110775_a");
addMapping("transformModelCount", RenderEntityItem.class, "func_177077_a");
addMapping("getModelCount", RenderEntityItem.class, "func_177078_a");
addMapping("doRender", RenderEntityItem.class, "func_76986_a");
addMapping("getEntityTexture", RenderEvoker.class, "func_110775_a");
addMapping("preRenderCallback", RenderEvoker.class, "func_77041_b");
addMapping("getEntityTexture", RenderEvokerFangs.class, "func_110775_a");
addMapping("doRender", RenderEvokerFangs.class, "func_76986_a");
addMapping("getEntityTexture", RenderFallingBlock.class, "func_110775_a");
addMapping("doRender", RenderFallingBlock.class, "func_76986_a");
addMapping("getEntityTexture", RenderFireball.class, "func_110775_a");
addMapping("doRender", RenderFireball.class, "func_76986_a");
addMapping("getEntityTexture", RenderFish.class, "func_110775_a");
addMapping("doRender", RenderFish.class, "func_76986_a");
addMapping("getEntityTexture", RenderGhast.class, "func_110775_a");
addMapping("preRenderCallback", RenderGhast.class, "func_77041_b");
addMapping("getEntityTexture", RenderGiantZombie.class, "func_110775_a");
addMapping("preRenderCallback", RenderGiantZombie.class, "func_77041_b");
addMapping("transformHeldFull3DItemLayer", RenderGiantZombie.class, "func_82422_c");
addMapping("getEntityTexture", RenderGuardian.class, "func_110775_a");
addMapping("shouldRender", RenderGuardian.class, "func_177071_a");
addMapping("getPosition", RenderGuardian.class, "func_177110_a");
addMapping("doRender", RenderGuardian.class, "func_76986_a");
addMapping("getEntityTexture", RenderHorse.class, "func_110775_a");
addMapping("getEntityTexture", RenderHusk.class, "func_110775_a");
addMapping("preRenderCallback", RenderHusk.class, "func_77041_b");
addMapping("getEntityTexture", RenderIllusionIllager.class, "func_110775_a");
addMapping("renderName", RenderIllusionIllager.class, "func_177067_a");
addMapping("isVisible", RenderIllusionIllager.class, "func_193115_c");
addMapping("doRender", RenderIllusionIllager.class, "func_76986_a");
addMapping("preRenderCallback", RenderIllusionIllager.class, "func_77041_b");
addMapping("getEntityTexture", RenderIronGolem.class, "func_110775_a");
addMapping("applyRotations", RenderIronGolem.class, "func_77043_a");
addMapping("getEntityTexture", RenderItemFrame.class, "func_110775_a");
addMapping("renderName", RenderItemFrame.class, "func_177067_a");
addMapping("doRender", RenderItemFrame.class, "func_76986_a");
addMapping("renderItem", RenderItemFrame.class, "func_82402_b");
addMapping("getEntityTexture", RenderLeashKnot.class, "func_110775_a");
addMapping("doRender", RenderLeashKnot.class, "func_76986_a");
addMapping("getEntityTexture", RenderLightningBolt.class, "func_110775_a");
addMapping("doRender", RenderLightningBolt.class, "func_76986_a");
addMapping("renderLeash", RenderLiving.class, "func_110827_b");
addMapping("interpolateValue", RenderLiving.class, "func_110828_a");
addMapping("canRenderName", RenderLiving.class, "func_177070_b");
addMapping("shouldRender", RenderLiving.class, "func_177071_a");
addMapping("setLightmap", RenderLiving.class, "func_177105_a");
addMapping("doRender", RenderLiving.class, "func_76986_a");
addMapping("renderName", RenderLivingBase.class, "func_177067_a");
addMapping("canRenderName", RenderLivingBase.class, "func_177070_b");
addMapping("getMainModel", RenderLivingBase.class, "func_177087_b");
addMapping("setScoreTeamColor", RenderLivingBase.class, "func_177088_c");
addMapping("setDoRenderBrightness", RenderLivingBase.class, "func_177090_c");
addMapping("unsetBrightness", RenderLivingBase.class, "func_177091_f");
addMapping("setBrightness", RenderLivingBase.class, "func_177092_a");
addMapping("renderLayers", RenderLivingBase.class, "func_177093_a");
addMapping("addLayer", RenderLivingBase.class, "func_177094_a");
addMapping("unsetScoreTeamColor", RenderLivingBase.class, "func_180565_e");
addMapping("prepareScale", RenderLivingBase.class, "func_188322_c");
addMapping("isVisible", RenderLivingBase.class, "func_193115_c");
addMapping("doRender", RenderLivingBase.class, "func_76986_a");
addMapping("getColorMultiplier", RenderLivingBase.class, "func_77030_a");
addMapping("interpolateRotation", RenderLivingBase.class, "func_77034_a");
addMapping("renderModel", RenderLivingBase.class, "func_77036_a");
addMapping("getDeathMaxRotation", RenderLivingBase.class, "func_77037_a");
addMapping("renderLivingAt", RenderLivingBase.class, "func_77039_a");
addMapping("getSwingProgress", RenderLivingBase.class, "func_77040_d");
addMapping("preRenderCallback", RenderLivingBase.class, "func_77041_b");
addMapping("applyRotations", RenderLivingBase.class, "func_77043_a");
addMapping("handleRotationFloat", RenderLivingBase.class, "func_77044_a");
addMapping("transformHeldFull3DItemLayer", RenderLivingBase.class, "func_82422_c");
addMapping("getEntityTexture", RenderLlama.class, "func_110775_a");
addMapping("getEntityTexture", RenderLlamaSpit.class, "func_110775_a");
addMapping("doRender", RenderLlamaSpit.class, "func_76986_a");
addMapping("getEntityTexture", RenderMagmaCube.class, "func_110775_a");
addMapping("preRenderCallback", RenderMagmaCube.class, "func_77041_b");
addMapping("isRenderShadow", RenderManager.class, "func_178627_a");
addMapping("setRenderPosition", RenderManager.class, "func_178628_a");
addMapping("setDebugBoundingBox", RenderManager.class, "func_178629_b");
addMapping("setPlayerViewY", RenderManager.class, "func_178631_a");
addMapping("setRenderOutlines", RenderManager.class, "func_178632_c");
addMapping("setRenderShadow", RenderManager.class, "func_178633_a");
addMapping("isDebugBoundingBox", RenderManager.class, "func_178634_b");
addMapping("shouldRender", RenderManager.class, "func_178635_a");
addMapping("cacheActiveRenderInfo", RenderManager.class, "func_180597_a");
addMapping("renderEntityStatic", RenderManager.class, "func_188388_a");
addMapping("renderMultipass", RenderManager.class, "func_188389_a");
addMapping("isRenderMultipass", RenderManager.class, "func_188390_b");
addMapping("renderEntity", RenderManager.class, "func_188391_a");
addMapping("getEntityRenderObject", RenderManager.class, "func_78713_a");
addMapping("getDistanceToCamera", RenderManager.class, "func_78714_a");
addMapping("getEntityClassRenderObject", RenderManager.class, "func_78715_a");
addMapping("getFontRenderer", RenderManager.class, "func_78716_a");
addMapping("setWorld", RenderManager.class, "func_78717_a");
addMapping("renderDebugBoundingBox", RenderManager.class, "func_85094_b");
addMapping("getEntityTexture", RenderMinecart.class, "func_110775_a");
addMapping("renderCartContents", RenderMinecart.class, "func_188319_a");
addMapping("doRender", RenderMinecart.class, "func_76986_a");
addMapping("getEntityTexture", RenderMooshroom.class, "func_110775_a");
addMapping("getMainModel", RenderMooshroom.class, "func_177087_b");
addMapping("getEntityTexture", RenderOcelot.class, "func_110775_a");
addMapping("preRenderCallback", RenderOcelot.class, "func_77041_b");
addMapping("getEntityTexture", RenderPainting.class, "func_110775_a");
addMapping("doRender", RenderPainting.class, "func_76986_a");
addMapping("setLightmap", RenderPainting.class, "func_77008_a");
addMapping("renderPainting", RenderPainting.class, "func_77010_a");
addMapping("getEntityTexture", RenderParrot.class, "func_110775_a");
addMapping("getCustomBob", RenderParrot.class, "func_192861_b");
addMapping("handleRotationFloat", RenderParrot.class, "func_77044_a");
addMapping("getEntityTexture", RenderPig.class, "func_110775_a");
addMapping("getEntityTexture", RenderPigZombie.class, "func_110775_a");
addMapping("getEntityTexture", RenderPlayer.class, "func_110775_a");
addMapping("getMainModel", RenderPlayer.class, "func_177087_b");
addMapping("setModelVisibilities", RenderPlayer.class, "func_177137_d");
addMapping("renderRightArm", RenderPlayer.class, "func_177138_b");
addMapping("renderLeftArm", RenderPlayer.class, "func_177139_c");
addMapping("renderEntityName", RenderPlayer.class, "func_188296_a");
addMapping("doRender", RenderPlayer.class, "func_76986_a");
addMapping("renderLivingAt", RenderPlayer.class, "func_77039_a");
addMapping("preRenderCallback", RenderPlayer.class, "func_77041_b");
addMapping("applyRotations", RenderPlayer.class, "func_77043_a");
addMapping("transformHeldFull3DItemLayer", RenderPlayer.class, "func_82422_c");
addMapping("getEntityTexture", RenderPolarBear.class, "func_110775_a");
addMapping("doRender", RenderPolarBear.class, "func_76986_a");
addMapping("preRenderCallback", RenderPolarBear.class, "func_77041_b");
addMapping("getStackToRender", RenderPotion.class, "func_177082_d");
addMapping("getEntityTexture", RenderRabbit.class, "func_110775_a");
addMapping("getEntityTexture", RenderSheep.class, "func_110775_a");
addMapping("getEntityTexture", RenderShulker.class, "func_110775_a");
addMapping("shouldRender", RenderShulker.class, "func_177071_a");
addMapping("getMainModel", RenderShulker.class, "func_177087_b");
addMapping("doRender", RenderShulker.class, "func_76986_a");
addMapping("preRenderCallback", RenderShulker.class, "func_77041_b");
addMapping("applyRotations", RenderShulker.class, "func_77043_a");
addMapping("getEntityTexture", RenderShulkerBullet.class, "func_110775_a");
addMapping("rotLerp", RenderShulkerBullet.class, "func_188347_a");
addMapping("doRender", RenderShulkerBullet.class, "func_76986_a");
addMapping("getEntityTexture", RenderSilverfish.class, "func_110775_a");
addMapping("getDeathMaxRotation", RenderSilverfish.class, "func_77037_a");
addMapping("getEntityTexture", RenderSkeleton.class, "func_110775_a");
addMapping("transformHeldFull3DItemLayer", RenderSkeleton.class, "func_82422_c");
addMapping("getEntityTexture", RenderSlime.class, "func_110775_a");
addMapping("doRender", RenderSlime.class, "func_76986_a");
addMapping("preRenderCallback", RenderSlime.class, "func_77041_b");
addMapping("getEntityTexture", RenderSnowMan.class, "func_110775_a");
addMapping("getMainModel", RenderSnowMan.class, "func_177087_b");
addMapping("getEntityTexture", RenderSnowball.class, "func_110775_a");
addMapping("getStackToRender", RenderSnowball.class, "func_177082_d");
addMapping("doRender", RenderSnowball.class, "func_76986_a");
addMapping("getEntityTexture", RenderSpectralArrow.class, "func_110775_a");
addMapping("getEntityTexture", RenderSpider.class, "func_110775_a");
addMapping("getDeathMaxRotation", RenderSpider.class, "func_77037_a");
addMapping("getEntityTexture", RenderSquid.class, "func_110775_a");
addMapping("applyRotations", RenderSquid.class, "func_77043_a");
addMapping("handleRotationFloat", RenderSquid.class, "func_77044_a");
addMapping("getEntityTexture", RenderStray.class, "func_110775_a");
addMapping("getEntityTexture", RenderTNTPrimed.class, "func_110775_a");
addMapping("doRender", RenderTNTPrimed.class, "func_76986_a");
addMapping("getEntityTexture", RenderTippedArrow.class, "func_110775_a");
addMapping("renderCartContents", RenderTntMinecart.class, "func_188319_a");
addMapping("getEntityTexture", RenderVex.class, "func_110775_a");
addMapping("doRender", RenderVex.class, "func_76986_a");
addMapping("preRenderCallback", RenderVex.class, "func_77041_b");
addMapping("getEntityTexture", RenderVillager.class, "func_110775_a");
addMapping("getMainModel", RenderVillager.class, "func_177087_b");
addMapping("preRenderCallback", RenderVillager.class, "func_77041_b");
addMapping("getEntityTexture", RenderVindicator.class, "func_110775_a");
addMapping("doRender", RenderVindicator.class, "func_76986_a");
addMapping("preRenderCallback", RenderVindicator.class, "func_77041_b");
addMapping("getEntityTexture", RenderWitch.class, "func_110775_a");
addMapping("getMainModel", RenderWitch.class, "func_177087_b");
addMapping("doRender", RenderWitch.class, "func_76986_a");
addMapping("preRenderCallback", RenderWitch.class, "func_77041_b");
addMapping("transformHeldFull3DItemLayer", RenderWitch.class, "func_82422_c");
addMapping("getEntityTexture", RenderWither.class, "func_110775_a");
addMapping("preRenderCallback", RenderWither.class, "func_77041_b");
addMapping("getEntityTexture", RenderWitherSkeleton.class, "func_110775_a");
addMapping("preRenderCallback", RenderWitherSkeleton.class, "func_77041_b");
addMapping("getEntityTexture", RenderWitherSkull.class, "func_110775_a");
addMapping("doRender", RenderWitherSkull.class, "func_76986_a");
addMapping("getRenderYaw", RenderWitherSkull.class, "func_82400_a");
addMapping("getEntityTexture", RenderWolf.class, "func_110775_a");
addMapping("doRender", RenderWolf.class, "func_76986_a");
addMapping("handleRotationFloat", RenderWolf.class, "func_77044_a");
addMapping("getEntityTexture", RenderXPOrb.class, "func_110775_a");
addMapping("doRender", RenderXPOrb.class, "func_76986_a");
addMapping("getEntityTexture", RenderZombie.class, "func_110775_a");
addMapping("getEntityTexture", RenderZombieVillager.class, "func_110775_a");
addMapping("applyRotations", RenderZombieVillager.class, "func_77043_a");
addMapping("doRenderLayer", LayerArmorBase.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerArmorBase.class, "func_177142_b");
addMapping("initArmor", LayerArmorBase.class, "func_177177_a");
addMapping("getArmorResource", LayerArmorBase.class, "func_177178_a");
addMapping("getArmorResource", LayerArmorBase.class, "func_177181_a");
addMapping("setModelSlotVisible", LayerArmorBase.class, "func_188359_a");
addMapping("getModelFromSlot", LayerArmorBase.class, "func_188360_a");
addMapping("renderArmorLayer", LayerArmorBase.class, "func_188361_a");
addMapping("isLegSlot", LayerArmorBase.class, "func_188363_b");
addMapping("renderEnchantedGlint", LayerArmorBase.class, "func_188364_a");
addMapping("doRenderLayer", LayerArrow.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerArrow.class, "func_177142_b");
addMapping("initArmor", LayerBipedArmor.class, "func_177177_a");
addMapping("setModelVisible", LayerBipedArmor.class, "func_177194_a");
addMapping("setModelSlotVisible", LayerBipedArmor.class, "func_188359_a");
addMapping("doRenderLayer", LayerCape.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerCape.class, "func_177142_b");
addMapping("doRenderLayer", LayerCreeperCharge.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerCreeperCharge.class, "func_177142_b");
addMapping("doRenderLayer", LayerCustomHead.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerCustomHead.class, "func_177142_b");
addMapping("doRenderLayer", LayerDeadmau5Head.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerDeadmau5Head.class, "func_177142_b");
addMapping("doRenderLayer", LayerElytra.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerElytra.class, "func_177142_b");
addMapping("doRenderLayer", LayerEnderDragonDeath.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerEnderDragonDeath.class, "func_177142_b");
addMapping("doRenderLayer", LayerEnderDragonEyes.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerEnderDragonEyes.class, "func_177142_b");
addMapping("doRenderLayer", LayerEndermanEyes.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerEndermanEyes.class, "func_177142_b");
addMapping("doRenderLayer", LayerEntityOnShoulder.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerEntityOnShoulder.class, "func_177142_b");
addMapping("renderEntityOnShoulder", LayerEntityOnShoulder.class, "func_192864_a");
addMapping("doRenderLayer", LayerHeldBlock.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerHeldBlock.class, "func_177142_b");
addMapping("doRenderLayer", LayerHeldItem.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerHeldItem.class, "func_177142_b");
addMapping("renderHeldItem", LayerHeldItem.class, "func_188358_a");
addMapping("translateToHand", LayerHeldItem.class, "func_191361_a");
addMapping("doRenderLayer", LayerHeldItemWitch.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerHeldItemWitch.class, "func_177142_b");
addMapping("doRenderLayer", LayerIronGolemFlower.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerIronGolemFlower.class, "func_177142_b");
addMapping("doRenderLayer", LayerLlamaDecor.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerLlamaDecor.class, "func_177142_b");
addMapping("doRenderLayer", LayerMooshroomMushroom.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerMooshroomMushroom.class, "func_177142_b");
addMapping("doRenderLayer", LayerRenderer.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerRenderer.class, "func_177142_b");
addMapping("doRenderLayer", LayerSaddle.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerSaddle.class, "func_177142_b");
addMapping("doRenderLayer", LayerSheepWool.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerSheepWool.class, "func_177142_b");
addMapping("doRenderLayer", LayerSlimeGel.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerSlimeGel.class, "func_177142_b");
addMapping("doRenderLayer", LayerSnowmanHead.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerSnowmanHead.class, "func_177142_b");
addMapping("doRenderLayer", LayerSpiderEyes.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerSpiderEyes.class, "func_177142_b");
addMapping("doRenderLayer", LayerStrayClothing.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerStrayClothing.class, "func_177142_b");
addMapping("initArmor", LayerVillagerArmor.class, "func_177177_a");
addMapping("doRenderLayer", LayerWitherAura.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerWitherAura.class, "func_177142_b");
addMapping("doRenderLayer", LayerWolfCollar.class, "func_177141_a");
addMapping("shouldCombineTextures", LayerWolfCollar.class, "func_177142_b");
addMapping("getGlTextureId", AbstractTexture.class, "func_110552_b");
addMapping("deleteGlTexture", AbstractTexture.class, "func_147631_c");
addMapping("restoreLastBlurMipmap", AbstractTexture.class, "func_174935_a");
addMapping("setBlurMipmap", AbstractTexture.class, "func_174936_b");
addMapping("setBlurMipmapDirect", AbstractTexture.class, "func_174937_a");
addMapping("loadTexture", DynamicTexture.class, "func_110551_a");
addMapping("updateDynamicTexture", DynamicTexture.class, "func_110564_a");
addMapping("getTextureData", DynamicTexture.class, "func_110565_c");
addMapping("registerSprites", ITextureMapPopulator.class, "func_177059_a");
addMapping("loadTexture", ITextureObject.class, "func_110551_a");
addMapping("getGlTextureId", ITextureObject.class, "func_110552_b");
addMapping("restoreLastBlurMipmap", ITextureObject.class, "func_174935_a");
addMapping("setBlurMipmap", ITextureObject.class, "func_174936_b");
addMapping("tick", ITickable.class, "func_110550_d");
addMapping("loadTexture", LayeredColorMaskTexture.class, "func_110551_a");
addMapping("loadTexture", LayeredTexture.class, "func_110551_a");
addMapping("makeFromResource", PngSizeInfo.class, "func_188532_a");
addMapping("loadTexture", SimpleTexture.class, "func_110551_a");
addMapping("addSprite", Stitcher.class, "func_110934_a");
addMapping("getCurrentWidth", Stitcher.class, "func_110935_a");
addMapping("getCurrentHeight", Stitcher.class, "func_110936_b");
addMapping("getMipmapDimension", Stitcher.class, "func_147969_b");
addMapping("doStitch", Stitcher.class, "func_94305_f");
addMapping("getStichSlots", Stitcher.class, "func_94309_g");
addMapping("allocateSlot", Stitcher.class, "func_94310_b");
addMapping("expandAndAllocateSlot", Stitcher.class, "func_94311_c");
addMapping("setIconWidth", TextureAtlasSprite.class, "func_110966_b");
addMapping("getOriginY", TextureAtlasSprite.class, "func_110967_i");
addMapping("setFramesTextureData", TextureAtlasSprite.class, "func_110968_a");
addMapping("setIconHeight", TextureAtlasSprite.class, "func_110969_c");
addMapping("getFrameCount", TextureAtlasSprite.class, "func_110970_k");
addMapping("initSprite", TextureAtlasSprite.class, "func_110971_a");
addMapping("getOriginX", TextureAtlasSprite.class, "func_130010_a");
addMapping("hasAnimationMetadata", TextureAtlasSprite.class, "func_130098_m");
addMapping("allocateFrameTextureData", TextureAtlasSprite.class, "func_130099_d");
addMapping("resetSprite", TextureAtlasSprite.class, "func_130102_n");
addMapping("clearFramesTextureData", TextureAtlasSprite.class, "func_130103_l");
addMapping("getFrameTextureData", TextureAtlasSprite.class, "func_147962_a");
addMapping("generateMipmaps", TextureAtlasSprite.class, "func_147963_d");
addMapping("getFrameTextureData", TextureAtlasSprite.class, "func_147965_a");
addMapping("makeAtlasSprite", TextureAtlasSprite.class, "func_176604_a");
addMapping("updateAnimationInterpolated", TextureAtlasSprite.class, "func_180599_n");
addMapping("interpolateColor", TextureAtlasSprite.class, "func_188535_a");
addMapping("getUnInterpolatedV", TextureAtlasSprite.class, "func_188536_b");
addMapping("getUnInterpolatedU", TextureAtlasSprite.class, "func_188537_a");
addMapping("loadSprite", TextureAtlasSprite.class, "func_188538_a");
addMapping("loadSpriteFrames", TextureAtlasSprite.class, "func_188539_a");
addMapping("getMinV", TextureAtlasSprite.class, "func_94206_g");
addMapping("getInterpolatedV", TextureAtlasSprite.class, "func_94207_b");
addMapping("getMinU", TextureAtlasSprite.class, "func_94209_e");
addMapping("getMaxV", TextureAtlasSprite.class, "func_94210_h");
addMapping("getIconWidth", TextureAtlasSprite.class, "func_94211_a");
addMapping("getMaxU", TextureAtlasSprite.class, "func_94212_f");
addMapping("getInterpolatedU", TextureAtlasSprite.class, "func_94214_a");
addMapping("getIconName", TextureAtlasSprite.class, "func_94215_i");
addMapping("getIconHeight", TextureAtlasSprite.class, "func_94216_b");
addMapping("copyFrom", TextureAtlasSprite.class, "func_94217_a");
addMapping("updateAnimation", TextureAtlasSprite.class, "func_94219_l");
addMapping("onResourceManagerReload", TextureManager.class, "func_110549_a");
addMapping("tick", TextureManager.class, "func_110550_d");
addMapping("bindTexture", TextureManager.class, "func_110577_a");
addMapping("getDynamicTextureLocation", TextureManager.class, "func_110578_a");
addMapping("loadTexture", TextureManager.class, "func_110579_a");
addMapping("loadTickableTexture", TextureManager.class, "func_110580_a");
addMapping("getTexture", TextureManager.class, "func_110581_b");
addMapping("deleteTexture", TextureManager.class, "func_147645_c");
addMapping("tick", TextureMap.class, "func_110550_d");
addMapping("loadTexture", TextureMap.class, "func_110551_a");
addMapping("initMissingImage", TextureMap.class, "func_110569_e");
addMapping("loadTextureAtlas", TextureMap.class, "func_110571_b");
addMapping("getAtlasSprite", TextureMap.class, "func_110572_b");
addMapping("setMipmapLevels", TextureMap.class, "func_147633_a");
addMapping("registerSprite", TextureMap.class, "func_174942_a");
addMapping("loadSprites", TextureMap.class, "func_174943_a");
addMapping("getMissingSprite", TextureMap.class, "func_174944_f");
addMapping("getResourceLocation", TextureMap.class, "func_184396_a");
addMapping("generateMipmaps", TextureMap.class, "func_184397_a");
addMapping("updateAnimations", TextureMap.class, "func_94248_c");
addMapping("updateAnaglyph", TextureUtil.class, "func_110985_a");
addMapping("readImageData", TextureUtil.class, "func_110986_a");
addMapping("uploadTextureImage", TextureUtil.class, "func_110987_a");
addMapping("uploadTexture", TextureUtil.class, "func_110988_a");
addMapping("uploadTextureImageAllocate", TextureUtil.class, "func_110989_a");
addMapping("copyToBuffer", TextureUtil.class, "func_110990_a");
addMapping("allocateTexture", TextureUtil.class, "func_110991_a");
addMapping("uploadTextureImageSubImpl", TextureUtil.class, "func_110993_a");
addMapping("copyToBufferPos", TextureUtil.class, "func_110994_a");
addMapping("uploadTextureImageSub", TextureUtil.class, "func_110995_a");
addMapping("glGenTextures", TextureUtil.class, "func_110996_a");
addMapping("setTextureClamped", TextureUtil.class, "func_110997_a");
addMapping("deleteTexture", TextureUtil.class, "func_147942_a");
addMapping("blendColors", TextureUtil.class, "func_147943_a");
addMapping("blendColorComponent", TextureUtil.class, "func_147944_a");
addMapping("uploadTextureSub", TextureUtil.class, "func_147947_a");
addMapping("generateMipmapData", TextureUtil.class, "func_147949_a");
addMapping("setTextureBlurred", TextureUtil.class, "func_147951_b");
addMapping("processPixelValues", TextureUtil.class, "func_147953_a");
addMapping("setTextureBlurMipmap", TextureUtil.class, "func_147954_b");
addMapping("uploadTextureMipmap", TextureUtil.class, "func_147955_a");
addMapping("readBufferedImage", TextureUtil.class, "func_177053_a");
addMapping("anaglyphColor", TextureUtil.class, "func_177054_c");
addMapping("allocateTextureImpl", TextureUtil.class, "func_180600_a");
addMapping("getColorGamma", TextureUtil.class, "func_188543_d");
addMapping("bindTexture", TextureUtil.class, "func_94277_a");
addMapping("getBannerResourceLocation", TileEntityBannerRenderer.class, "func_178463_a");
addMapping("render", TileEntityBannerRenderer.class, "func_192841_a");
addMapping("isGlobalRenderer", TileEntityBeaconRenderer.class, "func_188185_a");
addMapping("renderBeamSegment", TileEntityBeaconRenderer.class, "func_188204_a");
addMapping("renderBeamSegment", TileEntityBeaconRenderer.class, "func_188205_a");
addMapping("renderBeacon", TileEntityBeaconRenderer.class, "func_188206_a");
addMapping("render", TileEntityBeaconRenderer.class, "func_192841_a");
addMapping("render", TileEntityBedRenderer.class, "func_192841_a");
addMapping("renderPiece", TileEntityBedRenderer.class, "func_193847_a");
addMapping("render", TileEntityChestRenderer.class, "func_192841_a");
addMapping("render", TileEntityEnchantmentTableRenderer.class, "func_192841_a");
addMapping("getPasses", TileEntityEndGatewayRenderer.class, "func_191286_a");
addMapping("getOffset", TileEntityEndGatewayRenderer.class, "func_191287_c");
addMapping("render", TileEntityEndGatewayRenderer.class, "func_192841_a");
addMapping("getBuffer", TileEntityEndPortalRenderer.class, "func_147525_a");
addMapping("getPasses", TileEntityEndPortalRenderer.class, "func_191286_a");
addMapping("getOffset", TileEntityEndPortalRenderer.class, "func_191287_c");
addMapping("render", TileEntityEndPortalRenderer.class, "func_192841_a");
addMapping("render", TileEntityEnderChestRenderer.class, "func_192841_a");
addMapping("renderByItem", TileEntityItemStackRenderer.class, "func_179022_a");
addMapping("renderByItem", TileEntityItemStackRenderer.class, "func_192838_a");
addMapping("renderMob", TileEntityMobSpawnerRenderer.class, "func_147517_a");
addMapping("render", TileEntityMobSpawnerRenderer.class, "func_192841_a");
addMapping("renderStateModel", TileEntityPistonRenderer.class, "func_188186_a");
addMapping("render", TileEntityPistonRenderer.class, "func_192841_a");
addMapping("setWorld", TileEntityRendererDispatcher.class, "func_147543_a");
addMapping("getRenderer", TileEntityRendererDispatcher.class, "func_147546_a");
addMapping("getRenderer", TileEntityRendererDispatcher.class, "func_147547_b");
addMapping("getFontRenderer", TileEntityRendererDispatcher.class, "func_147548_a");
addMapping("render", TileEntityRendererDispatcher.class, "func_147549_a");
addMapping("render", TileEntityRendererDispatcher.class, "func_180546_a");
addMapping("prepare", TileEntityRendererDispatcher.class, "func_190056_a");
addMapping("render", TileEntityRendererDispatcher.class, "func_192854_a");
addMapping("render", TileEntityRendererDispatcher.class, "func_192855_a");
addMapping("render", TileEntityShulkerBoxRenderer.class, "func_192841_a");
addMapping("render", TileEntitySignRenderer.class, "func_192841_a");
addMapping("setRendererDispatcher", TileEntitySkullRenderer.class, "func_147497_a");
addMapping("renderSkull", TileEntitySkullRenderer.class, "func_188190_a");
addMapping("render", TileEntitySkullRenderer.class, "func_192841_a");
addMapping("setRendererDispatcher", TileEntitySpecialRenderer.class, "func_147497_a");
addMapping("getFontRenderer", TileEntitySpecialRenderer.class, "func_147498_b");
addMapping("bindTexture", TileEntitySpecialRenderer.class, "func_147499_a");
addMapping("getWorld", TileEntitySpecialRenderer.class, "func_178459_a");
addMapping("isGlobalRenderer", TileEntitySpecialRenderer.class, "func_188185_a");
addMapping("drawNameplate", TileEntitySpecialRenderer.class, "func_190052_a");
addMapping("setLightmapDisabled", TileEntitySpecialRenderer.class, "func_190053_a");
addMapping("render", TileEntitySpecialRenderer.class, "func_192841_a");
addMapping("isGlobalRenderer", TileEntityStructureRenderer.class, "func_188185_a");
addMapping("renderInvisibleBlocks", TileEntityStructureRenderer.class, "func_190054_a");
addMapping("renderBox", TileEntityStructureRenderer.class, "func_190055_a");
addMapping("render", TileEntityStructureRenderer.class, "func_192841_a");
addMapping("drawArrays", VertexBuffer.class, "func_177358_a");
addMapping("bindBuffer", VertexBuffer.class, "func_177359_a");
addMapping("unbindBuffer", VertexBuffer.class, "func_177361_b");
addMapping("deleteGlBuffers", VertexBuffer.class, "func_177362_c");
addMapping("bufferData", VertexBuffer.class, "func_181722_a");
addMapping("getNextOffset", VertexFormat.class, "func_177338_f");
addMapping("clear", VertexFormat.class, "func_177339_a");
addMapping("getColorOffset", VertexFormat.class, "func_177340_e");
addMapping("hasPosition", VertexFormat.class, "func_177341_i");
addMapping("getNormalOffset", VertexFormat.class, "func_177342_c");
addMapping("getElements", VertexFormat.class, "func_177343_g");
addMapping("getUvOffsetById", VertexFormat.class, "func_177344_b");
addMapping("getElementCount", VertexFormat.class, "func_177345_h");
addMapping("hasColor", VertexFormat.class, "func_177346_d");
addMapping("hasUvOffset", VertexFormat.class, "func_177347_a");
addMapping("getElement", VertexFormat.class, "func_177348_c");
addMapping("hasNormal", VertexFormat.class, "func_177350_b");
addMapping("getIntegerSize", VertexFormat.class, "func_181719_f");
addMapping("getOffset", VertexFormat.class, "func_181720_d");
addMapping("addElement", VertexFormat.class, "func_181721_a");
addMapping("getType", VertexFormatElement.class, "func_177367_b");
addMapping("getSize", VertexFormatElement.class, "func_177368_f");
addMapping("getIndex", VertexFormatElement.class, "func_177369_e");
addMapping("getElementCount", VertexFormatElement.class, "func_177370_d");
addMapping("isFirstOrUV", VertexFormatElement.class, "func_177372_a");
addMapping("isPositionElement", VertexFormatElement.class, "func_177374_g");
addMapping("getUsage", VertexFormatElement.class, "func_177375_c");
addMapping("getPackImage", AbstractResourcePack.class, "func_110586_a");
addMapping("resourceExists", AbstractResourcePack.class, "func_110589_b");
addMapping("getInputStream", AbstractResourcePack.class, "func_110590_a");
addMapping("getInputStreamByName", AbstractResourcePack.class, "func_110591_a");
addMapping("locationToName", AbstractResourcePack.class, "func_110592_c");
addMapping("hasResourceName", AbstractResourcePack.class, "func_110593_b");
addMapping("logNameNotLowercase", AbstractResourcePack.class, "func_110594_c");
addMapping("getRelativeName", AbstractResourcePack.class, "func_110595_a");
addMapping("readMetadata", AbstractResourcePack.class, "func_110596_a");
addMapping("getPackName", AbstractResourcePack.class, "func_130077_b");
addMapping("getPackMetadata", AbstractResourcePack.class, "func_135058_a");
addMapping("getSkinType", DefaultPlayerSkin.class, "func_177332_b");
addMapping("isSlimSkin", DefaultPlayerSkin.class, "func_177333_c");
addMapping("getDefaultSkin", DefaultPlayerSkin.class, "func_177334_a");
addMapping("getDefaultSkinLegacy", DefaultPlayerSkin.class, "func_177335_a");
addMapping("getPackImage", DefaultResourcePack.class, "func_110586_a");
addMapping("getResourceDomains", DefaultResourcePack.class, "func_110587_b");
addMapping("resourceExists", DefaultResourcePack.class, "func_110589_b");
addMapping("getInputStream", DefaultResourcePack.class, "func_110590_a");
addMapping("getResourceStream", DefaultResourcePack.class, "func_110605_c");
addMapping("getPackName", DefaultResourcePack.class, "func_130077_b");
addMapping("getPackMetadata", DefaultResourcePack.class, "func_135058_a");
addMapping("getInputStreamAssets", DefaultResourcePack.class, "func_152780_c");
addMapping("getResource", FallbackResourceManager.class, "func_110536_a");
addMapping("getLocationMcmeta", FallbackResourceManager.class, "func_110537_b");
addMapping("addResourcePack", FallbackResourceManager.class, "func_110538_a");
addMapping("getResourceDomains", FallbackResourceManager.class, "func_135055_a");
addMapping("getAllResources", FallbackResourceManager.class, "func_135056_b");
addMapping("getInputStream", FallbackResourceManager.class, "func_177245_a");
addMapping("checkResourcePath", FallbackResourceManager.class, "func_188552_d");
addMapping("getResourceDomains", FileResourcePack.class, "func_110587_b");
addMapping("getInputStreamByName", FileResourcePack.class, "func_110591_a");
addMapping("hasResourceName", FileResourcePack.class, "func_110593_b");
addMapping("getResourcePackZipFile", FileResourcePack.class, "func_110599_c");
addMapping("getResourceDomains", FolderResourcePack.class, "func_110587_b");
addMapping("getInputStreamByName", FolderResourcePack.class, "func_110591_a");
addMapping("hasResourceName", FolderResourcePack.class, "func_110593_b");
addMapping("validatePath", FolderResourcePack.class, "func_191384_a");
addMapping("getFile", FolderResourcePack.class, "func_191385_d");
addMapping("onResourceManagerReload", FoliageColorReloadListener.class, "func_110549_a");
addMapping("onResourceManagerReload", GrassColorReloadListener.class, "func_110549_a");
addMapping("setLocale", I18n.class, "func_135051_a");
addMapping("format", I18n.class, "func_135052_a");
addMapping("hasKey", I18n.class, "func_188566_a");
addMapping("reloadResources", IReloadableResourceManager.class, "func_110541_a");
addMapping("registerReloadListener", IReloadableResourceManager.class, "func_110542_a");
addMapping("getMetadata", IResource.class, "func_110526_a");
addMapping("getInputStream", IResource.class, "func_110527_b");
addMapping("hasMetadata", IResource.class, "func_110528_c");
addMapping("getResourcePackName", IResource.class, "func_177240_d");
addMapping("getResourceLocation", IResource.class, "func_177241_a");
addMapping("getResource", IResourceManager.class, "func_110536_a");
addMapping("getResourceDomains", IResourceManager.class, "func_135055_a");
addMapping("getAllResources", IResourceManager.class, "func_135056_b");
addMapping("onResourceManagerReload", IResourceManagerReloadListener.class, "func_110549_a");
addMapping("getPackImage", IResourcePack.class, "func_110586_a");
addMapping("getResourceDomains", IResourcePack.class, "func_110587_b");
addMapping("resourceExists", IResourcePack.class, "func_110589_b");
addMapping("getInputStream", IResourcePack.class, "func_110590_a");
addMapping("getPackName", IResourcePack.class, "func_130077_b");
addMapping("getPackMetadata", IResourcePack.class, "func_135058_a");
addMapping("getLanguageCode", Language.class, "func_135034_a");
addMapping("isBidirectional", Language.class, "func_135035_b");
addMapping("onResourceManagerReload", LanguageManager.class, "func_110549_a");
addMapping("getLanguages", LanguageManager.class, "func_135040_d");
addMapping("getCurrentLanguage", LanguageManager.class, "func_135041_c");
addMapping("isCurrentLocaleUnicode", LanguageManager.class, "func_135042_a");
addMapping("parseLanguageMetadata", LanguageManager.class, "func_135043_a");
addMapping("isCurrentLanguageBidirectional", LanguageManager.class, "func_135044_b");
addMapping("setCurrentLanguage", LanguageManager.class, "func_135045_a");
addMapping("getLanguage", LanguageManager.class, "func_191960_a");
addMapping("getPackImage", LegacyV2Adapter.class, "func_110586_a");
addMapping("getResourceDomains", LegacyV2Adapter.class, "func_110587_b");
addMapping("resourceExists", LegacyV2Adapter.class, "func_110589_b");
addMapping("getInputStream", LegacyV2Adapter.class, "func_110590_a");
addMapping("getPackName", LegacyV2Adapter.class, "func_130077_b");
addMapping("getPackMetadata", LegacyV2Adapter.class, "func_135058_a");
addMapping("fudgePath", LegacyV2Adapter.class, "func_191382_c");
addMapping("loadLocaleData", Locale.class, "func_135021_a");
addMapping("loadLocaleDataFiles", Locale.class, "func_135022_a");
addMapping("formatMessage", Locale.class, "func_135023_a");
addMapping("checkUnicode", Locale.class, "func_135024_b");
addMapping("isUnicode", Locale.class, "func_135025_a");
addMapping("translateKeyPrivate", Locale.class, "func_135026_c");
addMapping("loadLocaleData", Locale.class, "func_135028_a");
addMapping("hasKey", Locale.class, "func_188568_a");
addMapping("isFileExisting", ResourceIndex.class, "func_188545_b");
addMapping("getPackMcmeta", ResourceIndex.class, "func_188546_a");
addMapping("getFile", ResourceIndex.class, "func_188547_a");
addMapping("getPackMcmeta", ResourceIndexFolder.class, "func_188546_a");
addMapping("getFile", ResourceIndexFolder.class, "func_188547_a");
addMapping("mouseReleased", ResourcePackListEntry.class, "func_148277_b");
addMapping("mousePressed", ResourcePackListEntry.class, "func_148278_a");
addMapping("canMoveDown", ResourcePackListEntry.class, "func_148307_h");
addMapping("canMoveLeft", ResourcePackListEntry.class, "func_148308_f");
addMapping("canMoveRight", ResourcePackListEntry.class, "func_148309_e");
addMapping("showHoverOverlay", ResourcePackListEntry.class, "func_148310_d");
addMapping("getResourcePackDescription", ResourcePackListEntry.class, "func_148311_a");
addMapping("getResourcePackName", ResourcePackListEntry.class, "func_148312_b");
addMapping("bindResourcePackIcon", ResourcePackListEntry.class, "func_148313_c");
addMapping("canMoveUp", ResourcePackListEntry.class, "func_148314_g");
addMapping("getResourcePackFormat", ResourcePackListEntry.class, "func_183019_a");
addMapping("isServerPack", ResourcePackListEntry.class, "func_186768_j");
addMapping("updatePosition", ResourcePackListEntry.class, "func_192633_a");
addMapping("drawEntry", ResourcePackListEntry.class, "func_192634_a");
addMapping("getResourcePackName", ResourcePackListEntryDefault.class, "func_148312_b");
addMapping("isServerPack", ResourcePackListEntryDefault.class, "func_186768_j");
addMapping("getResourcePackDescription", ResourcePackListEntryFound.class, "func_148311_a");
addMapping("getResourcePackName", ResourcePackListEntryFound.class, "func_148312_b");
addMapping("bindResourcePackIcon", ResourcePackListEntryFound.class, "func_148313_c");
addMapping("getResourcePackEntry", ResourcePackListEntryFound.class, "func_148318_i");
addMapping("getResourcePackFormat", ResourcePackListEntryFound.class, "func_183019_a");
addMapping("canMoveDown", ResourcePackListEntryServer.class, "func_148307_h");
addMapping("canMoveLeft", ResourcePackListEntryServer.class, "func_148308_f");
addMapping("canMoveRight", ResourcePackListEntryServer.class, "func_148309_e");
addMapping("showHoverOverlay", ResourcePackListEntryServer.class, "func_148310_d");
addMapping("getResourcePackDescription", ResourcePackListEntryServer.class, "func_148311_a");
addMapping("getResourcePackName", ResourcePackListEntryServer.class, "func_148312_b");
addMapping("bindResourcePackIcon", ResourcePackListEntryServer.class, "func_148313_c");
addMapping("canMoveUp", ResourcePackListEntryServer.class, "func_148314_g");
addMapping("getResourcePackFormat", ResourcePackListEntryServer.class, "func_183019_a");
addMapping("isServerPack", ResourcePackListEntryServer.class, "func_186768_j");
addMapping("getRepositoryEntriesAll", ResourcePackRepository.class, "func_110609_b");
addMapping("updateRepositoryEntriesAll", ResourcePackRepository.class, "func_110611_a");
addMapping("getDirResourcepacks", ResourcePackRepository.class, "func_110612_e");
addMapping("getRepositoryEntries", ResourcePackRepository.class, "func_110613_c");
addMapping("getResourcePackFiles", ResourcePackRepository.class, "func_110614_g");
addMapping("fixDirResourcepacks", ResourcePackRepository.class, "func_110616_f");
addMapping("setRepositories", ResourcePackRepository.class, "func_148527_a");
addMapping("clearResourcePack", ResourcePackRepository.class, "func_148529_f");
addMapping("getServerResourcePack", ResourcePackRepository.class, "func_148530_e");
addMapping("setServerResourcePack", ResourcePackRepository.class, "func_177319_a");
addMapping("downloadResourcePack", ResourcePackRepository.class, "func_180601_a");
addMapping("deleteOldServerResourcesPacks", ResourcePackRepository.class, "func_183028_i");
addMapping("getResourcePackEntry", ResourcePackRepository.class, "func_188565_b");
addMapping("validatePack", ResourcePackRepository.class, "func_190112_b");
addMapping("checkHash", ResourcePackRepository.class, "func_190113_a");
addMapping("getDownloadHeaders", ResourcePackRepository.class, "func_190115_a");
addMapping("getResourcePack", ResourcePackRepository.class, "func_191399_b");
addMapping("getResource", SimpleReloadableResourceManager.class, "func_110536_a");
addMapping("reloadResources", SimpleReloadableResourceManager.class, "func_110541_a");
addMapping("registerReloadListener", SimpleReloadableResourceManager.class, "func_110542_a");
addMapping("clearResources", SimpleReloadableResourceManager.class, "func_110543_a");
addMapping("notifyReloadListeners", SimpleReloadableResourceManager.class, "func_110544_b");
addMapping("reloadResourcePack", SimpleReloadableResourceManager.class, "func_110545_a");
addMapping("getResourceDomains", SimpleReloadableResourceManager.class, "func_135055_a");
addMapping("getAllResources", SimpleReloadableResourceManager.class, "func_135056_b");
addMapping("getMetadata", SimpleResource.class, "func_110526_a");
addMapping("getInputStream", SimpleResource.class, "func_110527_b");
addMapping("hasMetadata", SimpleResource.class, "func_110528_c");
addMapping("getResourcePackName", SimpleResource.class, "func_177240_d");
addMapping("getResourceLocation", SimpleResource.class, "func_177241_a");
addMapping("loadSkinFromCache", SkinManager.class, "func_152788_a");
addMapping("loadSkin", SkinManager.class, "func_152789_a");
addMapping("loadProfileTextures", SkinManager.class, "func_152790_a");
addMapping("loadSkin", SkinManager.class, "func_152792_a");
addMapping("hasNoTime", AnimationFrame.class, "func_110495_a");
addMapping("getFrameIndex", AnimationFrame.class, "func_110496_c");
addMapping("getFrameTime", AnimationFrame.class, "func_110497_b");
addMapping("getFrameIndex", AnimationMetadataSection.class, "func_110468_c");
addMapping("getFrameTime", AnimationMetadataSection.class, "func_110469_d");
addMapping("frameHasTime", AnimationMetadataSection.class, "func_110470_b");
addMapping("getFrameHeight", AnimationMetadataSection.class, "func_110471_a");
addMapping("getFrameTimeSingle", AnimationMetadataSection.class, "func_110472_a");
addMapping("getFrameCount", AnimationMetadataSection.class, "func_110473_c");
addMapping("getFrameWidth", AnimationMetadataSection.class, "func_110474_b");
addMapping("getAnimationFrame", AnimationMetadataSection.class, "func_130072_d");
addMapping("getFrameIndexSet", AnimationMetadataSection.class, "func_130073_e");
addMapping("isInterpolate", AnimationMetadataSection.class, "func_177219_e");
addMapping("getSectionName", AnimationMetadataSectionSerializer.class, "func_110483_a");
addMapping("parseAnimationFrame", AnimationMetadataSectionSerializer.class, "func_110492_a");
addMapping("getSectionName", FontMetadataSectionSerializer.class, "func_110483_a");
addMapping("getSectionName", IMetadataSectionSerializer.class, "func_110483_a");
addMapping("getLanguages", LanguageMetadataSection.class, "func_135018_a");
addMapping("getSectionName", LanguageMetadataSectionSerializer.class, "func_110483_a");
addMapping("parseMetadataSection", MetadataSerializer.class, "func_110503_a");
addMapping("registerMetadataSectionType", MetadataSerializer.class, "func_110504_a");
addMapping("getGson", MetadataSerializer.class, "func_110505_a");
addMapping("getPackFormat", PackMetadataSection.class, "func_110462_b");
addMapping("getPackDescription", PackMetadataSection.class, "func_152805_a");
addMapping("getSectionName", PackMetadataSectionSerializer.class, "func_110483_a");
addMapping("getTextureBlur", TextureMetadataSection.class, "func_110479_a");
addMapping("getTextureClamp", TextureMetadataSection.class, "func_110480_b");
addMapping("getSectionName", TextureMetadataSectionSerializer.class, "func_110483_a");
addMapping("read", CreativeSettings.class, "func_192562_a");
addMapping("getHotbarSnapshot", CreativeSettings.class, "func_192563_a");
addMapping("write", CreativeSettings.class, "func_192564_b");
addMapping("isKeyDown", GameSettings.class, "func_100015_a");
addMapping("setOptionKeyBinding", GameSettings.class, "func_151440_a");
addMapping("getModelParts", GameSettings.class, "func_178876_d");
addMapping("switchModelPartEnabled", GameSettings.class, "func_178877_a");
addMapping("setModelPartEnabled", GameSettings.class, "func_178878_a");
addMapping("shouldRenderClouds", GameSettings.class, "func_181147_e");
addMapping("isUsingNativeTransport", GameSettings.class, "func_181148_f");
addMapping("getSoundLevel", GameSettings.class, "func_186711_a");
addMapping("setSoundLevel", GameSettings.class, "func_186712_a");
addMapping("dataFix", GameSettings.class, "func_189988_a");
addMapping("getOptionFloatValue", GameSettings.class, "func_74296_a");
addMapping("getKeyBinding", GameSettings.class, "func_74297_c");
addMapping("getKeyDisplayString", GameSettings.class, "func_74298_c");
addMapping("getTranslation", GameSettings.class, "func_74299_a");
addMapping("loadOptions", GameSettings.class, "func_74300_a");
addMapping("saveOptions", GameSettings.class, "func_74303_b");
addMapping("setOptionFloatValue", GameSettings.class, "func_74304_a");
addMapping("parseFloat", GameSettings.class, "func_74305_a");
addMapping("setOptionValue", GameSettings.class, "func_74306_a");
addMapping("getOptionOrdinalValue", GameSettings.class, "func_74308_b");
addMapping("sendSettingsToServer", GameSettings.class, "func_82879_c");
addMapping("fromTag", HotbarSnapshot.class, "func_192833_a");
addMapping("createTag", HotbarSnapshot.class, "func_192834_a");
addMapping("setKeyCode", KeyBinding.class, "func_151462_b");
addMapping("getKeyCode", KeyBinding.class, "func_151463_i");
addMapping("getKeyDescription", KeyBinding.class, "func_151464_g");
addMapping("getKeyCategory", KeyBinding.class, "func_151466_e");
addMapping("getKeybinds", KeyBinding.class, "func_151467_c");
addMapping("isPressed", KeyBinding.class, "func_151468_f");
addMapping("getKeyCodeDefault", KeyBinding.class, "func_151469_h");
addMapping("isKeyDown", KeyBinding.class, "func_151470_d");
addMapping("updateKeyBindState", KeyBinding.class, "func_186704_a");
addMapping("getDisplayString", KeyBinding.class, "func_193626_b");
addMapping("unpressKey", KeyBinding.class, "func_74505_d");
addMapping("unPressAllKeys", KeyBinding.class, "func_74506_a");
addMapping("onTick", KeyBinding.class, "func_74507_a");
addMapping("resetKeyBindingArrayAndHash", KeyBinding.class, "func_74508_b");
addMapping("setKeyBindState", KeyBinding.class, "func_74510_a");
addMapping("setFramebufferColor", Framebuffer.class, "func_147604_a");
addMapping("createFramebuffer", Framebuffer.class, "func_147605_b");
addMapping("unbindFramebufferTexture", Framebuffer.class, "func_147606_d");
addMapping("setFramebufferFilter", Framebuffer.class, "func_147607_a");
addMapping("deleteFramebuffer", Framebuffer.class, "func_147608_a");
addMapping("unbindFramebuffer", Framebuffer.class, "func_147609_e");
addMapping("bindFramebuffer", Framebuffer.class, "func_147610_a");
addMapping("checkFramebufferComplete", Framebuffer.class, "func_147611_b");
addMapping("bindFramebufferTexture", Framebuffer.class, "func_147612_c");
addMapping("createBindFramebuffer", Framebuffer.class, "func_147613_a");
addMapping("framebufferClear", Framebuffer.class, "func_147614_f");
addMapping("framebufferRender", Framebuffer.class, "func_147615_c");
addMapping("framebufferRenderExt", Framebuffer.class, "func_178038_a");
addMapping("preRender", Shader.class, "func_148040_d");
addMapping("addAuxFramebuffer", Shader.class, "func_148041_a");
addMapping("render", Shader.class, "func_148042_a");
addMapping("getShaderManager", Shader.class, "func_148043_c");
addMapping("deleteShader", Shader.class, "func_148044_b");
addMapping("setProjectionMatrix", Shader.class, "func_148045_a");
addMapping("set", ShaderDefault.class, "func_148081_a");
addMapping("set", ShaderDefault.class, "func_148083_a");
addMapping("set", ShaderDefault.class, "func_148087_a");
addMapping("set", ShaderDefault.class, "func_148088_a");
addMapping("set", ShaderDefault.class, "func_148090_a");
addMapping("setSafe", ShaderDefault.class, "func_148092_b");
addMapping("set", ShaderDefault.class, "func_148094_a");
addMapping("set", ShaderDefault.class, "func_148095_a");
addMapping("set", ShaderDefault.class, "func_148097_a");
addMapping("getFramebuffer", ShaderGroup.class, "func_148017_a");
addMapping("render", ShaderGroup.class, "func_148018_a");
addMapping("addFramebuffer", ShaderGroup.class, "func_148020_a");
addMapping("deleteShaderGroup", ShaderGroup.class, "func_148021_a");
addMapping("getShaderGroupName", ShaderGroup.class, "func_148022_b");
addMapping("addShader", ShaderGroup.class, "func_148023_a");
addMapping("resetProjectionMatrix", ShaderGroup.class, "func_148024_c");
addMapping("createBindFramebuffers", ShaderGroup.class, "func_148026_a");
addMapping("initTarget", ShaderGroup.class, "func_148027_a");
addMapping("initUniform", ShaderGroup.class, "func_148028_c");
addMapping("parsePass", ShaderGroup.class, "func_152764_a");
addMapping("parseGroup", ShaderGroup.class, "func_152765_a");
addMapping("getFramebufferRaw", ShaderGroup.class, "func_177066_a");
addMapping("getStaticShaderLinkHelper", ShaderLinkHelper.class, "func_148074_b");
addMapping("linkProgram", ShaderLinkHelper.class, "func_148075_b");
addMapping("setNewStaticShaderLinkHelper", ShaderLinkHelper.class, "func_148076_a");
addMapping("deleteShader", ShaderLinkHelper.class, "func_148077_a");
addMapping("createProgram", ShaderLinkHelper.class, "func_148078_c");
addMapping("deleteShader", ShaderLoader.class, "func_148054_b");
addMapping("getShaderFilename", ShaderLoader.class, "func_148055_a");
addMapping("attachShader", ShaderLoader.class, "func_148056_a");
addMapping("loadShader", ShaderLoader.class, "func_148057_a");
addMapping("getShaderUniformOrDefault", ShaderManager.class, "func_147984_b");
addMapping("markDirty", ShaderManager.class, "func_147985_d");
addMapping("getProgram", ShaderManager.class, "func_147986_h");
addMapping("parseUniform", ShaderManager.class, "func_147987_b");
addMapping("deleteShader", ShaderManager.class, "func_147988_a");
addMapping("getVertexShaderLoader", ShaderManager.class, "func_147989_e");
addMapping("setupUniforms", ShaderManager.class, "func_147990_i");
addMapping("getShaderUniform", ShaderManager.class, "func_147991_a");
addMapping("addSamplerTexture", ShaderManager.class, "func_147992_a");
addMapping("endShader", ShaderManager.class, "func_147993_b");
addMapping("getFragmentShaderLoader", ShaderManager.class, "func_147994_f");
addMapping("useShader", ShaderManager.class, "func_147995_c");
addMapping("parseSampler", ShaderManager.class, "func_147996_a");
addMapping("set", ShaderUniform.class, "func_148081_a");
addMapping("uploadFloatMatrix", ShaderUniform.class, "func_148082_k");
addMapping("set", ShaderUniform.class, "func_148083_a");
addMapping("setUniformLocation", ShaderUniform.class, "func_148084_b");
addMapping("parseType", ShaderUniform.class, "func_148085_a");
addMapping("getShaderName", ShaderUniform.class, "func_148086_a");
addMapping("set", ShaderUniform.class, "func_148087_a");
addMapping("set", ShaderUniform.class, "func_148088_a");
addMapping("uploadFloat", ShaderUniform.class, "func_148089_j");
addMapping("set", ShaderUniform.class, "func_148090_a");
addMapping("uploadInt", ShaderUniform.class, "func_148091_i");
addMapping("setSafe", ShaderUniform.class, "func_148092_b");
addMapping("upload", ShaderUniform.class, "func_148093_b");
addMapping("set", ShaderUniform.class, "func_148094_a");
addMapping("set", ShaderUniform.class, "func_148095_a");
addMapping("markDirty", ShaderUniform.class, "func_148096_h");
addMapping("set", ShaderUniform.class, "func_148097_a");
addMapping("update", CraftPlanksStep.class, "func_193245_a");
addMapping("onStop", CraftPlanksStep.class, "func_193248_b");
addMapping("handleSetSlot", CraftPlanksStep.class, "func_193252_a");
addMapping("didPlayerCraftedPlanks", CraftPlanksStep.class, "func_194071_a");
addMapping("update", FindTreeStep.class, "func_193245_a");
addMapping("onMouseHover", FindTreeStep.class, "func_193246_a");
addMapping("onStop", FindTreeStep.class, "func_193248_b");
addMapping("handleSetSlot", FindTreeStep.class, "func_193252_a");
addMapping("hasPunchedTreesPreviously", FindTreeStep.class, "func_194070_a");
addMapping("update", ITutorialStep.class, "func_193245_a");
addMapping("onMouseHover", ITutorialStep.class, "func_193246_a");
addMapping("handleMovement", ITutorialStep.class, "func_193247_a");
addMapping("onStop", ITutorialStep.class, "func_193248_b");
addMapping("handleMouse", ITutorialStep.class, "func_193249_a");
addMapping("onHitBlock", ITutorialStep.class, "func_193250_a");
addMapping("openInventory", ITutorialStep.class, "func_193251_c");
addMapping("handleSetSlot", ITutorialStep.class, "func_193252_a");
addMapping("update", MovementStep.class, "func_193245_a");
addMapping("handleMovement", MovementStep.class, "func_193247_a");
addMapping("onStop", MovementStep.class, "func_193248_b");
addMapping("handleMouse", MovementStep.class, "func_193249_a");
addMapping("update", OpenInventoryStep.class, "func_193245_a");
addMapping("onStop", OpenInventoryStep.class, "func_193248_b");
addMapping("openInventory", OpenInventoryStep.class, "func_193251_c");
addMapping("update", PunchTreeStep.class, "func_193245_a");
addMapping("onStop", PunchTreeStep.class, "func_193248_b");
addMapping("onHitBlock", PunchTreeStep.class, "func_193250_a");
addMapping("handleSetSlot", PunchTreeStep.class, "func_193252_a");
addMapping("createKeybindComponent", Tutorial.class, "func_193291_a");
addMapping("setStep", Tutorial.class, "func_193292_a");
addMapping("handleMovement", Tutorial.class, "func_193293_a");
addMapping("onHitBlock", Tutorial.class, "func_193294_a");
addMapping("getMinecraft", Tutorial.class, "func_193295_e");
addMapping("openInventory", Tutorial.class, "func_193296_a");
addMapping("onMouseHover", Tutorial.class, "func_193297_a");
addMapping("handleMouse", Tutorial.class, "func_193299_a");
addMapping("stop", Tutorial.class, "func_193300_b");
addMapping("handleSetSlot", Tutorial.class, "func_193301_a");
addMapping("reload", Tutorial.class, "func_193302_c");
addMapping("update", Tutorial.class, "func_193303_d");
addMapping("getGameType", Tutorial.class, "func_194072_f");
addMapping("getTutorial", TutorialSteps.class, "func_193307_a");
addMapping("getName", TutorialSteps.class, "func_193308_a");
addMapping("create", TutorialSteps.class, "func_193309_a");
addMapping("search", ISearchTree.class, "func_194038_a");
addMapping("isAdvanced", ITooltipFlag.class, "func_194127_a");
addMapping("stringToBlendFactor", JsonBlendingMode.class, "func_148107_b");
addMapping("stringToBlendFunction", JsonBlendingMode.class, "func_148108_a");
addMapping("apply", JsonBlendingMode.class, "func_148109_a");
addMapping("parseBlendNode", JsonBlendingMode.class, "func_148110_a");
addMapping("isOpaque", JsonBlendingMode.class, "func_148111_b");
addMapping("forException", JsonException.class, "func_151379_a");
addMapping("prependJsonKey", JsonException.class, "func_151380_a");
addMapping("setFilenameAndFlush", JsonException.class, "func_151381_b");
addMapping("newRecipeList", RecipeBookClient.class, "func_194082_a");
addMapping("getItemStackTab", RecipeBookClient.class, "func_194084_a");
addMapping("accountStack", RecipeItemHelper.class, "func_194112_a");
addMapping("pack", RecipeItemHelper.class, "func_194113_b");
addMapping("getBiggestCraftableStack", RecipeItemHelper.class, "func_194114_b");
addMapping("unpack", RecipeItemHelper.class, "func_194115_b");
addMapping("canCraft", RecipeItemHelper.class, "func_194116_a");
addMapping("increment", RecipeItemHelper.class, "func_194117_b");
addMapping("canCraft", RecipeItemHelper.class, "func_194118_a");
addMapping("clear", RecipeItemHelper.class, "func_194119_a");
addMapping("containsItem", RecipeItemHelper.class, "func_194120_a");
addMapping("getBiggestCraftableStack", RecipeItemHelper.class, "func_194121_a");
addMapping("tryTake", RecipeItemHelper.class, "func_194122_a");
addMapping("search", SearchTree.class, "func_194038_a");
addMapping("recalculate", SearchTree.class, "func_194040_a");
addMapping("index", SearchTree.class, "func_194042_b");
addMapping("add", SearchTree.class, "func_194043_a");
addMapping("onResourceManagerReload", SearchTreeManager.class, "func_110549_a");
addMapping("register", SearchTreeManager.class, "func_194009_a");
addMapping("get", SearchTreeManager.class, "func_194010_a");
addMapping("search", SuffixArray.class, "func_194055_a");
addMapping("compare", SuffixArray.class, "func_194056_a");
addMapping("add", SuffixArray.class, "func_194057_a");
addMapping("generate", SuffixArray.class, "func_194058_a");
addMapping("getString", SuffixArray.class, "func_194059_a");
addMapping("printArray", SuffixArray.class, "func_194060_b");
addMapping("execute", AdvancementCommand.class, "func_184881_a");
addMapping("getTabCompletions", AdvancementCommand.class, "func_184883_a");
addMapping("findAdvancement", AdvancementCommand.class, "func_192551_a");
addMapping("testAdvancement", AdvancementCommand.class, "func_192552_c");
addMapping("testCriterion", AdvancementCommand.class, "func_192554_c");
addMapping("getAdvancements", AdvancementCommand.class, "func_193514_a");
addMapping("addChildren", AdvancementCommand.class, "func_193515_a");
addMapping("perform", AdvancementCommand.class, "func_193516_a");
addMapping("getAdvancementNames", AdvancementCommand.class, "func_193517_a");
addMapping("getName", AdvancementCommand.class, "func_71517_b");
addMapping("getUsage", AdvancementCommand.class, "func_71518_a");
addMapping("isUsernameIndex", AdvancementCommand.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", AdvancementCommand.class, "func_82362_a");
addMapping("getChatComponentFromNthArg", CommandBase.class, "func_147176_a");
addMapping("getChatComponentFromNthArg", CommandBase.class, "func_147178_a");
addMapping("getItemByText", CommandBase.class, "func_147179_f");
addMapping("getBlockByText", CommandBase.class, "func_147180_g");
addMapping("notifyCommandListener", CommandBase.class, "func_152373_a");
addMapping("notifyCommandListener", CommandBase.class, "func_152374_a");
addMapping("parseInt", CommandBase.class, "func_175755_a");
addMapping("parseDouble", CommandBase.class, "func_175756_a");
addMapping("parseBlockPos", CommandBase.class, "func_175757_a");
addMapping("parseLong", CommandBase.class, "func_175760_a");
addMapping("parseDouble", CommandBase.class, "func_175761_b");
addMapping("getListOfStringsMatchingLastWord", CommandBase.class, "func_175762_a");
addMapping("parseInt", CommandBase.class, "func_175764_a");
addMapping("parseDouble", CommandBase.class, "func_175765_c");
addMapping("parseLong", CommandBase.class, "func_175766_b");
addMapping("parseCoordinate", CommandBase.class, "func_175767_a");
addMapping("parseDouble", CommandBase.class, "func_175769_b");
addMapping("parseCoordinate", CommandBase.class, "func_175770_a");
addMapping("getTabCompletionCoordinate", CommandBase.class, "func_175771_a");
addMapping("parseDouble", CommandBase.class, "func_180526_a");
addMapping("parseBoolean", CommandBase.class, "func_180527_d");
addMapping("parseInt", CommandBase.class, "func_180528_a");
addMapping("buildString", CommandBase.class, "func_180529_a");
addMapping("join", CommandBase.class, "func_180530_a");
addMapping("getTabCompletionCoordinateXZ", CommandBase.class, "func_181043_b");
addMapping("checkPermission", CommandBase.class, "func_184882_a");
addMapping("getTabCompletions", CommandBase.class, "func_184883_a");
addMapping("getEntity", CommandBase.class, "func_184884_a");
addMapping("getEntity", CommandBase.class, "func_184885_b");
addMapping("getPlayerName", CommandBase.class, "func_184886_d");
addMapping("entityToNBT", CommandBase.class, "func_184887_a");
addMapping("getPlayer", CommandBase.class, "func_184888_a");
addMapping("toSyntaxException", CommandBase.class, "func_184889_a");
addMapping("getEntityList", CommandBase.class, "func_184890_c");
addMapping("getEntityName", CommandBase.class, "func_184891_e");
addMapping("convertArgToBlockStatePredicate", CommandBase.class, "func_190791_b");
addMapping("getValueHelper", CommandBase.class, "func_190792_a");
addMapping("getBlockState", CommandBase.class, "func_190793_a");
addMapping("convertArgToBlockState", CommandBase.class, "func_190794_a");
addMapping("getBlockStatePropertyValueMap", CommandBase.class, "func_190795_c");
addMapping("getPlayer", CommandBase.class, "func_193512_a");
addMapping("getPlayers", CommandBase.class, "func_193513_a");
addMapping("getAliases", CommandBase.class, "func_71514_a");
addMapping("getCommandSenderAsPlayer", CommandBase.class, "func_71521_c");
addMapping("doesStringStartWith", CommandBase.class, "func_71523_a");
addMapping("joinNiceString", CommandBase.class, "func_71527_a");
addMapping("setCommandListener", CommandBase.class, "func_71529_a");
addMapping("getListOfStringsMatchingLastWord", CommandBase.class, "func_71530_a");
addMapping("isUsernameIndex", CommandBase.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandBase.class, "func_82362_a");
addMapping("joinNiceStringFromCollection", CommandBase.class, "func_96333_a");
addMapping("execute", CommandBlockData.class, "func_184881_a");
addMapping("getTabCompletions", CommandBlockData.class, "func_184883_a");
addMapping("getName", CommandBlockData.class, "func_71517_b");
addMapping("getUsage", CommandBlockData.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandBlockData.class, "func_82362_a");
addMapping("execute", CommandClearInventory.class, "func_184881_a");
addMapping("getTabCompletions", CommandClearInventory.class, "func_184883_a");
addMapping("getName", CommandClearInventory.class, "func_71517_b");
addMapping("getUsage", CommandClearInventory.class, "func_71518_a");
addMapping("isUsernameIndex", CommandClearInventory.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandClearInventory.class, "func_82362_a");
addMapping("execute", CommandClone.class, "func_184881_a");
addMapping("getTabCompletions", CommandClone.class, "func_184883_a");
addMapping("getName", CommandClone.class, "func_71517_b");
addMapping("getUsage", CommandClone.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandClone.class, "func_82362_a");
addMapping("execute", CommandCompare.class, "func_184881_a");
addMapping("getTabCompletions", CommandCompare.class, "func_184883_a");
addMapping("getName", CommandCompare.class, "func_71517_b");
addMapping("getUsage", CommandCompare.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandCompare.class, "func_82362_a");
addMapping("getWittyComment", CommandDebug.class, "func_147203_d");
addMapping("execute", CommandDebug.class, "func_184881_a");
addMapping("getTabCompletions", CommandDebug.class, "func_184883_a");
addMapping("getProfilerResults", CommandDebug.class, "func_184893_b");
addMapping("saveProfilerResults", CommandDebug.class, "func_184894_a");
addMapping("appendProfilerResults", CommandDebug.class, "func_184895_a");
addMapping("getName", CommandDebug.class, "func_71517_b");
addMapping("getUsage", CommandDebug.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandDebug.class, "func_82362_a");
addMapping("execute", CommandDefaultGameMode.class, "func_184881_a");
addMapping("setDefaultGameType", CommandDefaultGameMode.class, "func_184896_a");
addMapping("getName", CommandDefaultGameMode.class, "func_71517_b");
addMapping("getUsage", CommandDefaultGameMode.class, "func_71518_a");
addMapping("getDifficultyFromCommand", CommandDifficulty.class, "func_180531_e");
addMapping("execute", CommandDifficulty.class, "func_184881_a");
addMapping("getTabCompletions", CommandDifficulty.class, "func_184883_a");
addMapping("getName", CommandDifficulty.class, "func_71517_b");
addMapping("getUsage", CommandDifficulty.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandDifficulty.class, "func_82362_a");
addMapping("execute", CommandEffect.class, "func_184881_a");
addMapping("getTabCompletions", CommandEffect.class, "func_184883_a");
addMapping("getName", CommandEffect.class, "func_71517_b");
addMapping("getUsage", CommandEffect.class, "func_71518_a");
addMapping("isUsernameIndex", CommandEffect.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandEffect.class, "func_82362_a");
addMapping("execute", CommandEnchant.class, "func_184881_a");
addMapping("getTabCompletions", CommandEnchant.class, "func_184883_a");
addMapping("getName", CommandEnchant.class, "func_71517_b");
addMapping("getUsage", CommandEnchant.class, "func_71518_a");
addMapping("isUsernameIndex", CommandEnchant.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandEnchant.class, "func_82362_a");
addMapping("execute", CommandEntityData.class, "func_184881_a");
addMapping("getName", CommandEntityData.class, "func_71517_b");
addMapping("getUsage", CommandEntityData.class, "func_71518_a");
addMapping("isUsernameIndex", CommandEntityData.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandEntityData.class, "func_82362_a");
addMapping("getErrorObjects", CommandException.class, "func_74844_a");
addMapping("execute", CommandExecuteAt.class, "func_184881_a");
addMapping("getTabCompletions", CommandExecuteAt.class, "func_184883_a");
addMapping("getName", CommandExecuteAt.class, "func_71517_b");
addMapping("getUsage", CommandExecuteAt.class, "func_71518_a");
addMapping("isUsernameIndex", CommandExecuteAt.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandExecuteAt.class, "func_82362_a");
addMapping("execute", CommandFill.class, "func_184881_a");
addMapping("getTabCompletions", CommandFill.class, "func_184883_a");
addMapping("getName", CommandFill.class, "func_71517_b");
addMapping("getUsage", CommandFill.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandFill.class, "func_82362_a");
addMapping("execute", CommandFunction.class, "func_184881_a");
addMapping("getTabCompletions", CommandFunction.class, "func_184883_a");
addMapping("getName", CommandFunction.class, "func_71517_b");
addMapping("getUsage", CommandFunction.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandFunction.class, "func_82362_a");
addMapping("execute", CommandGameMode.class, "func_184881_a");
addMapping("getTabCompletions", CommandGameMode.class, "func_184883_a");
addMapping("getName", CommandGameMode.class, "func_71517_b");
addMapping("getUsage", CommandGameMode.class, "func_71518_a");
addMapping("getGameModeFromCommand", CommandGameMode.class, "func_71539_b");
addMapping("isUsernameIndex", CommandGameMode.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandGameMode.class, "func_82362_a");
addMapping("execute", CommandGameRule.class, "func_184881_a");
addMapping("getTabCompletions", CommandGameRule.class, "func_184883_a");
addMapping("getOverWorldGameRules", CommandGameRule.class, "func_184897_a");
addMapping("notifyGameRuleChange", CommandGameRule.class, "func_184898_a");
addMapping("getName", CommandGameRule.class, "func_71517_b");
addMapping("getUsage", CommandGameRule.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandGameRule.class, "func_82362_a");
addMapping("execute", CommandGive.class, "func_184881_a");
addMapping("getTabCompletions", CommandGive.class, "func_184883_a");
addMapping("getName", CommandGive.class, "func_71517_b");
addMapping("getUsage", CommandGive.class, "func_71518_a");
addMapping("isUsernameIndex", CommandGive.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandGive.class, "func_82362_a");
addMapping("tryExecute", CommandHandler.class, "func_175786_a");
addMapping("getTabCompletions", CommandHandler.class, "func_180524_a");
addMapping("getServer", CommandHandler.class, "func_184879_a");
addMapping("getCommands", CommandHandler.class, "func_71555_a");
addMapping("executeCommand", CommandHandler.class, "func_71556_a");
addMapping("getPossibleCommands", CommandHandler.class, "func_71557_a");
addMapping("dropFirstString", CommandHandler.class, "func_71559_a");
addMapping("registerCommand", CommandHandler.class, "func_71560_a");
addMapping("getUsernameIndex", CommandHandler.class, "func_82370_a");
addMapping("execute", CommandHelp.class, "func_184881_a");
addMapping("getTabCompletions", CommandHelp.class, "func_184883_a");
addMapping("getCommandMap", CommandHelp.class, "func_184899_a");
addMapping("getSortedPossibleCommands", CommandHelp.class, "func_184900_a");
addMapping("getAliases", CommandHelp.class, "func_71514_a");
addMapping("getName", CommandHelp.class, "func_71517_b");
addMapping("getUsage", CommandHelp.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandHelp.class, "func_82362_a");
addMapping("execute", CommandKill.class, "func_184881_a");
addMapping("getTabCompletions", CommandKill.class, "func_184883_a");
addMapping("getName", CommandKill.class, "func_71517_b");
addMapping("getUsage", CommandKill.class, "func_71518_a");
addMapping("isUsernameIndex", CommandKill.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandKill.class, "func_82362_a");
addMapping("execute", CommandLocate.class, "func_184881_a");
addMapping("getTabCompletions", CommandLocate.class, "func_184883_a");
addMapping("getName", CommandLocate.class, "func_71517_b");
addMapping("getUsage", CommandLocate.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandLocate.class, "func_82362_a");
addMapping("execute", CommandParticle.class, "func_184881_a");
addMapping("getTabCompletions", CommandParticle.class, "func_184883_a");
addMapping("getName", CommandParticle.class, "func_71517_b");
addMapping("getUsage", CommandParticle.class, "func_71518_a");
addMapping("isUsernameIndex", CommandParticle.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandParticle.class, "func_82362_a");
addMapping("execute", CommandPlaySound.class, "func_184881_a");
addMapping("getTabCompletions", CommandPlaySound.class, "func_184883_a");
addMapping("getName", CommandPlaySound.class, "func_71517_b");
addMapping("getUsage", CommandPlaySound.class, "func_71518_a");
addMapping("isUsernameIndex", CommandPlaySound.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandPlaySound.class, "func_82362_a");
addMapping("execute", CommandReload.class, "func_184881_a");
addMapping("getName", CommandReload.class, "func_71517_b");
addMapping("getUsage", CommandReload.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandReload.class, "func_82362_a");
addMapping("getSlotForShortcut", CommandReplaceItem.class, "func_175783_e");
addMapping("execute", CommandReplaceItem.class, "func_184881_a");
addMapping("getTabCompletions", CommandReplaceItem.class, "func_184883_a");
addMapping("getName", CommandReplaceItem.class, "func_71517_b");
addMapping("getUsage", CommandReplaceItem.class, "func_71518_a");
addMapping("isUsernameIndex", CommandReplaceItem.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandReplaceItem.class, "func_82362_a");
addMapping("setScoreBoardStat", CommandResultStats.class, "func_179667_a");
addMapping("readStatsFromNBT", CommandResultStats.class, "func_179668_a");
addMapping("removeScoreBoardStat", CommandResultStats.class, "func_179669_a");
addMapping("writeStatsToNBT", CommandResultStats.class, "func_179670_b");
addMapping("addAllStats", CommandResultStats.class, "func_179671_a");
addMapping("setCommandStatForSender", CommandResultStats.class, "func_184932_a");
addMapping("getEntityWorld", CommandSenderWrapper.class, "func_130014_f_");
addMapping("sendMessage", CommandSenderWrapper.class, "func_145747_a");
addMapping("getDisplayName", CommandSenderWrapper.class, "func_145748_c_");
addMapping("getPositionVector", CommandSenderWrapper.class, "func_174791_d");
addMapping("sendCommandFeedback", CommandSenderWrapper.class, "func_174792_t_");
addMapping("getCommandSenderEntity", CommandSenderWrapper.class, "func_174793_f");
addMapping("setCommandStat", CommandSenderWrapper.class, "func_174794_a");
addMapping("getPosition", CommandSenderWrapper.class, "func_180425_c");
addMapping("getServer", CommandSenderWrapper.class, "func_184102_h");
addMapping("withEntity", CommandSenderWrapper.class, "func_193997_a");
addMapping("create", CommandSenderWrapper.class, "func_193998_a");
addMapping("withPermissionLevel", CommandSenderWrapper.class, "func_193999_a");
addMapping("computePositionVector", CommandSenderWrapper.class, "func_194000_i");
addMapping("withSendCommandFeedback", CommandSenderWrapper.class, "func_194001_a");
addMapping("canUseCommand", CommandSenderWrapper.class, "func_70003_b");
addMapping("getName", CommandSenderWrapper.class, "func_70005_c_");
addMapping("execute", CommandServerKick.class, "func_184881_a");
addMapping("getTabCompletions", CommandServerKick.class, "func_184883_a");
addMapping("getName", CommandServerKick.class, "func_71517_b");
addMapping("getUsage", CommandServerKick.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandServerKick.class, "func_82362_a");
addMapping("execute", CommandSetPlayerTimeout.class, "func_184881_a");
addMapping("getName", CommandSetPlayerTimeout.class, "func_71517_b");
addMapping("getUsage", CommandSetPlayerTimeout.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandSetPlayerTimeout.class, "func_82362_a");
addMapping("execute", CommandSetSpawnpoint.class, "func_184881_a");
addMapping("getTabCompletions", CommandSetSpawnpoint.class, "func_184883_a");
addMapping("getName", CommandSetSpawnpoint.class, "func_71517_b");
addMapping("getUsage", CommandSetSpawnpoint.class, "func_71518_a");
addMapping("isUsernameIndex", CommandSetSpawnpoint.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandSetSpawnpoint.class, "func_82362_a");
addMapping("execute", CommandShowSeed.class, "func_184881_a");
addMapping("checkPermission", CommandShowSeed.class, "func_184882_a");
addMapping("getName", CommandShowSeed.class, "func_71517_b");
addMapping("getUsage", CommandShowSeed.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandShowSeed.class, "func_82362_a");
addMapping("getNumberOfTeams", CommandSpreadPlayers.class, "func_110667_a");
addMapping("spreadPositions", CommandSpreadPlayers.class, "func_110668_a");
addMapping("spread", CommandSpreadPlayers.class, "func_110669_a");
addMapping("createInitialPositions", CommandSpreadPlayers.class, "func_110670_a");
addMapping("setPlayerPositions", CommandSpreadPlayers.class, "func_110671_a");
addMapping("execute", CommandSpreadPlayers.class, "func_184881_a");
addMapping("getTabCompletions", CommandSpreadPlayers.class, "func_184883_a");
addMapping("getName", CommandSpreadPlayers.class, "func_71517_b");
addMapping("getUsage", CommandSpreadPlayers.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandSpreadPlayers.class, "func_82362_a");
addMapping("execute", CommandStats.class, "func_184881_a");
addMapping("getTabCompletions", CommandStats.class, "func_184883_a");
addMapping("getObjectiveNames", CommandStats.class, "func_184927_a");
addMapping("getName", CommandStats.class, "func_71517_b");
addMapping("getUsage", CommandStats.class, "func_71518_a");
addMapping("isUsernameIndex", CommandStats.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandStats.class, "func_82362_a");
addMapping("execute", CommandStopSound.class, "func_184881_a");
addMapping("getTabCompletions", CommandStopSound.class, "func_184883_a");
addMapping("getName", CommandStopSound.class, "func_71517_b");
addMapping("getUsage", CommandStopSound.class, "func_71518_a");
addMapping("isUsernameIndex", CommandStopSound.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandStopSound.class, "func_82362_a");
addMapping("execute", CommandTP.class, "func_184881_a");
addMapping("getTabCompletions", CommandTP.class, "func_184883_a");
addMapping("teleportEntityToCoordinates", CommandTP.class, "func_189863_a");
addMapping("getName", CommandTP.class, "func_71517_b");
addMapping("getUsage", CommandTP.class, "func_71518_a");
addMapping("isUsernameIndex", CommandTP.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandTP.class, "func_82362_a");
addMapping("execute", CommandTime.class, "func_184881_a");
addMapping("getTabCompletions", CommandTime.class, "func_184883_a");
addMapping("incrementAllWorldTimes", CommandTime.class, "func_184928_b");
addMapping("setAllWorldTimes", CommandTime.class, "func_184929_a");
addMapping("getName", CommandTime.class, "func_71517_b");
addMapping("getUsage", CommandTime.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandTime.class, "func_82362_a");
addMapping("execute", CommandTitle.class, "func_184881_a");
addMapping("getTabCompletions", CommandTitle.class, "func_184883_a");
addMapping("getName", CommandTitle.class, "func_71517_b");
addMapping("getUsage", CommandTitle.class, "func_71518_a");
addMapping("isUsernameIndex", CommandTitle.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandTitle.class, "func_82362_a");
addMapping("execute", CommandToggleDownfall.class, "func_184881_a");
addMapping("toggleRainfall", CommandToggleDownfall.class, "func_184930_a");
addMapping("getName", CommandToggleDownfall.class, "func_71517_b");
addMapping("getUsage", CommandToggleDownfall.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandToggleDownfall.class, "func_82362_a");
addMapping("execute", CommandTrigger.class, "func_184881_a");
addMapping("getTabCompletions", CommandTrigger.class, "func_184883_a");
addMapping("getName", CommandTrigger.class, "func_71517_b");
addMapping("getUsage", CommandTrigger.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandTrigger.class, "func_82362_a");
addMapping("execute", CommandWeather.class, "func_184881_a");
addMapping("getTabCompletions", CommandWeather.class, "func_184883_a");
addMapping("getName", CommandWeather.class, "func_71517_b");
addMapping("getUsage", CommandWeather.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandWeather.class, "func_82362_a");
addMapping("execute", CommandWorldBorder.class, "func_184881_a");
addMapping("getTabCompletions", CommandWorldBorder.class, "func_184883_a");
addMapping("getWorldBorder", CommandWorldBorder.class, "func_184931_a");
addMapping("getName", CommandWorldBorder.class, "func_71517_b");
addMapping("getUsage", CommandWorldBorder.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandWorldBorder.class, "func_82362_a");
addMapping("execute", CommandXP.class, "func_184881_a");
addMapping("getTabCompletions", CommandXP.class, "func_184883_a");
addMapping("getName", CommandXP.class, "func_71517_b");
addMapping("getUsage", CommandXP.class, "func_71518_a");
addMapping("isUsernameIndex", CommandXP.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandXP.class, "func_82362_a");
addMapping("matchEntitiesToTextComponent", EntitySelector.class, "func_150869_b");
addMapping("getNamePredicates", EntitySelector.class, "func_179647_f");
addMapping("getXpLevelPredicates", EntitySelector.class, "func_179648_b");
addMapping("getGamemodePredicates", EntitySelector.class, "func_179649_c");
addMapping("getArgument", EntitySelector.class, "func_179651_b");
addMapping("matchOneEntity", EntitySelector.class, "func_179652_a");
addMapping("getInt", EntitySelector.class, "func_179653_a");
addMapping("getWorlds", EntitySelector.class, "func_179654_a");
addMapping("isEntityTypeValid", EntitySelector.class, "func_179655_b");
addMapping("matchEntities", EntitySelector.class, "func_179656_b");
addMapping("getEntitiesFromPredicates", EntitySelector.class, "func_179658_a");
addMapping("getTeamPredicates", EntitySelector.class, "func_179659_d");
addMapping("filterResults", EntitySelector.class, "func_179660_a");
addMapping("getAABB", EntitySelector.class, "func_179661_a");
addMapping("getRotationsPredicates", EntitySelector.class, "func_179662_g");
addMapping("getTypePredicates", EntitySelector.class, "func_179663_a");
addMapping("getBlockPosFromArguments", EntitySelector.class, "func_179664_b");
addMapping("hasArgument", EntitySelector.class, "func_179665_h");
addMapping("getRadiusPredicates", EntitySelector.class, "func_180698_a");
addMapping("getTagPredicates", EntitySelector.class, "func_184951_f");
addMapping("getScorePredicates", EntitySelector.class, "func_184952_c");
addMapping("getPosFromArguments", EntitySelector.class, "func_189210_b");
addMapping("getCoordinate", EntitySelector.class, "func_189211_a");
addMapping("addArgument", EntitySelector.class, "func_190826_c");
addMapping("getPlayers", EntitySelector.class, "func_193531_b");
addMapping("matchesMultiplePlayers", EntitySelector.class, "func_82377_a");
addMapping("isSelector", EntitySelector.class, "func_82378_b");
addMapping("getArgumentMap", EntitySelector.class, "func_82381_h");
addMapping("matchOnePlayer", EntitySelector.class, "func_82386_a");
addMapping("getScoreMap", EntitySelector.class, "func_96560_a");
addMapping("create", FunctionObject.class, "func_193527_a");
addMapping("getEntries", FunctionObject.class, "func_193528_a");
addMapping("execute", ICommand.class, "func_184881_a");
addMapping("checkPermission", ICommand.class, "func_184882_a");
addMapping("getTabCompletions", ICommand.class, "func_184883_a");
addMapping("getAliases", ICommand.class, "func_71514_a");
addMapping("getName", ICommand.class, "func_71517_b");
addMapping("getUsage", ICommand.class, "func_71518_a");
addMapping("isUsernameIndex", ICommand.class, "func_82358_a");
addMapping("notifyListener", ICommandListener.class, "func_152372_a");
addMapping("getTabCompletions", ICommandManager.class, "func_180524_a");
addMapping("getCommands", ICommandManager.class, "func_71555_a");
addMapping("executeCommand", ICommandManager.class, "func_71556_a");
addMapping("getPossibleCommands", ICommandManager.class, "func_71557_a");
addMapping("getEntityWorld", ICommandSender.class, "func_130014_f_");
addMapping("sendMessage", ICommandSender.class, "func_145747_a");
addMapping("getDisplayName", ICommandSender.class, "func_145748_c_");
addMapping("getPositionVector", ICommandSender.class, "func_174791_d");
addMapping("sendCommandFeedback", ICommandSender.class, "func_174792_t_");
addMapping("getCommandSenderEntity", ICommandSender.class, "func_174793_f");
addMapping("setCommandStat", ICommandSender.class, "func_174794_a");
addMapping("getPosition", ICommandSender.class, "func_180425_c");
addMapping("getServer", ICommandSender.class, "func_184102_h");
addMapping("canUseCommand", ICommandSender.class, "func_70003_b");
addMapping("getName", ICommandSender.class, "func_70005_c_");
addMapping("execute", RecipeCommand.class, "func_184881_a");
addMapping("getTabCompletions", RecipeCommand.class, "func_184883_a");
addMapping("getRecipes", RecipeCommand.class, "func_192556_d");
addMapping("getName", RecipeCommand.class, "func_71517_b");
addMapping("getUsage", RecipeCommand.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", RecipeCommand.class, "func_82362_a");
addMapping("notifyListener", ServerCommandManager.class, "func_152372_a");
addMapping("getServer", ServerCommandManager.class, "func_184879_a");
addMapping("execute", CommandBanIp.class, "func_184881_a");
addMapping("checkPermission", CommandBanIp.class, "func_184882_a");
addMapping("getTabCompletions", CommandBanIp.class, "func_184883_a");
addMapping("banIp", CommandBanIp.class, "func_184892_a");
addMapping("getName", CommandBanIp.class, "func_71517_b");
addMapping("getUsage", CommandBanIp.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandBanIp.class, "func_82362_a");
addMapping("execute", CommandBanPlayer.class, "func_184881_a");
addMapping("checkPermission", CommandBanPlayer.class, "func_184882_a");
addMapping("getTabCompletions", CommandBanPlayer.class, "func_184883_a");
addMapping("getName", CommandBanPlayer.class, "func_71517_b");
addMapping("getUsage", CommandBanPlayer.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandBanPlayer.class, "func_82362_a");
addMapping("execute", CommandBroadcast.class, "func_184881_a");
addMapping("getTabCompletions", CommandBroadcast.class, "func_184883_a");
addMapping("getName", CommandBroadcast.class, "func_71517_b");
addMapping("getUsage", CommandBroadcast.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandBroadcast.class, "func_82362_a");
addMapping("execute", CommandDeOp.class, "func_184881_a");
addMapping("getTabCompletions", CommandDeOp.class, "func_184883_a");
addMapping("getName", CommandDeOp.class, "func_71517_b");
addMapping("getUsage", CommandDeOp.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandDeOp.class, "func_82362_a");
addMapping("execute", CommandEmote.class, "func_184881_a");
addMapping("getTabCompletions", CommandEmote.class, "func_184883_a");
addMapping("getName", CommandEmote.class, "func_71517_b");
addMapping("getUsage", CommandEmote.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandEmote.class, "func_82362_a");
addMapping("execute", CommandListBans.class, "func_184881_a");
addMapping("checkPermission", CommandListBans.class, "func_184882_a");
addMapping("getTabCompletions", CommandListBans.class, "func_184883_a");
addMapping("getName", CommandListBans.class, "func_71517_b");
addMapping("getUsage", CommandListBans.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandListBans.class, "func_82362_a");
addMapping("execute", CommandListPlayers.class, "func_184881_a");
addMapping("getName", CommandListPlayers.class, "func_71517_b");
addMapping("getUsage", CommandListPlayers.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandListPlayers.class, "func_82362_a");
addMapping("execute", CommandMessage.class, "func_184881_a");
addMapping("getTabCompletions", CommandMessage.class, "func_184883_a");
addMapping("getAliases", CommandMessage.class, "func_71514_a");
addMapping("getName", CommandMessage.class, "func_71517_b");
addMapping("getUsage", CommandMessage.class, "func_71518_a");
addMapping("isUsernameIndex", CommandMessage.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandMessage.class, "func_82362_a");
addMapping("execute", CommandMessageRaw.class, "func_184881_a");
addMapping("getTabCompletions", CommandMessageRaw.class, "func_184883_a");
addMapping("getName", CommandMessageRaw.class, "func_71517_b");
addMapping("getUsage", CommandMessageRaw.class, "func_71518_a");
addMapping("isUsernameIndex", CommandMessageRaw.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandMessageRaw.class, "func_82362_a");
addMapping("execute", CommandOp.class, "func_184881_a");
addMapping("getTabCompletions", CommandOp.class, "func_184883_a");
addMapping("getName", CommandOp.class, "func_71517_b");
addMapping("getUsage", CommandOp.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandOp.class, "func_82362_a");
addMapping("execute", CommandPardonIp.class, "func_184881_a");
addMapping("checkPermission", CommandPardonIp.class, "func_184882_a");
addMapping("getTabCompletions", CommandPardonIp.class, "func_184883_a");
addMapping("getName", CommandPardonIp.class, "func_71517_b");
addMapping("getUsage", CommandPardonIp.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandPardonIp.class, "func_82362_a");
addMapping("execute", CommandPardonPlayer.class, "func_184881_a");
addMapping("checkPermission", CommandPardonPlayer.class, "func_184882_a");
addMapping("getTabCompletions", CommandPardonPlayer.class, "func_184883_a");
addMapping("getName", CommandPardonPlayer.class, "func_71517_b");
addMapping("getUsage", CommandPardonPlayer.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandPardonPlayer.class, "func_82362_a");
addMapping("execute", CommandPublishLocalServer.class, "func_184881_a");
addMapping("getName", CommandPublishLocalServer.class, "func_71517_b");
addMapping("getUsage", CommandPublishLocalServer.class, "func_71518_a");
addMapping("execute", CommandSaveAll.class, "func_184881_a");
addMapping("getTabCompletions", CommandSaveAll.class, "func_184883_a");
addMapping("getName", CommandSaveAll.class, "func_71517_b");
addMapping("getUsage", CommandSaveAll.class, "func_71518_a");
addMapping("execute", CommandSaveOff.class, "func_184881_a");
addMapping("getName", CommandSaveOff.class, "func_71517_b");
addMapping("getUsage", CommandSaveOff.class, "func_71518_a");
addMapping("execute", CommandSaveOn.class, "func_184881_a");
addMapping("getName", CommandSaveOn.class, "func_71517_b");
addMapping("getUsage", CommandSaveOn.class, "func_71518_a");
addMapping("execute", CommandScoreboard.class, "func_184881_a");
addMapping("getTabCompletions", CommandScoreboard.class, "func_184883_a");
addMapping("convertToObjective", CommandScoreboard.class, "func_184903_a");
addMapping("getTriggerNames", CommandScoreboard.class, "func_184904_b");
addMapping("removeObjective", CommandScoreboard.class, "func_184905_a");
addMapping("applyPlayerOperation", CommandScoreboard.class, "func_184906_o");
addMapping("testPlayerScore", CommandScoreboard.class, "func_184907_n");
addMapping("addObjective", CommandScoreboard.class, "func_184908_a");
addMapping("handleUserWildcards", CommandScoreboard.class, "func_184909_b");
addMapping("addTeam", CommandScoreboard.class, "func_184910_b");
addMapping("leaveTeam", CommandScoreboard.class, "func_184911_g");
addMapping("resetPlayerScore", CommandScoreboard.class, "func_184912_l");
addMapping("getScoreboard", CommandScoreboard.class, "func_184913_a");
addMapping("enablePlayerTrigger", CommandScoreboard.class, "func_184914_m");
addMapping("convertToTeam", CommandScoreboard.class, "func_184915_a");
addMapping("joinTeam", CommandScoreboard.class, "func_184916_f");
addMapping("emptyTeam", CommandScoreboard.class, "func_184917_h");
addMapping("addPlayerScore", CommandScoreboard.class, "func_184918_k");
addMapping("setDisplayObjective", CommandScoreboard.class, "func_184919_i");
addMapping("listPlayers", CommandScoreboard.class, "func_184920_j");
addMapping("removeTeam", CommandScoreboard.class, "func_184921_d");
addMapping("listTeams", CommandScoreboard.class, "func_184922_e");
addMapping("setTeamOption", CommandScoreboard.class, "func_184923_c");
addMapping("applyPlayerTag", CommandScoreboard.class, "func_184924_a");
addMapping("listObjectives", CommandScoreboard.class, "func_184925_a");
addMapping("getObjectiveNames", CommandScoreboard.class, "func_184926_a");
addMapping("getName", CommandScoreboard.class, "func_71517_b");
addMapping("getUsage", CommandScoreboard.class, "func_71518_a");
addMapping("isUsernameIndex", CommandScoreboard.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandScoreboard.class, "func_82362_a");
addMapping("execute", CommandSetBlock.class, "func_184881_a");
addMapping("getTabCompletions", CommandSetBlock.class, "func_184883_a");
addMapping("getName", CommandSetBlock.class, "func_71517_b");
addMapping("getUsage", CommandSetBlock.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandSetBlock.class, "func_82362_a");
addMapping("execute", CommandSetDefaultSpawnpoint.class, "func_184881_a");
addMapping("getTabCompletions", CommandSetDefaultSpawnpoint.class, "func_184883_a");
addMapping("getName", CommandSetDefaultSpawnpoint.class, "func_71517_b");
addMapping("getUsage", CommandSetDefaultSpawnpoint.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandSetDefaultSpawnpoint.class, "func_82362_a");
addMapping("execute", CommandStop.class, "func_184881_a");
addMapping("getName", CommandStop.class, "func_71517_b");
addMapping("getUsage", CommandStop.class, "func_71518_a");
addMapping("execute", CommandSummon.class, "func_184881_a");
addMapping("getTabCompletions", CommandSummon.class, "func_184883_a");
addMapping("getName", CommandSummon.class, "func_71517_b");
addMapping("getUsage", CommandSummon.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandSummon.class, "func_82362_a");
addMapping("execute", CommandTeleport.class, "func_184881_a");
addMapping("getTabCompletions", CommandTeleport.class, "func_184883_a");
addMapping("doTeleport", CommandTeleport.class, "func_189862_a");
addMapping("getName", CommandTeleport.class, "func_71517_b");
addMapping("getUsage", CommandTeleport.class, "func_71518_a");
addMapping("isUsernameIndex", CommandTeleport.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandTeleport.class, "func_82362_a");
addMapping("execute", CommandTestFor.class, "func_184881_a");
addMapping("getTabCompletions", CommandTestFor.class, "func_184883_a");
addMapping("getName", CommandTestFor.class, "func_71517_b");
addMapping("getUsage", CommandTestFor.class, "func_71518_a");
addMapping("isUsernameIndex", CommandTestFor.class, "func_82358_a");
addMapping("getRequiredPermissionLevel", CommandTestFor.class, "func_82362_a");
addMapping("execute", CommandTestForBlock.class, "func_184881_a");
addMapping("getTabCompletions", CommandTestForBlock.class, "func_184883_a");
addMapping("getName", CommandTestForBlock.class, "func_71517_b");
addMapping("getUsage", CommandTestForBlock.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandTestForBlock.class, "func_82362_a");
addMapping("execute", CommandWhitelist.class, "func_184881_a");
addMapping("getTabCompletions", CommandWhitelist.class, "func_184883_a");
addMapping("getName", CommandWhitelist.class, "func_71517_b");
addMapping("getUsage", CommandWhitelist.class, "func_71518_a");
addMapping("getRequiredPermissionLevel", CommandWhitelist.class, "func_82362_a");
addMapping("saveToFile", CrashReport.class, "func_147149_a");
addMapping("getFile", CrashReport.class, "func_71497_f");
addMapping("getCauseStackTraceOrString", CrashReport.class, "func_71498_d");
addMapping("getDescription", CrashReport.class, "func_71501_a");
addMapping("getCompleteReport", CrashReport.class, "func_71502_e");
addMapping("getWittyComment", CrashReport.class, "func_71503_h");
addMapping("populateEnvironment", CrashReport.class, "func_71504_g");
addMapping("getCrashCause", CrashReport.class, "func_71505_b");
addMapping("getSectionsInStringBuilder", CrashReport.class, "func_71506_a");
addMapping("makeCrashReport", CrashReport.class, "func_85055_a");
addMapping("getCategory", CrashReport.class, "func_85056_g");
addMapping("makeCategoryDepth", CrashReport.class, "func_85057_a");
addMapping("makeCategory", CrashReport.class, "func_85058_a");
addMapping("getStackTrace", CrashReportCategory.class, "func_147152_a");
addMapping("addBlockInfo", CrashReportCategory.class, "func_175750_a");
addMapping("getCoordinateInfo", CrashReportCategory.class, "func_180522_a");
addMapping("addBlockInfo", CrashReportCategory.class, "func_180523_a");
addMapping("getCoordinateInfo", CrashReportCategory.class, "func_184876_a");
addMapping("addDetail", CrashReportCategory.class, "func_189529_a");
addMapping("addCrashSectionThrowable", CrashReportCategory.class, "func_71499_a");
addMapping("addCrashSection", CrashReportCategory.class, "func_71507_a");
addMapping("firstTwoElementsOfStackTraceMatch", CrashReportCategory.class, "func_85069_a");
addMapping("trimStackTraceEntriesFromBottom", CrashReportCategory.class, "func_85070_b");
addMapping("appendToStringBuilder", CrashReportCategory.class, "func_85072_a");
addMapping("getPrunedStackTrace", CrashReportCategory.class, "func_85073_a");
addMapping("getCoordinateInfo", CrashReportCategory.class, "func_85074_a");
addMapping("getRelevantEnchantmentTypes", CreativeTabs.class, "func_111225_m");
addMapping("hasRelevantEnchantmentType", CreativeTabs.class, "func_111226_a");
addMapping("setRelevantEnchantmentTypes", CreativeTabs.class, "func_111229_a");
addMapping("getIconItemStack", CreativeTabs.class, "func_151244_d");
addMapping("isAlignedRight", CreativeTabs.class, "func_192394_m");
addMapping("getTabLabel", CreativeTabs.class, "func_78013_b");
addMapping("setNoTitle", CreativeTabs.class, "func_78014_h");
addMapping("getBackgroundImageName", CreativeTabs.class, "func_78015_f");
addMapping("getTabIconItem", CreativeTabs.class, "func_78016_d");
addMapping("shouldHidePlayerInventory", CreativeTabs.class, "func_78017_i");
addMapping("displayAllRelevantItems", CreativeTabs.class, "func_78018_a");
addMapping("drawInForegroundOfTab", CreativeTabs.class, "func_78019_g");
addMapping("getTabColumn", CreativeTabs.class, "func_78020_k");
addMapping("getTabIndex", CreativeTabs.class, "func_78021_a");
addMapping("setNoScrollbar", CreativeTabs.class, "func_78022_j");
addMapping("isTabInFirstRow", CreativeTabs.class, "func_78023_l");
addMapping("getTranslatedTabLabel", CreativeTabs.class, "func_78024_c");
addMapping("setBackgroundImageName", CreativeTabs.class, "func_78025_a");
addMapping("dispense", BehaviorDefaultDispenseItem.class, "func_82482_a");
addMapping("playDispenseSound", BehaviorDefaultDispenseItem.class, "func_82485_a");
addMapping("doDispense", BehaviorDefaultDispenseItem.class, "func_82486_a");
addMapping("dispenseStack", BehaviorDefaultDispenseItem.class, "func_82487_b");
addMapping("getWorldEventDataFrom", BehaviorDefaultDispenseItem.class, "func_82488_a");
addMapping("spawnDispenseParticles", BehaviorDefaultDispenseItem.class, "func_82489_a");
addMapping("playDispenseSound", BehaviorProjectileDispense.class, "func_82485_a");
addMapping("dispenseStack", BehaviorProjectileDispense.class, "func_82487_b");
addMapping("getProjectileInaccuracy", BehaviorProjectileDispense.class, "func_82498_a");
addMapping("getProjectileEntity", BehaviorProjectileDispense.class, "func_82499_a");
addMapping("getProjectileVelocity", BehaviorProjectileDispense.class, "func_82500_b");
addMapping("dispense", IBehaviorDispenseItem.class, "func_82482_a");
addMapping("getBlockTileEntity", IBlockSource.class, "func_150835_j");
addMapping("getBlockPos", IBlockSource.class, "func_180699_d");
addMapping("getBlockState", IBlockSource.class, "func_189992_e");
addMapping("getX", IBlockSource.class, "func_82615_a");
addMapping("getZ", IBlockSource.class, "func_82616_c");
addMapping("getY", IBlockSource.class, "func_82617_b");
addMapping("getWorld", ILocation.class, "func_82618_k");
addMapping("getX", IPosition.class, "func_82615_a");
addMapping("getZ", IPosition.class, "func_82616_c");
addMapping("getY", IPosition.class, "func_82617_b");
addMapping("getX", PositionImpl.class, "func_82615_a");
addMapping("getZ", PositionImpl.class, "func_82616_c");
addMapping("getY", PositionImpl.class, "func_82617_b");
addMapping("onUserHurt", Enchantment.class, "func_151367_b");
addMapping("onEntityDamaged", Enchantment.class, "func_151368_a");
addMapping("calcDamageByCreature", Enchantment.class, "func_152376_a");
addMapping("getEnchantmentByLocation", Enchantment.class, "func_180305_b");
addMapping("registerEnchantments", Enchantment.class, "func_185257_f");
addMapping("getEnchantmentID", Enchantment.class, "func_185258_b");
addMapping("getEntityEquipment", Enchantment.class, "func_185260_a");
addMapping("isTreasureEnchantment", Enchantment.class, "func_185261_e");
addMapping("getEnchantmentByID", Enchantment.class, "func_185262_c");
addMapping("isCurse", Enchantment.class, "func_190936_d");
addMapping("isCompatibleWith", Enchantment.class, "func_191560_c");
addMapping("getTranslatedName", Enchantment.class, "func_77316_c");
addMapping("getMaxEnchantability", Enchantment.class, "func_77317_b");
addMapping("calcModifierDamage", Enchantment.class, "func_77318_a");
addMapping("getMinLevel", Enchantment.class, "func_77319_d");
addMapping("getName", Enchantment.class, "func_77320_a");
addMapping("getMinEnchantability", Enchantment.class, "func_77321_a");
addMapping("setName", Enchantment.class, "func_77322_b");
addMapping("getRarity", Enchantment.class, "func_77324_c");
addMapping("getMaxLevel", Enchantment.class, "func_77325_b");
addMapping("canApplyTogether", Enchantment.class, "func_77326_a");
addMapping("canApply", Enchantment.class, "func_92089_a");
addMapping("getMaxEnchantability", EnchantmentArrowDamage.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentArrowDamage.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentArrowDamage.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentArrowFire.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentArrowFire.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentArrowFire.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentArrowInfinite.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentArrowInfinite.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentArrowInfinite.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentArrowInfinite.class, "func_77326_a");
addMapping("getMaxEnchantability", EnchantmentArrowKnockback.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentArrowKnockback.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentArrowKnockback.class, "func_77325_b");
addMapping("isTreasureEnchantment", EnchantmentBindingCurse.class, "func_185261_e");
addMapping("isCurse", EnchantmentBindingCurse.class, "func_190936_d");
addMapping("getMaxEnchantability", EnchantmentBindingCurse.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentBindingCurse.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentBindingCurse.class, "func_77325_b");
addMapping("onEntityDamaged", EnchantmentDamage.class, "func_151368_a");
addMapping("calcDamageByCreature", EnchantmentDamage.class, "func_152376_a");
addMapping("getMaxEnchantability", EnchantmentDamage.class, "func_77317_b");
addMapping("getName", EnchantmentDamage.class, "func_77320_a");
addMapping("getMinEnchantability", EnchantmentDamage.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentDamage.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentDamage.class, "func_77326_a");
addMapping("canApply", EnchantmentDamage.class, "func_92089_a");
addMapping("getMaxEnchantability", EnchantmentDigging.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentDigging.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentDigging.class, "func_77325_b");
addMapping("canApply", EnchantmentDigging.class, "func_92089_a");
addMapping("getMaxEnchantability", EnchantmentDurability.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentDurability.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentDurability.class, "func_77325_b");
addMapping("canApply", EnchantmentDurability.class, "func_92089_a");
addMapping("negateDamage", EnchantmentDurability.class, "func_92097_a");
addMapping("getMaxEnchantability", EnchantmentFireAspect.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentFireAspect.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentFireAspect.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentFishingSpeed.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentFishingSpeed.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentFishingSpeed.class, "func_77325_b");
addMapping("isTreasureEnchantment", EnchantmentFrostWalker.class, "func_185261_e");
addMapping("freezeNearby", EnchantmentFrostWalker.class, "func_185266_a");
addMapping("getMaxEnchantability", EnchantmentFrostWalker.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentFrostWalker.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentFrostWalker.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentFrostWalker.class, "func_77326_a");
addMapping("applyThornEnchantments", EnchantmentHelper.class, "func_151384_a");
addMapping("applyArthropodEnchantments", EnchantmentHelper.class, "func_151385_b");
addMapping("getModifierForCreature", EnchantmentHelper.class, "func_152377_a");
addMapping("removeIncompatible", EnchantmentHelper.class, "func_185282_a");
addMapping("getLootingModifier", EnchantmentHelper.class, "func_185283_h");
addMapping("getMaxEnchantmentLevel", EnchantmentHelper.class, "func_185284_a");
addMapping("getAquaAffinityModifier", EnchantmentHelper.class, "func_185287_i");
addMapping("getEnchantmentDatas", EnchantmentHelper.class, "func_185291_a");
addMapping("getRespirationModifier", EnchantmentHelper.class, "func_185292_c");
addMapping("getEfficiencyModifier", EnchantmentHelper.class, "func_185293_e");
addMapping("getDepthStriderModifier", EnchantmentHelper.class, "func_185294_d");
addMapping("hasFrostWalkerEnchantment", EnchantmentHelper.class, "func_189869_j");
addMapping("hasBindingCurse", EnchantmentHelper.class, "func_190938_b");
addMapping("hasVanishingCurse", EnchantmentHelper.class, "func_190939_c");
addMapping("getSweepingDamageRatio", EnchantmentHelper.class, "func_191527_a");
addMapping("getFishingSpeedBonus", EnchantmentHelper.class, "func_191528_c");
addMapping("getFishingLuckBonus", EnchantmentHelper.class, "func_191529_b");
addMapping("getKnockbackModifier", EnchantmentHelper.class, "func_77501_a");
addMapping("addRandomEnchantment", EnchantmentHelper.class, "func_77504_a");
addMapping("getEnchantmentLevel", EnchantmentHelper.class, "func_77506_a");
addMapping("getEnchantmentModifierDamage", EnchantmentHelper.class, "func_77508_a");
addMapping("buildEnchantmentList", EnchantmentHelper.class, "func_77513_b");
addMapping("calcItemStackEnchantability", EnchantmentHelper.class, "func_77514_a");
addMapping("applyEnchantmentModifierArray", EnchantmentHelper.class, "func_77516_a");
addMapping("applyEnchantmentModifier", EnchantmentHelper.class, "func_77518_a");
addMapping("getEnchantments", EnchantmentHelper.class, "func_82781_a");
addMapping("setEnchantments", EnchantmentHelper.class, "func_82782_a");
addMapping("getFireAspectModifier", EnchantmentHelper.class, "func_90036_a");
addMapping("getEnchantedItem", EnchantmentHelper.class, "func_92099_a");
addMapping("getMaxEnchantability", EnchantmentKnockback.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentKnockback.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentKnockback.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentLootBonus.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentLootBonus.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentLootBonus.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentLootBonus.class, "func_77326_a");
addMapping("isTreasureEnchantment", EnchantmentMending.class, "func_185261_e");
addMapping("getMaxEnchantability", EnchantmentMending.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentMending.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentMending.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentOxygen.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentOxygen.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentOxygen.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentProtection.class, "func_77317_b");
addMapping("calcModifierDamage", EnchantmentProtection.class, "func_77318_a");
addMapping("getName", EnchantmentProtection.class, "func_77320_a");
addMapping("getMinEnchantability", EnchantmentProtection.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentProtection.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentProtection.class, "func_77326_a");
addMapping("getBlastDamageReduction", EnchantmentProtection.class, "func_92092_a");
addMapping("getFireTimeForEntity", EnchantmentProtection.class, "func_92093_a");
addMapping("getSweepingDamageRatio", EnchantmentSweepingEdge.class, "func_191526_e");
addMapping("getMaxEnchantability", EnchantmentSweepingEdge.class, "func_77317_b");
addMapping("getName", EnchantmentSweepingEdge.class, "func_77320_a");
addMapping("getMinEnchantability", EnchantmentSweepingEdge.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentSweepingEdge.class, "func_77325_b");
addMapping("onUserHurt", EnchantmentThorns.class, "func_151367_b");
addMapping("getMaxEnchantability", EnchantmentThorns.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentThorns.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentThorns.class, "func_77325_b");
addMapping("canApply", EnchantmentThorns.class, "func_92089_a");
addMapping("shouldHit", EnchantmentThorns.class, "func_92094_a");
addMapping("getDamage", EnchantmentThorns.class, "func_92095_b");
addMapping("getMaxEnchantability", EnchantmentUntouching.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentUntouching.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentUntouching.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentUntouching.class, "func_77326_a");
addMapping("isTreasureEnchantment", EnchantmentVanishingCurse.class, "func_185261_e");
addMapping("isCurse", EnchantmentVanishingCurse.class, "func_190936_d");
addMapping("getMaxEnchantability", EnchantmentVanishingCurse.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentVanishingCurse.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentVanishingCurse.class, "func_77325_b");
addMapping("getMaxEnchantability", EnchantmentWaterWalker.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentWaterWalker.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentWaterWalker.class, "func_77325_b");
addMapping("canApplyTogether", EnchantmentWaterWalker.class, "func_77326_a");
addMapping("getMaxEnchantability", EnchantmentWaterWorker.class, "func_77317_b");
addMapping("getMinEnchantability", EnchantmentWaterWorker.class, "func_77321_a");
addMapping("getMaxLevel", EnchantmentWaterWorker.class, "func_77325_b");
addMapping("canEnchantItem", EnumEnchantmentType.class, "func_77557_a");
addMapping("getUniqueID", Entity.class, "func_110124_au");
addMapping("getEntityWorld", Entity.class, "func_130014_f_");
addMapping("shouldSetPosAfterLoading", Entity.class, "func_142008_O");
addMapping("sendMessage", Entity.class, "func_145747_a");
addMapping("getDisplayName", Entity.class, "func_145748_c_");
addMapping("setEntityId", Entity.class, "func_145769_d");
addMapping("isInRangeToRender3d", Entity.class, "func_145770_h");
addMapping("pushOutOfBlocks", Entity.class, "func_145771_j");
addMapping("doesEntityNotTriggerPressurePlate", Entity.class, "func_145773_az");
addMapping("doBlockCollisions", Entity.class, "func_145775_I");
addMapping("dropItemWithOffset", Entity.class, "func_145778_a");
addMapping("dropItem", Entity.class, "func_145779_a");
addMapping("getEntityId", Entity.class, "func_145782_y");
addMapping("hasCustomName", Entity.class, "func_145818_k_");
addMapping("getPositionVector", Entity.class, "func_174791_d");
addMapping("sendCommandFeedback", Entity.class, "func_174792_t_");
addMapping("getCommandSenderEntity", Entity.class, "func_174793_f");
addMapping("setCommandStat", Entity.class, "func_174794_a");
addMapping("setAlwaysRenderNameTag", Entity.class, "func_174805_g");
addMapping("getVectorForRotation", Entity.class, "func_174806_f");
addMapping("getCommandStats", Entity.class, "func_174807_aT");
addMapping("createRunningParticles", Entity.class, "func_174808_Z");
addMapping("isLiquidPresentInAABB", Entity.class, "func_174809_b");
addMapping("setSilent", Entity.class, "func_174810_b");
addMapping("getHorizontalFacing", Entity.class, "func_174811_aO");
addMapping("onKillCommand", Entity.class, "func_174812_G");
addMapping("getEntityBoundingBox", Entity.class, "func_174813_aQ");
addMapping("isSilent", Entity.class, "func_174814_R");
addMapping("applyEnchantments", Entity.class, "func_174815_a");
addMapping("canExplosionDestroyBlock", Entity.class, "func_174816_a");
addMapping("setCommandStats", Entity.class, "func_174817_o");
addMapping("getDistanceSq", Entity.class, "func_174818_b");
addMapping("replaceItemInInventory", Entity.class, "func_174820_d");
addMapping("setOutsideBorder", Entity.class, "func_174821_h");
addMapping("rayTrace", Entity.class, "func_174822_a");
addMapping("getHoverEvent", Entity.class, "func_174823_aP");
addMapping("getPositionEyes", Entity.class, "func_174824_e");
addMapping("setEntityBoundingBox", Entity.class, "func_174826_a");
addMapping("isSpectatedByPlayer", Entity.class, "func_174827_a");
addMapping("moveToBlockPosAndAngles", Entity.class, "func_174828_a");
addMapping("resetPositionToBB", Entity.class, "func_174829_m");
addMapping("spawnRunningParticles", Entity.class, "func_174830_Y");
addMapping("getDistanceSqToCenter", Entity.class, "func_174831_c");
addMapping("isOutsideBorder", Entity.class, "func_174832_aS");
addMapping("getAlwaysRenderNameTag", Entity.class, "func_174833_aM");
addMapping("getPosition", Entity.class, "func_180425_c");
addMapping("setPositionAndRotationDirect", Entity.class, "func_180426_a");
addMapping("isImmuneToExplosions", Entity.class, "func_180427_aV");
addMapping("getExplosionResistance", Entity.class, "func_180428_a");
addMapping("playStepSound", Entity.class, "func_180429_a");
addMapping("fall", Entity.class, "func_180430_e");
addMapping("isEntityInvulnerable", Entity.class, "func_180431_b");
addMapping("copyDataFromOld", Entity.class, "func_180432_n");
addMapping("isInLava", Entity.class, "func_180799_ab");
addMapping("getTeleportDirection", Entity.class, "func_181012_aH");
addMapping("setRenderYawOffset", Entity.class, "func_181013_g");
addMapping("getLastPortalVec", Entity.class, "func_181014_aG");
addMapping("setPortal", Entity.class, "func_181015_d");
addMapping("getServer", Entity.class, "func_184102_h");
addMapping("getAdjustedHorizontalFacing", Entity.class, "func_184172_bi");
addMapping("decrementTimeUntilPortal", Entity.class, "func_184173_H");
addMapping("setDropItemsWhenDead", Entity.class, "func_184174_b");
addMapping("getRecursivePassengersByType", Entity.class, "func_184175_a");
addMapping("getSoundCategory", Entity.class, "func_184176_by");
addMapping("getRenderBoundingBox", Entity.class, "func_184177_bl");
addMapping("addTrackingPlayer", Entity.class, "func_184178_b");
addMapping("getControllingPassenger", Entity.class, "func_184179_bs");
addMapping("getRecursivePassengersByType", Entity.class, "func_184180_b");
addMapping("getSplashSound", Entity.class, "func_184181_aa");
addMapping("getRecursivePassengers", Entity.class, "func_184182_bu");
addMapping("getRenderDistanceWeight", Entity.class, "func_184183_bd");
addMapping("getSwimSound", Entity.class, "func_184184_Z");
addMapping("playSound", Entity.class, "func_184185_a");
addMapping("canPassengerSteer", Entity.class, "func_184186_bw");
addMapping("getRidingEntity", Entity.class, "func_184187_bx");
addMapping("getPassengers", Entity.class, "func_184188_bt");
addMapping("setPositionNonDirty", Entity.class, "func_184189_br");
addMapping("applyOrientationToEntity", Entity.class, "func_184190_l");
addMapping("isOnSameTeam", Entity.class, "func_184191_r");
addMapping("getPushReaction", Entity.class, "func_184192_z");
addMapping("getArmorInventoryList", Entity.class, "func_184193_aE");
addMapping("isOnScoreboardTeam", Entity.class, "func_184194_a");
addMapping("setGlowing", Entity.class, "func_184195_f");
addMapping("isPassenger", Entity.class, "func_184196_w");
addMapping("removeTag", Entity.class, "func_184197_b");
addMapping("writeToNBTAtomically", Entity.class, "func_184198_c");
addMapping("applyPlayerInteraction", Entity.class, "func_184199_a");
addMapping("addPassenger", Entity.class, "func_184200_o");
addMapping("setItemStackToSlot", Entity.class, "func_184201_a");
addMapping("isGlowing", Entity.class, "func_184202_aL");
addMapping("removeTrackingPlayer", Entity.class, "func_184203_c");
addMapping("changeDimension", Entity.class, "func_184204_a");
addMapping("startRiding", Entity.class, "func_184205_a");
addMapping("notifyDataManagerChange", Entity.class, "func_184206_a");
addMapping("isBeingRidden", Entity.class, "func_184207_aI");
addMapping("getLowestRidingEntity", Entity.class, "func_184208_bv");
addMapping("getEquipmentAndArmor", Entity.class, "func_184209_aF");
addMapping("dismountRidingEntity", Entity.class, "func_184210_p");
addMapping("addTag", Entity.class, "func_184211_a");
addMapping("getDataManager", Entity.class, "func_184212_Q");
addMapping("ignoreItemEntityData", Entity.class, "func_184213_bq");
addMapping("getHeldEquipment", Entity.class, "func_184214_aD");
addMapping("isRidingOrBeingRiddenBy", Entity.class, "func_184215_y");
addMapping("getTags", Entity.class, "func_184216_O");
addMapping("getMirroredYaw", Entity.class, "func_184217_a");
addMapping("isRiding", Entity.class, "func_184218_aH");
addMapping("canFitPassenger", Entity.class, "func_184219_q");
addMapping("startRiding", Entity.class, "func_184220_m");
addMapping("setUniqueId", Entity.class, "func_184221_a");
addMapping("isNonBoss", Entity.class, "func_184222_aU");
addMapping("isRidingSameEntity", Entity.class, "func_184223_x");
addMapping("setEntityInvulnerable", Entity.class, "func_184224_h");
addMapping("removePassenger", Entity.class, "func_184225_p");
addMapping("removePassengers", Entity.class, "func_184226_ay");
addMapping("setRenderDistanceWeight", Entity.class, "func_184227_b");
addMapping("canBeRidden", Entity.class, "func_184228_n");
addMapping("getRotatedYaw", Entity.class, "func_184229_a");
addMapping("processInitialInteract", Entity.class, "func_184230_a");
addMapping("updateFallState", Entity.class, "func_184231_a");
addMapping("updatePassenger", Entity.class, "func_184232_k");
addMapping("writeToNBT", Entity.class, "func_189511_e");
addMapping("getCachedUniqueIdString", Entity.class, "func_189512_bd");
addMapping("getForward", Entity.class, "func_189651_aD");
addMapping("hasNoGravity", Entity.class, "func_189652_ae");
addMapping("getPitchYaw", Entity.class, "func_189653_aC");
addMapping("setNoGravity", Entity.class, "func_189654_d");
addMapping("getIsInvulnerable", Entity.class, "func_190530_aW");
addMapping("getFireImmuneTicks", Entity.class, "func_190531_bD");
addMapping("registerFixes", Entity.class, "func_190533_a");
addMapping("isOverWater", Entity.class, "func_191953_am");
addMapping("playFlySound", Entity.class, "func_191954_d");
addMapping("onInsideBlock", Entity.class, "func_191955_a");
addMapping("awardKillScore", Entity.class, "func_191956_a");
addMapping("makeFlySound", Entity.class, "func_191957_ae");
addMapping("moveRelative", Entity.class, "func_191958_b");
addMapping("canUseCommand", Entity.class, "func_70003_b");
addMapping("getName", Entity.class, "func_70005_c_");
addMapping("getDistance", Entity.class, "func_70011_f");
addMapping("setLocationAndAngles", Entity.class, "func_70012_b");
addMapping("getBrightness", Entity.class, "func_70013_c");
addMapping("writeEntityToNBT", Entity.class, "func_70014_b");
addMapping("setFire", Entity.class, "func_70015_d");
addMapping("setVelocity", Entity.class, "func_70016_h");
addMapping("markVelocityChanged", Entity.class, "func_70018_K");
addMapping("readFromNBT", Entity.class, "func_70020_e");
addMapping("getParts", Entity.class, "func_70021_al");
addMapping("getEntityString", Entity.class, "func_70022_Q");
addMapping("addVelocity", Entity.class, "func_70024_g");
addMapping("isWet", Entity.class, "func_70026_G");
addMapping("isBurning", Entity.class, "func_70027_ad");
addMapping("isEntityEqual", Entity.class, "func_70028_i");
addMapping("setWorld", Entity.class, "func_70029_a");
addMapping("onEntityUpdate", Entity.class, "func_70030_z");
addMapping("setSprinting", Entity.class, "func_70031_b");
addMapping("getDistance", Entity.class, "func_70032_d");
addMapping("getYOffset", Entity.class, "func_70033_W");
addMapping("setRotationYawHead", Entity.class, "func_70034_d");
addMapping("readEntityFromNBT", Entity.class, "func_70037_a");
addMapping("isOffsetPositionInLiquid", Entity.class, "func_70038_c");
addMapping("writeToNBTOptional", Entity.class, "func_70039_c");
addMapping("getLookVec", Entity.class, "func_70040_Z");
addMapping("canTriggerWalking", Entity.class, "func_70041_e_");
addMapping("getMountedYOffset", Entity.class, "func_70042_X");
addMapping("setOnFireFromLava", Entity.class, "func_70044_A");
addMapping("isImmuneToFire", Entity.class, "func_70045_F");
addMapping("getCollisionBoundingBox", Entity.class, "func_70046_E");
addMapping("getEyeHeight", Entity.class, "func_70047_e");
addMapping("newFloatNBTList", Entity.class, "func_70049_a");
addMapping("setAir", Entity.class, "func_70050_g");
addMapping("isSprinting", Entity.class, "func_70051_ag");
addMapping("setFlag", Entity.class, "func_70052_a");
addMapping("isInsideOfMaterial", Entity.class, "func_70055_a");
addMapping("performHurtAnimation", Entity.class, "func_70057_ab");
addMapping("preparePlayerToSpawn", Entity.class, "func_70065_x");
addMapping("extinguish", Entity.class, "func_70066_B");
addMapping("canBeCollidedWith", Entity.class, "func_70067_L");
addMapping("getDistanceSq", Entity.class, "func_70068_e");
addMapping("getBrightnessForRender", Entity.class, "func_70070_b");
addMapping("onUpdate", Entity.class, "func_70071_h_");
addMapping("handleWaterMovement", Entity.class, "func_70072_I");
addMapping("onKillEntity", Entity.class, "func_70074_a");
addMapping("canBeAttackedWithItem", Entity.class, "func_70075_an");
addMapping("outOfWorld", Entity.class, "func_70076_C");
addMapping("onStruckByLightning", Entity.class, "func_70077_a");
addMapping("getRotationYawHead", Entity.class, "func_70079_am");
addMapping("setPositionAndRotation", Entity.class, "func_70080_a");
addMapping("dealFireDamage", Entity.class, "func_70081_e");
addMapping("turn", Entity.class, "func_70082_c");
addMapping("getFlag", Entity.class, "func_70083_f");
addMapping("getAir", Entity.class, "func_70086_ai");
addMapping("newDoubleNBTList", Entity.class, "func_70087_a");
addMapping("entityInit", Entity.class, "func_70088_a");
addMapping("isEntityAlive", Entity.class, "func_70089_S");
addMapping("isInWater", Entity.class, "func_70090_H");
addMapping("move", Entity.class, "func_70091_d");
addMapping("getDistanceSq", Entity.class, "func_70092_e");
addMapping("isSneaking", Entity.class, "func_70093_af");
addMapping("isEntityInsideOpaqueBlock", Entity.class, "func_70094_T");
addMapping("setSneaking", Entity.class, "func_70095_a");
addMapping("attackEntityFrom", Entity.class, "func_70097_a");
addMapping("updateRidden", Entity.class, "func_70098_U");
addMapping("entityDropItem", Entity.class, "func_70099_a");
addMapping("onCollideWithPlayer", Entity.class, "func_70100_b_");
addMapping("setRotation", Entity.class, "func_70101_b");
addMapping("handleStatusUpdate", Entity.class, "func_70103_a");
addMapping("canBePushed", Entity.class, "func_70104_M");
addMapping("setSize", Entity.class, "func_70105_a");
addMapping("setDead", Entity.class, "func_70106_y");
addMapping("setPosition", Entity.class, "func_70107_b");
addMapping("applyEntityCollision", Entity.class, "func_70108_f");
addMapping("setInWeb", Entity.class, "func_70110_aj");
addMapping("getCollisionBorderSize", Entity.class, "func_70111_Y");
addMapping("isInRangeToRenderDist", Entity.class, "func_70112_a");
addMapping("getCollisionBox", Entity.class, "func_70114_g");
addMapping("setPositionAndUpdate", Entity.class, "func_70634_a");
addMapping("getLook", Entity.class, "func_70676_i");
addMapping("doWaterSplashEffect", Entity.class, "func_71061_d_");
addMapping("setInvisible", Entity.class, "func_82142_c");
addMapping("getMaxFallHeight", Entity.class, "func_82143_as");
addMapping("getMaxInPortalTime", Entity.class, "func_82145_z");
addMapping("getPortalCooldown", Entity.class, "func_82147_ab");
addMapping("copyLocationAndAnglesFrom", Entity.class, "func_82149_j");
addMapping("isInvisible", Entity.class, "func_82150_aj");
addMapping("addEntityCrashInfo", Entity.class, "func_85029_a");
addMapping("hitByEntity", Entity.class, "func_85031_j");
addMapping("canRenderOnFire", Entity.class, "func_90999_ad");
addMapping("getAlwaysRenderNameTagForRender", Entity.class, "func_94059_bO");
addMapping("getCustomNameTag", Entity.class, "func_95999_t");
addMapping("isPushedByWater", Entity.class, "func_96092_aw");
addMapping("setCustomNameTag", Entity.class, "func_96094_a");
addMapping("getTeam", Entity.class, "func_96124_cp");
addMapping("isInvisibleToPlayer", Entity.class, "func_98034_c");
addMapping("addGrowth", EntityAgeable.class, "func_110195_a");
addMapping("onGrowingAdult", EntityAgeable.class, "func_175500_n");
addMapping("ageUp", EntityAgeable.class, "func_175501_a");
addMapping("notifyDataManagerChange", EntityAgeable.class, "func_184206_a");
addMapping("processInteract", EntityAgeable.class, "func_184645_a");
addMapping("holdingSpawnEggOfClass", EntityAgeable.class, "func_190669_a");
addMapping("writeEntityToNBT", EntityAgeable.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityAgeable.class, "func_70037_a");
addMapping("entityInit", EntityAgeable.class, "func_70088_a");
addMapping("setSize", EntityAgeable.class, "func_70105_a");
addMapping("isChild", EntityAgeable.class, "func_70631_g_");
addMapping("onLivingUpdate", EntityAgeable.class, "func_70636_d");
addMapping("setGrowingAge", EntityAgeable.class, "func_70873_a");
addMapping("getGrowingAge", EntityAgeable.class, "func_70874_b");
addMapping("createChild", EntityAgeable.class, "func_90011_a");
addMapping("setScaleForAge", EntityAgeable.class, "func_98054_a");
addMapping("setScale", EntityAgeable.class, "func_98055_j");
addMapping("getPushReaction", EntityAreaEffectCloud.class, "func_184192_z");
addMapping("notifyDataManagerChange", EntityAreaEffectCloud.class, "func_184206_a");
addMapping("setOwner", EntityAreaEffectCloud.class, "func_184481_a");
addMapping("setColor", EntityAreaEffectCloud.class, "func_184482_a");
addMapping("setRadius", EntityAreaEffectCloud.class, "func_184483_a");
addMapping("setPotion", EntityAreaEffectCloud.class, "func_184484_a");
addMapping("setWaitTime", EntityAreaEffectCloud.class, "func_184485_d");
addMapping("setDuration", EntityAreaEffectCloud.class, "func_184486_b");
addMapping("setRadiusPerTick", EntityAreaEffectCloud.class, "func_184487_c");
addMapping("setIgnoreRadius", EntityAreaEffectCloud.class, "func_184488_a");
addMapping("getDuration", EntityAreaEffectCloud.class, "func_184489_o");
addMapping("getRadius", EntityAreaEffectCloud.class, "func_184490_j");
addMapping("setParticle", EntityAreaEffectCloud.class, "func_184491_a");
addMapping("getColor", EntityAreaEffectCloud.class, "func_184492_k");
addMapping("getParticle", EntityAreaEffectCloud.class, "func_184493_l");
addMapping("getOwner", EntityAreaEffectCloud.class, "func_184494_w");
addMapping("setRadiusOnUse", EntityAreaEffectCloud.class, "func_184495_b");
addMapping("addEffect", EntityAreaEffectCloud.class, "func_184496_a");
addMapping("shouldIgnoreRadius", EntityAreaEffectCloud.class, "func_184497_n");
addMapping("setParticleParam2", EntityAreaEffectCloud.class, "func_189732_d");
addMapping("getParticleParam1", EntityAreaEffectCloud.class, "func_189733_n");
addMapping("setParticleParam1", EntityAreaEffectCloud.class, "func_189734_b");
addMapping("getParticleParam2", EntityAreaEffectCloud.class, "func_189735_o");
addMapping("updateFixedColor", EntityAreaEffectCloud.class, "func_190618_C");
addMapping("writeEntityToNBT", EntityAreaEffectCloud.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityAreaEffectCloud.class, "func_70037_a");
addMapping("onUpdate", EntityAreaEffectCloud.class, "func_70071_h_");
addMapping("entityInit", EntityAreaEffectCloud.class, "func_70088_a");
addMapping("updateRenderAngles", EntityBodyHelper.class, "func_75664_a");
addMapping("computeAngleWithBound", EntityBodyHelper.class, "func_75665_a");
addMapping("updateLeashedState", EntityCreature.class, "func_110159_bB");
addMapping("isWithinHomeDistanceCurrentPosition", EntityCreature.class, "func_110173_bK");
addMapping("getMaximumHomeDistance", EntityCreature.class, "func_110174_bM");
addMapping("hasHome", EntityCreature.class, "func_110175_bO");
addMapping("detachHome", EntityCreature.class, "func_110177_bN");
addMapping("onLeashDistance", EntityCreature.class, "func_142017_o");
addMapping("setHomePosAndDistance", EntityCreature.class, "func_175449_a");
addMapping("getBlockPathWeight", EntityCreature.class, "func_180484_a");
addMapping("isWithinHomeDistanceFromPosition", EntityCreature.class, "func_180485_d");
addMapping("getHomePosition", EntityCreature.class, "func_180486_cf");
addMapping("followLeashSpeed", EntityCreature.class, "func_190634_dg");
addMapping("getCanSpawnHere", EntityCreature.class, "func_70601_bi");
addMapping("hasPath", EntityCreature.class, "func_70781_l");
addMapping("fall", EntityFlying.class, "func_180430_e");
addMapping("updateFallState", EntityFlying.class, "func_184231_a");
addMapping("travel", EntityFlying.class, "func_191986_a");
addMapping("isOnLadder", EntityFlying.class, "func_70617_f_");
addMapping("onBroken", EntityHanging.class, "func_110128_b");
addMapping("shouldSetPosAfterLoading", EntityHanging.class, "func_142008_O");
addMapping("getHorizontalFacing", EntityHanging.class, "func_174811_aO");
addMapping("updateBoundingBox", EntityHanging.class, "func_174856_o");
addMapping("getHangingPosition", EntityHanging.class, "func_174857_n");
addMapping("updateFacingWithBoundingBox", EntityHanging.class, "func_174859_a");
addMapping("getMirroredYaw", EntityHanging.class, "func_184217_a");
addMapping("getRotatedYaw", EntityHanging.class, "func_184229_a");
addMapping("playPlaceSound", EntityHanging.class, "func_184523_o");
addMapping("offs", EntityHanging.class, "func_190202_a");
addMapping("writeEntityToNBT", EntityHanging.class, "func_70014_b");
addMapping("addVelocity", EntityHanging.class, "func_70024_g");
addMapping("readEntityFromNBT", EntityHanging.class, "func_70037_a");
addMapping("canBeCollidedWith", EntityHanging.class, "func_70067_L");
addMapping("onUpdate", EntityHanging.class, "func_70071_h_");
addMapping("onStruckByLightning", EntityHanging.class, "func_70077_a");
addMapping("entityInit", EntityHanging.class, "func_70088_a");
addMapping("move", EntityHanging.class, "func_70091_d");
addMapping("attackEntityFrom", EntityHanging.class, "func_70097_a");
addMapping("entityDropItem", EntityHanging.class, "func_70099_a");
addMapping("setPosition", EntityHanging.class, "func_70107_b");
addMapping("onValidSurface", EntityHanging.class, "func_70518_d");
addMapping("getWidthPixels", EntityHanging.class, "func_82329_d");
addMapping("getHeightPixels", EntityHanging.class, "func_82330_g");
addMapping("hitByEntity", EntityHanging.class, "func_85031_j");
addMapping("onBroken", EntityLeashKnot.class, "func_110128_b");
addMapping("updateBoundingBox", EntityLeashKnot.class, "func_174856_o");
addMapping("updateFacingWithBoundingBox", EntityLeashKnot.class, "func_174859_a");
addMapping("createKnot", EntityLeashKnot.class, "func_174862_a");
addMapping("getKnotForPosition", EntityLeashKnot.class, "func_174863_b");
addMapping("processInitialInteract", EntityLeashKnot.class, "func_184230_a");
addMapping("playPlaceSound", EntityLeashKnot.class, "func_184523_o");
addMapping("writeEntityToNBT", EntityLeashKnot.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityLeashKnot.class, "func_70037_a");
addMapping("writeToNBTOptional", EntityLeashKnot.class, "func_70039_c");
addMapping("getEyeHeight", EntityLeashKnot.class, "func_70047_e");
addMapping("setPosition", EntityLeashKnot.class, "func_70107_b");
addMapping("isInRangeToRenderDist", EntityLeashKnot.class, "func_70112_a");
addMapping("onValidSurface", EntityLeashKnot.class, "func_70518_d");
addMapping("getWidthPixels", EntityLeashKnot.class, "func_82329_d");
addMapping("getHeightPixels", EntityLeashKnot.class, "func_82330_g");
addMapping("init", EntityList.class, "func_151514_a");
addMapping("isMatchingName", EntityList.class, "func_180123_a");
addMapping("getEntityNameList", EntityList.class, "func_180124_b");
addMapping("isRegistered", EntityList.class, "func_180125_b");
addMapping("createEntityByIDFromName", EntityList.class, "func_188429_b");
addMapping("getKey", EntityList.class, "func_191301_a");
addMapping("getTranslationName", EntityList.class, "func_191302_a");
addMapping("register", EntityList.class, "func_191303_a");
addMapping("newEntity", EntityList.class, "func_191304_a");
addMapping("addSpawnInfo", EntityList.class, "func_191305_a");
addMapping("getKey", EntityList.class, "func_191306_a");
addMapping("getClassFromName", EntityList.class, "func_192839_a");
addMapping("getValidTypeNames", EntityList.class, "func_192840_b");
addMapping("createEntityFromNBT", EntityList.class, "func_75615_a");
addMapping("createEntityByID", EntityList.class, "func_75616_a");
addMapping("getEntityString", EntityList.class, "func_75621_b");
addMapping("getClassFromID", EntityList.class, "func_90035_a");
addMapping("isNoDespawnRequired", EntityLiving.class, "func_104002_bU");
addMapping("updateDistance", EntityLiving.class, "func_110146_f");
addMapping("applyEntityAttributes", EntityLiving.class, "func_110147_ax");
addMapping("updateLeashedState", EntityLiving.class, "func_110159_bB");
addMapping("clearLeashed", EntityLiving.class, "func_110160_i");
addMapping("setLeashHolder", EntityLiving.class, "func_110162_b");
addMapping("enablePersistence", EntityLiving.class, "func_110163_bv");
addMapping("recreateLeash", EntityLiving.class, "func_110165_bF");
addMapping("getLeashHolder", EntityLiving.class, "func_110166_bE");
addMapping("getLeashed", EntityLiving.class, "func_110167_bD");
addMapping("getDropItem", EntityLiving.class, "func_146068_u");
addMapping("replaceItemInInventory", EntityLiving.class, "func_174820_d");
addMapping("updateEquipmentIfNeeded", EntityLiving.class, "func_175445_a");
addMapping("isAIDisabled", EntityLiving.class, "func_175446_cd");
addMapping("createNavigator", EntityLiving.class, "func_175447_b");
addMapping("canEquipItem", EntityLiving.class, "func_175448_a");
addMapping("applyEntityAI", EntityLiving.class, "func_175456_n");
addMapping("setEquipmentBasedOnDifficulty", EntityLiving.class, "func_180481_a");
addMapping("onInitialSpawn", EntityLiving.class, "func_180482_a");
addMapping("setEnchantmentBasedOnDifficulty", EntityLiving.class, "func_180483_b");
addMapping("canPassengerSteer", EntityLiving.class, "func_184186_bw");
addMapping("getArmorInventoryList", EntityLiving.class, "func_184193_aE");
addMapping("setItemStackToSlot", EntityLiving.class, "func_184201_a");
addMapping("startRiding", EntityLiving.class, "func_184205_a");
addMapping("getHeldEquipment", EntityLiving.class, "func_184214_aD");
addMapping("processInitialInteract", EntityLiving.class, "func_184230_a");
addMapping("playHurtSound", EntityLiving.class, "func_184581_c");
addMapping("getItemStackFromSlot", EntityLiving.class, "func_184582_a");
addMapping("getPrimaryHand", EntityLiving.class, "func_184591_cq");
addMapping("dropLoot", EntityLiving.class, "func_184610_a");
addMapping("getArmorByChance", EntityLiving.class, "func_184636_a");
addMapping("isLeftHanded", EntityLiving.class, "func_184638_cS");
addMapping("getAmbientSound", EntityLiving.class, "func_184639_G");
addMapping("getSlotForItemStack", EntityLiving.class, "func_184640_d");
addMapping("setLeftHanded", EntityLiving.class, "func_184641_n");
addMapping("setDropChance", EntityLiving.class, "func_184642_a");
addMapping("getPathPriority", EntityLiving.class, "func_184643_a");
addMapping("setPathPriority", EntityLiving.class, "func_184644_a");
addMapping("processInteract", EntityLiving.class, "func_184645_a");
addMapping("setMoveStrafing", EntityLiving.class, "func_184646_p");
addMapping("getLootTable", EntityLiving.class, "func_184647_J");
addMapping("isItemStackInSlot", EntityLiving.class, "func_184648_b");
addMapping("getHorizontalFaceSpeed", EntityLiving.class, "func_184649_cE");
addMapping("createBodyHelper", EntityLiving.class, "func_184650_s");
addMapping("initEntityAI", EntityLiving.class, "func_184651_r");
addMapping("canBeLeashedTo", EntityLiving.class, "func_184652_a");
addMapping("registerFixesMob", EntityLiving.class, "func_189752_a");
addMapping("setMoveForward", EntityLiving.class, "func_191989_p");
addMapping("writeEntityToNBT", EntityLiving.class, "func_70014_b");
addMapping("onEntityUpdate", EntityLiving.class, "func_70030_z");
addMapping("readEntityFromNBT", EntityLiving.class, "func_70037_a");
addMapping("isNotColliding", EntityLiving.class, "func_70058_J");
addMapping("onUpdate", EntityLiving.class, "func_70071_h_");
addMapping("entityInit", EntityLiving.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityLiving.class, "func_70103_a");
addMapping("getCanSpawnHere", EntityLiving.class, "func_70601_bi");
addMapping("getRenderSizeModifier", EntityLiving.class, "func_70603_bj");
addMapping("getMoveHelper", EntityLiving.class, "func_70605_aq");
addMapping("isServerWorld", EntityLiving.class, "func_70613_aW");
addMapping("eatGrassBonus", EntityLiving.class, "func_70615_aA");
addMapping("updateAITasks", EntityLiving.class, "func_70619_bc");
addMapping("despawnEntity", EntityLiving.class, "func_70623_bb");
addMapping("setAttackTarget", EntityLiving.class, "func_70624_b");
addMapping("faceEntity", EntityLiving.class, "func_70625_a");
addMapping("updateEntityActionState", EntityLiving.class, "func_70626_be");
addMapping("getTalkInterval", EntityLiving.class, "func_70627_aG");
addMapping("dropFewItems", EntityLiving.class, "func_70628_a");
addMapping("getEntitySenses", EntityLiving.class, "func_70635_at");
addMapping("onLivingUpdate", EntityLiving.class, "func_70636_d");
addMapping("getAttackTarget", EntityLiving.class, "func_70638_az");
addMapping("getMaxSpawnedInChunk", EntityLiving.class, "func_70641_bl");
addMapping("playLivingSound", EntityLiving.class, "func_70642_aH");
addMapping("getVerticalFaceSpeed", EntityLiving.class, "func_70646_bf");
addMapping("spawnExplosionParticle", EntityLiving.class, "func_70656_aK");
addMapping("setMoveVertical", EntityLiving.class, "func_70657_f");
addMapping("setAIMoveSpeed", EntityLiving.class, "func_70659_e");
addMapping("getNavigator", EntityLiving.class, "func_70661_as");
addMapping("updateRotation", EntityLiving.class, "func_70663_b");
addMapping("getLookHelper", EntityLiving.class, "func_70671_ap");
addMapping("getJumpHelper", EntityLiving.class, "func_70683_ar");
addMapping("canAttackClass", EntityLiving.class, "func_70686_a");
addMapping("canDespawn", EntityLiving.class, "func_70692_ba");
addMapping("getExperiencePoints", EntityLiving.class, "func_70693_a");
addMapping("getMaxFallHeight", EntityLiving.class, "func_82143_as");
addMapping("dropEquipment", EntityLiving.class, "func_82160_b");
addMapping("canBeSteered", EntityLiving.class, "func_82171_bF");
addMapping("setNoAI", EntityLiving.class, "func_94061_f");
addMapping("canPickUpLoot", EntityLiving.class, "func_98052_bS");
addMapping("setCanPickUpLoot", EntityLiving.class, "func_98053_h");
addMapping("getMaxHealth", EntityLivingBase.class, "func_110138_aP");
addMapping("getAbsorptionAmount", EntityLivingBase.class, "func_110139_bj");
addMapping("getAttributeMap", EntityLivingBase.class, "func_110140_aT");
addMapping("getCombatTracker", EntityLivingBase.class, "func_110142_aN");
addMapping("getHealth", EntityLivingBase.class, "func_110143_aJ");
addMapping("getLastAttackedEntity", EntityLivingBase.class, "func_110144_aD");
addMapping("dismountEntity", EntityLivingBase.class, "func_110145_l");
addMapping("updateDistance", EntityLivingBase.class, "func_110146_f");
addMapping("applyEntityAttributes", EntityLivingBase.class, "func_110147_ax");
addMapping("getEntityAttribute", EntityLivingBase.class, "func_110148_a");
addMapping("setAbsorptionAmount", EntityLivingBase.class, "func_110149_m");
addMapping("setLastAttackedEntity", EntityLivingBase.class, "func_130011_c");
addMapping("getLastAttackedEntityTime", EntityLivingBase.class, "func_142013_aG");
addMapping("getRevengeTimer", EntityLivingBase.class, "func_142015_aE");
addMapping("canDropLoot", EntityLivingBase.class, "func_146066_aG");
addMapping("sendEnterCombat", EntityLivingBase.class, "func_152111_bt");
addMapping("sendEndCombat", EntityLivingBase.class, "func_152112_bu");
addMapping("onKillCommand", EntityLivingBase.class, "func_174812_G");
addMapping("resetPotionEffectMetadata", EntityLivingBase.class, "func_175133_bi");
addMapping("getJumpUpwardsMotion", EntityLivingBase.class, "func_175134_bD");
addMapping("updatePotionMetadata", EntityLivingBase.class, "func_175135_B");
addMapping("markPotionsDirty", EntityLivingBase.class, "func_175136_bO");
addMapping("setPositionAndRotationDirect", EntityLivingBase.class, "func_180426_a");
addMapping("fall", EntityLivingBase.class, "func_180430_e");
addMapping("handleJumpLava", EntityLivingBase.class, "func_180466_bG");
addMapping("setRenderYawOffset", EntityLivingBase.class, "func_181013_g");
addMapping("getArmorInventoryList", EntityLivingBase.class, "func_184193_aE");
addMapping("setItemStackToSlot", EntityLivingBase.class, "func_184201_a");
addMapping("notifyDataManagerChange", EntityLivingBase.class, "func_184206_a");
addMapping("dismountRidingEntity", EntityLivingBase.class, "func_184210_p");
addMapping("updateFallState", EntityLivingBase.class, "func_184231_a");
addMapping("playHurtSound", EntityLivingBase.class, "func_184581_c");
addMapping("getItemStackFromSlot", EntityLivingBase.class, "func_184582_a");
addMapping("canBlockDamageSource", EntityLivingBase.class, "func_184583_d");
addMapping("updateItemUse", EntityLivingBase.class, "func_184584_a");
addMapping("isActiveItemStackBlocking", EntityLivingBase.class, "func_184585_cz");
addMapping("getHeldItem", EntityLivingBase.class, "func_184586_b");
addMapping("isHandActive", EntityLivingBase.class, "func_184587_cr");
addMapping("getFallSound", EntityLivingBase.class, "func_184588_d");
addMapping("removePotionEffect", EntityLivingBase.class, "func_184589_d");
addMapping("damageShield", EntityLivingBase.class, "func_184590_k");
addMapping("getPrimaryHand", EntityLivingBase.class, "func_184591_cq");
addMapping("getHeldItemOffhand", EntityLivingBase.class, "func_184592_cb");
addMapping("areAllPotionsAmbient", EntityLivingBase.class, "func_184593_a");
addMapping("frostWalk", EntityLivingBase.class, "func_184594_b");
addMapping("attemptTeleport", EntityLivingBase.class, "func_184595_k");
addMapping("removeActivePotionEffect", EntityLivingBase.class, "func_184596_c");
addMapping("stopActiveHand", EntityLivingBase.class, "func_184597_cx");
addMapping("setActiveHand", EntityLivingBase.class, "func_184598_c");
addMapping("getTicksElytraFlying", EntityLivingBase.class, "func_184599_cB");
addMapping("getActiveHand", EntityLivingBase.class, "func_184600_cs");
addMapping("getHurtSound", EntityLivingBase.class, "func_184601_bQ");
addMapping("resetActiveHand", EntityLivingBase.class, "func_184602_cy");
addMapping("canBeHitWithPotion", EntityLivingBase.class, "func_184603_cC");
addMapping("canGoThroughtTrapDoorOnLadder", EntityLivingBase.class, "func_184604_a");
addMapping("getItemInUseCount", EntityLivingBase.class, "func_184605_cv");
addMapping("playEquipSound", EntityLivingBase.class, "func_184606_a_");
addMapping("getActiveItemStack", EntityLivingBase.class, "func_184607_cu");
addMapping("updateActiveHand", EntityLivingBase.class, "func_184608_ct");
addMapping("swingArm", EntityLivingBase.class, "func_184609_a");
addMapping("dropLoot", EntityLivingBase.class, "func_184610_a");
addMapping("setHeldItem", EntityLivingBase.class, "func_184611_a");
addMapping("getItemInUseMaxCount", EntityLivingBase.class, "func_184612_cw");
addMapping("isElytraFlying", EntityLivingBase.class, "func_184613_cA");
addMapping("getHeldItemMainhand", EntityLivingBase.class, "func_184614_ca");
addMapping("getDeathSound", EntityLivingBase.class, "func_184615_bR");
addMapping("updateElytra", EntityLivingBase.class, "func_184616_r");
addMapping("getLastDamageSource", EntityLivingBase.class, "func_189748_bU");
addMapping("getWaterSlowDown", EntityLivingBase.class, "func_189749_co");
addMapping("checkTotemDeathProtection", EntityLivingBase.class, "func_190628_d");
addMapping("blockUsingShield", EntityLivingBase.class, "func_190629_c");
addMapping("hasItemInSlot", EntityLivingBase.class, "func_190630_a");
addMapping("attackable", EntityLivingBase.class, "func_190631_cK");
addMapping("travel", EntityLivingBase.class, "func_191986_a");
addMapping("setPartying", EntityLivingBase.class, "func_191987_a");
addMapping("getActivePotionMap", EntityLivingBase.class, "func_193076_bZ");
addMapping("writeEntityToNBT", EntityLivingBase.class, "func_70014_b");
addMapping("markVelocityChanged", EntityLivingBase.class, "func_70018_K");
addMapping("onEntityUpdate", EntityLivingBase.class, "func_70030_z");
addMapping("setSprinting", EntityLivingBase.class, "func_70031_b");
addMapping("setRotationYawHead", EntityLivingBase.class, "func_70034_d");
addMapping("readEntityFromNBT", EntityLivingBase.class, "func_70037_a");
addMapping("performHurtAnimation", EntityLivingBase.class, "func_70057_ab");
addMapping("canBeCollidedWith", EntityLivingBase.class, "func_70067_L");
addMapping("onUpdate", EntityLivingBase.class, "func_70071_h_");
addMapping("outOfWorld", EntityLivingBase.class, "func_70076_C");
addMapping("getRotationYawHead", EntityLivingBase.class, "func_70079_am");
addMapping("entityInit", EntityLivingBase.class, "func_70088_a");
addMapping("isEntityAlive", EntityLivingBase.class, "func_70089_S");
addMapping("attackEntityFrom", EntityLivingBase.class, "func_70097_a");
addMapping("updateRidden", EntityLivingBase.class, "func_70098_U");
addMapping("handleStatusUpdate", EntityLivingBase.class, "func_70103_a");
addMapping("canBePushed", EntityLivingBase.class, "func_70104_M");
addMapping("getSoundVolume", EntityLivingBase.class, "func_70599_aP");
addMapping("setRevengeTarget", EntityLivingBase.class, "func_70604_c");
addMapping("setHealth", EntityLivingBase.class, "func_70606_j");
addMapping("isPlayerSleeping", EntityLivingBase.class, "func_70608_bn");
addMapping("onDeathUpdate", EntityLivingBase.class, "func_70609_aI");
addMapping("isMovementBlocked", EntityLivingBase.class, "func_70610_aX");
addMapping("isServerWorld", EntityLivingBase.class, "func_70613_aW");
addMapping("isOnLadder", EntityLivingBase.class, "func_70617_f_");
addMapping("updateEntityActionState", EntityLivingBase.class, "func_70626_be");
addMapping("dropFewItems", EntityLivingBase.class, "func_70628_a");
addMapping("handleJumpWater", EntityLivingBase.class, "func_70629_bd");
addMapping("isChild", EntityLivingBase.class, "func_70631_g_");
addMapping("onLivingUpdate", EntityLivingBase.class, "func_70636_d");
addMapping("setJumping", EntityLivingBase.class, "func_70637_d");
addMapping("getRevengeTarget", EntityLivingBase.class, "func_70643_av");
addMapping("isPotionActive", EntityLivingBase.class, "func_70644_a");
addMapping("onDeath", EntityLivingBase.class, "func_70645_a");
addMapping("getSoundPitch", EntityLivingBase.class, "func_70647_i");
addMapping("canBreatheUnderwater", EntityLivingBase.class, "func_70648_aU");
addMapping("getActivePotionEffects", EntityLivingBase.class, "func_70651_bq");
addMapping("attackEntityAsMob", EntityLivingBase.class, "func_70652_k");
addMapping("knockBack", EntityLivingBase.class, "func_70653_a");
addMapping("getIdleTime", EntityLivingBase.class, "func_70654_ax");
addMapping("applyArmorCalculations", EntityLivingBase.class, "func_70655_b");
addMapping("getTotalArmorValue", EntityLivingBase.class, "func_70658_aO");
addMapping("setAIMoveSpeed", EntityLivingBase.class, "func_70659_e");
addMapping("getActivePotionEffect", EntityLivingBase.class, "func_70660_b");
addMapping("isEntityUndead", EntityLivingBase.class, "func_70662_br");
addMapping("jump", EntityLivingBase.class, "func_70664_aZ");
addMapping("damageEntity", EntityLivingBase.class, "func_70665_d");
addMapping("getCreatureAttribute", EntityLivingBase.class, "func_70668_bt");
addMapping("renderBrokenItemStack", EntityLivingBase.class, "func_70669_a");
addMapping("onNewPotionEffect", EntityLivingBase.class, "func_70670_a");
addMapping("applyPotionDamageCalculations", EntityLivingBase.class, "func_70672_c");
addMapping("clearActivePotions", EntityLivingBase.class, "func_70674_bp");
addMapping("damageArmor", EntityLivingBase.class, "func_70675_k");
addMapping("getLook", EntityLivingBase.class, "func_70676_i");
addMapping("getSwingProgress", EntityLivingBase.class, "func_70678_g");
addMapping("updatePotionEffects", EntityLivingBase.class, "func_70679_bo");
addMapping("getRNG", EntityLivingBase.class, "func_70681_au");
addMapping("decreaseAirSupply", EntityLivingBase.class, "func_70682_h");
addMapping("isPlayer", EntityLivingBase.class, "func_70684_aJ");
addMapping("canEntityBeSeen", EntityLivingBase.class, "func_70685_l");
addMapping("isPotionApplicable", EntityLivingBase.class, "func_70687_e");
addMapping("onFinishedPotionEffect", EntityLivingBase.class, "func_70688_c");
addMapping("getAIMoveSpeed", EntityLivingBase.class, "func_70689_ay");
addMapping("addPotionEffect", EntityLivingBase.class, "func_70690_d");
addMapping("heal", EntityLivingBase.class, "func_70691_i");
addMapping("getExperiencePoints", EntityLivingBase.class, "func_70693_a");
addMapping("onChangedPotionEffect", EntityLivingBase.class, "func_70695_b");
addMapping("onItemPickup", EntityLivingBase.class, "func_71001_a");
addMapping("onItemUseFinish", EntityLivingBase.class, "func_71036_o");
addMapping("dropEquipment", EntityLivingBase.class, "func_82160_b");
addMapping("getArmSwingAnimationEnd", EntityLivingBase.class, "func_82166_i");
addMapping("collideWithEntity", EntityLivingBase.class, "func_82167_n");
addMapping("updateArmSwingProgress", EntityLivingBase.class, "func_82168_bl");
addMapping("collideWithNearbyEntities", EntityLivingBase.class, "func_85033_bc");
addMapping("setArrowCountInEntity", EntityLivingBase.class, "func_85034_r");
addMapping("getArrowCountInEntity", EntityLivingBase.class, "func_85035_bI");
addMapping("getAlwaysRenderNameTagForRender", EntityLivingBase.class, "func_94059_bO");
addMapping("getAttackingEntity", EntityLivingBase.class, "func_94060_bK");
addMapping("getPlacementForEntity", EntitySpawnPlacementRegistry.class, "func_180109_a");
addMapping("sendToTracking", EntityTracker.class, "func_151247_a");
addMapping("sendToTrackingAndSelf", EntityTracker.class, "func_151248_b");
addMapping("updateVisibility", EntityTracker.class, "func_180245_a");
addMapping("setViewDistance", EntityTracker.class, "func_187252_a");
addMapping("getPositionLong", EntityTracker.class, "func_187253_a");
addMapping("updateServerPosition", EntityTracker.class, "func_187254_a");
addMapping("track", EntityTracker.class, "func_72785_a");
addMapping("track", EntityTracker.class, "func_72786_a");
addMapping("removePlayerFromTrackers", EntityTracker.class, "func_72787_a");
addMapping("tick", EntityTracker.class, "func_72788_a");
addMapping("untrack", EntityTracker.class, "func_72790_b");
addMapping("track", EntityTracker.class, "func_72791_a");
addMapping("sendLeashedEntitiesInChunk", EntityTracker.class, "func_85172_a");
addMapping("sendMetadata", EntityTrackerEntry.class, "func_111190_b");
addMapping("sendPacketToTrackedPlayers", EntityTrackerEntry.class, "func_151259_a");
addMapping("createSpawnPacket", EntityTrackerEntry.class, "func_151260_c");
addMapping("sendToTrackingAndSelf", EntityTrackerEntry.class, "func_151261_b");
addMapping("isVisibleTo", EntityTrackerEntry.class, "func_180233_c");
addMapping("setMaxRange", EntityTrackerEntry.class, "func_187259_a");
addMapping("getTrackedEntity", EntityTrackerEntry.class, "func_187260_b");
addMapping("resetPlayerVisibility", EntityTrackerEntry.class, "func_187261_c");
addMapping("updatePlayerEntity", EntityTrackerEntry.class, "func_73117_b");
addMapping("removeFromTrackedPlayers", EntityTrackerEntry.class, "func_73118_a");
addMapping("sendDestroyEntityPacketToTrackedPlayers", EntityTrackerEntry.class, "func_73119_a");
addMapping("isPlayerWatchingThisChunk", EntityTrackerEntry.class, "func_73121_d");
addMapping("updatePlayerList", EntityTrackerEntry.class, "func_73122_a");
addMapping("removeTrackedPlayerSymmetric", EntityTrackerEntry.class, "func_73123_c");
addMapping("updatePlayerEntities", EntityTrackerEntry.class, "func_73125_b");
addMapping("getCreatureClass", EnumCreatureType.class, "func_75598_a");
addMapping("getPeacefulCreature", EnumCreatureType.class, "func_75599_d");
addMapping("getMaxNumberOfCreature", EnumCreatureType.class, "func_75601_b");
addMapping("getAnimal", EnumCreatureType.class, "func_82705_e");
addMapping("attackEntityFromPart", IEntityMultiPart.class, "func_70965_a");
addMapping("getWorld", IEntityMultiPart.class, "func_82194_d");
addMapping("getOwnerId", IEntityOwnable.class, "func_184753_b");
addMapping("getOwner", IEntityOwnable.class, "func_70902_q");
addMapping("setJumpPower", IJumpingMount.class, "func_110206_u");
addMapping("handleStartJump", IJumpingMount.class, "func_184775_b");
addMapping("canJump", IJumpingMount.class, "func_184776_b");
addMapping("handleStopJump", IJumpingMount.class, "func_184777_r_");
addMapping("verifySellingItem", IMerchant.class, "func_110297_a_");
addMapping("getDisplayName", IMerchant.class, "func_145748_c_");
addMapping("getWorld", IMerchant.class, "func_190670_t_");
addMapping("getPos", IMerchant.class, "func_190671_u_");
addMapping("setRecipes", IMerchant.class, "func_70930_a");
addMapping("getCustomer", IMerchant.class, "func_70931_l_");
addMapping("setCustomer", IMerchant.class, "func_70932_a_");
addMapping("useRecipe", IMerchant.class, "func_70933_a");
addMapping("getRecipes", IMerchant.class, "func_70934_b");
addMapping("shoot", IProjectile.class, "func_70186_c");
addMapping("setSwingingArms", IRangedAttackMob.class, "func_184724_a");
addMapping("attackEntityWithRangedAttack", IRangedAttackMob.class, "func_82196_d");
addMapping("writeEntityToNBT", MultiPartEntityPart.class, "func_70014_b");
addMapping("isEntityEqual", MultiPartEntityPart.class, "func_70028_i");
addMapping("readEntityFromNBT", MultiPartEntityPart.class, "func_70037_a");
addMapping("canBeCollidedWith", MultiPartEntityPart.class, "func_70067_L");
addMapping("entityInit", MultiPartEntityPart.class, "func_70088_a");
addMapping("attackEntityFrom", MultiPartEntityPart.class, "func_70097_a");
addMapping("verifySellingItem", NpcMerchant.class, "func_110297_a_");
addMapping("getDisplayName", NpcMerchant.class, "func_145748_c_");
addMapping("getWorld", NpcMerchant.class, "func_190670_t_");
addMapping("getPos", NpcMerchant.class, "func_190671_u_");
addMapping("setRecipes", NpcMerchant.class, "func_70930_a");
addMapping("getCustomer", NpcMerchant.class, "func_70931_l_");
addMapping("setCustomer", NpcMerchant.class, "func_70932_a_");
addMapping("useRecipe", NpcMerchant.class, "func_70933_a");
addMapping("getRecipes", NpcMerchant.class, "func_70934_b");
addMapping("writeBaseAttributeMapToNBT", SharedMonsterAttributes.class, "func_111257_a");
addMapping("applyModifiersToAttributeInstance", SharedMonsterAttributes.class, "func_111258_a");
addMapping("readAttributeModifierFromNBT", SharedMonsterAttributes.class, "func_111259_a");
addMapping("writeAttributeInstanceToNBT", SharedMonsterAttributes.class, "func_111261_a");
addMapping("writeAttributeModifierToNBT", SharedMonsterAttributes.class, "func_111262_a");
addMapping("setAttributeModifiers", SharedMonsterAttributes.class, "func_151475_a");
addMapping("getAttackReachSqr", EntityAIAttackMelee.class, "func_179512_a");
addMapping("checkAndPerformAttack", EntityAIAttackMelee.class, "func_190102_a");
addMapping("updateTask", EntityAIAttackMelee.class, "func_75246_d");
addMapping("startExecuting", EntityAIAttackMelee.class, "func_75249_e");
addMapping("shouldExecute", EntityAIAttackMelee.class, "func_75250_a");
addMapping("resetTask", EntityAIAttackMelee.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIAttackMelee.class, "func_75253_b");
addMapping("updateTask", EntityAIAttackRanged.class, "func_75246_d");
addMapping("shouldExecute", EntityAIAttackRanged.class, "func_75250_a");
addMapping("resetTask", EntityAIAttackRanged.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIAttackRanged.class, "func_75253_b");
addMapping("isBowInMainhand", EntityAIAttackRangedBow.class, "func_188498_f");
addMapping("setAttackCooldown", EntityAIAttackRangedBow.class, "func_189428_b");
addMapping("updateTask", EntityAIAttackRangedBow.class, "func_75246_d");
addMapping("startExecuting", EntityAIAttackRangedBow.class, "func_75249_e");
addMapping("shouldExecute", EntityAIAttackRangedBow.class, "func_75250_a");
addMapping("resetTask", EntityAIAttackRangedBow.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIAttackRangedBow.class, "func_75253_b");
addMapping("updateTask", EntityAIAvoidEntity.class, "func_75246_d");
addMapping("startExecuting", EntityAIAvoidEntity.class, "func_75249_e");
addMapping("shouldExecute", EntityAIAvoidEntity.class, "func_75250_a");
addMapping("resetTask", EntityAIAvoidEntity.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIAvoidEntity.class, "func_75253_b");
addMapping("updateTask", EntityAIBase.class, "func_75246_d");
addMapping("getMutexBits", EntityAIBase.class, "func_75247_h");
addMapping("setMutexBits", EntityAIBase.class, "func_75248_a");
addMapping("startExecuting", EntityAIBase.class, "func_75249_e");
addMapping("shouldExecute", EntityAIBase.class, "func_75250_a");
addMapping("resetTask", EntityAIBase.class, "func_75251_c");
addMapping("isInterruptible", EntityAIBase.class, "func_75252_g");
addMapping("shouldContinueExecuting", EntityAIBase.class, "func_75253_b");
addMapping("updateTask", EntityAIBeg.class, "func_75246_d");
addMapping("startExecuting", EntityAIBeg.class, "func_75249_e");
addMapping("shouldExecute", EntityAIBeg.class, "func_75250_a");
addMapping("resetTask", EntityAIBeg.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIBeg.class, "func_75253_b");
addMapping("hasTemptationItemInHand", EntityAIBeg.class, "func_75382_a");
addMapping("updateTask", EntityAIBreakDoor.class, "func_75246_d");
addMapping("startExecuting", EntityAIBreakDoor.class, "func_75249_e");
addMapping("shouldExecute", EntityAIBreakDoor.class, "func_75250_a");
addMapping("resetTask", EntityAIBreakDoor.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIBreakDoor.class, "func_75253_b");
addMapping("updateTask", EntityAICreeperSwell.class, "func_75246_d");
addMapping("startExecuting", EntityAICreeperSwell.class, "func_75249_e");
addMapping("shouldExecute", EntityAICreeperSwell.class, "func_75250_a");
addMapping("resetTask", EntityAICreeperSwell.class, "func_75251_c");
addMapping("startExecuting", EntityAIDefendVillage.class, "func_75249_e");
addMapping("shouldExecute", EntityAIDefendVillage.class, "func_75250_a");
addMapping("getBlockDoor", EntityAIDoorInteract.class, "func_179506_a");
addMapping("updateTask", EntityAIDoorInteract.class, "func_75246_d");
addMapping("startExecuting", EntityAIDoorInteract.class, "func_75249_e");
addMapping("shouldExecute", EntityAIDoorInteract.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIDoorInteract.class, "func_75253_b");
addMapping("getEatingGrassTimer", EntityAIEatGrass.class, "func_151499_f");
addMapping("updateTask", EntityAIEatGrass.class, "func_75246_d");
addMapping("startExecuting", EntityAIEatGrass.class, "func_75249_e");
addMapping("shouldExecute", EntityAIEatGrass.class, "func_75250_a");
addMapping("resetTask", EntityAIEatGrass.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIEatGrass.class, "func_75253_b");
addMapping("getFollowRange", EntityAIFindEntityNearest.class, "func_179438_f");
addMapping("startExecuting", EntityAIFindEntityNearest.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFindEntityNearest.class, "func_75250_a");
addMapping("resetTask", EntityAIFindEntityNearest.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFindEntityNearest.class, "func_75253_b");
addMapping("maxTargetRange", EntityAIFindEntityNearestPlayer.class, "func_179431_f");
addMapping("startExecuting", EntityAIFindEntityNearestPlayer.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFindEntityNearestPlayer.class, "func_75250_a");
addMapping("resetTask", EntityAIFindEntityNearestPlayer.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFindEntityNearestPlayer.class, "func_75253_b");
addMapping("startExecuting", EntityAIFleeSun.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFleeSun.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIFleeSun.class, "func_75253_b");
addMapping("findPossibleShelter", EntityAIFleeSun.class, "func_75366_f");
addMapping("updateTask", EntityAIFollow.class, "func_75246_d");
addMapping("startExecuting", EntityAIFollow.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFollow.class, "func_75250_a");
addMapping("resetTask", EntityAIFollow.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFollow.class, "func_75253_b");
addMapping("updateTask", EntityAIFollowGolem.class, "func_75246_d");
addMapping("startExecuting", EntityAIFollowGolem.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFollowGolem.class, "func_75250_a");
addMapping("resetTask", EntityAIFollowGolem.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFollowGolem.class, "func_75253_b");
addMapping("isTeleportFriendlyBlock", EntityAIFollowOwner.class, "func_192381_a");
addMapping("updateTask", EntityAIFollowOwner.class, "func_75246_d");
addMapping("startExecuting", EntityAIFollowOwner.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFollowOwner.class, "func_75250_a");
addMapping("resetTask", EntityAIFollowOwner.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFollowOwner.class, "func_75253_b");
addMapping("isTeleportFriendlyBlock", EntityAIFollowOwnerFlying.class, "func_192381_a");
addMapping("updateTask", EntityAIFollowParent.class, "func_75246_d");
addMapping("startExecuting", EntityAIFollowParent.class, "func_75249_e");
addMapping("shouldExecute", EntityAIFollowParent.class, "func_75250_a");
addMapping("resetTask", EntityAIFollowParent.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIFollowParent.class, "func_75253_b");
addMapping("shouldMoveTo", EntityAIHarvestFarmland.class, "func_179488_a");
addMapping("updateTask", EntityAIHarvestFarmland.class, "func_75246_d");
addMapping("shouldExecute", EntityAIHarvestFarmland.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIHarvestFarmland.class, "func_75253_b");
addMapping("setEntityAttackTarget", EntityAIHurtByTarget.class, "func_179446_a");
addMapping("alertOthers", EntityAIHurtByTarget.class, "func_190105_f");
addMapping("startExecuting", EntityAIHurtByTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAIHurtByTarget.class, "func_75250_a");
addMapping("updateTask", EntityAILandOnOwnersShoulder.class, "func_75246_d");
addMapping("startExecuting", EntityAILandOnOwnersShoulder.class, "func_75249_e");
addMapping("shouldExecute", EntityAILandOnOwnersShoulder.class, "func_75250_a");
addMapping("isInterruptible", EntityAILandOnOwnersShoulder.class, "func_75252_g");
addMapping("startExecuting", EntityAILeapAtTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAILeapAtTarget.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAILeapAtTarget.class, "func_75253_b");
addMapping("firstIsLeashed", EntityAILlamaFollowCaravan.class, "func_190858_a");
addMapping("updateTask", EntityAILlamaFollowCaravan.class, "func_75246_d");
addMapping("shouldExecute", EntityAILlamaFollowCaravan.class, "func_75250_a");
addMapping("resetTask", EntityAILlamaFollowCaravan.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAILlamaFollowCaravan.class, "func_75253_b");
addMapping("shouldExecute", EntityAILookAtTradePlayer.class, "func_75250_a");
addMapping("updateTask", EntityAILookAtVillager.class, "func_75246_d");
addMapping("startExecuting", EntityAILookAtVillager.class, "func_75249_e");
addMapping("shouldExecute", EntityAILookAtVillager.class, "func_75250_a");
addMapping("resetTask", EntityAILookAtVillager.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAILookAtVillager.class, "func_75253_b");
addMapping("updateTask", EntityAILookIdle.class, "func_75246_d");
addMapping("startExecuting", EntityAILookIdle.class, "func_75249_e");
addMapping("shouldExecute", EntityAILookIdle.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAILookIdle.class, "func_75253_b");
addMapping("updateTask", EntityAIMate.class, "func_75246_d");
addMapping("shouldExecute", EntityAIMate.class, "func_75250_a");
addMapping("resetTask", EntityAIMate.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIMate.class, "func_75253_b");
addMapping("spawnBaby", EntityAIMate.class, "func_75388_i");
addMapping("getNearbyMate", EntityAIMate.class, "func_75389_f");
addMapping("startExecuting", EntityAIMoveIndoors.class, "func_75249_e");
addMapping("shouldExecute", EntityAIMoveIndoors.class, "func_75250_a");
addMapping("resetTask", EntityAIMoveIndoors.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIMoveIndoors.class, "func_75253_b");
addMapping("startExecuting", EntityAIMoveThroughVillage.class, "func_75249_e");
addMapping("shouldExecute", EntityAIMoveThroughVillage.class, "func_75250_a");
addMapping("resetTask", EntityAIMoveThroughVillage.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIMoveThroughVillage.class, "func_75253_b");
addMapping("findNearestDoor", EntityAIMoveThroughVillage.class, "func_75412_a");
addMapping("doesDoorListContain", EntityAIMoveThroughVillage.class, "func_75413_a");
addMapping("resizeDoorList", EntityAIMoveThroughVillage.class, "func_75414_f");
addMapping("getIsAboveDestination", EntityAIMoveToBlock.class, "func_179487_f");
addMapping("shouldMoveTo", EntityAIMoveToBlock.class, "func_179488_a");
addMapping("searchForDestination", EntityAIMoveToBlock.class, "func_179489_g");
addMapping("updateTask", EntityAIMoveToBlock.class, "func_75246_d");
addMapping("startExecuting", EntityAIMoveToBlock.class, "func_75249_e");
addMapping("shouldExecute", EntityAIMoveToBlock.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIMoveToBlock.class, "func_75253_b");
addMapping("startExecuting", EntityAIMoveTowardsRestriction.class, "func_75249_e");
addMapping("shouldExecute", EntityAIMoveTowardsRestriction.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIMoveTowardsRestriction.class, "func_75253_b");
addMapping("startExecuting", EntityAIMoveTowardsTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAIMoveTowardsTarget.class, "func_75250_a");
addMapping("resetTask", EntityAIMoveTowardsTarget.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIMoveTowardsTarget.class, "func_75253_b");
addMapping("getTargetableArea", EntityAINearestAttackableTarget.class, "func_188511_a");
addMapping("startExecuting", EntityAINearestAttackableTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAINearestAttackableTarget.class, "func_75250_a");
addMapping("updateTask", EntityAIOcelotAttack.class, "func_75246_d");
addMapping("shouldExecute", EntityAIOcelotAttack.class, "func_75250_a");
addMapping("resetTask", EntityAIOcelotAttack.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIOcelotAttack.class, "func_75253_b");
addMapping("shouldMoveTo", EntityAIOcelotSit.class, "func_179488_a");
addMapping("updateTask", EntityAIOcelotSit.class, "func_75246_d");
addMapping("startExecuting", EntityAIOcelotSit.class, "func_75249_e");
addMapping("shouldExecute", EntityAIOcelotSit.class, "func_75250_a");
addMapping("resetTask", EntityAIOcelotSit.class, "func_75251_c");
addMapping("updateTask", EntityAIOpenDoor.class, "func_75246_d");
addMapping("startExecuting", EntityAIOpenDoor.class, "func_75249_e");
addMapping("resetTask", EntityAIOpenDoor.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIOpenDoor.class, "func_75253_b");
addMapping("startExecuting", EntityAIOwnerHurtByTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAIOwnerHurtByTarget.class, "func_75250_a");
addMapping("startExecuting", EntityAIOwnerHurtTarget.class, "func_75249_e");
addMapping("shouldExecute", EntityAIOwnerHurtTarget.class, "func_75250_a");
addMapping("getRandPos", EntityAIPanic.class, "func_188497_a");
addMapping("findRandomPosition", EntityAIPanic.class, "func_190863_f");
addMapping("startExecuting", EntityAIPanic.class, "func_75249_e");
addMapping("shouldExecute", EntityAIPanic.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIPanic.class, "func_75253_b");
addMapping("updateTask", EntityAIPlay.class, "func_75246_d");
addMapping("startExecuting", EntityAIPlay.class, "func_75249_e");
addMapping("shouldExecute", EntityAIPlay.class, "func_75250_a");
addMapping("resetTask", EntityAIPlay.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIPlay.class, "func_75253_b");
addMapping("updateTask", EntityAIRestrictOpenDoor.class, "func_75246_d");
addMapping("startExecuting", EntityAIRestrictOpenDoor.class, "func_75249_e");
addMapping("shouldExecute", EntityAIRestrictOpenDoor.class, "func_75250_a");
addMapping("resetTask", EntityAIRestrictOpenDoor.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIRestrictOpenDoor.class, "func_75253_b");
addMapping("startExecuting", EntityAIRestrictSun.class, "func_75249_e");
addMapping("shouldExecute", EntityAIRestrictSun.class, "func_75250_a");
addMapping("resetTask", EntityAIRestrictSun.class, "func_75251_c");
addMapping("updateTask", EntityAIRunAroundLikeCrazy.class, "func_75246_d");
addMapping("startExecuting", EntityAIRunAroundLikeCrazy.class, "func_75249_e");
addMapping("shouldExecute", EntityAIRunAroundLikeCrazy.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIRunAroundLikeCrazy.class, "func_75253_b");
addMapping("startExecuting", EntityAISit.class, "func_75249_e");
addMapping("shouldExecute", EntityAISit.class, "func_75250_a");
addMapping("resetTask", EntityAISit.class, "func_75251_c");
addMapping("setSitting", EntityAISit.class, "func_75270_a");
addMapping("createSkeleton", EntityAISkeletonRiders.class, "func_188514_a");
addMapping("createHorse", EntityAISkeletonRiders.class, "func_188515_a");
addMapping("updateTask", EntityAISkeletonRiders.class, "func_75246_d");
addMapping("shouldExecute", EntityAISkeletonRiders.class, "func_75250_a");
addMapping("updateTask", EntityAISwimming.class, "func_75246_d");
addMapping("shouldExecute", EntityAISwimming.class, "func_75250_a");
addMapping("getTargetDistance", EntityAITarget.class, "func_111175_f");
addMapping("isSuitableTarget", EntityAITarget.class, "func_179445_a");
addMapping("setUnseenMemoryTicks", EntityAITarget.class, "func_190882_b");
addMapping("startExecuting", EntityAITarget.class, "func_75249_e");
addMapping("resetTask", EntityAITarget.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAITarget.class, "func_75253_b");
addMapping("canEasilyReach", EntityAITarget.class, "func_75295_a");
addMapping("isSuitableTarget", EntityAITarget.class, "func_75296_a");
addMapping("shouldExecute", EntityAITargetNonTamed.class, "func_75250_a");
addMapping("enableControlFlag", EntityAITasks.class, "func_188525_d");
addMapping("disableControlFlag", EntityAITasks.class, "func_188526_c");
addMapping("setControlFlag", EntityAITasks.class, "func_188527_a");
addMapping("isControlFlagDisabled", EntityAITasks.class, "func_188528_b");
addMapping("canContinue", EntityAITasks.class, "func_75773_a");
addMapping("onUpdateTasks", EntityAITasks.class, "func_75774_a");
addMapping("canUse", EntityAITasks.class, "func_75775_b");
addMapping("addTask", EntityAITasks.class, "func_75776_a");
addMapping("areTasksCompatible", EntityAITasks.class, "func_75777_a");
addMapping("removeTask", EntityAITasks.class, "func_85156_a");
addMapping("isTempting", EntityAITempt.class, "func_188508_a");
addMapping("updateTask", EntityAITempt.class, "func_75246_d");
addMapping("startExecuting", EntityAITempt.class, "func_75249_e");
addMapping("shouldExecute", EntityAITempt.class, "func_75250_a");
addMapping("resetTask", EntityAITempt.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAITempt.class, "func_75253_b");
addMapping("isRunning", EntityAITempt.class, "func_75277_f");
addMapping("startExecuting", EntityAITradePlayer.class, "func_75249_e");
addMapping("shouldExecute", EntityAITradePlayer.class, "func_75250_a");
addMapping("resetTask", EntityAITradePlayer.class, "func_75251_c");
addMapping("updateTask", EntityAIVillagerInteract.class, "func_75246_d");
addMapping("startExecuting", EntityAIVillagerInteract.class, "func_75249_e");
addMapping("updateTask", EntityAIVillagerMate.class, "func_75246_d");
addMapping("startExecuting", EntityAIVillagerMate.class, "func_75249_e");
addMapping("shouldExecute", EntityAIVillagerMate.class, "func_75250_a");
addMapping("resetTask", EntityAIVillagerMate.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIVillagerMate.class, "func_75253_b");
addMapping("checkSufficientDoorsPresentForNewVillager", EntityAIVillagerMate.class, "func_75446_f");
addMapping("giveBirth", EntityAIVillagerMate.class, "func_75447_i");
addMapping("setExecutionChance", EntityAIWander.class, "func_179479_b");
addMapping("makeUpdate", EntityAIWander.class, "func_179480_f");
addMapping("getPosition", EntityAIWander.class, "func_190864_f");
addMapping("startExecuting", EntityAIWander.class, "func_75249_e");
addMapping("shouldExecute", EntityAIWander.class, "func_75250_a");
addMapping("shouldContinueExecuting", EntityAIWander.class, "func_75253_b");
addMapping("getPosition", EntityAIWanderAvoidWater.class, "func_190864_f");
addMapping("getPosition", EntityAIWanderAvoidWaterFlying.class, "func_190864_f");
addMapping("getTreePos", EntityAIWanderAvoidWaterFlying.class, "func_192385_j");
addMapping("updateTask", EntityAIWatchClosest.class, "func_75246_d");
addMapping("startExecuting", EntityAIWatchClosest.class, "func_75249_e");
addMapping("shouldExecute", EntityAIWatchClosest.class, "func_75250_a");
addMapping("resetTask", EntityAIWatchClosest.class, "func_75251_c");
addMapping("shouldContinueExecuting", EntityAIWatchClosest.class, "func_75253_b");
addMapping("updateTask", EntityAIZombieAttack.class, "func_75246_d");
addMapping("startExecuting", EntityAIZombieAttack.class, "func_75249_e");
addMapping("resetTask", EntityAIZombieAttack.class, "func_75251_c");
addMapping("onUpdateMoveHelper", EntityFlyHelper.class, "func_75641_c");
addMapping("setJumping", EntityJumpHelper.class, "func_75660_a");
addMapping("doJump", EntityJumpHelper.class, "func_75661_b");
addMapping("getLookPosZ", EntityLookHelper.class, "func_180421_g");
addMapping("getLookPosY", EntityLookHelper.class, "func_180422_f");
addMapping("getLookPosX", EntityLookHelper.class, "func_180423_e");
addMapping("getIsLooking", EntityLookHelper.class, "func_180424_b");
addMapping("onUpdateLook", EntityLookHelper.class, "func_75649_a");
addMapping("setLookPosition", EntityLookHelper.class, "func_75650_a");
addMapping("setLookPositionWithEntity", EntityLookHelper.class, "func_75651_a");
addMapping("updateRotation", EntityLookHelper.class, "func_75652_a");
addMapping("getX", EntityMoveHelper.class, "func_179917_d");
addMapping("getZ", EntityMoveHelper.class, "func_179918_f");
addMapping("getY", EntityMoveHelper.class, "func_179919_e");
addMapping("read", EntityMoveHelper.class, "func_188487_a");
addMapping("strafe", EntityMoveHelper.class, "func_188488_a");
addMapping("getSpeed", EntityMoveHelper.class, "func_75638_b");
addMapping("limitAngle", EntityMoveHelper.class, "func_75639_a");
addMapping("isUpdating", EntityMoveHelper.class, "func_75640_a");
addMapping("onUpdateMoveHelper", EntityMoveHelper.class, "func_75641_c");
addMapping("setMoveTo", EntityMoveHelper.class, "func_75642_a");
addMapping("canSee", EntitySenses.class, "func_75522_a");
addMapping("clearSensingCache", EntitySenses.class, "func_75523_a");
addMapping("getLandPos", RandomPositionGenerator.class, "func_191377_b");
addMapping("moveAboveSolid", RandomPositionGenerator.class, "func_191378_a");
addMapping("generateRandomPos", RandomPositionGenerator.class, "func_191379_a");
addMapping("isWaterDestination", RandomPositionGenerator.class, "func_191380_b");
addMapping("findRandomTargetBlockAwayFrom", RandomPositionGenerator.class, "func_75461_b");
addMapping("findRandomTargetBlock", RandomPositionGenerator.class, "func_75462_c");
addMapping("findRandomTarget", RandomPositionGenerator.class, "func_75463_a");
addMapping("findRandomTargetBlockTowards", RandomPositionGenerator.class, "func_75464_a");
addMapping("getAllAttributes", AbstractAttributeMap.class, "func_111146_a");
addMapping("applyAttributeModifiers", AbstractAttributeMap.class, "func_111147_b");
addMapping("removeAttributeModifiers", AbstractAttributeMap.class, "func_111148_a");
addMapping("registerAttribute", AbstractAttributeMap.class, "func_111150_b");
addMapping("getAttributeInstance", AbstractAttributeMap.class, "func_111151_a");
addMapping("getAttributeInstanceByName", AbstractAttributeMap.class, "func_111152_a");
addMapping("createInstance", AbstractAttributeMap.class, "func_180376_c");
addMapping("onAttributeModified", AbstractAttributeMap.class, "func_180794_a");
addMapping("registerAttribute", AttributeMap.class, "func_111150_b");
addMapping("getAttributeInstance", AttributeMap.class, "func_111151_a");
addMapping("getAttributeInstanceByName", AttributeMap.class, "func_111152_a");
addMapping("getWatchedAttributes", AttributeMap.class, "func_111160_c");
addMapping("getDirtyInstances", AttributeMap.class, "func_111161_b");
addMapping("createInstance", AttributeMap.class, "func_180376_c");
addMapping("onAttributeModified", AttributeMap.class, "func_180794_a");
addMapping("getAmount", AttributeModifier.class, "func_111164_d");
addMapping("isSaved", AttributeModifier.class, "func_111165_e");
addMapping("getName", AttributeModifier.class, "func_111166_b");
addMapping("getID", AttributeModifier.class, "func_111167_a");
addMapping("setSaved", AttributeModifier.class, "func_111168_a");
addMapping("getOperation", AttributeModifier.class, "func_111169_c");
addMapping("getName", BaseAttribute.class, "func_111108_a");
addMapping("getDefaultValue", BaseAttribute.class, "func_111110_b");
addMapping("getShouldWatch", BaseAttribute.class, "func_111111_c");
addMapping("setShouldWatch", BaseAttribute.class, "func_111112_a");
addMapping("getParent", BaseAttribute.class, "func_180372_d");
addMapping("getName", IAttribute.class, "func_111108_a");
addMapping("clampValue", IAttribute.class, "func_111109_a");
addMapping("getDefaultValue", IAttribute.class, "func_111110_b");
addMapping("getShouldWatch", IAttribute.class, "func_111111_c");
addMapping("getParent", IAttribute.class, "func_180372_d");
addMapping("applyModifier", IAttributeInstance.class, "func_111121_a");
addMapping("getModifiers", IAttributeInstance.class, "func_111122_c");
addMapping("getAttribute", IAttributeInstance.class, "func_111123_a");
addMapping("removeModifier", IAttributeInstance.class, "func_111124_b");
addMapping("getBaseValue", IAttributeInstance.class, "func_111125_b");
addMapping("getAttributeValue", IAttributeInstance.class, "func_111126_e");
addMapping("getModifier", IAttributeInstance.class, "func_111127_a");
addMapping("setBaseValue", IAttributeInstance.class, "func_111128_a");
addMapping("getModifiersByOperation", IAttributeInstance.class, "func_111130_a");
addMapping("removeAllModifiers", IAttributeInstance.class, "func_142049_d");
addMapping("hasModifier", IAttributeInstance.class, "func_180374_a");
addMapping("removeModifier", IAttributeInstance.class, "func_188479_b");
addMapping("applyModifier", ModifiableAttributeInstance.class, "func_111121_a");
addMapping("getModifiers", ModifiableAttributeInstance.class, "func_111122_c");
addMapping("getAttribute", ModifiableAttributeInstance.class, "func_111123_a");
addMapping("removeModifier", ModifiableAttributeInstance.class, "func_111124_b");
addMapping("getBaseValue", ModifiableAttributeInstance.class, "func_111125_b");
addMapping("getAttributeValue", ModifiableAttributeInstance.class, "func_111126_e");
addMapping("getModifier", ModifiableAttributeInstance.class, "func_111127_a");
addMapping("setBaseValue", ModifiableAttributeInstance.class, "func_111128_a");
addMapping("computeValue", ModifiableAttributeInstance.class, "func_111129_g");
addMapping("getModifiersByOperation", ModifiableAttributeInstance.class, "func_111130_a");
addMapping("flagForUpdate", ModifiableAttributeInstance.class, "func_111131_f");
addMapping("removeAllModifiers", ModifiableAttributeInstance.class, "func_142049_d");
addMapping("hasModifier", ModifiableAttributeInstance.class, "func_180374_a");
addMapping("getAppliedModifiers", ModifiableAttributeInstance.class, "func_180375_b");
addMapping("removeModifier", ModifiableAttributeInstance.class, "func_188479_b");
addMapping("clampValue", RangedAttribute.class, "func_111109_a");
addMapping("getDescription", RangedAttribute.class, "func_111116_f");
addMapping("setDescription", RangedAttribute.class, "func_111117_a");
addMapping("applyEntityAttributes", EntityDragon.class, "func_110147_ax");
addMapping("onKillCommand", EntityDragon.class, "func_174812_G");
addMapping("getSoundCategory", EntityDragon.class, "func_184176_by");
addMapping("notifyDataManagerChange", EntityDragon.class, "func_184206_a");
addMapping("isNonBoss", EntityDragon.class, "func_184222_aU");
addMapping("canBeRidden", EntityDragon.class, "func_184228_n");
addMapping("getHurtSound", EntityDragon.class, "func_184601_bQ");
addMapping("getAmbientSound", EntityDragon.class, "func_184639_G");
addMapping("getLootTable", EntityDragon.class, "func_184647_J");
addMapping("getHeadYOffset", EntityDragon.class, "func_184662_q");
addMapping("getNearestPpIdx", EntityDragon.class, "func_184663_l");
addMapping("getFightManager", EntityDragon.class, "func_184664_cU");
addMapping("getHeadLookVec", EntityDragon.class, "func_184665_a");
addMapping("findPath", EntityDragon.class, "func_184666_a");
addMapping("getHeadPartYOffset", EntityDragon.class, "func_184667_a");
addMapping("dropExperience", EntityDragon.class, "func_184668_a");
addMapping("makePath", EntityDragon.class, "func_184669_a");
addMapping("getPhaseManager", EntityDragon.class, "func_184670_cT");
addMapping("initPathPoints", EntityDragon.class, "func_184671_o");
addMapping("onCrystalDestroyed", EntityDragon.class, "func_184672_a");
addMapping("registerFixesDragon", EntityDragon.class, "func_189755_b");
addMapping("writeEntityToNBT", EntityDragon.class, "func_70014_b");
addMapping("getParts", EntityDragon.class, "func_70021_al");
addMapping("readEntityFromNBT", EntityDragon.class, "func_70037_a");
addMapping("canBeCollidedWith", EntityDragon.class, "func_70067_L");
addMapping("entityInit", EntityDragon.class, "func_70088_a");
addMapping("attackEntityFrom", EntityDragon.class, "func_70097_a");
addMapping("getSoundVolume", EntityDragon.class, "func_70599_aP");
addMapping("onDeathUpdate", EntityDragon.class, "func_70609_aI");
addMapping("despawnEntity", EntityDragon.class, "func_70623_bb");
addMapping("onLivingUpdate", EntityDragon.class, "func_70636_d");
addMapping("addPotionEffect", EntityDragon.class, "func_70690_d");
addMapping("attackEntityFromPart", EntityDragon.class, "func_70965_a");
addMapping("updateDragonEnderCrystal", EntityDragon.class, "func_70969_j");
addMapping("collideWithEntities", EntityDragon.class, "func_70970_a");
addMapping("attackEntitiesInList", EntityDragon.class, "func_70971_b");
addMapping("destroyBlocksInAABB", EntityDragon.class, "func_70972_a");
addMapping("simplifyAngle", EntityDragon.class, "func_70973_b");
addMapping("getMovementOffsets", EntityDragon.class, "func_70974_a");
addMapping("getWorld", EntityDragon.class, "func_82194_d");
addMapping("attackDragonFrom", EntityDragon.class, "func_82195_e");
addMapping("applyEntityAttributes", EntityWither.class, "func_110147_ax");
addMapping("fall", EntityWither.class, "func_180430_e");
addMapping("canDestroyBlock", EntityWither.class, "func_181033_a");
addMapping("addTrackingPlayer", EntityWither.class, "func_184178_b");
addMapping("removeTrackingPlayer", EntityWither.class, "func_184203_c");
addMapping("isNonBoss", EntityWither.class, "func_184222_aU");
addMapping("canBeRidden", EntityWither.class, "func_184228_n");
addMapping("getHurtSound", EntityWither.class, "func_184601_bQ");
addMapping("getDeathSound", EntityWither.class, "func_184615_bR");
addMapping("getAmbientSound", EntityWither.class, "func_184639_G");
addMapping("initEntityAI", EntityWither.class, "func_184651_r");
addMapping("setSwingingArms", EntityWither.class, "func_184724_a");
addMapping("registerFixesWither", EntityWither.class, "func_189782_b");
addMapping("writeEntityToNBT", EntityWither.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityWither.class, "func_70037_a");
addMapping("getBrightnessForRender", EntityWither.class, "func_70070_b");
addMapping("entityInit", EntityWither.class, "func_70088_a");
addMapping("attackEntityFrom", EntityWither.class, "func_70097_a");
addMapping("setInWeb", EntityWither.class, "func_70110_aj");
addMapping("updateAITasks", EntityWither.class, "func_70619_bc");
addMapping("despawnEntity", EntityWither.class, "func_70623_bb");
addMapping("dropFewItems", EntityWither.class, "func_70628_a");
addMapping("onLivingUpdate", EntityWither.class, "func_70636_d");
addMapping("getCreatureAttribute", EntityWither.class, "func_70668_bt");
addMapping("addPotionEffect", EntityWither.class, "func_70690_d");
addMapping("attackEntityWithRangedAttack", EntityWither.class, "func_82196_d");
addMapping("getWatchedTargetId", EntityWither.class, "func_82203_t");
addMapping("rotlerp", EntityWither.class, "func_82204_b");
addMapping("isArmored", EntityWither.class, "func_82205_o");
addMapping("ignite", EntityWither.class, "func_82206_m");
addMapping("getHeadYRotation", EntityWither.class, "func_82207_a");
addMapping("getHeadY", EntityWither.class, "func_82208_v");
addMapping("launchWitherSkullToCoords", EntityWither.class, "func_82209_a");
addMapping("getHeadXRotation", EntityWither.class, "func_82210_r");
addMapping("updateWatchedTargetId", EntityWither.class, "func_82211_c");
addMapping("getInvulTime", EntityWither.class, "func_82212_n");
addMapping("getHeadZ", EntityWither.class, "func_82213_w");
addMapping("getHeadX", EntityWither.class, "func_82214_u");
addMapping("setInvulTime", EntityWither.class, "func_82215_s");
addMapping("launchWitherSkullToEntity", EntityWither.class, "func_82216_a");
addMapping("setCustomNameTag", EntityWither.class, "func_96094_a");
addMapping("getTargetLocation", IPhase.class, "func_188650_g");
addMapping("getMaxRiseOrFall", IPhase.class, "func_188651_f");
addMapping("getType", IPhase.class, "func_188652_i");
addMapping("getYawFactor", IPhase.class, "func_188653_h");
addMapping("getIsStationary", IPhase.class, "func_188654_a");
addMapping("onCrystalDestroyed", IPhase.class, "func_188655_a");
addMapping("getAdjustedDamage", IPhase.class, "func_188656_a");
addMapping("doClientRenderEffects", IPhase.class, "func_188657_b");
addMapping("removeAreaEffect", IPhase.class, "func_188658_e");
addMapping("doLocalUpdate", IPhase.class, "func_188659_c");
addMapping("initPhase", IPhase.class, "func_188660_d");
addMapping("getTargetLocation", PhaseBase.class, "func_188650_g");
addMapping("getMaxRiseOrFall", PhaseBase.class, "func_188651_f");
addMapping("getYawFactor", PhaseBase.class, "func_188653_h");
addMapping("getIsStationary", PhaseBase.class, "func_188654_a");
addMapping("onCrystalDestroyed", PhaseBase.class, "func_188655_a");
addMapping("getAdjustedDamage", PhaseBase.class, "func_188656_a");
addMapping("doClientRenderEffects", PhaseBase.class, "func_188657_b");
addMapping("removeAreaEffect", PhaseBase.class, "func_188658_e");
addMapping("doLocalUpdate", PhaseBase.class, "func_188659_c");
addMapping("initPhase", PhaseBase.class, "func_188660_d");
addMapping("getTargetLocation", PhaseChargingPlayer.class, "func_188650_g");
addMapping("getMaxRiseOrFall", PhaseChargingPlayer.class, "func_188651_f");
addMapping("getType", PhaseChargingPlayer.class, "func_188652_i");
addMapping("doLocalUpdate", PhaseChargingPlayer.class, "func_188659_c");
addMapping("initPhase", PhaseChargingPlayer.class, "func_188660_d");
addMapping("setTarget", PhaseChargingPlayer.class, "func_188668_a");
addMapping("getTargetLocation", PhaseDying.class, "func_188650_g");
addMapping("getMaxRiseOrFall", PhaseDying.class, "func_188651_f");
addMapping("getType", PhaseDying.class, "func_188652_i");
addMapping("doClientRenderEffects", PhaseDying.class, "func_188657_b");
addMapping("doLocalUpdate", PhaseDying.class, "func_188659_c");
addMapping("initPhase", PhaseDying.class, "func_188660_d");
addMapping("getTargetLocation", PhaseHoldingPattern.class, "func_188650_g");
addMapping("getType", PhaseHoldingPattern.class, "func_188652_i");
addMapping("onCrystalDestroyed", PhaseHoldingPattern.class, "func_188655_a");
addMapping("doLocalUpdate", PhaseHoldingPattern.class, "func_188659_c");
addMapping("initPhase", PhaseHoldingPattern.class, "func_188660_d");
addMapping("strafePlayer", PhaseHoldingPattern.class, "func_188674_a");
addMapping("findNewTarget", PhaseHoldingPattern.class, "func_188675_j");
addMapping("navigateToNextPathNode", PhaseHoldingPattern.class, "func_188676_k");
addMapping("getTargetLocation", PhaseHover.class, "func_188650_g");
addMapping("getMaxRiseOrFall", PhaseHover.class, "func_188651_f");
addMapping("getType", PhaseHover.class, "func_188652_i");
addMapping("getIsStationary", PhaseHover.class, "func_188654_a");
addMapping("doLocalUpdate", PhaseHover.class, "func_188659_c");
addMapping("initPhase", PhaseHover.class, "func_188660_d");
addMapping("getTargetLocation", PhaseLanding.class, "func_188650_g");
addMapping("getMaxRiseOrFall", PhaseLanding.class, "func_188651_f");
addMapping("getType", PhaseLanding.class, "func_188652_i");
addMapping("getYawFactor", PhaseLanding.class, "func_188653_h");
addMapping("doClientRenderEffects", PhaseLanding.class, "func_188657_b");
addMapping("doLocalUpdate", PhaseLanding.class, "func_188659_c");
addMapping("initPhase", PhaseLanding.class, "func_188660_d");
addMapping("getTargetLocation", PhaseLandingApproach.class, "func_188650_g");
addMapping("getType", PhaseLandingApproach.class, "func_188652_i");
addMapping("doLocalUpdate", PhaseLandingApproach.class, "func_188659_c");
addMapping("initPhase", PhaseLandingApproach.class, "func_188660_d");
addMapping("findNewTarget", PhaseLandingApproach.class, "func_188681_j");
addMapping("navigateToNextPathNode", PhaseLandingApproach.class, "func_188682_k");
addMapping("create", PhaseList.class, "func_188735_a");
addMapping("createPhase", PhaseList.class, "func_188736_a");
addMapping("getConstructor", PhaseList.class, "func_188737_a");
addMapping("getById", PhaseList.class, "func_188738_a");
addMapping("getTotalPhases", PhaseList.class, "func_188739_c");
addMapping("getId", PhaseList.class, "func_188740_b");
addMapping("getCurrentPhase", PhaseManager.class, "func_188756_a");
addMapping("getPhase", PhaseManager.class, "func_188757_b");
addMapping("setPhase", PhaseManager.class, "func_188758_a");
addMapping("getType", PhaseSittingAttacking.class, "func_188652_i");
addMapping("doClientRenderEffects", PhaseSittingAttacking.class, "func_188657_b");
addMapping("doLocalUpdate", PhaseSittingAttacking.class, "func_188659_c");
addMapping("initPhase", PhaseSittingAttacking.class, "func_188660_d");
addMapping("getIsStationary", PhaseSittingBase.class, "func_188654_a");
addMapping("getAdjustedDamage", PhaseSittingBase.class, "func_188656_a");
addMapping("getType", PhaseSittingFlaming.class, "func_188652_i");
addMapping("doClientRenderEffects", PhaseSittingFlaming.class, "func_188657_b");
addMapping("removeAreaEffect", PhaseSittingFlaming.class, "func_188658_e");
addMapping("doLocalUpdate", PhaseSittingFlaming.class, "func_188659_c");
addMapping("initPhase", PhaseSittingFlaming.class, "func_188660_d");
addMapping("resetFlameCount", PhaseSittingFlaming.class, "func_188663_j");
addMapping("getType", PhaseSittingScanning.class, "func_188652_i");
addMapping("doLocalUpdate", PhaseSittingScanning.class, "func_188659_c");
addMapping("initPhase", PhaseSittingScanning.class, "func_188660_d");
addMapping("getTargetLocation", PhaseStrafePlayer.class, "func_188650_g");
addMapping("getType", PhaseStrafePlayer.class, "func_188652_i");
addMapping("doLocalUpdate", PhaseStrafePlayer.class, "func_188659_c");
addMapping("initPhase", PhaseStrafePlayer.class, "func_188660_d");
addMapping("setTarget", PhaseStrafePlayer.class, "func_188686_a");
addMapping("findNewTarget", PhaseStrafePlayer.class, "func_188687_j");
addMapping("navigateToNextPathNode", PhaseStrafePlayer.class, "func_188688_k");
addMapping("getTargetLocation", PhaseTakeoff.class, "func_188650_g");
addMapping("getType", PhaseTakeoff.class, "func_188652_i");
addMapping("doLocalUpdate", PhaseTakeoff.class, "func_188659_c");
addMapping("initPhase", PhaseTakeoff.class, "func_188660_d");
addMapping("findNewTarget", PhaseTakeoff.class, "func_188695_j");
addMapping("navigateToNextPathNode", PhaseTakeoff.class, "func_188696_k");
addMapping("getSoundCategory", EntityLightningBolt.class, "func_184176_by");
addMapping("writeEntityToNBT", EntityLightningBolt.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityLightningBolt.class, "func_70037_a");
addMapping("onUpdate", EntityLightningBolt.class, "func_70071_h_");
addMapping("entityInit", EntityLightningBolt.class, "func_70088_a");
addMapping("updateDistance", EntityArmorStand.class, "func_110146_f");
addMapping("onKillCommand", EntityArmorStand.class, "func_174812_G");
addMapping("replaceItemInInventory", EntityArmorStand.class, "func_174820_d");
addMapping("updatePotionMetadata", EntityArmorStand.class, "func_175135_B");
addMapping("getShowArms", EntityArmorStand.class, "func_175402_q");
addMapping("getLeftLegRotation", EntityArmorStand.class, "func_175403_w");
addMapping("getLeftArmRotation", EntityArmorStand.class, "func_175404_u");
addMapping("setLeftArmRotation", EntityArmorStand.class, "func_175405_c");
addMapping("damageArmorStand", EntityArmorStand.class, "func_175406_a");
addMapping("getRightLegRotation", EntityArmorStand.class, "func_175407_x");
addMapping("getBodyRotation", EntityArmorStand.class, "func_175408_t");
addMapping("dropContents", EntityArmorStand.class, "func_175409_C");
addMapping("isSmall", EntityArmorStand.class, "func_175410_n");
addMapping("getRightArmRotation", EntityArmorStand.class, "func_175411_v");
addMapping("playParticles", EntityArmorStand.class, "func_175412_z");
addMapping("setShowArms", EntityArmorStand.class, "func_175413_k");
addMapping("hasNoBasePlate", EntityArmorStand.class, "func_175414_r");
addMapping("setHeadRotation", EntityArmorStand.class, "func_175415_a");
addMapping("writePoseToNBT", EntityArmorStand.class, "func_175416_h");
addMapping("setLeftLegRotation", EntityArmorStand.class, "func_175417_e");
addMapping("getHeadRotation", EntityArmorStand.class, "func_175418_s");
addMapping("readPoseFromNBT", EntityArmorStand.class, "func_175419_y");
addMapping("setSmall", EntityArmorStand.class, "func_175420_a");
addMapping("dropBlock", EntityArmorStand.class, "func_175421_A");
addMapping("setBodyRotation", EntityArmorStand.class, "func_175424_b");
addMapping("setNoBasePlate", EntityArmorStand.class, "func_175426_l");
addMapping("setRightLegRotation", EntityArmorStand.class, "func_175427_f");
addMapping("setRightArmRotation", EntityArmorStand.class, "func_175428_d");
addMapping("isImmuneToExplosions", EntityArmorStand.class, "func_180427_aV");
addMapping("setRenderYawOffset", EntityArmorStand.class, "func_181013_g");
addMapping("hasMarker", EntityArmorStand.class, "func_181026_s");
addMapping("setMarker", EntityArmorStand.class, "func_181027_m");
addMapping("updateBoundingBox", EntityArmorStand.class, "func_181550_a");
addMapping("getPushReaction", EntityArmorStand.class, "func_184192_z");
addMapping("getArmorInventoryList", EntityArmorStand.class, "func_184193_aE");
addMapping("applyPlayerInteraction", EntityArmorStand.class, "func_184199_a");
addMapping("setItemStackToSlot", EntityArmorStand.class, "func_184201_a");
addMapping("notifyDataManagerChange", EntityArmorStand.class, "func_184206_a");
addMapping("getHeldEquipment", EntityArmorStand.class, "func_184214_aD");
addMapping("getItemStackFromSlot", EntityArmorStand.class, "func_184582_a");
addMapping("getFallSound", EntityArmorStand.class, "func_184588_d");
addMapping("getPrimaryHand", EntityArmorStand.class, "func_184591_cq");
addMapping("getHurtSound", EntityArmorStand.class, "func_184601_bQ");
addMapping("canBeHitWithPotion", EntityArmorStand.class, "func_184603_cC");
addMapping("getDeathSound", EntityArmorStand.class, "func_184615_bR");
addMapping("swapItem", EntityArmorStand.class, "func_184795_a");
addMapping("isDisabled", EntityArmorStand.class, "func_184796_b");
addMapping("setBit", EntityArmorStand.class, "func_184797_a");
addMapping("registerFixesArmorStand", EntityArmorStand.class, "func_189805_a");
addMapping("attackable", EntityArmorStand.class, "func_190631_cK");
addMapping("getClickedSlot", EntityArmorStand.class, "func_190772_a");
addMapping("playBrokenSound", EntityArmorStand.class, "func_190773_I");
addMapping("travel", EntityArmorStand.class, "func_191986_a");
addMapping("writeEntityToNBT", EntityArmorStand.class, "func_70014_b");
addMapping("getYOffset", EntityArmorStand.class, "func_70033_W");
addMapping("setRotationYawHead", EntityArmorStand.class, "func_70034_d");
addMapping("readEntityFromNBT", EntityArmorStand.class, "func_70037_a");
addMapping("getEyeHeight", EntityArmorStand.class, "func_70047_e");
addMapping("canBeCollidedWith", EntityArmorStand.class, "func_70067_L");
addMapping("onUpdate", EntityArmorStand.class, "func_70071_h_");
addMapping("onStruckByLightning", EntityArmorStand.class, "func_70077_a");
addMapping("entityInit", EntityArmorStand.class, "func_70088_a");
addMapping("attackEntityFrom", EntityArmorStand.class, "func_70097_a");
addMapping("handleStatusUpdate", EntityArmorStand.class, "func_70103_a");
addMapping("canBePushed", EntityArmorStand.class, "func_70104_M");
addMapping("setSize", EntityArmorStand.class, "func_70105_a");
addMapping("isInRangeToRenderDist", EntityArmorStand.class, "func_70112_a");
addMapping("isServerWorld", EntityArmorStand.class, "func_70613_aW");
addMapping("isChild", EntityArmorStand.class, "func_70631_g_");
addMapping("setInvisible", EntityArmorStand.class, "func_82142_c");
addMapping("collideWithEntity", EntityArmorStand.class, "func_82167_n");
addMapping("collideWithNearbyEntities", EntityArmorStand.class, "func_85033_bc");
addMapping("setPositionAndRotationDirect", EntityBoat.class, "func_180426_a");
addMapping("getAdjustedHorizontalFacing", EntityBoat.class, "func_184172_bi");
addMapping("getControllingPassenger", EntityBoat.class, "func_184179_bs");
addMapping("applyOrientationToEntity", EntityBoat.class, "func_184190_l");
addMapping("canFitPassenger", EntityBoat.class, "func_184219_q");
addMapping("processInitialInteract", EntityBoat.class, "func_184230_a");
addMapping("updateFallState", EntityBoat.class, "func_184231_a");
addMapping("updatePassenger", EntityBoat.class, "func_184232_k");
addMapping("getBoatGlide", EntityBoat.class, "func_184441_l");
addMapping("updateInputs", EntityBoat.class, "func_184442_a");
addMapping("controlBoat", EntityBoat.class, "func_184443_x");
addMapping("getUnderwaterStatus", EntityBoat.class, "func_184444_v");
addMapping("setPaddleState", EntityBoat.class, "func_184445_a");
addMapping("checkInWater", EntityBoat.class, "func_184446_u");
addMapping("tickLerp", EntityBoat.class, "func_184447_s");
addMapping("getRowingTime", EntityBoat.class, "func_184448_a");
addMapping("getBoatStatus", EntityBoat.class, "func_184449_t");
addMapping("updateMotion", EntityBoat.class, "func_184450_w");
addMapping("getWaterLevelAbove", EntityBoat.class, "func_184451_k");
addMapping("getBoatType", EntityBoat.class, "func_184453_r");
addMapping("applyYawToEntity", EntityBoat.class, "func_184454_a");
addMapping("getItemBoat", EntityBoat.class, "func_184455_j");
addMapping("getPaddleState", EntityBoat.class, "func_184457_a");
addMapping("setBoatType", EntityBoat.class, "func_184458_a");
addMapping("getPaddleSound", EntityBoat.class, "func_193047_k");
addMapping("writeEntityToNBT", EntityBoat.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityBoat.class, "func_70037_a");
addMapping("canTriggerWalking", EntityBoat.class, "func_70041_e_");
addMapping("getMountedYOffset", EntityBoat.class, "func_70042_X");
addMapping("getCollisionBoundingBox", EntityBoat.class, "func_70046_E");
addMapping("performHurtAnimation", EntityBoat.class, "func_70057_ab");
addMapping("canBeCollidedWith", EntityBoat.class, "func_70067_L");
addMapping("onUpdate", EntityBoat.class, "func_70071_h_");
addMapping("entityInit", EntityBoat.class, "func_70088_a");
addMapping("attackEntityFrom", EntityBoat.class, "func_70097_a");
addMapping("canBePushed", EntityBoat.class, "func_70104_M");
addMapping("applyEntityCollision", EntityBoat.class, "func_70108_f");
addMapping("getCollisionBox", EntityBoat.class, "func_70114_g");
addMapping("setTimeSinceHit", EntityBoat.class, "func_70265_b");
addMapping("setDamageTaken", EntityBoat.class, "func_70266_a");
addMapping("getForwardDirection", EntityBoat.class, "func_70267_i");
addMapping("getTimeSinceHit", EntityBoat.class, "func_70268_h");
addMapping("setForwardDirection", EntityBoat.class, "func_70269_c");
addMapping("getDamageTaken", EntityBoat.class, "func_70271_g");
addMapping("onKillCommand", EntityEnderCrystal.class, "func_174812_G");
addMapping("setBeamTarget", EntityEnderCrystal.class, "func_184516_a");
addMapping("setShowBottom", EntityEnderCrystal.class, "func_184517_a");
addMapping("getBeamTarget", EntityEnderCrystal.class, "func_184518_j");
addMapping("onCrystalDestroyed", EntityEnderCrystal.class, "func_184519_a");
addMapping("shouldShowBottom", EntityEnderCrystal.class, "func_184520_k");
addMapping("writeEntityToNBT", EntityEnderCrystal.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityEnderCrystal.class, "func_70037_a");
addMapping("canTriggerWalking", EntityEnderCrystal.class, "func_70041_e_");
addMapping("canBeCollidedWith", EntityEnderCrystal.class, "func_70067_L");
addMapping("onUpdate", EntityEnderCrystal.class, "func_70071_h_");
addMapping("entityInit", EntityEnderCrystal.class, "func_70088_a");
addMapping("attackEntityFrom", EntityEnderCrystal.class, "func_70097_a");
addMapping("isInRangeToRenderDist", EntityEnderCrystal.class, "func_70112_a");
addMapping("moveTowards", EntityEnderEye.class, "func_180465_a");
addMapping("getBrightness", EntityEnderEye.class, "func_70013_c");
addMapping("writeEntityToNBT", EntityEnderEye.class, "func_70014_b");
addMapping("setVelocity", EntityEnderEye.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityEnderEye.class, "func_70037_a");
addMapping("getBrightnessForRender", EntityEnderEye.class, "func_70070_b");
addMapping("onUpdate", EntityEnderEye.class, "func_70071_h_");
addMapping("canBeAttackedWithItem", EntityEnderEye.class, "func_70075_an");
addMapping("entityInit", EntityEnderEye.class, "func_70088_a");
addMapping("isInRangeToRenderDist", EntityEnderEye.class, "func_70112_a");
addMapping("registerFixesEnderPearl", EntityEnderPearl.class, "func_189663_a");
addMapping("onUpdate", EntityEnderPearl.class, "func_70071_h_");
addMapping("onImpact", EntityEnderPearl.class, "func_70184_a");
addMapping("registerFixesExpBottle", EntityExpBottle.class, "func_189666_a");
addMapping("onImpact", EntityExpBottle.class, "func_70184_a");
addMapping("getGravityVelocity", EntityExpBottle.class, "func_70185_h");
addMapping("setHurtEntities", EntityFallingBlock.class, "func_145806_a");
addMapping("getWorldObj", EntityFallingBlock.class, "func_145807_e");
addMapping("getBlock", EntityFallingBlock.class, "func_175131_l");
addMapping("fall", EntityFallingBlock.class, "func_180430_e");
addMapping("ignoreItemEntityData", EntityFallingBlock.class, "func_184213_bq");
addMapping("setOrigin", EntityFallingBlock.class, "func_184530_a");
addMapping("getOrigin", EntityFallingBlock.class, "func_184531_j");
addMapping("registerFixesFallingBlock", EntityFallingBlock.class, "func_189741_a");
addMapping("writeEntityToNBT", EntityFallingBlock.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityFallingBlock.class, "func_70037_a");
addMapping("canTriggerWalking", EntityFallingBlock.class, "func_70041_e_");
addMapping("canBeCollidedWith", EntityFallingBlock.class, "func_70067_L");
addMapping("onUpdate", EntityFallingBlock.class, "func_70071_h_");
addMapping("canBeAttackedWithItem", EntityFallingBlock.class, "func_70075_an");
addMapping("entityInit", EntityFallingBlock.class, "func_70088_a");
addMapping("addEntityCrashInfo", EntityFallingBlock.class, "func_85029_a");
addMapping("canRenderOnFire", EntityFallingBlock.class, "func_90999_ad");
addMapping("isInRangeToRender3d", EntityFireworkRocket.class, "func_145770_h");
addMapping("registerFixesFireworkRocket", EntityFireworkRocket.class, "func_189656_a");
addMapping("dealExplosionDamage", EntityFireworkRocket.class, "func_191510_k");
addMapping("isAttachedToEntity", EntityFireworkRocket.class, "func_191511_j");
addMapping("writeEntityToNBT", EntityFireworkRocket.class, "func_70014_b");
addMapping("setVelocity", EntityFireworkRocket.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityFireworkRocket.class, "func_70037_a");
addMapping("onUpdate", EntityFireworkRocket.class, "func_70071_h_");
addMapping("canBeAttackedWithItem", EntityFireworkRocket.class, "func_70075_an");
addMapping("entityInit", EntityFireworkRocket.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityFireworkRocket.class, "func_70103_a");
addMapping("isInRangeToRenderDist", EntityFireworkRocket.class, "func_70112_a");
addMapping("setOwner", EntityItem.class, "func_145797_a");
addMapping("getOwner", EntityItem.class, "func_145798_i");
addMapping("setThrower", EntityItem.class, "func_145799_b");
addMapping("getThrower", EntityItem.class, "func_145800_j");
addMapping("setPickupDelay", EntityItem.class, "func_174867_a");
addMapping("setNoPickupDelay", EntityItem.class, "func_174868_q");
addMapping("setDefaultPickupDelay", EntityItem.class, "func_174869_p");
addMapping("makeFakeItem", EntityItem.class, "func_174870_v");
addMapping("setInfinitePickupDelay", EntityItem.class, "func_174871_r");
addMapping("getAge", EntityItem.class, "func_174872_o");
addMapping("setNoDespawn", EntityItem.class, "func_174873_u");
addMapping("cannotPickup", EntityItem.class, "func_174874_s");
addMapping("changeDimension", EntityItem.class, "func_184204_a");
addMapping("registerFixesItem", EntityItem.class, "func_189742_a");
addMapping("getName", EntityItem.class, "func_70005_c_");
addMapping("writeEntityToNBT", EntityItem.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityItem.class, "func_70037_a");
addMapping("canTriggerWalking", EntityItem.class, "func_70041_e_");
addMapping("onUpdate", EntityItem.class, "func_70071_h_");
addMapping("handleWaterMovement", EntityItem.class, "func_70072_I");
addMapping("canBeAttackedWithItem", EntityItem.class, "func_70075_an");
addMapping("dealFireDamage", EntityItem.class, "func_70081_e");
addMapping("entityInit", EntityItem.class, "func_70088_a");
addMapping("attackEntityFrom", EntityItem.class, "func_70097_a");
addMapping("onCollideWithPlayer", EntityItem.class, "func_70100_b_");
addMapping("setAgeToCreativeDespawnTime", EntityItem.class, "func_70288_d");
addMapping("combineItems", EntityItem.class, "func_70289_a");
addMapping("searchForOtherItemsNearby", EntityItem.class, "func_85054_d");
addMapping("setItem", EntityItem.class, "func_92058_a");
addMapping("getItem", EntityItem.class, "func_92059_d");
addMapping("onBroken", EntityItemFrame.class, "func_110128_b");
addMapping("removeFrameFromMap", EntityItemFrame.class, "func_110131_b");
addMapping("dropItemOrSelf", EntityItemFrame.class, "func_146065_b");
addMapping("setDisplayedItemWithUpdate", EntityItemFrame.class, "func_174864_a");
addMapping("setRotation", EntityItemFrame.class, "func_174865_a");
addMapping("getAnalogOutput", EntityItemFrame.class, "func_174866_q");
addMapping("notifyDataManagerChange", EntityItemFrame.class, "func_184206_a");
addMapping("processInitialInteract", EntityItemFrame.class, "func_184230_a");
addMapping("playPlaceSound", EntityItemFrame.class, "func_184523_o");
addMapping("registerFixesItemFrame", EntityItemFrame.class, "func_189738_a");
addMapping("writeEntityToNBT", EntityItemFrame.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityItemFrame.class, "func_70037_a");
addMapping("entityInit", EntityItemFrame.class, "func_70088_a");
addMapping("attackEntityFrom", EntityItemFrame.class, "func_70097_a");
addMapping("getCollisionBorderSize", EntityItemFrame.class, "func_70111_Y");
addMapping("isInRangeToRenderDist", EntityItemFrame.class, "func_70112_a");
addMapping("getWidthPixels", EntityItemFrame.class, "func_82329_d");
addMapping("getHeightPixels", EntityItemFrame.class, "func_82330_g");
addMapping("getRotation", EntityItemFrame.class, "func_82333_j");
addMapping("setDisplayedItem", EntityItemFrame.class, "func_82334_a");
addMapping("getDisplayedItem", EntityItemFrame.class, "func_82335_i");
addMapping("setItemRotation", EntityItemFrame.class, "func_82336_g");
addMapping("getDisplayTile", EntityMinecart.class, "func_174897_t");
addMapping("getMaximumSpeed", EntityMinecart.class, "func_174898_m");
addMapping("setDisplayTile", EntityMinecart.class, "func_174899_a");
addMapping("setPositionAndRotationDirect", EntityMinecart.class, "func_180426_a");
addMapping("getDefaultDisplayTile", EntityMinecart.class, "func_180457_u");
addMapping("moveDerailedMinecart", EntityMinecart.class, "func_180459_n");
addMapping("moveAlongTrack", EntityMinecart.class, "func_180460_a");
addMapping("getAdjustedHorizontalFacing", EntityMinecart.class, "func_184172_bi");
addMapping("getRenderBoundingBox", EntityMinecart.class, "func_184177_bl");
addMapping("create", EntityMinecart.class, "func_184263_a");
addMapping("getType", EntityMinecart.class, "func_184264_v");
addMapping("registerFixesMinecart", EntityMinecart.class, "func_189669_a");
addMapping("writeEntityToNBT", EntityMinecart.class, "func_70014_b");
addMapping("setVelocity", EntityMinecart.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityMinecart.class, "func_70037_a");
addMapping("canTriggerWalking", EntityMinecart.class, "func_70041_e_");
addMapping("getMountedYOffset", EntityMinecart.class, "func_70042_X");
addMapping("getCollisionBoundingBox", EntityMinecart.class, "func_70046_E");
addMapping("performHurtAnimation", EntityMinecart.class, "func_70057_ab");
addMapping("canBeCollidedWith", EntityMinecart.class, "func_70067_L");
addMapping("onUpdate", EntityMinecart.class, "func_70071_h_");
addMapping("entityInit", EntityMinecart.class, "func_70088_a");
addMapping("attackEntityFrom", EntityMinecart.class, "func_70097_a");
addMapping("canBePushed", EntityMinecart.class, "func_70104_M");
addMapping("setPosition", EntityMinecart.class, "func_70107_b");
addMapping("applyEntityCollision", EntityMinecart.class, "func_70108_f");
addMapping("getCollisionBox", EntityMinecart.class, "func_70114_g");
addMapping("getPos", EntityMinecart.class, "func_70489_a");
addMapping("getDamage", EntityMinecart.class, "func_70491_i");
addMapping("setDamage", EntityMinecart.class, "func_70492_c");
addMapping("getRollingDirection", EntityMinecart.class, "func_70493_k");
addMapping("setRollingDirection", EntityMinecart.class, "func_70494_i");
addMapping("getPosOffset", EntityMinecart.class, "func_70495_a");
addMapping("getRollingAmplitude", EntityMinecart.class, "func_70496_j");
addMapping("setRollingAmplitude", EntityMinecart.class, "func_70497_h");
addMapping("getDefaultDisplayTileOffset", EntityMinecart.class, "func_94085_r");
addMapping("setDisplayTileOffset", EntityMinecart.class, "func_94086_l");
addMapping("killMinecart", EntityMinecart.class, "func_94095_a");
addMapping("setHasDisplayTile", EntityMinecart.class, "func_94096_e");
addMapping("getDisplayTileOffset", EntityMinecart.class, "func_94099_q");
addMapping("hasDisplayTile", EntityMinecart.class, "func_94100_s");
addMapping("applyDrag", EntityMinecart.class, "func_94101_h");
addMapping("onActivatorRailPass", EntityMinecart.class, "func_96095_a");
addMapping("getGuiID", EntityMinecartChest.class, "func_174875_k");
addMapping("createContainer", EntityMinecartChest.class, "func_174876_a");
addMapping("getDefaultDisplayTile", EntityMinecartChest.class, "func_180457_u");
addMapping("getType", EntityMinecartChest.class, "func_184264_v");
addMapping("registerFixesMinecartChest", EntityMinecartChest.class, "func_189681_a");
addMapping("getSizeInventory", EntityMinecartChest.class, "func_70302_i_");
addMapping("getDefaultDisplayTileOffset", EntityMinecartChest.class, "func_94085_r");
addMapping("killMinecart", EntityMinecartChest.class, "func_94095_a");
addMapping("getCommandBlockLogic", EntityMinecartCommandBlock.class, "func_145822_e");
addMapping("getDefaultDisplayTile", EntityMinecartCommandBlock.class, "func_180457_u");
addMapping("notifyDataManagerChange", EntityMinecartCommandBlock.class, "func_184206_a");
addMapping("ignoreItemEntityData", EntityMinecartCommandBlock.class, "func_184213_bq");
addMapping("processInitialInteract", EntityMinecartCommandBlock.class, "func_184230_a");
addMapping("getType", EntityMinecartCommandBlock.class, "func_184264_v");
addMapping("registerFixesMinecartCommand", EntityMinecartCommandBlock.class, "func_189670_a");
addMapping("writeEntityToNBT", EntityMinecartCommandBlock.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartCommandBlock.class, "func_70037_a");
addMapping("entityInit", EntityMinecartCommandBlock.class, "func_70088_a");
addMapping("onActivatorRailPass", EntityMinecartCommandBlock.class, "func_96095_a");
addMapping("setField", EntityMinecartContainer.class, "func_174885_b");
addMapping("closeInventory", EntityMinecartContainer.class, "func_174886_c");
addMapping("getField", EntityMinecartContainer.class, "func_174887_a_");
addMapping("clear", EntityMinecartContainer.class, "func_174888_l");
addMapping("openInventory", EntityMinecartContainer.class, "func_174889_b");
addMapping("getFieldCount", EntityMinecartContainer.class, "func_174890_g");
addMapping("getLockCode", EntityMinecartContainer.class, "func_174891_i");
addMapping("setLockCode", EntityMinecartContainer.class, "func_174892_a");
addMapping("isLocked", EntityMinecartContainer.class, "func_174893_q_");
addMapping("setDropItemsWhenDead", EntityMinecartContainer.class, "func_184174_b");
addMapping("changeDimension", EntityMinecartContainer.class, "func_184204_a");
addMapping("processInitialInteract", EntityMinecartContainer.class, "func_184230_a");
addMapping("getLootTable", EntityMinecartContainer.class, "func_184276_b");
addMapping("addLoot", EntityMinecartContainer.class, "func_184288_f");
addMapping("setLootTable", EntityMinecartContainer.class, "func_184289_a");
addMapping("addDataFixers", EntityMinecartContainer.class, "func_190574_b");
addMapping("isEmpty", EntityMinecartContainer.class, "func_191420_l");
addMapping("writeEntityToNBT", EntityMinecartContainer.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartContainer.class, "func_70037_a");
addMapping("setDead", EntityMinecartContainer.class, "func_70106_y");
addMapping("markDirty", EntityMinecartContainer.class, "func_70296_d");
addMapping("getInventoryStackLimit", EntityMinecartContainer.class, "func_70297_j_");
addMapping("decrStackSize", EntityMinecartContainer.class, "func_70298_a");
addMapping("setInventorySlotContents", EntityMinecartContainer.class, "func_70299_a");
addMapping("isUsableByPlayer", EntityMinecartContainer.class, "func_70300_a");
addMapping("getStackInSlot", EntityMinecartContainer.class, "func_70301_a");
addMapping("removeStackFromSlot", EntityMinecartContainer.class, "func_70304_b");
addMapping("isItemValidForSlot", EntityMinecartContainer.class, "func_94041_b");
addMapping("killMinecart", EntityMinecartContainer.class, "func_94095_a");
addMapping("applyDrag", EntityMinecartContainer.class, "func_94101_h");
addMapping("processInitialInteract", EntityMinecartEmpty.class, "func_184230_a");
addMapping("getType", EntityMinecartEmpty.class, "func_184264_v");
addMapping("registerFixesMinecartEmpty", EntityMinecartEmpty.class, "func_189673_a");
addMapping("onActivatorRailPass", EntityMinecartEmpty.class, "func_96095_a");
addMapping("getMaximumSpeed", EntityMinecartFurnace.class, "func_174898_m");
addMapping("getDefaultDisplayTile", EntityMinecartFurnace.class, "func_180457_u");
addMapping("moveAlongTrack", EntityMinecartFurnace.class, "func_180460_a");
addMapping("processInitialInteract", EntityMinecartFurnace.class, "func_184230_a");
addMapping("getType", EntityMinecartFurnace.class, "func_184264_v");
addMapping("registerFixesMinecartFurnace", EntityMinecartFurnace.class, "func_189671_a");
addMapping("writeEntityToNBT", EntityMinecartFurnace.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartFurnace.class, "func_70037_a");
addMapping("onUpdate", EntityMinecartFurnace.class, "func_70071_h_");
addMapping("entityInit", EntityMinecartFurnace.class, "func_70088_a");
addMapping("killMinecart", EntityMinecartFurnace.class, "func_94095_a");
addMapping("applyDrag", EntityMinecartFurnace.class, "func_94101_h");
addMapping("setMinecartPowered", EntityMinecartFurnace.class, "func_94107_f");
addMapping("isMinecartPowered", EntityMinecartFurnace.class, "func_94108_c");
addMapping("getWorld", EntityMinecartHopper.class, "func_145831_w");
addMapping("getGuiID", EntityMinecartHopper.class, "func_174875_k");
addMapping("createContainer", EntityMinecartHopper.class, "func_174876_a");
addMapping("getDefaultDisplayTile", EntityMinecartHopper.class, "func_180457_u");
addMapping("processInitialInteract", EntityMinecartHopper.class, "func_184230_a");
addMapping("getType", EntityMinecartHopper.class, "func_184264_v");
addMapping("registerFixesMinecartHopper", EntityMinecartHopper.class, "func_189682_a");
addMapping("writeEntityToNBT", EntityMinecartHopper.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartHopper.class, "func_70037_a");
addMapping("onUpdate", EntityMinecartHopper.class, "func_70071_h_");
addMapping("getSizeInventory", EntityMinecartHopper.class, "func_70302_i_");
addMapping("getDefaultDisplayTileOffset", EntityMinecartHopper.class, "func_94085_r");
addMapping("killMinecart", EntityMinecartHopper.class, "func_94095_a");
addMapping("onActivatorRailPass", EntityMinecartHopper.class, "func_96095_a");
addMapping("getXPos", EntityMinecartHopper.class, "func_96107_aA");
addMapping("getZPos", EntityMinecartHopper.class, "func_96108_aC");
addMapping("getYPos", EntityMinecartHopper.class, "func_96109_aB");
addMapping("setBlocked", EntityMinecartHopper.class, "func_96110_f");
addMapping("getBlocked", EntityMinecartHopper.class, "func_96111_ay");
addMapping("captureDroppedItems", EntityMinecartHopper.class, "func_96112_aD");
addMapping("setTransferTicker", EntityMinecartHopper.class, "func_98042_n");
addMapping("canTransfer", EntityMinecartHopper.class, "func_98043_aE");
addMapping("getDefaultDisplayTile", EntityMinecartMobSpawner.class, "func_180457_u");
addMapping("getType", EntityMinecartMobSpawner.class, "func_184264_v");
addMapping("registerFixesMinecartMobSpawner", EntityMinecartMobSpawner.class, "func_189672_a");
addMapping("writeEntityToNBT", EntityMinecartMobSpawner.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartMobSpawner.class, "func_70037_a");
addMapping("onUpdate", EntityMinecartMobSpawner.class, "func_70071_h_");
addMapping("handleStatusUpdate", EntityMinecartMobSpawner.class, "func_70103_a");
addMapping("canExplosionDestroyBlock", EntityMinecartTNT.class, "func_174816_a");
addMapping("getExplosionResistance", EntityMinecartTNT.class, "func_180428_a");
addMapping("fall", EntityMinecartTNT.class, "func_180430_e");
addMapping("getDefaultDisplayTile", EntityMinecartTNT.class, "func_180457_u");
addMapping("getType", EntityMinecartTNT.class, "func_184264_v");
addMapping("registerFixesMinecartTNT", EntityMinecartTNT.class, "func_189674_a");
addMapping("writeEntityToNBT", EntityMinecartTNT.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityMinecartTNT.class, "func_70037_a");
addMapping("onUpdate", EntityMinecartTNT.class, "func_70071_h_");
addMapping("attackEntityFrom", EntityMinecartTNT.class, "func_70097_a");
addMapping("handleStatusUpdate", EntityMinecartTNT.class, "func_70103_a");
addMapping("killMinecart", EntityMinecartTNT.class, "func_94095_a");
addMapping("explodeCart", EntityMinecartTNT.class, "func_94103_c");
addMapping("getFuseTicks", EntityMinecartTNT.class, "func_94104_d");
addMapping("ignite", EntityMinecartTNT.class, "func_94105_c");
addMapping("onActivatorRailPass", EntityMinecartTNT.class, "func_96095_a");
addMapping("isIgnited", EntityMinecartTNT.class, "func_96096_ay");
addMapping("onBroken", EntityPainting.class, "func_110128_b");
addMapping("setPositionAndRotationDirect", EntityPainting.class, "func_180426_a");
addMapping("playPlaceSound", EntityPainting.class, "func_184523_o");
addMapping("setLocationAndAngles", EntityPainting.class, "func_70012_b");
addMapping("writeEntityToNBT", EntityPainting.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityPainting.class, "func_70037_a");
addMapping("getWidthPixels", EntityPainting.class, "func_82329_d");
addMapping("getHeightPixels", EntityPainting.class, "func_82330_g");
addMapping("notifyDataManagerChange", EntityTNTPrimed.class, "func_184206_a");
addMapping("setFuse", EntityTNTPrimed.class, "func_184534_a");
addMapping("getFuseDataManager", EntityTNTPrimed.class, "func_184535_k");
addMapping("getFuse", EntityTNTPrimed.class, "func_184536_l");
addMapping("writeEntityToNBT", EntityTNTPrimed.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityTNTPrimed.class, "func_70037_a");
addMapping("canTriggerWalking", EntityTNTPrimed.class, "func_70041_e_");
addMapping("getEyeHeight", EntityTNTPrimed.class, "func_70047_e");
addMapping("canBeCollidedWith", EntityTNTPrimed.class, "func_70067_L");
addMapping("onUpdate", EntityTNTPrimed.class, "func_70071_h_");
addMapping("entityInit", EntityTNTPrimed.class, "func_70088_a");
addMapping("explode", EntityTNTPrimed.class, "func_70515_d");
addMapping("getTntPlacedBy", EntityTNTPrimed.class, "func_94083_c");
addMapping("xpToDurability", EntityXPOrb.class, "func_184514_c");
addMapping("durabilityToXp", EntityXPOrb.class, "func_184515_b");
addMapping("writeEntityToNBT", EntityXPOrb.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityXPOrb.class, "func_70037_a");
addMapping("canTriggerWalking", EntityXPOrb.class, "func_70041_e_");
addMapping("getBrightnessForRender", EntityXPOrb.class, "func_70070_b");
addMapping("onUpdate", EntityXPOrb.class, "func_70071_h_");
addMapping("handleWaterMovement", EntityXPOrb.class, "func_70072_I");
addMapping("canBeAttackedWithItem", EntityXPOrb.class, "func_70075_an");
addMapping("dealFireDamage", EntityXPOrb.class, "func_70081_e");
addMapping("entityInit", EntityXPOrb.class, "func_70088_a");
addMapping("attackEntityFrom", EntityXPOrb.class, "func_70097_a");
addMapping("onCollideWithPlayer", EntityXPOrb.class, "func_70100_b_");
addMapping("getXpValue", EntityXPOrb.class, "func_70526_d");
addMapping("getXPSplit", EntityXPOrb.class, "func_70527_a");
addMapping("getTextureByXP", EntityXPOrb.class, "func_70528_g");
addMapping("getArmPose", AbstractIllager.class, "func_193077_p");
addMapping("isAggressive", AbstractIllager.class, "func_193078_a");
addMapping("setAggressive", AbstractIllager.class, "func_193079_a");
addMapping("entityInit", AbstractIllager.class, "func_70088_a");
addMapping("getCreatureAttribute", AbstractIllager.class, "func_70668_bt");
addMapping("applyEntityAttributes", AbstractSkeleton.class, "func_110147_ax");
addMapping("playStepSound", AbstractSkeleton.class, "func_180429_a");
addMapping("setEquipmentBasedOnDifficulty", AbstractSkeleton.class, "func_180481_a");
addMapping("onInitialSpawn", AbstractSkeleton.class, "func_180482_a");
addMapping("setItemStackToSlot", AbstractSkeleton.class, "func_184201_a");
addMapping("initEntityAI", AbstractSkeleton.class, "func_184651_r");
addMapping("setSwingingArms", AbstractSkeleton.class, "func_184724_a");
addMapping("isSwingingArms", AbstractSkeleton.class, "func_184725_db");
addMapping("getArrow", AbstractSkeleton.class, "func_190726_a");
addMapping("getStepSound", AbstractSkeleton.class, "func_190727_o");
addMapping("getYOffset", AbstractSkeleton.class, "func_70033_W");
addMapping("readEntityFromNBT", AbstractSkeleton.class, "func_70037_a");
addMapping("getEyeHeight", AbstractSkeleton.class, "func_70047_e");
addMapping("entityInit", AbstractSkeleton.class, "func_70088_a");
addMapping("updateRidden", AbstractSkeleton.class, "func_70098_U");
addMapping("onLivingUpdate", AbstractSkeleton.class, "func_70636_d");
addMapping("getCreatureAttribute", AbstractSkeleton.class, "func_70668_bt");
addMapping("attackEntityWithRangedAttack", AbstractSkeleton.class, "func_82196_d");
addMapping("setCombatTask", AbstractSkeleton.class, "func_85036_m");
addMapping("applyEntityAttributes", EntityBlaze.class, "func_110147_ax");
addMapping("fall", EntityBlaze.class, "func_180430_e");
addMapping("getHurtSound", EntityBlaze.class, "func_184601_bQ");
addMapping("getDeathSound", EntityBlaze.class, "func_184615_bR");
addMapping("getAmbientSound", EntityBlaze.class, "func_184639_G");
addMapping("getLootTable", EntityBlaze.class, "func_184647_J");
addMapping("initEntityAI", EntityBlaze.class, "func_184651_r");
addMapping("registerFixesBlaze", EntityBlaze.class, "func_189761_b");
addMapping("getBrightness", EntityBlaze.class, "func_70013_c");
addMapping("isBurning", EntityBlaze.class, "func_70027_ad");
addMapping("getBrightnessForRender", EntityBlaze.class, "func_70070_b");
addMapping("entityInit", EntityBlaze.class, "func_70088_a");
addMapping("updateAITasks", EntityBlaze.class, "func_70619_bc");
addMapping("onLivingUpdate", EntityBlaze.class, "func_70636_d");
addMapping("isValidLightLevel", EntityBlaze.class, "func_70814_o");
addMapping("setOnFire", EntityBlaze.class, "func_70844_e");
addMapping("isCharged", EntityBlaze.class, "func_70845_n");
addMapping("applyEntityAttributes", EntityCaveSpider.class, "func_110147_ax");
addMapping("onInitialSpawn", EntityCaveSpider.class, "func_180482_a");
addMapping("getLootTable", EntityCaveSpider.class, "func_184647_J");
addMapping("registerFixesCaveSpider", EntityCaveSpider.class, "func_189775_b");
addMapping("getEyeHeight", EntityCaveSpider.class, "func_70047_e");
addMapping("attackEntityAsMob", EntityCaveSpider.class, "func_70652_k");
addMapping("applyEntityAttributes", EntityCreeper.class, "func_110147_ax");
addMapping("explode", EntityCreeper.class, "func_146077_cc");
addMapping("hasIgnited", EntityCreeper.class, "func_146078_ca");
addMapping("ignite", EntityCreeper.class, "func_146079_cb");
addMapping("incrementDroppedSkulls", EntityCreeper.class, "func_175493_co");
addMapping("fall", EntityCreeper.class, "func_180430_e");
addMapping("getHurtSound", EntityCreeper.class, "func_184601_bQ");
addMapping("getDeathSound", EntityCreeper.class, "func_184615_bR");
addMapping("processInteract", EntityCreeper.class, "func_184645_a");
addMapping("getLootTable", EntityCreeper.class, "func_184647_J");
addMapping("initEntityAI", EntityCreeper.class, "func_184651_r");
addMapping("registerFixesCreeper", EntityCreeper.class, "func_189762_b");
addMapping("spawnLingeringCloud", EntityCreeper.class, "func_190741_do");
addMapping("writeEntityToNBT", EntityCreeper.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityCreeper.class, "func_70037_a");
addMapping("onUpdate", EntityCreeper.class, "func_70071_h_");
addMapping("onStruckByLightning", EntityCreeper.class, "func_70077_a");
addMapping("entityInit", EntityCreeper.class, "func_70088_a");
addMapping("onDeath", EntityCreeper.class, "func_70645_a");
addMapping("ableToCauseSkullDrop", EntityCreeper.class, "func_70650_aV");
addMapping("attackEntityAsMob", EntityCreeper.class, "func_70652_k");
addMapping("setCreeperState", EntityCreeper.class, "func_70829_a");
addMapping("getPowered", EntityCreeper.class, "func_70830_n");
addMapping("getCreeperFlashIntensity", EntityCreeper.class, "func_70831_j");
addMapping("getCreeperState", EntityCreeper.class, "func_70832_p");
addMapping("getMaxFallHeight", EntityCreeper.class, "func_82143_as");
addMapping("applyEntityAttributes", EntityElderGuardian.class, "func_110147_ax");
addMapping("getAttackDuration", EntityElderGuardian.class, "func_175464_ck");
addMapping("getHurtSound", EntityElderGuardian.class, "func_184601_bQ");
addMapping("getDeathSound", EntityElderGuardian.class, "func_184615_bR");
addMapping("getAmbientSound", EntityElderGuardian.class, "func_184639_G");
addMapping("getLootTable", EntityElderGuardian.class, "func_184647_J");
addMapping("getFlopSound", EntityElderGuardian.class, "func_190765_dj");
addMapping("setGhost", EntityElderGuardian.class, "func_190767_di");
addMapping("registerFixesElderGuardian", EntityElderGuardian.class, "func_190768_b");
addMapping("updateAITasks", EntityElderGuardian.class, "func_70619_bc");
addMapping("applyEntityAttributes", EntityEnderman.class, "func_110147_ax");
addMapping("getHeldBlockState", EntityEnderman.class, "func_175489_ck");
addMapping("setHeldBlockState", EntityEnderman.class, "func_175490_a");
addMapping("notifyDataManagerChange", EntityEnderman.class, "func_184206_a");
addMapping("getHurtSound", EntityEnderman.class, "func_184601_bQ");
addMapping("getDeathSound", EntityEnderman.class, "func_184615_bR");
addMapping("getAmbientSound", EntityEnderman.class, "func_184639_G");
addMapping("getLootTable", EntityEnderman.class, "func_184647_J");
addMapping("initEntityAI", EntityEnderman.class, "func_184651_r");
addMapping("playEndermanSound", EntityEnderman.class, "func_184716_o");
addMapping("registerFixesEnderman", EntityEnderman.class, "func_189763_b");
addMapping("writeEntityToNBT", EntityEnderman.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityEnderman.class, "func_70037_a");
addMapping("getEyeHeight", EntityEnderman.class, "func_70047_e");
addMapping("entityInit", EntityEnderman.class, "func_70088_a");
addMapping("attackEntityFrom", EntityEnderman.class, "func_70097_a");
addMapping("updateAITasks", EntityEnderman.class, "func_70619_bc");
addMapping("setAttackTarget", EntityEnderman.class, "func_70624_b");
addMapping("onLivingUpdate", EntityEnderman.class, "func_70636_d");
addMapping("teleportToEntity", EntityEnderman.class, "func_70816_c");
addMapping("teleportRandomly", EntityEnderman.class, "func_70820_n");
addMapping("shouldAttackPlayer", EntityEnderman.class, "func_70821_d");
addMapping("isScreaming", EntityEnderman.class, "func_70823_r");
addMapping("teleportTo", EntityEnderman.class, "func_70825_j");
addMapping("dropEquipment", EntityEnderman.class, "func_82160_b");
addMapping("applyEntityAttributes", EntityEndermite.class, "func_110147_ax");
addMapping("isSpawnedByPlayer", EntityEndermite.class, "func_175495_n");
addMapping("setSpawnedByPlayer", EntityEndermite.class, "func_175496_a");
addMapping("playStepSound", EntityEndermite.class, "func_180429_a");
addMapping("setRenderYawOffset", EntityEndermite.class, "func_181013_g");
addMapping("getHurtSound", EntityEndermite.class, "func_184601_bQ");
addMapping("getDeathSound", EntityEndermite.class, "func_184615_bR");
addMapping("getAmbientSound", EntityEndermite.class, "func_184639_G");
addMapping("getLootTable", EntityEndermite.class, "func_184647_J");
addMapping("initEntityAI", EntityEndermite.class, "func_184651_r");
addMapping("registerFixesEndermite", EntityEndermite.class, "func_189764_b");
addMapping("writeEntityToNBT", EntityEndermite.class, "func_70014_b");
addMapping("getYOffset", EntityEndermite.class, "func_70033_W");
addMapping("readEntityFromNBT", EntityEndermite.class, "func_70037_a");
addMapping("canTriggerWalking", EntityEndermite.class, "func_70041_e_");
addMapping("getEyeHeight", EntityEndermite.class, "func_70047_e");
addMapping("onUpdate", EntityEndermite.class, "func_70071_h_");
addMapping("getCanSpawnHere", EntityEndermite.class, "func_70601_bi");
addMapping("onLivingUpdate", EntityEndermite.class, "func_70636_d");
addMapping("getCreatureAttribute", EntityEndermite.class, "func_70668_bt");
addMapping("isValidLightLevel", EntityEndermite.class, "func_70814_o");
addMapping("applyEntityAttributes", EntityEvoker.class, "func_110147_ax");
addMapping("isOnSameTeam", EntityEvoker.class, "func_184191_r");
addMapping("getHurtSound", EntityEvoker.class, "func_184601_bQ");
addMapping("getDeathSound", EntityEvoker.class, "func_184615_bR");
addMapping("getAmbientSound", EntityEvoker.class, "func_184639_G");
addMapping("getLootTable", EntityEvoker.class, "func_184647_J");
addMapping("initEntityAI", EntityEvoker.class, "func_184651_r");
addMapping("setWololoTarget", EntityEvoker.class, "func_190748_a");
addMapping("getWololoTarget", EntityEvoker.class, "func_190751_dj");
addMapping("registerFixesEvoker", EntityEvoker.class, "func_190759_b");
addMapping("getSpellSound", EntityEvoker.class, "func_193086_dk");
addMapping("writeEntityToNBT", EntityEvoker.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityEvoker.class, "func_70037_a");
addMapping("onUpdate", EntityEvoker.class, "func_70071_h_");
addMapping("entityInit", EntityEvoker.class, "func_70088_a");
addMapping("updateAITasks", EntityEvoker.class, "func_70619_bc");
addMapping("applyEntityAttributes", EntityGhast.class, "func_110147_ax");
addMapping("isAttacking", EntityGhast.class, "func_110182_bF");
addMapping("getFireballStrength", EntityGhast.class, "func_175453_cd");
addMapping("setAttacking", EntityGhast.class, "func_175454_a");
addMapping("getSoundCategory", EntityGhast.class, "func_184176_by");
addMapping("getHurtSound", EntityGhast.class, "func_184601_bQ");
addMapping("getDeathSound", EntityGhast.class, "func_184615_bR");
addMapping("getAmbientSound", EntityGhast.class, "func_184639_G");
addMapping("getLootTable", EntityGhast.class, "func_184647_J");
addMapping("initEntityAI", EntityGhast.class, "func_184651_r");
addMapping("registerFixesGhast", EntityGhast.class, "func_189756_b");
addMapping("writeEntityToNBT", EntityGhast.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityGhast.class, "func_70037_a");
addMapping("getEyeHeight", EntityGhast.class, "func_70047_e");
addMapping("onUpdate", EntityGhast.class, "func_70071_h_");
addMapping("entityInit", EntityGhast.class, "func_70088_a");
addMapping("attackEntityFrom", EntityGhast.class, "func_70097_a");
addMapping("getSoundVolume", EntityGhast.class, "func_70599_aP");
addMapping("getCanSpawnHere", EntityGhast.class, "func_70601_bi");
addMapping("getMaxSpawnedInChunk", EntityGhast.class, "func_70641_bl");
addMapping("applyEntityAttributes", EntityGiantZombie.class, "func_110147_ax");
addMapping("getBlockPathWeight", EntityGiantZombie.class, "func_180484_a");
addMapping("getLootTable", EntityGiantZombie.class, "func_184647_J");
addMapping("registerFixesGiantZombie", EntityGiantZombie.class, "func_189765_b");
addMapping("getEyeHeight", EntityGiantZombie.class, "func_70047_e");
addMapping("fall", EntityGolem.class, "func_180430_e");
addMapping("getHurtSound", EntityGolem.class, "func_184601_bQ");
addMapping("getDeathSound", EntityGolem.class, "func_184615_bR");
addMapping("getAmbientSound", EntityGolem.class, "func_184639_G");
addMapping("getTalkInterval", EntityGolem.class, "func_70627_aG");
addMapping("canDespawn", EntityGolem.class, "func_70692_ba");
addMapping("applyEntityAttributes", EntityGuardian.class, "func_110147_ax");
addMapping("createNavigator", EntityGuardian.class, "func_175447_b");
addMapping("setTargetedEntity", EntityGuardian.class, "func_175463_b");
addMapping("getAttackDuration", EntityGuardian.class, "func_175464_ck");
addMapping("getTargetedEntity", EntityGuardian.class, "func_175466_co");
addMapping("getSpikesAnimation", EntityGuardian.class, "func_175469_o");
addMapping("getTailAnimation", EntityGuardian.class, "func_175471_a");
addMapping("isMoving", EntityGuardian.class, "func_175472_n");
addMapping("hasTargetedEntity", EntityGuardian.class, "func_175474_cn");
addMapping("setMoving", EntityGuardian.class, "func_175476_l");
addMapping("getAttackAnimationScale", EntityGuardian.class, "func_175477_p");
addMapping("getBlockPathWeight", EntityGuardian.class, "func_180484_a");
addMapping("notifyDataManagerChange", EntityGuardian.class, "func_184206_a");
addMapping("getHurtSound", EntityGuardian.class, "func_184601_bQ");
addMapping("getDeathSound", EntityGuardian.class, "func_184615_bR");
addMapping("getAmbientSound", EntityGuardian.class, "func_184639_G");
addMapping("getLootTable", EntityGuardian.class, "func_184647_J");
addMapping("initEntityAI", EntityGuardian.class, "func_184651_r");
addMapping("registerFixesGuardian", EntityGuardian.class, "func_189766_b");
addMapping("getFlopSound", EntityGuardian.class, "func_190765_dj");
addMapping("travel", EntityGuardian.class, "func_191986_a");
addMapping("canTriggerWalking", EntityGuardian.class, "func_70041_e_");
addMapping("getEyeHeight", EntityGuardian.class, "func_70047_e");
addMapping("isNotColliding", EntityGuardian.class, "func_70058_J");
addMapping("entityInit", EntityGuardian.class, "func_70088_a");
addMapping("attackEntityFrom", EntityGuardian.class, "func_70097_a");
addMapping("getCanSpawnHere", EntityGuardian.class, "func_70601_bi");
addMapping("getTalkInterval", EntityGuardian.class, "func_70627_aG");
addMapping("onLivingUpdate", EntityGuardian.class, "func_70636_d");
addMapping("getVerticalFaceSpeed", EntityGuardian.class, "func_70646_bf");
addMapping("isValidLightLevel", EntityGuardian.class, "func_70814_o");
addMapping("getHurtSound", EntityHusk.class, "func_184601_bQ");
addMapping("getDeathSound", EntityHusk.class, "func_184615_bR");
addMapping("getAmbientSound", EntityHusk.class, "func_184639_G");
addMapping("getLootTable", EntityHusk.class, "func_184647_J");
addMapping("shouldBurnInDay", EntityHusk.class, "func_190730_o");
addMapping("getStepSound", EntityHusk.class, "func_190731_di");
addMapping("getSkullDrop", EntityHusk.class, "func_190732_dj");
addMapping("registerFixesHusk", EntityHusk.class, "func_190740_b");
addMapping("getCanSpawnHere", EntityHusk.class, "func_70601_bi");
addMapping("attackEntityAsMob", EntityHusk.class, "func_70652_k");
addMapping("applyEntityAttributes", EntityIllusionIllager.class, "func_110147_ax");
addMapping("onInitialSpawn", EntityIllusionIllager.class, "func_180482_a");
addMapping("getRenderBoundingBox", EntityIllusionIllager.class, "func_184177_bl");
addMapping("isOnSameTeam", EntityIllusionIllager.class, "func_184191_r");
addMapping("getHurtSound", EntityIllusionIllager.class, "func_184601_bQ");
addMapping("getDeathSound", EntityIllusionIllager.class, "func_184615_bR");
addMapping("getAmbientSound", EntityIllusionIllager.class, "func_184639_G");
addMapping("getLootTable", EntityIllusionIllager.class, "func_184647_J");
addMapping("initEntityAI", EntityIllusionIllager.class, "func_184651_r");
addMapping("setSwingingArms", EntityIllusionIllager.class, "func_184724_a");
addMapping("getArmPose", EntityIllusionIllager.class, "func_193077_p");
addMapping("getSpellSound", EntityIllusionIllager.class, "func_193086_dk");
addMapping("isAggressive", EntityIllusionIllager.class, "func_193096_dj");
addMapping("createArrowEntity", EntityIllusionIllager.class, "func_193097_t");
addMapping("getRenderLocations", EntityIllusionIllager.class, "func_193098_a");
addMapping("entityInit", EntityIllusionIllager.class, "func_70088_a");
addMapping("onLivingUpdate", EntityIllusionIllager.class, "func_70636_d");
addMapping("attackEntityWithRangedAttack", EntityIllusionIllager.class, "func_82196_d");
addMapping("applyEntityAttributes", EntityIronGolem.class, "func_110147_ax");
addMapping("playStepSound", EntityIronGolem.class, "func_180429_a");
addMapping("getHurtSound", EntityIronGolem.class, "func_184601_bQ");
addMapping("getDeathSound", EntityIronGolem.class, "func_184615_bR");
addMapping("getLootTable", EntityIronGolem.class, "func_184647_J");
addMapping("initEntityAI", EntityIronGolem.class, "func_184651_r");
addMapping("registerFixesIronGolem", EntityIronGolem.class, "func_189784_b");
addMapping("writeEntityToNBT", EntityIronGolem.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityIronGolem.class, "func_70037_a");
addMapping("entityInit", EntityIronGolem.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityIronGolem.class, "func_70103_a");
addMapping("updateAITasks", EntityIronGolem.class, "func_70619_bc");
addMapping("onLivingUpdate", EntityIronGolem.class, "func_70636_d");
addMapping("onDeath", EntityIronGolem.class, "func_70645_a");
addMapping("attackEntityAsMob", EntityIronGolem.class, "func_70652_k");
addMapping("decreaseAirSupply", EntityIronGolem.class, "func_70682_h");
addMapping("canAttackClass", EntityIronGolem.class, "func_70686_a");
addMapping("setPlayerCreated", EntityIronGolem.class, "func_70849_f");
addMapping("isPlayerCreated", EntityIronGolem.class, "func_70850_q");
addMapping("setHoldingRose", EntityIronGolem.class, "func_70851_e");
addMapping("getVillage", EntityIronGolem.class, "func_70852_n");
addMapping("getHoldRoseTick", EntityIronGolem.class, "func_70853_p");
addMapping("getAttackTimer", EntityIronGolem.class, "func_70854_o");
addMapping("collideWithEntity", EntityIronGolem.class, "func_82167_n");
addMapping("applyEntityAttributes", EntityMagmaCube.class, "func_110147_ax");
addMapping("fall", EntityMagmaCube.class, "func_180430_e");
addMapping("handleJumpLava", EntityMagmaCube.class, "func_180466_bG");
addMapping("getParticleType", EntityMagmaCube.class, "func_180487_n");
addMapping("getHurtSound", EntityMagmaCube.class, "func_184601_bQ");
addMapping("getDeathSound", EntityMagmaCube.class, "func_184615_bR");
addMapping("getLootTable", EntityMagmaCube.class, "func_184647_J");
addMapping("getSquishSound", EntityMagmaCube.class, "func_184709_cY");
addMapping("getJumpSound", EntityMagmaCube.class, "func_184710_cZ");
addMapping("registerFixesMagmaCube", EntityMagmaCube.class, "func_189759_b");
addMapping("getBrightness", EntityMagmaCube.class, "func_70013_c");
addMapping("isBurning", EntityMagmaCube.class, "func_70027_ad");
addMapping("isNotColliding", EntityMagmaCube.class, "func_70058_J");
addMapping("getBrightnessForRender", EntityMagmaCube.class, "func_70070_b");
addMapping("getCanSpawnHere", EntityMagmaCube.class, "func_70601_bi");
addMapping("jump", EntityMagmaCube.class, "func_70664_aZ");
addMapping("setSlimeSize", EntityMagmaCube.class, "func_70799_a");
addMapping("canDamagePlayer", EntityMagmaCube.class, "func_70800_m");
addMapping("createInstance", EntityMagmaCube.class, "func_70802_j");
addMapping("getAttackStrength", EntityMagmaCube.class, "func_70805_n");
addMapping("getJumpDelay", EntityMagmaCube.class, "func_70806_k");
addMapping("alterSquishAmount", EntityMagmaCube.class, "func_70808_l");
addMapping("applyEntityAttributes", EntityMob.class, "func_110147_ax");
addMapping("canDropLoot", EntityMob.class, "func_146066_aG");
addMapping("getBlockPathWeight", EntityMob.class, "func_180484_a");
addMapping("getSoundCategory", EntityMob.class, "func_184176_by");
addMapping("getSplashSound", EntityMob.class, "func_184181_aa");
addMapping("getSwimSound", EntityMob.class, "func_184184_Z");
addMapping("getFallSound", EntityMob.class, "func_184588_d");
addMapping("getHurtSound", EntityMob.class, "func_184601_bQ");
addMapping("getDeathSound", EntityMob.class, "func_184615_bR");
addMapping("isPreventingPlayerRest", EntityMob.class, "func_191990_c");
addMapping("onUpdate", EntityMob.class, "func_70071_h_");
addMapping("attackEntityFrom", EntityMob.class, "func_70097_a");
addMapping("getCanSpawnHere", EntityMob.class, "func_70601_bi");
addMapping("onLivingUpdate", EntityMob.class, "func_70636_d");
addMapping("attackEntityAsMob", EntityMob.class, "func_70652_k");
addMapping("isValidLightLevel", EntityMob.class, "func_70814_o");
addMapping("applyEntityAttributes", EntityPigZombie.class, "func_110147_ax");
addMapping("applyEntityAI", EntityPigZombie.class, "func_175456_n");
addMapping("isAngry", EntityPigZombie.class, "func_175457_ck");
addMapping("setEquipmentBasedOnDifficulty", EntityPigZombie.class, "func_180481_a");
addMapping("getHurtSound", EntityPigZombie.class, "func_184601_bQ");
addMapping("getDeathSound", EntityPigZombie.class, "func_184615_bR");
addMapping("getAmbientSound", EntityPigZombie.class, "func_184639_G");
addMapping("processInteract", EntityPigZombie.class, "func_184645_a");
addMapping("getLootTable", EntityPigZombie.class, "func_184647_J");
addMapping("registerFixesPigZombie", EntityPigZombie.class, "func_189781_b");
addMapping("getSkullDrop", EntityPigZombie.class, "func_190732_dj");
addMapping("isPreventingPlayerRest", EntityPigZombie.class, "func_191990_c");
addMapping("writeEntityToNBT", EntityPigZombie.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityPigZombie.class, "func_70037_a");
addMapping("isNotColliding", EntityPigZombie.class, "func_70058_J");
addMapping("attackEntityFrom", EntityPigZombie.class, "func_70097_a");
addMapping("getCanSpawnHere", EntityPigZombie.class, "func_70601_bi");
addMapping("setRevengeTarget", EntityPigZombie.class, "func_70604_c");
addMapping("updateAITasks", EntityPigZombie.class, "func_70619_bc");
addMapping("becomeAngryAt", EntityPigZombie.class, "func_70835_c");
addMapping("applyEntityAttributes", EntityPolarBear.class, "func_110147_ax");
addMapping("playStepSound", EntityPolarBear.class, "func_180429_a");
addMapping("onInitialSpawn", EntityPolarBear.class, "func_180482_a");
addMapping("getHurtSound", EntityPolarBear.class, "func_184601_bQ");
addMapping("getDeathSound", EntityPolarBear.class, "func_184615_bR");
addMapping("getAmbientSound", EntityPolarBear.class, "func_184639_G");
addMapping("getLootTable", EntityPolarBear.class, "func_184647_J");
addMapping("initEntityAI", EntityPolarBear.class, "func_184651_r");
addMapping("getWaterSlowDown", EntityPolarBear.class, "func_189749_co");
addMapping("isStanding", EntityPolarBear.class, "func_189793_df");
addMapping("setStanding", EntityPolarBear.class, "func_189794_p");
addMapping("getStandingAnimationScale", EntityPolarBear.class, "func_189795_r");
addMapping("playWarningSound", EntityPolarBear.class, "func_189796_de");
addMapping("onUpdate", EntityPolarBear.class, "func_70071_h_");
addMapping("entityInit", EntityPolarBear.class, "func_70088_a");
addMapping("attackEntityAsMob", EntityPolarBear.class, "func_70652_k");
addMapping("isBreedingItem", EntityPolarBear.class, "func_70877_b");
addMapping("createChild", EntityPolarBear.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityShulker.class, "func_110147_ax");
addMapping("setPositionAndRotationDirect", EntityShulker.class, "func_180426_a");
addMapping("onInitialSpawn", EntityShulker.class, "func_180482_a");
addMapping("getSoundCategory", EntityShulker.class, "func_184176_by");
addMapping("notifyDataManagerChange", EntityShulker.class, "func_184206_a");
addMapping("getHurtSound", EntityShulker.class, "func_184601_bQ");
addMapping("getDeathSound", EntityShulker.class, "func_184615_bR");
addMapping("getAmbientSound", EntityShulker.class, "func_184639_G");
addMapping("getLootTable", EntityShulker.class, "func_184647_J");
addMapping("getHorizontalFaceSpeed", EntityShulker.class, "func_184649_cE");
addMapping("createBodyHelper", EntityShulker.class, "func_184650_s");
addMapping("initEntityAI", EntityShulker.class, "func_184651_r");
addMapping("getPeekTick", EntityShulker.class, "func_184684_db");
addMapping("isClosed", EntityShulker.class, "func_184686_df");
addMapping("getClientPeekAmount", EntityShulker.class, "func_184688_a");
addMapping("tryTeleportToNewPosition", EntityShulker.class, "func_184689_o");
addMapping("updateArmorModifier", EntityShulker.class, "func_184691_a");
addMapping("getOldAttachPos", EntityShulker.class, "func_184692_dd");
addMapping("getClientTeleportInterp", EntityShulker.class, "func_184693_dc");
addMapping("setAttachmentPos", EntityShulker.class, "func_184694_g");
addMapping("getAttachmentFacing", EntityShulker.class, "func_184696_cZ");
addMapping("isAttachedToBlock", EntityShulker.class, "func_184697_de");
addMapping("getAttachmentPos", EntityShulker.class, "func_184699_da");
addMapping("registerFixesShulker", EntityShulker.class, "func_189757_b");
addMapping("getColor", EntityShulker.class, "func_190769_dn");
addMapping("writeEntityToNBT", EntityShulker.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityShulker.class, "func_70037_a");
addMapping("canTriggerWalking", EntityShulker.class, "func_70041_e_");
addMapping("getCollisionBoundingBox", EntityShulker.class, "func_70046_E");
addMapping("getEyeHeight", EntityShulker.class, "func_70047_e");
addMapping("onUpdate", EntityShulker.class, "func_70071_h_");
addMapping("entityInit", EntityShulker.class, "func_70088_a");
addMapping("move", EntityShulker.class, "func_70091_d");
addMapping("attackEntityFrom", EntityShulker.class, "func_70097_a");
addMapping("setPosition", EntityShulker.class, "func_70107_b");
addMapping("applyEntityCollision", EntityShulker.class, "func_70108_f");
addMapping("getCollisionBorderSize", EntityShulker.class, "func_70111_Y");
addMapping("onLivingUpdate", EntityShulker.class, "func_70636_d");
addMapping("playLivingSound", EntityShulker.class, "func_70642_aH");
addMapping("getVerticalFaceSpeed", EntityShulker.class, "func_70646_bf");
addMapping("applyEntityAttributes", EntitySilverfish.class, "func_110147_ax");
addMapping("playStepSound", EntitySilverfish.class, "func_180429_a");
addMapping("getBlockPathWeight", EntitySilverfish.class, "func_180484_a");
addMapping("setRenderYawOffset", EntitySilverfish.class, "func_181013_g");
addMapping("getHurtSound", EntitySilverfish.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySilverfish.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySilverfish.class, "func_184639_G");
addMapping("getLootTable", EntitySilverfish.class, "func_184647_J");
addMapping("initEntityAI", EntitySilverfish.class, "func_184651_r");
addMapping("registerFixesSilverfish", EntitySilverfish.class, "func_189767_b");
addMapping("getYOffset", EntitySilverfish.class, "func_70033_W");
addMapping("canTriggerWalking", EntitySilverfish.class, "func_70041_e_");
addMapping("getEyeHeight", EntitySilverfish.class, "func_70047_e");
addMapping("onUpdate", EntitySilverfish.class, "func_70071_h_");
addMapping("attackEntityFrom", EntitySilverfish.class, "func_70097_a");
addMapping("getCanSpawnHere", EntitySilverfish.class, "func_70601_bi");
addMapping("getCreatureAttribute", EntitySilverfish.class, "func_70668_bt");
addMapping("isValidLightLevel", EntitySilverfish.class, "func_70814_o");
addMapping("getHurtSound", EntitySkeleton.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySkeleton.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySkeleton.class, "func_184639_G");
addMapping("getLootTable", EntitySkeleton.class, "func_184647_J");
addMapping("registerFixesSkeleton", EntitySkeleton.class, "func_189772_b");
addMapping("getArrow", EntitySkeleton.class, "func_190726_a");
addMapping("getStepSound", EntitySkeleton.class, "func_190727_o");
addMapping("onDeath", EntitySkeleton.class, "func_70645_a");
addMapping("getDropItem", EntitySlime.class, "func_146068_u");
addMapping("dealDamage", EntitySlime.class, "func_175451_e");
addMapping("onInitialSpawn", EntitySlime.class, "func_180482_a");
addMapping("getParticleType", EntitySlime.class, "func_180487_n");
addMapping("notifyDataManagerChange", EntitySlime.class, "func_184206_a");
addMapping("getHurtSound", EntitySlime.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySlime.class, "func_184615_bR");
addMapping("getLootTable", EntitySlime.class, "func_184647_J");
addMapping("initEntityAI", EntitySlime.class, "func_184651_r");
addMapping("getSquishSound", EntitySlime.class, "func_184709_cY");
addMapping("getJumpSound", EntitySlime.class, "func_184710_cZ");
addMapping("isSmallSlime", EntitySlime.class, "func_189101_db");
addMapping("registerFixesSlime", EntitySlime.class, "func_189758_c");
addMapping("writeEntityToNBT", EntitySlime.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySlime.class, "func_70037_a");
addMapping("getEyeHeight", EntitySlime.class, "func_70047_e");
addMapping("onUpdate", EntitySlime.class, "func_70071_h_");
addMapping("entityInit", EntitySlime.class, "func_70088_a");
addMapping("onCollideWithPlayer", EntitySlime.class, "func_70100_b_");
addMapping("setDead", EntitySlime.class, "func_70106_y");
addMapping("applyEntityCollision", EntitySlime.class, "func_70108_f");
addMapping("getSoundVolume", EntitySlime.class, "func_70599_aP");
addMapping("getCanSpawnHere", EntitySlime.class, "func_70601_bi");
addMapping("getVerticalFaceSpeed", EntitySlime.class, "func_70646_bf");
addMapping("jump", EntitySlime.class, "func_70664_aZ");
addMapping("setSlimeSize", EntitySlime.class, "func_70799_a");
addMapping("canDamagePlayer", EntitySlime.class, "func_70800_m");
addMapping("createInstance", EntitySlime.class, "func_70802_j");
addMapping("getAttackStrength", EntitySlime.class, "func_70805_n");
addMapping("getJumpDelay", EntitySlime.class, "func_70806_k");
addMapping("makesSoundOnJump", EntitySlime.class, "func_70807_r");
addMapping("alterSquishAmount", EntitySlime.class, "func_70808_l");
addMapping("getSlimeSize", EntitySlime.class, "func_70809_q");
addMapping("applyEntityAttributes", EntitySnowman.class, "func_110147_ax");
addMapping("getHurtSound", EntitySnowman.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySnowman.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySnowman.class, "func_184639_G");
addMapping("processInteract", EntitySnowman.class, "func_184645_a");
addMapping("getLootTable", EntitySnowman.class, "func_184647_J");
addMapping("initEntityAI", EntitySnowman.class, "func_184651_r");
addMapping("setSwingingArms", EntitySnowman.class, "func_184724_a");
addMapping("setPumpkinEquipped", EntitySnowman.class, "func_184747_a");
addMapping("isPumpkinEquipped", EntitySnowman.class, "func_184748_o");
addMapping("registerFixesSnowman", EntitySnowman.class, "func_189783_b");
addMapping("writeEntityToNBT", EntitySnowman.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySnowman.class, "func_70037_a");
addMapping("getEyeHeight", EntitySnowman.class, "func_70047_e");
addMapping("entityInit", EntitySnowman.class, "func_70088_a");
addMapping("onLivingUpdate", EntitySnowman.class, "func_70636_d");
addMapping("attackEntityWithRangedAttack", EntitySnowman.class, "func_82196_d");
addMapping("getArmPose", EntitySpellcasterIllager.class, "func_193077_p");
addMapping("setSpellType", EntitySpellcasterIllager.class, "func_193081_a");
addMapping("isSpellcasting", EntitySpellcasterIllager.class, "func_193082_dl");
addMapping("getSpellType", EntitySpellcasterIllager.class, "func_193083_dm");
addMapping("getSpellTicks", EntitySpellcasterIllager.class, "func_193085_dn");
addMapping("getSpellSound", EntitySpellcasterIllager.class, "func_193086_dk");
addMapping("writeEntityToNBT", EntitySpellcasterIllager.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySpellcasterIllager.class, "func_70037_a");
addMapping("onUpdate", EntitySpellcasterIllager.class, "func_70071_h_");
addMapping("entityInit", EntitySpellcasterIllager.class, "func_70088_a");
addMapping("updateAITasks", EntitySpellcasterIllager.class, "func_70619_bc");
addMapping("applyEntityAttributes", EntitySpider.class, "func_110147_ax");
addMapping("createNavigator", EntitySpider.class, "func_175447_b");
addMapping("playStepSound", EntitySpider.class, "func_180429_a");
addMapping("onInitialSpawn", EntitySpider.class, "func_180482_a");
addMapping("getHurtSound", EntitySpider.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySpider.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySpider.class, "func_184639_G");
addMapping("getLootTable", EntitySpider.class, "func_184647_J");
addMapping("initEntityAI", EntitySpider.class, "func_184651_r");
addMapping("registerFixesSpider", EntitySpider.class, "func_189774_d");
addMapping("getMountedYOffset", EntitySpider.class, "func_70042_X");
addMapping("getEyeHeight", EntitySpider.class, "func_70047_e");
addMapping("onUpdate", EntitySpider.class, "func_70071_h_");
addMapping("entityInit", EntitySpider.class, "func_70088_a");
addMapping("setInWeb", EntitySpider.class, "func_70110_aj");
addMapping("isOnLadder", EntitySpider.class, "func_70617_f_");
addMapping("getCreatureAttribute", EntitySpider.class, "func_70668_bt");
addMapping("isPotionApplicable", EntitySpider.class, "func_70687_e");
addMapping("setBesideClimbableBlock", EntitySpider.class, "func_70839_e");
addMapping("isBesideClimbableBlock", EntitySpider.class, "func_70841_p");
addMapping("getHurtSound", EntityStray.class, "func_184601_bQ");
addMapping("getDeathSound", EntityStray.class, "func_184615_bR");
addMapping("getAmbientSound", EntityStray.class, "func_184639_G");
addMapping("getLootTable", EntityStray.class, "func_184647_J");
addMapping("getArrow", EntityStray.class, "func_190726_a");
addMapping("getStepSound", EntityStray.class, "func_190727_o");
addMapping("registerFixesStray", EntityStray.class, "func_190728_b");
addMapping("getCanSpawnHere", EntityStray.class, "func_70601_bi");
addMapping("applyEntityAttributes", EntityVex.class, "func_110147_ax");
addMapping("setEquipmentBasedOnDifficulty", EntityVex.class, "func_180481_a");
addMapping("onInitialSpawn", EntityVex.class, "func_180482_a");
addMapping("getHurtSound", EntityVex.class, "func_184601_bQ");
addMapping("getDeathSound", EntityVex.class, "func_184615_bR");
addMapping("getAmbientSound", EntityVex.class, "func_184639_G");
addMapping("getLootTable", EntityVex.class, "func_184647_J");
addMapping("initEntityAI", EntityVex.class, "func_184651_r");
addMapping("getOwner", EntityVex.class, "func_190645_o");
addMapping("getBoundOrigin", EntityVex.class, "func_190646_di");
addMapping("isCharging", EntityVex.class, "func_190647_dj");
addMapping("setCharging", EntityVex.class, "func_190648_a");
addMapping("setBoundOrigin", EntityVex.class, "func_190651_g");
addMapping("setLimitedLife", EntityVex.class, "func_190653_a");
addMapping("getVexFlag", EntityVex.class, "func_190656_b");
addMapping("setOwner", EntityVex.class, "func_190658_a");
addMapping("setVexFlag", EntityVex.class, "func_190660_a");
addMapping("registerFixesVex", EntityVex.class, "func_190663_b");
addMapping("getBrightness", EntityVex.class, "func_70013_c");
addMapping("writeEntityToNBT", EntityVex.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityVex.class, "func_70037_a");
addMapping("getBrightnessForRender", EntityVex.class, "func_70070_b");
addMapping("onUpdate", EntityVex.class, "func_70071_h_");
addMapping("entityInit", EntityVex.class, "func_70088_a");
addMapping("move", EntityVex.class, "func_70091_d");
addMapping("applyEntityAttributes", EntityVindicator.class, "func_110147_ax");
addMapping("setEquipmentBasedOnDifficulty", EntityVindicator.class, "func_180481_a");
addMapping("onInitialSpawn", EntityVindicator.class, "func_180482_a");
addMapping("isOnSameTeam", EntityVindicator.class, "func_184191_r");
addMapping("getHurtSound", EntityVindicator.class, "func_184601_bQ");
addMapping("getDeathSound", EntityVindicator.class, "func_184615_bR");
addMapping("getAmbientSound", EntityVindicator.class, "func_184639_G");
addMapping("getLootTable", EntityVindicator.class, "func_184647_J");
addMapping("initEntityAI", EntityVindicator.class, "func_184651_r");
addMapping("setAggressive", EntityVindicator.class, "func_190636_a");
addMapping("isAggressive", EntityVindicator.class, "func_190639_o");
addMapping("registerFixesVindicator", EntityVindicator.class, "func_190641_b");
addMapping("getArmPose", EntityVindicator.class, "func_193077_p");
addMapping("writeEntityToNBT", EntityVindicator.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityVindicator.class, "func_70037_a");
addMapping("entityInit", EntityVindicator.class, "func_70088_a");
addMapping("updateAITasks", EntityVindicator.class, "func_70619_bc");
addMapping("setCustomNameTag", EntityVindicator.class, "func_96094_a");
addMapping("applyEntityAttributes", EntityWitch.class, "func_110147_ax");
addMapping("getHurtSound", EntityWitch.class, "func_184601_bQ");
addMapping("getDeathSound", EntityWitch.class, "func_184615_bR");
addMapping("getAmbientSound", EntityWitch.class, "func_184639_G");
addMapping("getLootTable", EntityWitch.class, "func_184647_J");
addMapping("initEntityAI", EntityWitch.class, "func_184651_r");
addMapping("setSwingingArms", EntityWitch.class, "func_184724_a");
addMapping("isDrinkingPotion", EntityWitch.class, "func_184730_o");
addMapping("registerFixesWitch", EntityWitch.class, "func_189776_b");
addMapping("getEyeHeight", EntityWitch.class, "func_70047_e");
addMapping("entityInit", EntityWitch.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityWitch.class, "func_70103_a");
addMapping("onLivingUpdate", EntityWitch.class, "func_70636_d");
addMapping("applyPotionDamageCalculations", EntityWitch.class, "func_70672_c");
addMapping("attackEntityWithRangedAttack", EntityWitch.class, "func_82196_d");
addMapping("setDrinkingPotion", EntityWitch.class, "func_82197_f");
addMapping("setEquipmentBasedOnDifficulty", EntityWitherSkeleton.class, "func_180481_a");
addMapping("onInitialSpawn", EntityWitherSkeleton.class, "func_180482_a");
addMapping("setEnchantmentBasedOnDifficulty", EntityWitherSkeleton.class, "func_180483_b");
addMapping("getHurtSound", EntityWitherSkeleton.class, "func_184601_bQ");
addMapping("getDeathSound", EntityWitherSkeleton.class, "func_184615_bR");
addMapping("getAmbientSound", EntityWitherSkeleton.class, "func_184639_G");
addMapping("getLootTable", EntityWitherSkeleton.class, "func_184647_J");
addMapping("getArrow", EntityWitherSkeleton.class, "func_190726_a");
addMapping("getStepSound", EntityWitherSkeleton.class, "func_190727_o");
addMapping("registerFixesWitherSkeleton", EntityWitherSkeleton.class, "func_190729_b");
addMapping("getEyeHeight", EntityWitherSkeleton.class, "func_70047_e");
addMapping("onDeath", EntityWitherSkeleton.class, "func_70645_a");
addMapping("attackEntityAsMob", EntityWitherSkeleton.class, "func_70652_k");
addMapping("applyEntityAttributes", EntityZombie.class, "func_110147_ax");
addMapping("multiplySize", EntityZombie.class, "func_146069_a");
addMapping("setBreakDoorsAItask", EntityZombie.class, "func_146070_a");
addMapping("setChildSize", EntityZombie.class, "func_146071_k");
addMapping("isBreakDoorsTaskSet", EntityZombie.class, "func_146072_bX");
addMapping("canEquipItem", EntityZombie.class, "func_175448_a");
addMapping("applyEntityAI", EntityZombie.class, "func_175456_n");
addMapping("playStepSound", EntityZombie.class, "func_180429_a");
addMapping("setEquipmentBasedOnDifficulty", EntityZombie.class, "func_180481_a");
addMapping("onInitialSpawn", EntityZombie.class, "func_180482_a");
addMapping("notifyDataManagerChange", EntityZombie.class, "func_184206_a");
addMapping("getHurtSound", EntityZombie.class, "func_184601_bQ");
addMapping("getDeathSound", EntityZombie.class, "func_184615_bR");
addMapping("getAmbientSound", EntityZombie.class, "func_184639_G");
addMapping("getLootTable", EntityZombie.class, "func_184647_J");
addMapping("initEntityAI", EntityZombie.class, "func_184651_r");
addMapping("setArmsRaised", EntityZombie.class, "func_184733_a");
addMapping("isArmsRaised", EntityZombie.class, "func_184734_db");
addMapping("registerFixesZombie", EntityZombie.class, "func_189779_d");
addMapping("shouldBurnInDay", EntityZombie.class, "func_190730_o");
addMapping("getStepSound", EntityZombie.class, "func_190731_di");
addMapping("getSkullDrop", EntityZombie.class, "func_190732_dj");
addMapping("writeEntityToNBT", EntityZombie.class, "func_70014_b");
addMapping("getYOffset", EntityZombie.class, "func_70033_W");
addMapping("readEntityFromNBT", EntityZombie.class, "func_70037_a");
addMapping("getEyeHeight", EntityZombie.class, "func_70047_e");
addMapping("onKillEntity", EntityZombie.class, "func_70074_a");
addMapping("entityInit", EntityZombie.class, "func_70088_a");
addMapping("attackEntityFrom", EntityZombie.class, "func_70097_a");
addMapping("setSize", EntityZombie.class, "func_70105_a");
addMapping("isChild", EntityZombie.class, "func_70631_g_");
addMapping("onLivingUpdate", EntityZombie.class, "func_70636_d");
addMapping("onDeath", EntityZombie.class, "func_70645_a");
addMapping("attackEntityAsMob", EntityZombie.class, "func_70652_k");
addMapping("getCreatureAttribute", EntityZombie.class, "func_70668_bt");
addMapping("getExperiencePoints", EntityZombie.class, "func_70693_a");
addMapping("setChild", EntityZombie.class, "func_82227_f");
addMapping("onInitialSpawn", EntityZombieVillager.class, "func_180482_a");
addMapping("getHurtSound", EntityZombieVillager.class, "func_184601_bQ");
addMapping("getDeathSound", EntityZombieVillager.class, "func_184615_bR");
addMapping("getAmbientSound", EntityZombieVillager.class, "func_184639_G");
addMapping("processInteract", EntityZombieVillager.class, "func_184645_a");
addMapping("getLootTable", EntityZombieVillager.class, "func_184647_J");
addMapping("getStepSound", EntityZombieVillager.class, "func_190731_di");
addMapping("getSkullDrop", EntityZombieVillager.class, "func_190732_dj");
addMapping("setProfession", EntityZombieVillager.class, "func_190733_a");
addMapping("getConversionProgress", EntityZombieVillager.class, "func_190735_dq");
addMapping("getProfession", EntityZombieVillager.class, "func_190736_dl");
addMapping("registerFixesZombieVillager", EntityZombieVillager.class, "func_190737_b");
addMapping("finishConversion", EntityZombieVillager.class, "func_190738_dp");
addMapping("startConverting", EntityZombieVillager.class, "func_191991_a");
addMapping("writeEntityToNBT", EntityZombieVillager.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityZombieVillager.class, "func_70037_a");
addMapping("onUpdate", EntityZombieVillager.class, "func_70071_h_");
addMapping("entityInit", EntityZombieVillager.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityZombieVillager.class, "func_70103_a");
addMapping("getSoundPitch", EntityZombieVillager.class, "func_70647_i");
addMapping("canDespawn", EntityZombieVillager.class, "func_70692_ba");
addMapping("isConverting", EntityZombieVillager.class, "func_82230_o");
addMapping("applyEntityAttributes", AbstractChestHorse.class, "func_110147_ax");
addMapping("setChested", AbstractChestHorse.class, "func_110207_m");
addMapping("replaceItemInInventory", AbstractChestHorse.class, "func_174820_d");
addMapping("processInteract", AbstractChestHorse.class, "func_184645_a");
addMapping("getAngrySound", AbstractChestHorse.class, "func_184785_dv");
addMapping("getInventorySize", AbstractChestHorse.class, "func_190686_di");
addMapping("registerFixesAbstractChestHorse", AbstractChestHorse.class, "func_190694_b");
addMapping("hasChest", AbstractChestHorse.class, "func_190695_dh");
addMapping("getInventoryColumns", AbstractChestHorse.class, "func_190696_dl");
addMapping("playChestEquipSound", AbstractChestHorse.class, "func_190697_dk");
addMapping("writeEntityToNBT", AbstractChestHorse.class, "func_70014_b");
addMapping("readEntityFromNBT", AbstractChestHorse.class, "func_70037_a");
addMapping("getMountedYOffset", AbstractChestHorse.class, "func_70042_X");
addMapping("entityInit", AbstractChestHorse.class, "func_70088_a");
addMapping("onDeath", AbstractChestHorse.class, "func_70645_a");
addMapping("applyEntityAttributes", AbstractHorse.class, "func_110147_ax");
addMapping("increaseTemper", AbstractHorse.class, "func_110198_t");
addMapping("openGUI", AbstractHorse.class, "func_110199_f");
addMapping("canMate", AbstractHorse.class, "func_110200_cJ");
addMapping("getMouthOpennessAngle", AbstractHorse.class, "func_110201_q");
addMapping("getModifiedMovementSpeed", AbstractHorse.class, "func_110203_cN");
addMapping("isEatingHaystack", AbstractHorse.class, "func_110204_cc");
addMapping("isBreeding", AbstractHorse.class, "func_110205_ce");
addMapping("setJumpPower", AbstractHorse.class, "func_110206_u");
addMapping("setHorseWatchableBoolean", AbstractHorse.class, "func_110208_b");
addMapping("isRearing", AbstractHorse.class, "func_110209_cd");
addMapping("moveTail", AbstractHorse.class, "func_110210_cH");
addMapping("getHorseJumpStrength", AbstractHorse.class, "func_110215_cj");
addMapping("spawnHorseParticles", AbstractHorse.class, "func_110216_r");
addMapping("setRearing", AbstractHorse.class, "func_110219_q");
addMapping("makeHorseRear", AbstractHorse.class, "func_110220_cK");
addMapping("getRearingAmount", AbstractHorse.class, "func_110223_p");
addMapping("initHorseChest", AbstractHorse.class, "func_110226_cD");
addMapping("setEatingHaystack", AbstractHorse.class, "func_110227_p");
addMapping("updateHorseSlots", AbstractHorse.class, "func_110232_cE");
addMapping("getHorseWatchableBoolean", AbstractHorse.class, "func_110233_w");
addMapping("setHorseTamed", AbstractHorse.class, "func_110234_j");
addMapping("mountTo", AbstractHorse.class, "func_110237_h");
addMapping("setTemper", AbstractHorse.class, "func_110238_s");
addMapping("setBreeding", AbstractHorse.class, "func_110242_l");
addMapping("getModifiedJumpStrength", AbstractHorse.class, "func_110245_cM");
addMapping("isHorseJumping", AbstractHorse.class, "func_110246_bZ");
addMapping("isTame", AbstractHorse.class, "func_110248_bS");
addMapping("openHorseMouth", AbstractHorse.class, "func_110249_cI");
addMapping("getClosestHorse", AbstractHorse.class, "func_110250_a");
addMapping("setHorseSaddled", AbstractHorse.class, "func_110251_o");
addMapping("getTemper", AbstractHorse.class, "func_110252_cg");
addMapping("getHorseSize", AbstractHorse.class, "func_110254_bY");
addMapping("setHorseJumping", AbstractHorse.class, "func_110255_k");
addMapping("isHorseSaddled", AbstractHorse.class, "func_110257_ck");
addMapping("getGrassEatingAmount", AbstractHorse.class, "func_110258_o");
addMapping("setTamedBy", AbstractHorse.class, "func_110263_g");
addMapping("eatingHorse", AbstractHorse.class, "func_110266_cB");
addMapping("getModifiedMaxHealth", AbstractHorse.class, "func_110267_cL");
addMapping("onLeashDistance", AbstractHorse.class, "func_142017_o");
addMapping("replaceItemInInventory", AbstractHorse.class, "func_174820_d");
addMapping("playStepSound", AbstractHorse.class, "func_180429_a");
addMapping("fall", AbstractHorse.class, "func_180430_e");
addMapping("onInitialSpawn", AbstractHorse.class, "func_180482_a");
addMapping("getControllingPassenger", AbstractHorse.class, "func_184179_bs");
addMapping("updatePassenger", AbstractHorse.class, "func_184232_k");
addMapping("getHurtSound", AbstractHorse.class, "func_184601_bQ");
addMapping("getDeathSound", AbstractHorse.class, "func_184615_bR");
addMapping("getAmbientSound", AbstractHorse.class, "func_184639_G");
addMapping("initEntityAI", AbstractHorse.class, "func_184651_r");
addMapping("canBeLeashedTo", AbstractHorse.class, "func_184652_a");
addMapping("handleStartJump", AbstractHorse.class, "func_184775_b");
addMapping("canJump", AbstractHorse.class, "func_184776_b");
addMapping("handleStopJump", AbstractHorse.class, "func_184777_r_");
addMapping("setOwnerUniqueId", AbstractHorse.class, "func_184779_b");
addMapping("getOwnerUniqueId", AbstractHorse.class, "func_184780_dh");
addMapping("getAngrySound", AbstractHorse.class, "func_184785_dv");
addMapping("getMaxTemper", AbstractHorse.class, "func_190676_dC");
addMapping("wearsArmor", AbstractHorse.class, "func_190677_dK");
addMapping("handleEating", AbstractHorse.class, "func_190678_b");
addMapping("followMother", AbstractHorse.class, "func_190679_dD");
addMapping("playGallopSound", AbstractHorse.class, "func_190680_a");
addMapping("setOffspringAttributes", AbstractHorse.class, "func_190681_a");
addMapping("isArmor", AbstractHorse.class, "func_190682_f");
addMapping("registerFixesAbstractHorse", AbstractHorse.class, "func_190683_c");
addMapping("canEatGrass", AbstractHorse.class, "func_190684_dE");
addMapping("canBeSaddled", AbstractHorse.class, "func_190685_dA");
addMapping("getInventorySize", AbstractHorse.class, "func_190686_di");
addMapping("makeMad", AbstractHorse.class, "func_190687_dF");
addMapping("travel", AbstractHorse.class, "func_191986_a");
addMapping("writeEntityToNBT", AbstractHorse.class, "func_70014_b");
addMapping("readEntityFromNBT", AbstractHorse.class, "func_70037_a");
addMapping("getEyeHeight", AbstractHorse.class, "func_70047_e");
addMapping("onUpdate", AbstractHorse.class, "func_70071_h_");
addMapping("entityInit", AbstractHorse.class, "func_70088_a");
addMapping("attackEntityFrom", AbstractHorse.class, "func_70097_a");
addMapping("handleStatusUpdate", AbstractHorse.class, "func_70103_a");
addMapping("canBePushed", AbstractHorse.class, "func_70104_M");
addMapping("getSoundVolume", AbstractHorse.class, "func_70599_aP");
addMapping("isMovementBlocked", AbstractHorse.class, "func_70610_aX");
addMapping("isOnLadder", AbstractHorse.class, "func_70617_f_");
addMapping("getTalkInterval", AbstractHorse.class, "func_70627_aG");
addMapping("onLivingUpdate", AbstractHorse.class, "func_70636_d");
addMapping("getMaxSpawnedInChunk", AbstractHorse.class, "func_70641_bl");
addMapping("onDeath", AbstractHorse.class, "func_70645_a");
addMapping("isBreedingItem", AbstractHorse.class, "func_70877_b");
addMapping("canMateWith", AbstractHorse.class, "func_70878_b");
addMapping("onInventoryChanged", AbstractHorse.class, "func_76316_a");
addMapping("canBeSteered", AbstractHorse.class, "func_82171_bF");
addMapping("createChild", AbstractHorse.class, "func_90011_a");
addMapping("setScaleForAge", AbstractHorse.class, "func_98054_a");
addMapping("canBeLeashedTo", EntityAmbientCreature.class, "func_184652_a");
addMapping("setInLove", EntityAnimal.class, "func_146082_f");
addMapping("consumeItemFromStack", EntityAnimal.class, "func_175505_a");
addMapping("getBlockPathWeight", EntityAnimal.class, "func_180484_a");
addMapping("processInteract", EntityAnimal.class, "func_184645_a");
addMapping("getLoveCause", EntityAnimal.class, "func_191993_do");
addMapping("writeEntityToNBT", EntityAnimal.class, "func_70014_b");
addMapping("getYOffset", EntityAnimal.class, "func_70033_W");
addMapping("readEntityFromNBT", EntityAnimal.class, "func_70037_a");
addMapping("attackEntityFrom", EntityAnimal.class, "func_70097_a");
addMapping("handleStatusUpdate", EntityAnimal.class, "func_70103_a");
addMapping("getCanSpawnHere", EntityAnimal.class, "func_70601_bi");
addMapping("updateAITasks", EntityAnimal.class, "func_70619_bc");
addMapping("getTalkInterval", EntityAnimal.class, "func_70627_aG");
addMapping("onLivingUpdate", EntityAnimal.class, "func_70636_d");
addMapping("canDespawn", EntityAnimal.class, "func_70692_ba");
addMapping("getExperiencePoints", EntityAnimal.class, "func_70693_a");
addMapping("resetInLove", EntityAnimal.class, "func_70875_t");
addMapping("isBreedingItem", EntityAnimal.class, "func_70877_b");
addMapping("canMateWith", EntityAnimal.class, "func_70878_b");
addMapping("isInLove", EntityAnimal.class, "func_70880_s");
addMapping("applyEntityAttributes", EntityBat.class, "func_110147_ax");
addMapping("doesEntityNotTriggerPressurePlate", EntityBat.class, "func_145773_az");
addMapping("isDateAroundHalloween", EntityBat.class, "func_175569_a");
addMapping("fall", EntityBat.class, "func_180430_e");
addMapping("updateFallState", EntityBat.class, "func_184231_a");
addMapping("getHurtSound", EntityBat.class, "func_184601_bQ");
addMapping("getDeathSound", EntityBat.class, "func_184615_bR");
addMapping("getAmbientSound", EntityBat.class, "func_184639_G");
addMapping("getLootTable", EntityBat.class, "func_184647_J");
addMapping("registerFixesBat", EntityBat.class, "func_189754_b");
addMapping("writeEntityToNBT", EntityBat.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityBat.class, "func_70037_a");
addMapping("canTriggerWalking", EntityBat.class, "func_70041_e_");
addMapping("getEyeHeight", EntityBat.class, "func_70047_e");
addMapping("onUpdate", EntityBat.class, "func_70071_h_");
addMapping("entityInit", EntityBat.class, "func_70088_a");
addMapping("attackEntityFrom", EntityBat.class, "func_70097_a");
addMapping("canBePushed", EntityBat.class, "func_70104_M");
addMapping("getSoundVolume", EntityBat.class, "func_70599_aP");
addMapping("getCanSpawnHere", EntityBat.class, "func_70601_bi");
addMapping("updateAITasks", EntityBat.class, "func_70619_bc");
addMapping("getSoundPitch", EntityBat.class, "func_70647_i");
addMapping("collideWithEntity", EntityBat.class, "func_82167_n");
addMapping("getIsBatHanging", EntityBat.class, "func_82235_h");
addMapping("setIsBatHanging", EntityBat.class, "func_82236_f");
addMapping("collideWithNearbyEntities", EntityBat.class, "func_85033_bc");
addMapping("applyEntityAttributes", EntityChicken.class, "func_110147_ax");
addMapping("isChickenJockey", EntityChicken.class, "func_152116_bZ");
addMapping("setChickenJockey", EntityChicken.class, "func_152117_i");
addMapping("playStepSound", EntityChicken.class, "func_180429_a");
addMapping("fall", EntityChicken.class, "func_180430_e");
addMapping("updatePassenger", EntityChicken.class, "func_184232_k");
addMapping("getHurtSound", EntityChicken.class, "func_184601_bQ");
addMapping("getDeathSound", EntityChicken.class, "func_184615_bR");
addMapping("getAmbientSound", EntityChicken.class, "func_184639_G");
addMapping("getLootTable", EntityChicken.class, "func_184647_J");
addMapping("initEntityAI", EntityChicken.class, "func_184651_r");
addMapping("registerFixesChicken", EntityChicken.class, "func_189789_b");
addMapping("writeEntityToNBT", EntityChicken.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityChicken.class, "func_70037_a");
addMapping("getEyeHeight", EntityChicken.class, "func_70047_e");
addMapping("onLivingUpdate", EntityChicken.class, "func_70636_d");
addMapping("canDespawn", EntityChicken.class, "func_70692_ba");
addMapping("getExperiencePoints", EntityChicken.class, "func_70693_a");
addMapping("isBreedingItem", EntityChicken.class, "func_70877_b");
addMapping("createChild", EntityChicken.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityCow.class, "func_110147_ax");
addMapping("playStepSound", EntityCow.class, "func_180429_a");
addMapping("getHurtSound", EntityCow.class, "func_184601_bQ");
addMapping("getDeathSound", EntityCow.class, "func_184615_bR");
addMapping("getAmbientSound", EntityCow.class, "func_184639_G");
addMapping("processInteract", EntityCow.class, "func_184645_a");
addMapping("getLootTable", EntityCow.class, "func_184647_J");
addMapping("initEntityAI", EntityCow.class, "func_184651_r");
addMapping("registerFixesCow", EntityCow.class, "func_189790_b");
addMapping("getEyeHeight", EntityCow.class, "func_70047_e");
addMapping("getSoundVolume", EntityCow.class, "func_70599_aP");
addMapping("createChild", EntityCow.class, "func_90011_a");
addMapping("getHurtSound", EntityDonkey.class, "func_184601_bQ");
addMapping("getDeathSound", EntityDonkey.class, "func_184615_bR");
addMapping("getAmbientSound", EntityDonkey.class, "func_184639_G");
addMapping("getLootTable", EntityDonkey.class, "func_184647_J");
addMapping("registerFixesDonkey", EntityDonkey.class, "func_190699_b");
addMapping("canMateWith", EntityDonkey.class, "func_70878_b");
addMapping("createChild", EntityDonkey.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityHorse.class, "func_110147_ax");
addMapping("getHorseVariant", EntityHorse.class, "func_110202_bQ");
addMapping("getVariantTexturePaths", EntityHorse.class, "func_110212_cp");
addMapping("resetTexturePrefix", EntityHorse.class, "func_110230_cF");
addMapping("updateHorseSlots", EntityHorse.class, "func_110232_cE");
addMapping("setHorseVariant", EntityHorse.class, "func_110235_q");
addMapping("setHorseTexturePaths", EntityHorse.class, "func_110247_cG");
addMapping("getHorseTexture", EntityHorse.class, "func_110264_co");
addMapping("setHorseArmorStack", EntityHorse.class, "func_146086_d");
addMapping("onInitialSpawn", EntityHorse.class, "func_180482_a");
addMapping("getHurtSound", EntityHorse.class, "func_184601_bQ");
addMapping("getDeathSound", EntityHorse.class, "func_184615_bR");
addMapping("getAmbientSound", EntityHorse.class, "func_184639_G");
addMapping("processInteract", EntityHorse.class, "func_184645_a");
addMapping("getLootTable", EntityHorse.class, "func_184647_J");
addMapping("getHorseArmorType", EntityHorse.class, "func_184783_dl");
addMapping("getAngrySound", EntityHorse.class, "func_184785_dv");
addMapping("registerFixesHorse", EntityHorse.class, "func_189803_b");
addMapping("wearsArmor", EntityHorse.class, "func_190677_dK");
addMapping("playGallopSound", EntityHorse.class, "func_190680_a");
addMapping("isArmor", EntityHorse.class, "func_190682_f");
addMapping("writeEntityToNBT", EntityHorse.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityHorse.class, "func_70037_a");
addMapping("onUpdate", EntityHorse.class, "func_70071_h_");
addMapping("entityInit", EntityHorse.class, "func_70088_a");
addMapping("canMateWith", EntityHorse.class, "func_70878_b");
addMapping("onInventoryChanged", EntityHorse.class, "func_76316_a");
addMapping("createChild", EntityHorse.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityLlama.class, "func_110147_ax");
addMapping("updateHorseSlots", EntityLlama.class, "func_110232_cE");
addMapping("playStepSound", EntityLlama.class, "func_180429_a");
addMapping("fall", EntityLlama.class, "func_180430_e");
addMapping("onInitialSpawn", EntityLlama.class, "func_180482_a");
addMapping("updatePassenger", EntityLlama.class, "func_184232_k");
addMapping("getHurtSound", EntityLlama.class, "func_184601_bQ");
addMapping("getDeathSound", EntityLlama.class, "func_184615_bR");
addMapping("getAmbientSound", EntityLlama.class, "func_184639_G");
addMapping("getLootTable", EntityLlama.class, "func_184647_J");
addMapping("initEntityAI", EntityLlama.class, "func_184651_r");
addMapping("setSwingingArms", EntityLlama.class, "func_184724_a");
addMapping("getAngrySound", EntityLlama.class, "func_184785_dv");
addMapping("followLeashSpeed", EntityLlama.class, "func_190634_dg");
addMapping("getMaxTemper", EntityLlama.class, "func_190676_dC");
addMapping("wearsArmor", EntityLlama.class, "func_190677_dK");
addMapping("handleEating", EntityLlama.class, "func_190678_b");
addMapping("followMother", EntityLlama.class, "func_190679_dD");
addMapping("isArmor", EntityLlama.class, "func_190682_f");
addMapping("canEatGrass", EntityLlama.class, "func_190684_dE");
addMapping("canBeSaddled", EntityLlama.class, "func_190685_dA");
addMapping("getInventorySize", EntityLlama.class, "func_190686_di");
addMapping("makeMad", EntityLlama.class, "func_190687_dF");
addMapping("getInventoryColumns", EntityLlama.class, "func_190696_dl");
addMapping("playChestEquipSound", EntityLlama.class, "func_190697_dk");
addMapping("setColorByItem", EntityLlama.class, "func_190702_g");
addMapping("getColor", EntityLlama.class, "func_190704_dO");
addMapping("setRandomStrength", EntityLlama.class, "func_190705_dT");
addMapping("setStrength", EntityLlama.class, "func_190706_p");
addMapping("getStrength", EntityLlama.class, "func_190707_dL");
addMapping("leaveCaravan", EntityLlama.class, "func_190709_dP");
addMapping("setVariant", EntityLlama.class, "func_190710_o");
addMapping("setColor", EntityLlama.class, "func_190711_a");
addMapping("hasCaravanTrail", EntityLlama.class, "func_190712_dQ");
addMapping("spit", EntityLlama.class, "func_190713_e");
addMapping("setDidSpit", EntityLlama.class, "func_190714_x");
addMapping("joinCaravan", EntityLlama.class, "func_190715_a");
addMapping("getCaravanHead", EntityLlama.class, "func_190716_dS");
addMapping("hasColor", EntityLlama.class, "func_190717_dN");
addMapping("inCaravan", EntityLlama.class, "func_190718_dR");
addMapping("getVariant", EntityLlama.class, "func_190719_dM");
addMapping("writeEntityToNBT", EntityLlama.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityLlama.class, "func_70037_a");
addMapping("getMountedYOffset", EntityLlama.class, "func_70042_X");
addMapping("entityInit", EntityLlama.class, "func_70088_a");
addMapping("isMovementBlocked", EntityLlama.class, "func_70610_aX");
addMapping("canMateWith", EntityLlama.class, "func_70878_b");
addMapping("onInventoryChanged", EntityLlama.class, "func_76316_a");
addMapping("canBeSteered", EntityLlama.class, "func_82171_bF");
addMapping("attackEntityWithRangedAttack", EntityLlama.class, "func_82196_d");
addMapping("createChild", EntityLlama.class, "func_90011_a");
addMapping("processInteract", EntityMooshroom.class, "func_184645_a");
addMapping("getLootTable", EntityMooshroom.class, "func_184647_J");
addMapping("registerFixesMooshroom", EntityMooshroom.class, "func_189791_c");
addMapping("createChild", EntityMooshroom.class, "func_90011_a");
addMapping("getHurtSound", EntityMule.class, "func_184601_bQ");
addMapping("getDeathSound", EntityMule.class, "func_184615_bR");
addMapping("getAmbientSound", EntityMule.class, "func_184639_G");
addMapping("getLootTable", EntityMule.class, "func_184647_J");
addMapping("playChestEquipSound", EntityMule.class, "func_190697_dk");
addMapping("registerFixesMule", EntityMule.class, "func_190700_b");
addMapping("applyEntityAttributes", EntityOcelot.class, "func_110147_ax");
addMapping("setupTamedAI", EntityOcelot.class, "func_175544_ck");
addMapping("fall", EntityOcelot.class, "func_180430_e");
addMapping("onInitialSpawn", EntityOcelot.class, "func_180482_a");
addMapping("getHurtSound", EntityOcelot.class, "func_184601_bQ");
addMapping("getDeathSound", EntityOcelot.class, "func_184615_bR");
addMapping("getAmbientSound", EntityOcelot.class, "func_184639_G");
addMapping("processInteract", EntityOcelot.class, "func_184645_a");
addMapping("getLootTable", EntityOcelot.class, "func_184647_J");
addMapping("initEntityAI", EntityOcelot.class, "func_184651_r");
addMapping("registerFixesOcelot", EntityOcelot.class, "func_189787_b");
addMapping("getName", EntityOcelot.class, "func_70005_c_");
addMapping("writeEntityToNBT", EntityOcelot.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityOcelot.class, "func_70037_a");
addMapping("isNotColliding", EntityOcelot.class, "func_70058_J");
addMapping("entityInit", EntityOcelot.class, "func_70088_a");
addMapping("attackEntityFrom", EntityOcelot.class, "func_70097_a");
addMapping("getSoundVolume", EntityOcelot.class, "func_70599_aP");
addMapping("getCanSpawnHere", EntityOcelot.class, "func_70601_bi");
addMapping("updateAITasks", EntityOcelot.class, "func_70619_bc");
addMapping("attackEntityAsMob", EntityOcelot.class, "func_70652_k");
addMapping("canDespawn", EntityOcelot.class, "func_70692_ba");
addMapping("isBreedingItem", EntityOcelot.class, "func_70877_b");
addMapping("canMateWith", EntityOcelot.class, "func_70878_b");
addMapping("setTameSkin", EntityOcelot.class, "func_70912_b");
addMapping("getTameSkin", EntityOcelot.class, "func_70913_u");
addMapping("createChild", EntityOcelot.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityParrot.class, "func_110147_ax");
addMapping("createNavigator", EntityParrot.class, "func_175447_b");
addMapping("playStepSound", EntityParrot.class, "func_180429_a");
addMapping("fall", EntityParrot.class, "func_180430_e");
addMapping("onInitialSpawn", EntityParrot.class, "func_180482_a");
addMapping("getSoundCategory", EntityParrot.class, "func_184176_by");
addMapping("updateFallState", EntityParrot.class, "func_184231_a");
addMapping("getHurtSound", EntityParrot.class, "func_184601_bQ");
addMapping("getDeathSound", EntityParrot.class, "func_184615_bR");
addMapping("getAmbientSound", EntityParrot.class, "func_184639_G");
addMapping("processInteract", EntityParrot.class, "func_184645_a");
addMapping("getLootTable", EntityParrot.class, "func_184647_J");
addMapping("initEntityAI", EntityParrot.class, "func_184651_r");
addMapping("playFlySound", EntityParrot.class, "func_191954_d");
addMapping("makeFlySound", EntityParrot.class, "func_191957_ae");
addMapping("setPartying", EntityParrot.class, "func_191987_a");
addMapping("setVariant", EntityParrot.class, "func_191997_m");
addMapping("getVariant", EntityParrot.class, "func_191998_ds");
addMapping("getImitatedSound", EntityParrot.class, "func_191999_g");
addMapping("getPitch", EntityParrot.class, "func_192000_b");
addMapping("calculateFlapping", EntityParrot.class, "func_192001_dv");
addMapping("isFlying", EntityParrot.class, "func_192002_a");
addMapping("getAmbientSound", EntityParrot.class, "func_192003_a");
addMapping("isPartying", EntityParrot.class, "func_192004_dr");
addMapping("playAmbientSound", EntityParrot.class, "func_192005_a");
addMapping("playMimicSound", EntityParrot.class, "func_192006_b");
addMapping("writeEntityToNBT", EntityParrot.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityParrot.class, "func_70037_a");
addMapping("getEyeHeight", EntityParrot.class, "func_70047_e");
addMapping("entityInit", EntityParrot.class, "func_70088_a");
addMapping("attackEntityFrom", EntityParrot.class, "func_70097_a");
addMapping("canBePushed", EntityParrot.class, "func_70104_M");
addMapping("getCanSpawnHere", EntityParrot.class, "func_70601_bi");
addMapping("onLivingUpdate", EntityParrot.class, "func_70636_d");
addMapping("getSoundPitch", EntityParrot.class, "func_70647_i");
addMapping("attackEntityAsMob", EntityParrot.class, "func_70652_k");
addMapping("isBreedingItem", EntityParrot.class, "func_70877_b");
addMapping("canMateWith", EntityParrot.class, "func_70878_b");
addMapping("collideWithEntity", EntityParrot.class, "func_82167_n");
addMapping("createChild", EntityParrot.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityPig.class, "func_110147_ax");
addMapping("playStepSound", EntityPig.class, "func_180429_a");
addMapping("getControllingPassenger", EntityPig.class, "func_184179_bs");
addMapping("notifyDataManagerChange", EntityPig.class, "func_184206_a");
addMapping("getHurtSound", EntityPig.class, "func_184601_bQ");
addMapping("getDeathSound", EntityPig.class, "func_184615_bR");
addMapping("getAmbientSound", EntityPig.class, "func_184639_G");
addMapping("processInteract", EntityPig.class, "func_184645_a");
addMapping("getLootTable", EntityPig.class, "func_184647_J");
addMapping("initEntityAI", EntityPig.class, "func_184651_r");
addMapping("boost", EntityPig.class, "func_184762_da");
addMapping("registerFixesPig", EntityPig.class, "func_189792_b");
addMapping("travel", EntityPig.class, "func_191986_a");
addMapping("writeEntityToNBT", EntityPig.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityPig.class, "func_70037_a");
addMapping("onStruckByLightning", EntityPig.class, "func_70077_a");
addMapping("entityInit", EntityPig.class, "func_70088_a");
addMapping("onDeath", EntityPig.class, "func_70645_a");
addMapping("isBreedingItem", EntityPig.class, "func_70877_b");
addMapping("setSaddled", EntityPig.class, "func_70900_e");
addMapping("getSaddled", EntityPig.class, "func_70901_n");
addMapping("canBeSteered", EntityPig.class, "func_82171_bF");
addMapping("createChild", EntityPig.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityRabbit.class, "func_110147_ax");
addMapping("spawnRunningParticles", EntityRabbit.class, "func_174830_Y");
addMapping("getJumpUpwardsMotion", EntityRabbit.class, "func_175134_bD");
addMapping("setMovementSpeed", EntityRabbit.class, "func_175515_b");
addMapping("checkLandingDelay", EntityRabbit.class, "func_175517_cu");
addMapping("enableJumpControl", EntityRabbit.class, "func_175518_cr");
addMapping("disableJumpControl", EntityRabbit.class, "func_175520_cs");
addMapping("setJumpCompletion", EntityRabbit.class, "func_175521_o");
addMapping("isRabbitBreedingItem", EntityRabbit.class, "func_175525_a");
addMapping("createEatingParticles", EntityRabbit.class, "func_175528_cn");
addMapping("setRabbitType", EntityRabbit.class, "func_175529_r");
addMapping("updateMoveTypeDuration", EntityRabbit.class, "func_175530_ct");
addMapping("getRabbitType", EntityRabbit.class, "func_175531_cl");
addMapping("calculateRotationYaw", EntityRabbit.class, "func_175533_a");
addMapping("isCarrotEaten", EntityRabbit.class, "func_175534_cv");
addMapping("onInitialSpawn", EntityRabbit.class, "func_180482_a");
addMapping("getSoundCategory", EntityRabbit.class, "func_184176_by");
addMapping("getHurtSound", EntityRabbit.class, "func_184601_bQ");
addMapping("getDeathSound", EntityRabbit.class, "func_184615_bR");
addMapping("getAmbientSound", EntityRabbit.class, "func_184639_G");
addMapping("getLootTable", EntityRabbit.class, "func_184647_J");
addMapping("initEntityAI", EntityRabbit.class, "func_184651_r");
addMapping("startJumping", EntityRabbit.class, "func_184770_cZ");
addMapping("getJumpSound", EntityRabbit.class, "func_184771_da");
addMapping("getRandomRabbitType", EntityRabbit.class, "func_184772_dk");
addMapping("registerFixesRabbit", EntityRabbit.class, "func_189801_b");
addMapping("writeEntityToNBT", EntityRabbit.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityRabbit.class, "func_70037_a");
addMapping("entityInit", EntityRabbit.class, "func_70088_a");
addMapping("attackEntityFrom", EntityRabbit.class, "func_70097_a");
addMapping("handleStatusUpdate", EntityRabbit.class, "func_70103_a");
addMapping("updateAITasks", EntityRabbit.class, "func_70619_bc");
addMapping("onLivingUpdate", EntityRabbit.class, "func_70636_d");
addMapping("setJumping", EntityRabbit.class, "func_70637_d");
addMapping("attackEntityAsMob", EntityRabbit.class, "func_70652_k");
addMapping("jump", EntityRabbit.class, "func_70664_aZ");
addMapping("isBreedingItem", EntityRabbit.class, "func_70877_b");
addMapping("createChild", EntityRabbit.class, "func_90011_a");
addMapping("applyEntityAttributes", EntitySheep.class, "func_110147_ax");
addMapping("getFleeceColor", EntitySheep.class, "func_175509_cj");
addMapping("getRandomSheepColor", EntitySheep.class, "func_175510_a");
addMapping("getDyeColorMixFromParents", EntitySheep.class, "func_175511_a");
addMapping("setFleeceColor", EntitySheep.class, "func_175512_b");
addMapping("getDyeRgb", EntitySheep.class, "func_175513_a");
addMapping("playStepSound", EntitySheep.class, "func_180429_a");
addMapping("onInitialSpawn", EntitySheep.class, "func_180482_a");
addMapping("getHurtSound", EntitySheep.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySheep.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySheep.class, "func_184639_G");
addMapping("processInteract", EntitySheep.class, "func_184645_a");
addMapping("getLootTable", EntitySheep.class, "func_184647_J");
addMapping("initEntityAI", EntitySheep.class, "func_184651_r");
addMapping("registerFixesSheep", EntitySheep.class, "func_189802_b");
addMapping("createSheepColor", EntitySheep.class, "func_192020_c");
addMapping("writeEntityToNBT", EntitySheep.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySheep.class, "func_70037_a");
addMapping("getEyeHeight", EntitySheep.class, "func_70047_e");
addMapping("entityInit", EntitySheep.class, "func_70088_a");
addMapping("handleStatusUpdate", EntitySheep.class, "func_70103_a");
addMapping("eatGrassBonus", EntitySheep.class, "func_70615_aA");
addMapping("updateAITasks", EntitySheep.class, "func_70619_bc");
addMapping("onLivingUpdate", EntitySheep.class, "func_70636_d");
addMapping("getHeadRotationAngleX", EntitySheep.class, "func_70890_k");
addMapping("getSheared", EntitySheep.class, "func_70892_o");
addMapping("setSheared", EntitySheep.class, "func_70893_e");
addMapping("getHeadRotationPointY", EntitySheep.class, "func_70894_j");
addMapping("createChild", EntitySheep.class, "func_90011_a");
addMapping("setEntityOnShoulder", EntityShoulderRiding.class, "func_191994_f");
addMapping("canSitOnShoulder", EntityShoulderRiding.class, "func_191995_du");
addMapping("onUpdate", EntityShoulderRiding.class, "func_70071_h_");
addMapping("applyEntityAttributes", EntitySkeletonHorse.class, "func_110147_ax");
addMapping("getHurtSound", EntitySkeletonHorse.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySkeletonHorse.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySkeletonHorse.class, "func_184639_G");
addMapping("processInteract", EntitySkeletonHorse.class, "func_184645_a");
addMapping("getLootTable", EntitySkeletonHorse.class, "func_184647_J");
addMapping("isTrap", EntitySkeletonHorse.class, "func_190690_dh");
addMapping("setTrap", EntitySkeletonHorse.class, "func_190691_p");
addMapping("registerFixesSkeletonHorse", EntitySkeletonHorse.class, "func_190692_b");
addMapping("writeEntityToNBT", EntitySkeletonHorse.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySkeletonHorse.class, "func_70037_a");
addMapping("getMountedYOffset", EntitySkeletonHorse.class, "func_70042_X");
addMapping("onLivingUpdate", EntitySkeletonHorse.class, "func_70636_d");
addMapping("getCreatureAttribute", EntitySkeletonHorse.class, "func_70668_bt");
addMapping("applyEntityAttributes", EntitySquid.class, "func_110147_ax");
addMapping("hasMovementVector", EntitySquid.class, "func_175567_n");
addMapping("setMovementVector", EntitySquid.class, "func_175568_b");
addMapping("getHurtSound", EntitySquid.class, "func_184601_bQ");
addMapping("getDeathSound", EntitySquid.class, "func_184615_bR");
addMapping("getAmbientSound", EntitySquid.class, "func_184639_G");
addMapping("getLootTable", EntitySquid.class, "func_184647_J");
addMapping("initEntityAI", EntitySquid.class, "func_184651_r");
addMapping("registerFixesSquid", EntitySquid.class, "func_189804_b");
addMapping("travel", EntitySquid.class, "func_191986_a");
addMapping("canTriggerWalking", EntitySquid.class, "func_70041_e_");
addMapping("getEyeHeight", EntitySquid.class, "func_70047_e");
addMapping("handleStatusUpdate", EntitySquid.class, "func_70103_a");
addMapping("getSoundVolume", EntitySquid.class, "func_70599_aP");
addMapping("getCanSpawnHere", EntitySquid.class, "func_70601_bi");
addMapping("onLivingUpdate", EntitySquid.class, "func_70636_d");
addMapping("shouldAttackEntity", EntityTameable.class, "func_142018_a");
addMapping("isOwner", EntityTameable.class, "func_152114_e");
addMapping("setupTamedAI", EntityTameable.class, "func_175544_ck");
addMapping("isOnSameTeam", EntityTameable.class, "func_184191_r");
addMapping("canBeLeashedTo", EntityTameable.class, "func_184652_a");
addMapping("getOwnerId", EntityTameable.class, "func_184753_b");
addMapping("setOwnerId", EntityTameable.class, "func_184754_b");
addMapping("setTamedBy", EntityTameable.class, "func_193101_c");
addMapping("writeEntityToNBT", EntityTameable.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityTameable.class, "func_70037_a");
addMapping("entityInit", EntityTameable.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityTameable.class, "func_70103_a");
addMapping("onDeath", EntityTameable.class, "func_70645_a");
addMapping("getOwner", EntityTameable.class, "func_70902_q");
addMapping("setTamed", EntityTameable.class, "func_70903_f");
addMapping("setSitting", EntityTameable.class, "func_70904_g");
addMapping("isSitting", EntityTameable.class, "func_70906_o");
addMapping("getAISit", EntityTameable.class, "func_70907_r");
addMapping("playTameEffect", EntityTameable.class, "func_70908_e");
addMapping("isTamed", EntityTameable.class, "func_70909_n");
addMapping("getTeam", EntityTameable.class, "func_96124_cp");
addMapping("applyEntityAttributes", EntityVillager.class, "func_110147_ax");
addMapping("verifySellingItem", EntityVillager.class, "func_110297_a_");
addMapping("getDisplayName", EntityVillager.class, "func_145748_c_");
addMapping("replaceItemInInventory", EntityVillager.class, "func_174820_d");
addMapping("updateEquipmentIfNeeded", EntityVillager.class, "func_175445_a");
addMapping("onGrowingAdult", EntityVillager.class, "func_175500_n");
addMapping("setIsWillingToMate", EntityVillager.class, "func_175549_o");
addMapping("getIsWillingToMate", EntityVillager.class, "func_175550_n");
addMapping("getVillagerInventory", EntityVillager.class, "func_175551_co");
addMapping("setAdditionalAItasks", EntityVillager.class, "func_175552_ct");
addMapping("hasEnoughFoodToBreed", EntityVillager.class, "func_175553_cp");
addMapping("populateBuyingList", EntityVillager.class, "func_175554_cu");
addMapping("canAbondonItems", EntityVillager.class, "func_175555_cq");
addMapping("isFarmItemInInventory", EntityVillager.class, "func_175556_cs");
addMapping("wantsMoreFood", EntityVillager.class, "func_175557_cr");
addMapping("canVillagerPickupItem", EntityVillager.class, "func_175558_a");
addMapping("hasEnoughItems", EntityVillager.class, "func_175559_s");
addMapping("onInitialSpawn", EntityVillager.class, "func_180482_a");
addMapping("spawnParticles", EntityVillager.class, "func_180489_a");
addMapping("getHurtSound", EntityVillager.class, "func_184601_bQ");
addMapping("getDeathSound", EntityVillager.class, "func_184615_bR");
addMapping("getAmbientSound", EntityVillager.class, "func_184639_G");
addMapping("processInteract", EntityVillager.class, "func_184645_a");
addMapping("getLootTable", EntityVillager.class, "func_184647_J");
addMapping("initEntityAI", EntityVillager.class, "func_184651_r");
addMapping("canBeLeashedTo", EntityVillager.class, "func_184652_a");
addMapping("registerFixesVillager", EntityVillager.class, "func_189785_b");
addMapping("getWorld", EntityVillager.class, "func_190670_t_");
addMapping("getPos", EntityVillager.class, "func_190671_u_");
addMapping("finalizeMobSpawn", EntityVillager.class, "func_190672_a");
addMapping("writeEntityToNBT", EntityVillager.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityVillager.class, "func_70037_a");
addMapping("getEyeHeight", EntityVillager.class, "func_70047_e");
addMapping("onStruckByLightning", EntityVillager.class, "func_70077_a");
addMapping("entityInit", EntityVillager.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityVillager.class, "func_70103_a");
addMapping("setRevengeTarget", EntityVillager.class, "func_70604_c");
addMapping("updateAITasks", EntityVillager.class, "func_70619_bc");
addMapping("onDeath", EntityVillager.class, "func_70645_a");
addMapping("canDespawn", EntityVillager.class, "func_70692_ba");
addMapping("setRecipes", EntityVillager.class, "func_70930_a");
addMapping("getCustomer", EntityVillager.class, "func_70931_l_");
addMapping("setCustomer", EntityVillager.class, "func_70932_a_");
addMapping("useRecipe", EntityVillager.class, "func_70933_a");
addMapping("getRecipes", EntityVillager.class, "func_70934_b");
addMapping("setProfession", EntityVillager.class, "func_70938_b");
addMapping("setPlaying", EntityVillager.class, "func_70939_f");
addMapping("isTrading", EntityVillager.class, "func_70940_q");
addMapping("isMating", EntityVillager.class, "func_70941_o");
addMapping("isPlaying", EntityVillager.class, "func_70945_p");
addMapping("getProfession", EntityVillager.class, "func_70946_n");
addMapping("setMating", EntityVillager.class, "func_70947_e");
addMapping("setLookingForHome", EntityVillager.class, "func_82187_q");
addMapping("createChild", EntityVillager.class, "func_90011_a");
addMapping("onEntityUpdate", EntityWaterMob.class, "func_70030_z");
addMapping("isNotColliding", EntityWaterMob.class, "func_70058_J");
addMapping("getCanSpawnHere", EntityWaterMob.class, "func_70601_bi");
addMapping("getTalkInterval", EntityWaterMob.class, "func_70627_aG");
addMapping("canBreatheUnderwater", EntityWaterMob.class, "func_70648_aU");
addMapping("canDespawn", EntityWaterMob.class, "func_70692_ba");
addMapping("getExperiencePoints", EntityWaterMob.class, "func_70693_a");
addMapping("isPushedByWater", EntityWaterMob.class, "func_96092_aw");
addMapping("applyEntityAttributes", EntityWolf.class, "func_110147_ax");
addMapping("shouldAttackEntity", EntityWolf.class, "func_142018_a");
addMapping("getCollarColor", EntityWolf.class, "func_175546_cu");
addMapping("setCollarColor", EntityWolf.class, "func_175547_a");
addMapping("playStepSound", EntityWolf.class, "func_180429_a");
addMapping("getHurtSound", EntityWolf.class, "func_184601_bQ");
addMapping("getDeathSound", EntityWolf.class, "func_184615_bR");
addMapping("getAmbientSound", EntityWolf.class, "func_184639_G");
addMapping("processInteract", EntityWolf.class, "func_184645_a");
addMapping("getLootTable", EntityWolf.class, "func_184647_J");
addMapping("initEntityAI", EntityWolf.class, "func_184651_r");
addMapping("canBeLeashedTo", EntityWolf.class, "func_184652_a");
addMapping("registerFixesWolf", EntityWolf.class, "func_189788_b");
addMapping("writeEntityToNBT", EntityWolf.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityWolf.class, "func_70037_a");
addMapping("getEyeHeight", EntityWolf.class, "func_70047_e");
addMapping("onUpdate", EntityWolf.class, "func_70071_h_");
addMapping("entityInit", EntityWolf.class, "func_70088_a");
addMapping("attackEntityFrom", EntityWolf.class, "func_70097_a");
addMapping("handleStatusUpdate", EntityWolf.class, "func_70103_a");
addMapping("getSoundVolume", EntityWolf.class, "func_70599_aP");
addMapping("updateAITasks", EntityWolf.class, "func_70619_bc");
addMapping("setAttackTarget", EntityWolf.class, "func_70624_b");
addMapping("onLivingUpdate", EntityWolf.class, "func_70636_d");
addMapping("getMaxSpawnedInChunk", EntityWolf.class, "func_70641_bl");
addMapping("getVerticalFaceSpeed", EntityWolf.class, "func_70646_bf");
addMapping("attackEntityAsMob", EntityWolf.class, "func_70652_k");
addMapping("isBreedingItem", EntityWolf.class, "func_70877_b");
addMapping("canMateWith", EntityWolf.class, "func_70878_b");
addMapping("setTamed", EntityWolf.class, "func_70903_f");
addMapping("getShadingWhileWet", EntityWolf.class, "func_70915_j");
addMapping("setAngry", EntityWolf.class, "func_70916_h");
addMapping("getInterestedAngle", EntityWolf.class, "func_70917_k");
addMapping("setBegging", EntityWolf.class, "func_70918_i");
addMapping("isAngry", EntityWolf.class, "func_70919_bu");
addMapping("getTailRotation", EntityWolf.class, "func_70920_v");
addMapping("isWolfWet", EntityWolf.class, "func_70921_u");
addMapping("isBegging", EntityWolf.class, "func_70922_bv");
addMapping("getShakeAngle", EntityWolf.class, "func_70923_f");
addMapping("createChild", EntityWolf.class, "func_90011_a");
addMapping("applyEntityAttributes", EntityZombieHorse.class, "func_110147_ax");
addMapping("getHurtSound", EntityZombieHorse.class, "func_184601_bQ");
addMapping("getDeathSound", EntityZombieHorse.class, "func_184615_bR");
addMapping("getAmbientSound", EntityZombieHorse.class, "func_184639_G");
addMapping("processInteract", EntityZombieHorse.class, "func_184645_a");
addMapping("getLootTable", EntityZombieHorse.class, "func_184647_J");
addMapping("registerFixesZombieHorse", EntityZombieHorse.class, "func_190693_b");
addMapping("getCreatureAttribute", EntityZombieHorse.class, "func_70668_bt");
addMapping("getHash", HorseArmorType.class, "func_188573_b");
addMapping("getTextureName", HorseArmorType.class, "func_188574_d");
addMapping("getByOrdinal", HorseArmorType.class, "func_188575_a");
addMapping("getByItem", HorseArmorType.class, "func_188576_a");
addMapping("isHorseArmor", HorseArmorType.class, "func_188577_b");
addMapping("getProtection", HorseArmorType.class, "func_188578_c");
addMapping("getOrdinal", HorseArmorType.class, "func_188579_a");
addMapping("getByItemStack", HorseArmorType.class, "func_188580_a");
addMapping("getAbsorptionAmount", EntityPlayer.class, "func_110139_bj");
addMapping("applyEntityAttributes", EntityPlayer.class, "func_110147_ax");
addMapping("setAbsorptionAmount", EntityPlayer.class, "func_110149_m");
addMapping("getDisplayName", EntityPlayer.class, "func_145748_c_");
addMapping("getUUID", EntityPlayer.class, "func_146094_a");
addMapping("dropItem", EntityPlayer.class, "func_146097_a");
addMapping("getGameProfile", EntityPlayer.class, "func_146103_bH");
addMapping("sendStatusMessage", EntityPlayer.class, "func_146105_b");
addMapping("sendCommandFeedback", EntityPlayer.class, "func_174792_t_");
addMapping("replaceItemInInventory", EntityPlayer.class, "func_174820_d");
addMapping("getXPSeed", EntityPlayer.class, "func_175138_ci");
addMapping("setRenderOffsetForSleep", EntityPlayer.class, "func_175139_a");
addMapping("hasReducedDebug", EntityPlayer.class, "func_175140_cp");
addMapping("openEditSign", EntityPlayer.class, "func_175141_a");
addMapping("isAllowEdit", EntityPlayer.class, "func_175142_cm");
addMapping("isInBed", EntityPlayer.class, "func_175143_p");
addMapping("isUser", EntityPlayer.class, "func_175144_cb");
addMapping("takeStat", EntityPlayer.class, "func_175145_a");
addMapping("canOpen", EntityPlayer.class, "func_175146_a");
addMapping("getOfflineUUID", EntityPlayer.class, "func_175147_b");
addMapping("isWearing", EntityPlayer.class, "func_175148_a");
addMapping("isSpectator", EntityPlayer.class, "func_175149_v");
addMapping("setReducedDebug", EntityPlayer.class, "func_175150_k");
addMapping("canPlayerEdit", EntityPlayer.class, "func_175151_a");
addMapping("fall", EntityPlayer.class, "func_180430_e");
addMapping("getBedSpawnLocation", EntityPlayer.class, "func_180467_a");
addMapping("displayGui", EntityPlayer.class, "func_180468_a");
addMapping("trySleep", EntityPlayer.class, "func_180469_a");
addMapping("getBedLocation", EntityPlayer.class, "func_180470_cg");
addMapping("displayVillagerTradeGui", EntityPlayer.class, "func_180472_a");
addMapping("setSpawnPoint", EntityPlayer.class, "func_180473_a");
addMapping("getSoundCategory", EntityPlayer.class, "func_184176_by");
addMapping("getSplashSound", EntityPlayer.class, "func_184181_aa");
addMapping("getSwimSound", EntityPlayer.class, "func_184184_Z");
addMapping("playSound", EntityPlayer.class, "func_184185_a");
addMapping("getArmorInventoryList", EntityPlayer.class, "func_184193_aE");
addMapping("setItemStackToSlot", EntityPlayer.class, "func_184201_a");
addMapping("dismountRidingEntity", EntityPlayer.class, "func_184210_p");
addMapping("getHeldEquipment", EntityPlayer.class, "func_184214_aD");
addMapping("getItemStackFromSlot", EntityPlayer.class, "func_184582_a");
addMapping("getFallSound", EntityPlayer.class, "func_184588_d");
addMapping("damageShield", EntityPlayer.class, "func_184590_k");
addMapping("getPrimaryHand", EntityPlayer.class, "func_184591_cq");
addMapping("getHurtSound", EntityPlayer.class, "func_184601_bQ");
addMapping("getDeathSound", EntityPlayer.class, "func_184615_bR");
addMapping("updateSize", EntityPlayer.class, "func_184808_cD");
addMapping("displayGuiEditCommandCart", EntityPlayer.class, "func_184809_a");
addMapping("spawnSweepParticles", EntityPlayer.class, "func_184810_cG");
addMapping("getCooldownTracker", EntityPlayer.class, "func_184811_cZ");
addMapping("isCreative", EntityPlayer.class, "func_184812_l_");
addMapping("getDigSpeed", EntityPlayer.class, "func_184813_a");
addMapping("openBook", EntityPlayer.class, "func_184814_a");
addMapping("createCooldownTracker", EntityPlayer.class, "func_184815_l");
addMapping("dropItemAndGetStack", EntityPlayer.class, "func_184816_a");
addMapping("getLuck", EntityPlayer.class, "func_184817_da");
addMapping("getCooldownPeriod", EntityPlayer.class, "func_184818_cX");
addMapping("setPrimaryHand", EntityPlayer.class, "func_184819_a");
addMapping("updateCape", EntityPlayer.class, "func_184820_o");
addMapping("resetCooldown", EntityPlayer.class, "func_184821_cY");
addMapping("canHarvestBlock", EntityPlayer.class, "func_184823_b");
addMapping("displayGuiCommandBlock", EntityPlayer.class, "func_184824_a");
addMapping("getCooledAttackStrength", EntityPlayer.class, "func_184825_o");
addMapping("openGuiHorseInventory", EntityPlayer.class, "func_184826_a");
addMapping("registerFixesPlayer", EntityPlayer.class, "func_189806_a");
addMapping("openEditStructure", EntityPlayer.class, "func_189807_a");
addMapping("canUseCommandBlock", EntityPlayer.class, "func_189808_dh");
addMapping("getFireImmuneTicks", EntityPlayer.class, "func_190531_bD");
addMapping("blockUsingShield", EntityPlayer.class, "func_190629_c");
addMapping("bedInRange", EntityPlayer.class, "func_190774_a");
addMapping("interactOn", EntityPlayer.class, "func_190775_a");
addMapping("destroyVanishingCursedItems", EntityPlayer.class, "func_190776_cN");
addMapping("disableShield", EntityPlayer.class, "func_190777_m");
addMapping("addItemStackToInventory", EntityPlayer.class, "func_191521_c");
addMapping("travel", EntityPlayer.class, "func_191986_a");
addMapping("unlockRecipes", EntityPlayer.class, "func_192021_a");
addMapping("resetRecipes", EntityPlayer.class, "func_192022_b");
addMapping("getLeftShoulderEntity", EntityPlayer.class, "func_192023_dk");
addMapping("onEnchant", EntityPlayer.class, "func_192024_a");
addMapping("getRightShoulderEntity", EntityPlayer.class, "func_192025_dl");
addMapping("spawnShoulderEntity", EntityPlayer.class, "func_192026_k");
addMapping("addShoulderEntity", EntityPlayer.class, "func_192027_g");
addMapping("playShoulderEntityAmbientSound", EntityPlayer.class, "func_192028_j");
addMapping("setLeftShoulderEntity", EntityPlayer.class, "func_192029_h");
addMapping("spawnShoulderEntities", EntityPlayer.class, "func_192030_dh");
addMapping("setRightShoulderEntity", EntityPlayer.class, "func_192031_i");
addMapping("unlockRecipes", EntityPlayer.class, "func_193102_a");
addMapping("getName", EntityPlayer.class, "func_70005_c_");
addMapping("writeEntityToNBT", EntityPlayer.class, "func_70014_b");
addMapping("getYOffset", EntityPlayer.class, "func_70033_W");
addMapping("readEntityFromNBT", EntityPlayer.class, "func_70037_a");
addMapping("canTriggerWalking", EntityPlayer.class, "func_70041_e_");
addMapping("getEyeHeight", EntityPlayer.class, "func_70047_e");
addMapping("preparePlayerToSpawn", EntityPlayer.class, "func_70065_x");
addMapping("onUpdate", EntityPlayer.class, "func_70071_h_");
addMapping("onKillEntity", EntityPlayer.class, "func_70074_a");
addMapping("entityInit", EntityPlayer.class, "func_70088_a");
addMapping("isEntityInsideOpaqueBlock", EntityPlayer.class, "func_70094_T");
addMapping("attackEntityFrom", EntityPlayer.class, "func_70097_a");
addMapping("updateRidden", EntityPlayer.class, "func_70098_U");
addMapping("handleStatusUpdate", EntityPlayer.class, "func_70103_a");
addMapping("setDead", EntityPlayer.class, "func_70106_y");
addMapping("applyEntityCollision", EntityPlayer.class, "func_70108_f");
addMapping("setInWeb", EntityPlayer.class, "func_70110_aj");
addMapping("isPlayerSleeping", EntityPlayer.class, "func_70608_bn");
addMapping("isMovementBlocked", EntityPlayer.class, "func_70610_aX");
addMapping("updateEntityActionState", EntityPlayer.class, "func_70626_be");
addMapping("onLivingUpdate", EntityPlayer.class, "func_70636_d");
addMapping("onDeath", EntityPlayer.class, "func_70645_a");
addMapping("jump", EntityPlayer.class, "func_70664_aZ");
addMapping("damageEntity", EntityPlayer.class, "func_70665_d");
addMapping("damageArmor", EntityPlayer.class, "func_70675_k");
addMapping("isPlayer", EntityPlayer.class, "func_70684_aJ");
addMapping("getAIMoveSpeed", EntityPlayer.class, "func_70689_ay");
addMapping("getExperiencePoints", EntityPlayer.class, "func_70693_a");
addMapping("shouldHeal", EntityPlayer.class, "func_70996_bM");
addMapping("wakeUpPlayer", EntityPlayer.class, "func_70999_a");
addMapping("addMovementStat", EntityPlayer.class, "func_71000_j");
addMapping("respawnPlayer", EntityPlayer.class, "func_71004_bE");
addMapping("getInventoryEnderChest", EntityPlayer.class, "func_71005_bN");
addMapping("displayGUIChest", EntityPlayer.class, "func_71007_a");
addMapping("onCriticalHit", EntityPlayer.class, "func_71009_b");
addMapping("addMountedMovementStat", EntityPlayer.class, "func_71015_k");
addMapping("sendPlayerAbilities", EntityPlayer.class, "func_71016_p");
addMapping("dropItem", EntityPlayer.class, "func_71019_a");
addMapping("addExhaustion", EntityPlayer.class, "func_71020_j");
addMapping("addExperience", EntityPlayer.class, "func_71023_q");
addMapping("getFoodStats", EntityPlayer.class, "func_71024_bL");
addMapping("isPlayerFullyAsleep", EntityPlayer.class, "func_71026_bH");
addMapping("addStat", EntityPlayer.class, "func_71029_a");
addMapping("setGameType", EntityPlayer.class, "func_71033_a");
addMapping("getScore", EntityPlayer.class, "func_71037_bA");
addMapping("dropItem", EntityPlayer.class, "func_71040_bB");
addMapping("canEat", EntityPlayer.class, "func_71043_e");
addMapping("collideWithPlayer", EntityPlayer.class, "func_71044_o");
addMapping("onEnchantmentCritical", EntityPlayer.class, "func_71047_c");
addMapping("xpBarCap", EntityPlayer.class, "func_71050_bK");
addMapping("getBedOrientationInDegrees", EntityPlayer.class, "func_71051_bG");
addMapping("closeScreen", EntityPlayer.class, "func_71053_j");
addMapping("attackTargetEntityWithCurrentItem", EntityPlayer.class, "func_71059_n");
addMapping("getSleepTimer", EntityPlayer.class, "func_71060_bI");
addMapping("doWaterSplashEffect", EntityPlayer.class, "func_71061_d_");
addMapping("addStat", EntityPlayer.class, "func_71064_a");
addMapping("getMaxInPortalTime", EntityPlayer.class, "func_82145_z");
addMapping("getPortalCooldown", EntityPlayer.class, "func_82147_ab");
addMapping("addExperienceLevel", EntityPlayer.class, "func_82242_a");
addMapping("getArmorVisibility", EntityPlayer.class, "func_82243_bO");
addMapping("isSpawnForced", EntityPlayer.class, "func_82245_bX");
addMapping("addScore", EntityPlayer.class, "func_85039_t");
addMapping("setScore", EntityPlayer.class, "func_85040_s");
addMapping("getAlwaysRenderNameTagForRender", EntityPlayer.class, "func_94059_bO");
addMapping("isPushedByWater", EntityPlayer.class, "func_96092_aw");
addMapping("canAttackPlayer", EntityPlayer.class, "func_96122_a");
addMapping("getWorldScoreboard", EntityPlayer.class, "func_96123_co");
addMapping("getTeam", EntityPlayer.class, "func_96124_cp");
addMapping("isInvisibleToPlayer", EntityPlayer.class, "func_98034_c");
addMapping("setEntityActionState", EntityPlayerMP.class, "func_110430_a");
addMapping("markPlayerActive", EntityPlayerMP.class, "func_143004_u");
addMapping("sendMessage", EntityPlayerMP.class, "func_145747_a");
addMapping("sendStatusMessage", EntityPlayerMP.class, "func_146105_b");
addMapping("getChatVisibility", EntityPlayerMP.class, "func_147096_v");
addMapping("sendTileEntityUpdate", EntityPlayerMP.class, "func_147097_b");
addMapping("getStatFile", EntityPlayerMP.class, "func_147099_x");
addMapping("handleClientSettings", EntityPlayerMP.class, "func_147100_a");
addMapping("sendEnterCombat", EntityPlayerMP.class, "func_152111_bt");
addMapping("sendEndCombat", EntityPlayerMP.class, "func_152112_bu");
addMapping("removeEntity", EntityPlayerMP.class, "func_152339_d");
addMapping("getLastActiveTime", EntityPlayerMP.class, "func_154331_x");
addMapping("isSpectatedByPlayer", EntityPlayerMP.class, "func_174827_a");
addMapping("updatePotionMetadata", EntityPlayerMP.class, "func_175135_B");
addMapping("openEditSign", EntityPlayerMP.class, "func_175141_a");
addMapping("takeStat", EntityPlayerMP.class, "func_175145_a");
addMapping("isSpectator", EntityPlayerMP.class, "func_175149_v");
addMapping("sendAllWindowProperties", EntityPlayerMP.class, "func_175173_a");
addMapping("getTabListDisplayName", EntityPlayerMP.class, "func_175396_E");
addMapping("loadResourcePack", EntityPlayerMP.class, "func_175397_a");
addMapping("getSpectatingEntity", EntityPlayerMP.class, "func_175398_C");
addMapping("setSpectatingEntity", EntityPlayerMP.class, "func_175399_e");
addMapping("canPlayersAttack", EntityPlayerMP.class, "func_175400_cq");
addMapping("getPosition", EntityPlayerMP.class, "func_180425_c");
addMapping("isEntityInvulnerable", EntityPlayerMP.class, "func_180431_b");
addMapping("displayGui", EntityPlayerMP.class, "func_180468_a");
addMapping("trySleep", EntityPlayerMP.class, "func_180469_a");
addMapping("displayVillagerTradeGui", EntityPlayerMP.class, "func_180472_a");
addMapping("decrementTimeUntilPortal", EntityPlayerMP.class, "func_184173_H");
addMapping("changeDimension", EntityPlayerMP.class, "func_184204_a");
addMapping("startRiding", EntityPlayerMP.class, "func_184205_a");
addMapping("dismountRidingEntity", EntityPlayerMP.class, "func_184210_p");
addMapping("updateFallState", EntityPlayerMP.class, "func_184231_a");
addMapping("frostWalk", EntityPlayerMP.class, "func_184594_b");
addMapping("swingArm", EntityPlayerMP.class, "func_184609_a");
addMapping("isCreative", EntityPlayerMP.class, "func_184812_l_");
addMapping("openBook", EntityPlayerMP.class, "func_184814_a");
addMapping("createCooldownTracker", EntityPlayerMP.class, "func_184815_l");
addMapping("displayGuiCommandBlock", EntityPlayerMP.class, "func_184824_a");
addMapping("openGuiHorseInventory", EntityPlayerMP.class, "func_184826_a");
addMapping("clearInvulnerableDimensionChange", EntityPlayerMP.class, "func_184846_L");
addMapping("setElytraFlying", EntityPlayerMP.class, "func_184847_M");
addMapping("addEntity", EntityPlayerMP.class, "func_184848_d");
addMapping("updateScorePoints", EntityPlayerMP.class, "func_184849_a");
addMapping("isInvulnerableDimensionChange", EntityPlayerMP.class, "func_184850_K");
addMapping("clearElytraFlying", EntityPlayerMP.class, "func_189103_N");
addMapping("registerFixesPlayerMP", EntityPlayerMP.class, "func_191522_a");
addMapping("onInsideBlock", EntityPlayerMP.class, "func_191955_a");
addMapping("awardKillScore", EntityPlayerMP.class, "func_191956_a");
addMapping("unlockRecipes", EntityPlayerMP.class, "func_192021_a");
addMapping("resetRecipes", EntityPlayerMP.class, "func_192022_b");
addMapping("onEnchant", EntityPlayerMP.class, "func_192024_a");
addMapping("getRecipeBook", EntityPlayerMP.class, "func_192037_E");
addMapping("awardTeamKillScores", EntityPlayerMP.class, "func_192038_E");
addMapping("getAdvancements", EntityPlayerMP.class, "func_192039_O");
addMapping("unlockRecipes", EntityPlayerMP.class, "func_193102_a");
addMapping("copyFrom", EntityPlayerMP.class, "func_193104_a");
addMapping("hasDisconnected", EntityPlayerMP.class, "func_193105_t");
addMapping("getEnteredNetherPosition", EntityPlayerMP.class, "func_193106_Q");
addMapping("canUseCommand", EntityPlayerMP.class, "func_70003_b");
addMapping("writeEntityToNBT", EntityPlayerMP.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityPlayerMP.class, "func_70037_a");
addMapping("onUpdate", EntityPlayerMP.class, "func_70071_h_");
addMapping("attackEntityFrom", EntityPlayerMP.class, "func_70097_a");
addMapping("setPositionAndUpdate", EntityPlayerMP.class, "func_70634_a");
addMapping("onDeath", EntityPlayerMP.class, "func_70645_a");
addMapping("onNewPotionEffect", EntityPlayerMP.class, "func_70670_a");
addMapping("onFinishedPotionEffect", EntityPlayerMP.class, "func_70688_c");
addMapping("onChangedPotionEffect", EntityPlayerMP.class, "func_70695_b");
addMapping("wakeUpPlayer", EntityPlayerMP.class, "func_70999_a");
addMapping("onItemPickup", EntityPlayerMP.class, "func_71001_a");
addMapping("displayGUIChest", EntityPlayerMP.class, "func_71007_a");
addMapping("onCriticalHit", EntityPlayerMP.class, "func_71009_b");
addMapping("sendPlayerAbilities", EntityPlayerMP.class, "func_71016_p");
addMapping("setGameType", EntityPlayerMP.class, "func_71033_a");
addMapping("onItemUseFinish", EntityPlayerMP.class, "func_71036_o");
addMapping("onEnchantmentCritical", EntityPlayerMP.class, "func_71047_c");
addMapping("closeScreen", EntityPlayerMP.class, "func_71053_j");
addMapping("attackTargetEntityWithCurrentItem", EntityPlayerMP.class, "func_71059_n");
addMapping("addStat", EntityPlayerMP.class, "func_71064_a");
addMapping("sendAllContents", EntityPlayerMP.class, "func_71110_a");
addMapping("sendSlotContents", EntityPlayerMP.class, "func_71111_a");
addMapping("sendWindowProperty", EntityPlayerMP.class, "func_71112_a");
addMapping("updateHeldItem", EntityPlayerMP.class, "func_71113_k");
addMapping("getPlayerIP", EntityPlayerMP.class, "func_71114_r");
addMapping("addSelfToInternalCraftingInventory", EntityPlayerMP.class, "func_71116_b");
addMapping("getNextWindowId", EntityPlayerMP.class, "func_71117_bO");
addMapping("setPlayerHealthUpdated", EntityPlayerMP.class, "func_71118_n");
addMapping("sendContainerToPlayer", EntityPlayerMP.class, "func_71120_a");
addMapping("getServerWorld", EntityPlayerMP.class, "func_71121_q");
addMapping("handleFalling", EntityPlayerMP.class, "func_71122_b");
addMapping("mountEntityAndWakeUp", EntityPlayerMP.class, "func_71123_m");
addMapping("onUpdateEntity", EntityPlayerMP.class, "func_71127_g");
addMapping("closeContainer", EntityPlayerMP.class, "func_71128_l");
addMapping("addExperienceLevel", EntityPlayerMP.class, "func_82242_a");
addMapping("canAttackPlayer", EntityPlayerMP.class, "func_96122_a");
addMapping("getName", EnumPlayerModelParts.class, "func_179326_d");
addMapping("getPartMask", EnumPlayerModelParts.class, "func_179327_a");
addMapping("getPartId", EnumPlayerModelParts.class, "func_179328_b");
addMapping("getPartName", EnumPlayerModelParts.class, "func_179329_c");
addMapping("getDisplayName", InventoryPlayer.class, "func_145748_c_");
addMapping("hasCustomName", InventoryPlayer.class, "func_145818_k_");
addMapping("setField", InventoryPlayer.class, "func_174885_b");
addMapping("closeInventory", InventoryPlayer.class, "func_174886_c");
addMapping("getField", InventoryPlayer.class, "func_174887_a_");
addMapping("clear", InventoryPlayer.class, "func_174888_l");
addMapping("openInventory", InventoryPlayer.class, "func_174889_b");
addMapping("getFieldCount", InventoryPlayer.class, "func_174890_g");
addMapping("clearMatchingItems", InventoryPlayer.class, "func_174925_a");
addMapping("getSlotFor", InventoryPlayer.class, "func_184429_b");
addMapping("pickItem", InventoryPlayer.class, "func_184430_d");
addMapping("stackEqualExact", InventoryPlayer.class, "func_184431_b");
addMapping("canHarvestBlock", InventoryPlayer.class, "func_184432_b");
addMapping("getBestHotbarSlot", InventoryPlayer.class, "func_184433_k");
addMapping("setPickedItemStack", InventoryPlayer.class, "func_184434_a");
addMapping("isHotbar", InventoryPlayer.class, "func_184435_e");
addMapping("canMergeStacks", InventoryPlayer.class, "func_184436_a");
addMapping("deleteStack", InventoryPlayer.class, "func_184437_d");
addMapping("getDestroySpeed", InventoryPlayer.class, "func_184438_a");
addMapping("isEmpty", InventoryPlayer.class, "func_191420_l");
addMapping("add", InventoryPlayer.class, "func_191971_c");
addMapping("addResource", InventoryPlayer.class, "func_191973_d");
addMapping("placeItemBackInInventory", InventoryPlayer.class, "func_191975_a");
addMapping("findSlotMatchingUnusedItem", InventoryPlayer.class, "func_194014_c");
addMapping("getTimesChanged", InventoryPlayer.class, "func_194015_p");
addMapping("fillStackedContents", InventoryPlayer.class, "func_194016_a");
addMapping("getName", InventoryPlayer.class, "func_70005_c_");
addMapping("markDirty", InventoryPlayer.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryPlayer.class, "func_70297_j_");
addMapping("decrStackSize", InventoryPlayer.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryPlayer.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryPlayer.class, "func_70300_a");
addMapping("getStackInSlot", InventoryPlayer.class, "func_70301_a");
addMapping("getSizeInventory", InventoryPlayer.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryPlayer.class, "func_70304_b");
addMapping("decrementAnimations", InventoryPlayer.class, "func_70429_k");
addMapping("hasItemStack", InventoryPlayer.class, "func_70431_c");
addMapping("storeItemStack", InventoryPlayer.class, "func_70432_d");
addMapping("dropAllItems", InventoryPlayer.class, "func_70436_m");
addMapping("setItemStack", InventoryPlayer.class, "func_70437_b");
addMapping("armorItemInSlot", InventoryPlayer.class, "func_70440_f");
addMapping("addItemStackToInventory", InventoryPlayer.class, "func_70441_a");
addMapping("writeToNBT", InventoryPlayer.class, "func_70442_a");
addMapping("readFromNBT", InventoryPlayer.class, "func_70443_b");
addMapping("getItemStack", InventoryPlayer.class, "func_70445_o");
addMapping("getFirstEmptyStack", InventoryPlayer.class, "func_70447_i");
addMapping("getCurrentItem", InventoryPlayer.class, "func_70448_g");
addMapping("damageArmor", InventoryPlayer.class, "func_70449_g");
addMapping("getHotbarSize", InventoryPlayer.class, "func_70451_h");
addMapping("storePartialItemStack", InventoryPlayer.class, "func_70452_e");
addMapping("changeCurrentItem", InventoryPlayer.class, "func_70453_c");
addMapping("copyInventory", InventoryPlayer.class, "func_70455_b");
addMapping("isItemValidForSlot", InventoryPlayer.class, "func_94041_b");
addMapping("writeCapabilitiesToNBT", PlayerCapabilities.class, "func_75091_a");
addMapping("setFlySpeed", PlayerCapabilities.class, "func_75092_a");
addMapping("getFlySpeed", PlayerCapabilities.class, "func_75093_a");
addMapping("getWalkSpeed", PlayerCapabilities.class, "func_75094_b");
addMapping("readCapabilitiesFromNBT", PlayerCapabilities.class, "func_75095_b");
addMapping("setPlayerWalkSpeed", PlayerCapabilities.class, "func_82877_b");
addMapping("setPositionAndRotationDirect", EntityArrow.class, "func_180426_a");
addMapping("shoot", EntityArrow.class, "func_184547_a");
addMapping("arrowHit", EntityArrow.class, "func_184548_a");
addMapping("onHit", EntityArrow.class, "func_184549_a");
addMapping("getArrowStack", EntityArrow.class, "func_184550_j");
addMapping("findEntityOnPath", EntityArrow.class, "func_184551_a");
addMapping("registerFixesArrow", EntityArrow.class, "func_189657_a");
addMapping("registerFixesArrow", EntityArrow.class, "func_189658_a");
addMapping("setEnchantmentEffectsFromEntity", EntityArrow.class, "func_190547_a");
addMapping("writeEntityToNBT", EntityArrow.class, "func_70014_b");
addMapping("setVelocity", EntityArrow.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityArrow.class, "func_70037_a");
addMapping("canTriggerWalking", EntityArrow.class, "func_70041_e_");
addMapping("getEyeHeight", EntityArrow.class, "func_70047_e");
addMapping("onUpdate", EntityArrow.class, "func_70071_h_");
addMapping("canBeAttackedWithItem", EntityArrow.class, "func_70075_an");
addMapping("entityInit", EntityArrow.class, "func_70088_a");
addMapping("move", EntityArrow.class, "func_70091_d");
addMapping("onCollideWithPlayer", EntityArrow.class, "func_70100_b_");
addMapping("isInRangeToRenderDist", EntityArrow.class, "func_70112_a");
addMapping("shoot", EntityArrow.class, "func_70186_c");
addMapping("setDamage", EntityArrow.class, "func_70239_b");
addMapping("setKnockbackStrength", EntityArrow.class, "func_70240_a");
addMapping("getIsCritical", EntityArrow.class, "func_70241_g");
addMapping("getDamage", EntityArrow.class, "func_70242_d");
addMapping("setIsCritical", EntityArrow.class, "func_70243_d");
addMapping("getParticleType", EntityDragonFireball.class, "func_184563_j");
addMapping("isFireballFiery", EntityDragonFireball.class, "func_184564_k");
addMapping("registerFixesDragonFireball", EntityDragonFireball.class, "func_189747_a");
addMapping("canBeCollidedWith", EntityDragonFireball.class, "func_70067_L");
addMapping("attackEntityFrom", EntityDragonFireball.class, "func_70097_a");
addMapping("onImpact", EntityDragonFireball.class, "func_70227_a");
addMapping("registerFixesEgg", EntityEgg.class, "func_189664_a");
addMapping("handleStatusUpdate", EntityEgg.class, "func_70103_a");
addMapping("onImpact", EntityEgg.class, "func_70184_a");
addMapping("setCaster", EntityEvokerFangs.class, "func_190549_a");
addMapping("getAnimationProgress", EntityEvokerFangs.class, "func_190550_a");
addMapping("damage", EntityEvokerFangs.class, "func_190551_c");
addMapping("getCaster", EntityEvokerFangs.class, "func_190552_j");
addMapping("writeEntityToNBT", EntityEvokerFangs.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityEvokerFangs.class, "func_70037_a");
addMapping("onUpdate", EntityEvokerFangs.class, "func_70071_h_");
addMapping("entityInit", EntityEvokerFangs.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityEvokerFangs.class, "func_70103_a");
addMapping("getParticleType", EntityFireball.class, "func_184563_j");
addMapping("isFireballFiery", EntityFireball.class, "func_184564_k");
addMapping("registerFixesFireball", EntityFireball.class, "func_189743_a");
addMapping("getBrightness", EntityFireball.class, "func_70013_c");
addMapping("writeEntityToNBT", EntityFireball.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityFireball.class, "func_70037_a");
addMapping("canBeCollidedWith", EntityFireball.class, "func_70067_L");
addMapping("getBrightnessForRender", EntityFireball.class, "func_70070_b");
addMapping("onUpdate", EntityFireball.class, "func_70071_h_");
addMapping("entityInit", EntityFireball.class, "func_70088_a");
addMapping("attackEntityFrom", EntityFireball.class, "func_70097_a");
addMapping("getCollisionBorderSize", EntityFireball.class, "func_70111_Y");
addMapping("isInRangeToRenderDist", EntityFireball.class, "func_70112_a");
addMapping("onImpact", EntityFireball.class, "func_70227_a");
addMapping("getMotionFactor", EntityFireball.class, "func_82341_c");
addMapping("handleHookRetraction", EntityFishHook.class, "func_146034_e");
addMapping("setPositionAndRotationDirect", EntityFishHook.class, "func_180426_a");
addMapping("notifyDataManagerChange", EntityFishHook.class, "func_184206_a");
addMapping("bringInHookedEntity", EntityFishHook.class, "func_184527_k");
addMapping("canBeHooked", EntityFishHook.class, "func_189739_a");
addMapping("getAngler", EntityFishHook.class, "func_190619_l");
addMapping("shoot", EntityFishHook.class, "func_190620_n");
addMapping("catchingFish", EntityFishHook.class, "func_190621_a");
addMapping("setHookedEntity", EntityFishHook.class, "func_190622_s");
addMapping("updateRotation", EntityFishHook.class, "func_190623_q");
addMapping("checkCollision", EntityFishHook.class, "func_190624_r");
addMapping("shouldStopFishing", EntityFishHook.class, "func_190625_o");
addMapping("init", EntityFishHook.class, "func_190626_a");
addMapping("setLureSpeed", EntityFishHook.class, "func_191516_a");
addMapping("setLuck", EntityFishHook.class, "func_191517_b");
addMapping("writeEntityToNBT", EntityFishHook.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityFishHook.class, "func_70037_a");
addMapping("canTriggerWalking", EntityFishHook.class, "func_70041_e_");
addMapping("onUpdate", EntityFishHook.class, "func_70071_h_");
addMapping("entityInit", EntityFishHook.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityFishHook.class, "func_70103_a");
addMapping("setDead", EntityFishHook.class, "func_70106_y");
addMapping("isInRangeToRenderDist", EntityFishHook.class, "func_70112_a");
addMapping("registerFixesLargeFireball", EntityLargeFireball.class, "func_189744_a");
addMapping("writeEntityToNBT", EntityLargeFireball.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityLargeFireball.class, "func_70037_a");
addMapping("onImpact", EntityLargeFireball.class, "func_70227_a");
addMapping("onHit", EntityLlamaSpit.class, "func_190536_a");
addMapping("restoreOwnerFromSave", EntityLlamaSpit.class, "func_190537_j");
addMapping("getHitEntity", EntityLlamaSpit.class, "func_190538_a");
addMapping("writeEntityToNBT", EntityLlamaSpit.class, "func_70014_b");
addMapping("setVelocity", EntityLlamaSpit.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityLlamaSpit.class, "func_70037_a");
addMapping("onUpdate", EntityLlamaSpit.class, "func_70071_h_");
addMapping("entityInit", EntityLlamaSpit.class, "func_70088_a");
addMapping("shoot", EntityLlamaSpit.class, "func_70186_c");
addMapping("setItem", EntityPotion.class, "func_184541_a");
addMapping("extinguishFires", EntityPotion.class, "func_184542_a");
addMapping("getPotion", EntityPotion.class, "func_184543_l");
addMapping("isLingering", EntityPotion.class, "func_184544_n");
addMapping("registerFixesPotion", EntityPotion.class, "func_189665_a");
addMapping("makeAreaOfEffectCloud", EntityPotion.class, "func_190542_a");
addMapping("applySplash", EntityPotion.class, "func_190543_a");
addMapping("isWaterSensitiveEntity", EntityPotion.class, "func_190544_c");
addMapping("applyWater", EntityPotion.class, "func_190545_n");
addMapping("writeEntityToNBT", EntityPotion.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityPotion.class, "func_70037_a");
addMapping("entityInit", EntityPotion.class, "func_70088_a");
addMapping("onImpact", EntityPotion.class, "func_70184_a");
addMapping("getGravityVelocity", EntityPotion.class, "func_70185_h");
addMapping("getSoundCategory", EntityShulkerBullet.class, "func_184176_by");
addMapping("bulletHit", EntityShulkerBullet.class, "func_184567_a");
addMapping("setDirection", EntityShulkerBullet.class, "func_184568_a");
addMapping("selectNextMoveDirection", EntityShulkerBullet.class, "func_184569_a");
addMapping("getBrightness", EntityShulkerBullet.class, "func_70013_c");
addMapping("writeEntityToNBT", EntityShulkerBullet.class, "func_70014_b");
addMapping("isBurning", EntityShulkerBullet.class, "func_70027_ad");
addMapping("readEntityFromNBT", EntityShulkerBullet.class, "func_70037_a");
addMapping("canBeCollidedWith", EntityShulkerBullet.class, "func_70067_L");
addMapping("getBrightnessForRender", EntityShulkerBullet.class, "func_70070_b");
addMapping("onUpdate", EntityShulkerBullet.class, "func_70071_h_");
addMapping("entityInit", EntityShulkerBullet.class, "func_70088_a");
addMapping("attackEntityFrom", EntityShulkerBullet.class, "func_70097_a");
addMapping("isInRangeToRenderDist", EntityShulkerBullet.class, "func_70112_a");
addMapping("registerFixesSmallFireball", EntitySmallFireball.class, "func_189745_a");
addMapping("canBeCollidedWith", EntitySmallFireball.class, "func_70067_L");
addMapping("attackEntityFrom", EntitySmallFireball.class, "func_70097_a");
addMapping("onImpact", EntitySmallFireball.class, "func_70227_a");
addMapping("registerFixesSnowball", EntitySnowball.class, "func_189662_a");
addMapping("handleStatusUpdate", EntitySnowball.class, "func_70103_a");
addMapping("onImpact", EntitySnowball.class, "func_70184_a");
addMapping("arrowHit", EntitySpectralArrow.class, "func_184548_a");
addMapping("getArrowStack", EntitySpectralArrow.class, "func_184550_j");
addMapping("registerFixesSpectralArrow", EntitySpectralArrow.class, "func_189659_b");
addMapping("writeEntityToNBT", EntitySpectralArrow.class, "func_70014_b");
addMapping("readEntityFromNBT", EntitySpectralArrow.class, "func_70037_a");
addMapping("onUpdate", EntitySpectralArrow.class, "func_70071_h_");
addMapping("shoot", EntityThrowable.class, "func_184538_a");
addMapping("registerFixesThrowable", EntityThrowable.class, "func_189661_a");
addMapping("writeEntityToNBT", EntityThrowable.class, "func_70014_b");
addMapping("setVelocity", EntityThrowable.class, "func_70016_h");
addMapping("readEntityFromNBT", EntityThrowable.class, "func_70037_a");
addMapping("onUpdate", EntityThrowable.class, "func_70071_h_");
addMapping("entityInit", EntityThrowable.class, "func_70088_a");
addMapping("isInRangeToRenderDist", EntityThrowable.class, "func_70112_a");
addMapping("onImpact", EntityThrowable.class, "func_70184_a");
addMapping("getGravityVelocity", EntityThrowable.class, "func_70185_h");
addMapping("shoot", EntityThrowable.class, "func_70186_c");
addMapping("getThrower", EntityThrowable.class, "func_85052_h");
addMapping("arrowHit", EntityTippedArrow.class, "func_184548_a");
addMapping("getArrowStack", EntityTippedArrow.class, "func_184550_j");
addMapping("setPotionEffect", EntityTippedArrow.class, "func_184555_a");
addMapping("spawnPotionParticles", EntityTippedArrow.class, "func_184556_b");
addMapping("getColor", EntityTippedArrow.class, "func_184557_n");
addMapping("addEffect", EntityTippedArrow.class, "func_184558_a");
addMapping("registerFixesTippedArrow", EntityTippedArrow.class, "func_189660_b");
addMapping("refreshColor", EntityTippedArrow.class, "func_190548_o");
addMapping("setFixedColor", EntityTippedArrow.class, "func_191507_d");
addMapping("getCustomColor", EntityTippedArrow.class, "func_191508_b");
addMapping("writeEntityToNBT", EntityTippedArrow.class, "func_70014_b");
addMapping("readEntityFromNBT", EntityTippedArrow.class, "func_70037_a");
addMapping("onUpdate", EntityTippedArrow.class, "func_70071_h_");
addMapping("entityInit", EntityTippedArrow.class, "func_70088_a");
addMapping("handleStatusUpdate", EntityTippedArrow.class, "func_70103_a");
addMapping("getExplosionResistance", EntityWitherSkull.class, "func_180428_a");
addMapping("isFireballFiery", EntityWitherSkull.class, "func_184564_k");
addMapping("registerFixesWitherSkull", EntityWitherSkull.class, "func_189746_a");
addMapping("isBurning", EntityWitherSkull.class, "func_70027_ad");
addMapping("canBeCollidedWith", EntityWitherSkull.class, "func_70067_L");
addMapping("entityInit", EntityWitherSkull.class, "func_70088_a");
addMapping("attackEntityFrom", EntityWitherSkull.class, "func_70097_a");
addMapping("onImpact", EntityWitherSkull.class, "func_70227_a");
addMapping("getMotionFactor", EntityWitherSkull.class, "func_82341_c");
addMapping("isInvulnerable", EntityWitherSkull.class, "func_82342_d");
addMapping("setInvulnerable", EntityWitherSkull.class, "func_82343_e");
addMapping("forwardsRaycast", ProjectileHelper.class, "func_188802_a");
addMapping("rotateTowardsMovement", ProjectileHelper.class, "func_188803_a");
addMapping("getRegisteredBiome", Biomes.class, "func_185428_a");
addMapping("getRegisteredBlock", Blocks.class, "func_180383_a");
addMapping("registerDispenserBehaviors", Bootstrap.class, "func_151353_a");
addMapping("register", Bootstrap.class, "func_151354_b");
addMapping("redirectOutputToLog", Bootstrap.class, "func_179868_d");
addMapping("isRegistered", Bootstrap.class, "func_179869_a");
addMapping("printToSYSOUT", Bootstrap.class, "func_179870_a");
addMapping("getRegisteredEnchantment", Enchantments.class, "func_185295_a");
addMapping("getRegisteredItem", Items.class, "func_179554_a");
addMapping("getRegisteredMobEffect", MobEffects.class, "func_188422_a");
addMapping("getRegisteredPotionType", PotionTypes.class, "func_185217_a");
addMapping("getRegisteredSoundEvent", SoundEvents.class, "func_187510_a");
addMapping("calcRedstone", Container.class, "func_178144_a");
addMapping("isValidDragMode", Container.class, "func_180610_a");
addMapping("slotClick", Container.class, "func_184996_a");
addMapping("setAll", Container.class, "func_190896_a");
addMapping("addItem", Container.class, "func_192388_b");
addMapping("slotChangedCraftingGrid", Container.class, "func_192389_a");
addMapping("clearContainer", Container.class, "func_193327_a");
addMapping("setCanCraft", Container.class, "func_75128_a");
addMapping("getCanCraft", Container.class, "func_75129_b");
addMapping("onCraftMatrixChanged", Container.class, "func_75130_a");
addMapping("addListener", Container.class, "func_75132_a");
addMapping("onContainerClosed", Container.class, "func_75134_a");
addMapping("mergeItemStack", Container.class, "func_75135_a");
addMapping("getNextTransactionID", Container.class, "func_75136_a");
addMapping("updateProgressBar", Container.class, "func_75137_b");
addMapping("getInventory", Container.class, "func_75138_a");
addMapping("getSlot", Container.class, "func_75139_a");
addMapping("enchantItem", Container.class, "func_75140_a");
addMapping("putStackInSlot", Container.class, "func_75141_a");
addMapping("detectAndSendChanges", Container.class, "func_75142_b");
addMapping("canInteractWith", Container.class, "func_75145_c");
addMapping("addSlotToContainer", Container.class, "func_75146_a");
addMapping("getSlotFromInventory", Container.class, "func_75147_a");
addMapping("transferStackInSlot", Container.class, "func_82846_b");
addMapping("removeListener", Container.class, "func_82847_b");
addMapping("computeStackSize", Container.class, "func_94525_a");
addMapping("calcRedstoneFromInventory", Container.class, "func_94526_b");
addMapping("canAddItemToSlot", Container.class, "func_94527_a");
addMapping("extractDragMode", Container.class, "func_94529_b");
addMapping("canMergeSlot", Container.class, "func_94530_a");
addMapping("canDragIntoSlot", Container.class, "func_94531_b");
addMapping("getDragEvent", Container.class, "func_94532_c");
addMapping("resetDrag", Container.class, "func_94533_d");
addMapping("getQuickcraftMask", Container.class, "func_94534_d");
addMapping("getTileEntity", ContainerBeacon.class, "func_180611_e");
addMapping("addListener", ContainerBeacon.class, "func_75132_a");
addMapping("onContainerClosed", ContainerBeacon.class, "func_75134_a");
addMapping("updateProgressBar", ContainerBeacon.class, "func_75137_b");
addMapping("canInteractWith", ContainerBeacon.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerBeacon.class, "func_82846_b");
addMapping("addListener", ContainerBrewingStand.class, "func_75132_a");
addMapping("updateProgressBar", ContainerBrewingStand.class, "func_75137_b");
addMapping("detectAndSendChanges", ContainerBrewingStand.class, "func_75142_b");
addMapping("canInteractWith", ContainerBrewingStand.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerBrewingStand.class, "func_82846_b");
addMapping("onContainerClosed", ContainerChest.class, "func_75134_a");
addMapping("canInteractWith", ContainerChest.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerChest.class, "func_82846_b");
addMapping("getLowerChestInventory", ContainerChest.class, "func_85151_d");
addMapping("canInteractWith", ContainerDispenser.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerDispenser.class, "func_82846_b");
addMapping("getLapisAmount", ContainerEnchantment.class, "func_178147_e");
addMapping("getEnchantmentList", ContainerEnchantment.class, "func_178148_a");
addMapping("broadcastData", ContainerEnchantment.class, "func_185000_c");
addMapping("onCraftMatrixChanged", ContainerEnchantment.class, "func_75130_a");
addMapping("addListener", ContainerEnchantment.class, "func_75132_a");
addMapping("onContainerClosed", ContainerEnchantment.class, "func_75134_a");
addMapping("updateProgressBar", ContainerEnchantment.class, "func_75137_b");
addMapping("enchantItem", ContainerEnchantment.class, "func_75140_a");
addMapping("detectAndSendChanges", ContainerEnchantment.class, "func_75142_b");
addMapping("canInteractWith", ContainerEnchantment.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerEnchantment.class, "func_82846_b");
addMapping("addListener", ContainerFurnace.class, "func_75132_a");
addMapping("updateProgressBar", ContainerFurnace.class, "func_75137_b");
addMapping("detectAndSendChanges", ContainerFurnace.class, "func_75142_b");
addMapping("canInteractWith", ContainerFurnace.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerFurnace.class, "func_82846_b");
addMapping("onContainerClosed", ContainerHopper.class, "func_75134_a");
addMapping("canInteractWith", ContainerHopper.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerHopper.class, "func_82846_b");
addMapping("onContainerClosed", ContainerHorseInventory.class, "func_75134_a");
addMapping("canInteractWith", ContainerHorseInventory.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerHorseInventory.class, "func_82846_b");
addMapping("onCraftMatrixChanged", ContainerMerchant.class, "func_75130_a");
addMapping("onContainerClosed", ContainerMerchant.class, "func_75134_a");
addMapping("canInteractWith", ContainerMerchant.class, "func_75145_c");
addMapping("getMerchantInventory", ContainerMerchant.class, "func_75174_d");
addMapping("setCurrentRecipeIndex", ContainerMerchant.class, "func_75175_c");
addMapping("transferStackInSlot", ContainerMerchant.class, "func_82846_b");
addMapping("onCraftMatrixChanged", ContainerPlayer.class, "func_75130_a");
addMapping("onContainerClosed", ContainerPlayer.class, "func_75134_a");
addMapping("canInteractWith", ContainerPlayer.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerPlayer.class, "func_82846_b");
addMapping("canMergeSlot", ContainerPlayer.class, "func_94530_a");
addMapping("onCraftMatrixChanged", ContainerRepair.class, "func_75130_a");
addMapping("addListener", ContainerRepair.class, "func_75132_a");
addMapping("onContainerClosed", ContainerRepair.class, "func_75134_a");
addMapping("updateProgressBar", ContainerRepair.class, "func_75137_b");
addMapping("canInteractWith", ContainerRepair.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerRepair.class, "func_82846_b");
addMapping("updateRepairOutput", ContainerRepair.class, "func_82848_d");
addMapping("updateItemName", ContainerRepair.class, "func_82850_a");
addMapping("onContainerClosed", ContainerShulkerBox.class, "func_75134_a");
addMapping("canInteractWith", ContainerShulkerBox.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerShulkerBox.class, "func_82846_b");
addMapping("onCraftMatrixChanged", ContainerWorkbench.class, "func_75130_a");
addMapping("onContainerClosed", ContainerWorkbench.class, "func_75134_a");
addMapping("canInteractWith", ContainerWorkbench.class, "func_75145_c");
addMapping("transferStackInSlot", ContainerWorkbench.class, "func_82846_b");
addMapping("canMergeSlot", ContainerWorkbench.class, "func_94530_a");
addMapping("getName", EntityEquipmentSlot.class, "func_188450_d");
addMapping("fromString", EntityEquipmentSlot.class, "func_188451_a");
addMapping("getSlotIndex", EntityEquipmentSlot.class, "func_188452_c");
addMapping("getSlotType", EntityEquipmentSlot.class, "func_188453_a");
addMapping("getIndex", EntityEquipmentSlot.class, "func_188454_b");
addMapping("sendAllWindowProperties", IContainerListener.class, "func_175173_a");
addMapping("sendAllContents", IContainerListener.class, "func_71110_a");
addMapping("sendSlotContents", IContainerListener.class, "func_71111_a");
addMapping("sendWindowProperty", IContainerListener.class, "func_71112_a");
addMapping("setField", IInventory.class, "func_174885_b");
addMapping("closeInventory", IInventory.class, "func_174886_c");
addMapping("getField", IInventory.class, "func_174887_a_");
addMapping("clear", IInventory.class, "func_174888_l");
addMapping("openInventory", IInventory.class, "func_174889_b");
addMapping("getFieldCount", IInventory.class, "func_174890_g");
addMapping("isEmpty", IInventory.class, "func_191420_l");
addMapping("markDirty", IInventory.class, "func_70296_d");
addMapping("getInventoryStackLimit", IInventory.class, "func_70297_j_");
addMapping("decrStackSize", IInventory.class, "func_70298_a");
addMapping("setInventorySlotContents", IInventory.class, "func_70299_a");
addMapping("isUsableByPlayer", IInventory.class, "func_70300_a");
addMapping("getStackInSlot", IInventory.class, "func_70301_a");
addMapping("getSizeInventory", IInventory.class, "func_70302_i_");
addMapping("removeStackFromSlot", IInventory.class, "func_70304_b");
addMapping("isItemValidForSlot", IInventory.class, "func_94041_b");
addMapping("onInventoryChanged", IInventoryChangedListener.class, "func_76316_a");
addMapping("canExtractItem", ISidedInventory.class, "func_180461_b");
addMapping("canInsertItem", ISidedInventory.class, "func_180462_a");
addMapping("getSlotsForFace", ISidedInventory.class, "func_180463_a");
addMapping("removeInventoryChangeListener", InventoryBasic.class, "func_110132_b");
addMapping("setCustomName", InventoryBasic.class, "func_110133_a");
addMapping("addInventoryChangeListener", InventoryBasic.class, "func_110134_a");
addMapping("getDisplayName", InventoryBasic.class, "func_145748_c_");
addMapping("hasCustomName", InventoryBasic.class, "func_145818_k_");
addMapping("setField", InventoryBasic.class, "func_174885_b");
addMapping("closeInventory", InventoryBasic.class, "func_174886_c");
addMapping("getField", InventoryBasic.class, "func_174887_a_");
addMapping("clear", InventoryBasic.class, "func_174888_l");
addMapping("openInventory", InventoryBasic.class, "func_174889_b");
addMapping("getFieldCount", InventoryBasic.class, "func_174890_g");
addMapping("addItem", InventoryBasic.class, "func_174894_a");
addMapping("isEmpty", InventoryBasic.class, "func_191420_l");
addMapping("getName", InventoryBasic.class, "func_70005_c_");
addMapping("markDirty", InventoryBasic.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryBasic.class, "func_70297_j_");
addMapping("decrStackSize", InventoryBasic.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryBasic.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryBasic.class, "func_70300_a");
addMapping("getStackInSlot", InventoryBasic.class, "func_70301_a");
addMapping("getSizeInventory", InventoryBasic.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryBasic.class, "func_70304_b");
addMapping("isItemValidForSlot", InventoryBasic.class, "func_94041_b");
addMapping("getDisplayName", InventoryCraftResult.class, "func_145748_c_");
addMapping("hasCustomName", InventoryCraftResult.class, "func_145818_k_");
addMapping("setField", InventoryCraftResult.class, "func_174885_b");
addMapping("closeInventory", InventoryCraftResult.class, "func_174886_c");
addMapping("getField", InventoryCraftResult.class, "func_174887_a_");
addMapping("clear", InventoryCraftResult.class, "func_174888_l");
addMapping("openInventory", InventoryCraftResult.class, "func_174889_b");
addMapping("getFieldCount", InventoryCraftResult.class, "func_174890_g");
addMapping("isEmpty", InventoryCraftResult.class, "func_191420_l");
addMapping("getRecipeUsed", InventoryCraftResult.class, "func_193055_i");
addMapping("setRecipeUsed", InventoryCraftResult.class, "func_193056_a");
addMapping("getName", InventoryCraftResult.class, "func_70005_c_");
addMapping("markDirty", InventoryCraftResult.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryCraftResult.class, "func_70297_j_");
addMapping("decrStackSize", InventoryCraftResult.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryCraftResult.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryCraftResult.class, "func_70300_a");
addMapping("getStackInSlot", InventoryCraftResult.class, "func_70301_a");
addMapping("getSizeInventory", InventoryCraftResult.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryCraftResult.class, "func_70304_b");
addMapping("isItemValidForSlot", InventoryCraftResult.class, "func_94041_b");
addMapping("getDisplayName", InventoryCrafting.class, "func_145748_c_");
addMapping("hasCustomName", InventoryCrafting.class, "func_145818_k_");
addMapping("setField", InventoryCrafting.class, "func_174885_b");
addMapping("closeInventory", InventoryCrafting.class, "func_174886_c");
addMapping("getField", InventoryCrafting.class, "func_174887_a_");
addMapping("clear", InventoryCrafting.class, "func_174888_l");
addMapping("openInventory", InventoryCrafting.class, "func_174889_b");
addMapping("getFieldCount", InventoryCrafting.class, "func_174890_g");
addMapping("getWidth", InventoryCrafting.class, "func_174922_i");
addMapping("getHeight", InventoryCrafting.class, "func_174923_h");
addMapping("isEmpty", InventoryCrafting.class, "func_191420_l");
addMapping("fillStackedContents", InventoryCrafting.class, "func_194018_a");
addMapping("getName", InventoryCrafting.class, "func_70005_c_");
addMapping("markDirty", InventoryCrafting.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryCrafting.class, "func_70297_j_");
addMapping("decrStackSize", InventoryCrafting.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryCrafting.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryCrafting.class, "func_70300_a");
addMapping("getStackInSlot", InventoryCrafting.class, "func_70301_a");
addMapping("getSizeInventory", InventoryCrafting.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryCrafting.class, "func_70304_b");
addMapping("getStackInRowAndColumn", InventoryCrafting.class, "func_70463_b");
addMapping("isItemValidForSlot", InventoryCrafting.class, "func_94041_b");
addMapping("setChestTileEntity", InventoryEnderChest.class, "func_146031_a");
addMapping("closeInventory", InventoryEnderChest.class, "func_174886_c");
addMapping("openInventory", InventoryEnderChest.class, "func_174889_b");
addMapping("isUsableByPlayer", InventoryEnderChest.class, "func_70300_a");
addMapping("loadInventoryFromNBT", InventoryEnderChest.class, "func_70486_a");
addMapping("saveInventoryToNBT", InventoryEnderChest.class, "func_70487_g");
addMapping("spawnItemStack", InventoryHelper.class, "func_180173_a");
addMapping("dropInventoryItems", InventoryHelper.class, "func_180174_a");
addMapping("dropInventoryItems", InventoryHelper.class, "func_180175_a");
addMapping("dropInventoryItems", InventoryHelper.class, "func_180176_a");
addMapping("getDisplayName", InventoryLargeChest.class, "func_145748_c_");
addMapping("hasCustomName", InventoryLargeChest.class, "func_145818_k_");
addMapping("getGuiID", InventoryLargeChest.class, "func_174875_k");
addMapping("createContainer", InventoryLargeChest.class, "func_174876_a");
addMapping("setField", InventoryLargeChest.class, "func_174885_b");
addMapping("closeInventory", InventoryLargeChest.class, "func_174886_c");
addMapping("getField", InventoryLargeChest.class, "func_174887_a_");
addMapping("clear", InventoryLargeChest.class, "func_174888_l");
addMapping("openInventory", InventoryLargeChest.class, "func_174889_b");
addMapping("getFieldCount", InventoryLargeChest.class, "func_174890_g");
addMapping("getLockCode", InventoryLargeChest.class, "func_174891_i");
addMapping("setLockCode", InventoryLargeChest.class, "func_174892_a");
addMapping("isLocked", InventoryLargeChest.class, "func_174893_q_");
addMapping("isEmpty", InventoryLargeChest.class, "func_191420_l");
addMapping("getName", InventoryLargeChest.class, "func_70005_c_");
addMapping("markDirty", InventoryLargeChest.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryLargeChest.class, "func_70297_j_");
addMapping("decrStackSize", InventoryLargeChest.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryLargeChest.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryLargeChest.class, "func_70300_a");
addMapping("getStackInSlot", InventoryLargeChest.class, "func_70301_a");
addMapping("getSizeInventory", InventoryLargeChest.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryLargeChest.class, "func_70304_b");
addMapping("isPartOfLargeChest", InventoryLargeChest.class, "func_90010_a");
addMapping("isItemValidForSlot", InventoryLargeChest.class, "func_94041_b");
addMapping("getDisplayName", InventoryMerchant.class, "func_145748_c_");
addMapping("hasCustomName", InventoryMerchant.class, "func_145818_k_");
addMapping("setField", InventoryMerchant.class, "func_174885_b");
addMapping("closeInventory", InventoryMerchant.class, "func_174886_c");
addMapping("getField", InventoryMerchant.class, "func_174887_a_");
addMapping("clear", InventoryMerchant.class, "func_174888_l");
addMapping("openInventory", InventoryMerchant.class, "func_174889_b");
addMapping("getFieldCount", InventoryMerchant.class, "func_174890_g");
addMapping("isEmpty", InventoryMerchant.class, "func_191420_l");
addMapping("getName", InventoryMerchant.class, "func_70005_c_");
addMapping("markDirty", InventoryMerchant.class, "func_70296_d");
addMapping("getInventoryStackLimit", InventoryMerchant.class, "func_70297_j_");
addMapping("decrStackSize", InventoryMerchant.class, "func_70298_a");
addMapping("setInventorySlotContents", InventoryMerchant.class, "func_70299_a");
addMapping("isUsableByPlayer", InventoryMerchant.class, "func_70300_a");
addMapping("getStackInSlot", InventoryMerchant.class, "func_70301_a");
addMapping("getSizeInventory", InventoryMerchant.class, "func_70302_i_");
addMapping("removeStackFromSlot", InventoryMerchant.class, "func_70304_b");
addMapping("getCurrentRecipe", InventoryMerchant.class, "func_70468_h");
addMapping("inventoryResetNeededOnSlotChange", InventoryMerchant.class, "func_70469_d");
addMapping("resetRecipeAndSlots", InventoryMerchant.class, "func_70470_g");
addMapping("setCurrentRecipeIndex", InventoryMerchant.class, "func_70471_c");
addMapping("isItemValidForSlot", InventoryMerchant.class, "func_94041_b");
addMapping("getAndSplit", ItemStackHelper.class, "func_188382_a");
addMapping("getAndRemove", ItemStackHelper.class, "func_188383_a");
addMapping("saveAllItems", ItemStackHelper.class, "func_191281_a");
addMapping("saveAllItems", ItemStackHelper.class, "func_191282_a");
addMapping("loadAllItems", ItemStackHelper.class, "func_191283_b");
addMapping("isEnabled", Slot.class, "func_111238_b");
addMapping("getItemStackLimit", Slot.class, "func_178170_b");
addMapping("getSlotTexture", Slot.class, "func_178171_c");
addMapping("onSwapCraft", Slot.class, "func_190900_b");
addMapping("onTake", Slot.class, "func_190901_a");
addMapping("onCrafting", Slot.class, "func_75208_c");
addMapping("decrStackSize", Slot.class, "func_75209_a");
addMapping("onCrafting", Slot.class, "func_75210_a");
addMapping("getStack", Slot.class, "func_75211_c");
addMapping("isItemValid", Slot.class, "func_75214_a");
addMapping("putStack", Slot.class, "func_75215_d");
addMapping("getHasStack", Slot.class, "func_75216_d");
addMapping("isHere", Slot.class, "func_75217_a");
addMapping("onSlotChanged", Slot.class, "func_75218_e");
addMapping("getSlotStackLimit", Slot.class, "func_75219_a");
addMapping("onSlotChange", Slot.class, "func_75220_a");
addMapping("canTakeStack", Slot.class, "func_82869_a");
addMapping("onSwapCraft", SlotCrafting.class, "func_190900_b");
addMapping("onTake", SlotCrafting.class, "func_190901_a");
addMapping("onCrafting", SlotCrafting.class, "func_75208_c");
addMapping("decrStackSize", SlotCrafting.class, "func_75209_a");
addMapping("onCrafting", SlotCrafting.class, "func_75210_a");
addMapping("isItemValid", SlotCrafting.class, "func_75214_a");
addMapping("getItemStackLimit", SlotFurnaceFuel.class, "func_178170_b");
addMapping("isBucket", SlotFurnaceFuel.class, "func_178173_c_");
addMapping("isItemValid", SlotFurnaceFuel.class, "func_75214_a");
addMapping("onTake", SlotFurnaceOutput.class, "func_190901_a");
addMapping("onCrafting", SlotFurnaceOutput.class, "func_75208_c");
addMapping("decrStackSize", SlotFurnaceOutput.class, "func_75209_a");
addMapping("onCrafting", SlotFurnaceOutput.class, "func_75210_a");
addMapping("isItemValid", SlotFurnaceOutput.class, "func_75214_a");
addMapping("onTake", SlotMerchantResult.class, "func_190901_a");
addMapping("onCrafting", SlotMerchantResult.class, "func_75208_c");
addMapping("decrStackSize", SlotMerchantResult.class, "func_75209_a");
addMapping("onCrafting", SlotMerchantResult.class, "func_75210_a");
addMapping("isItemValid", SlotMerchantResult.class, "func_75214_a");
addMapping("doTrade", SlotMerchantResult.class, "func_75230_a");
addMapping("isItemValid", SlotShulkerBox.class, "func_75214_a");
addMapping("getName", EnumDyeColor.class, "func_176610_l");
addMapping("getUnlocalizedName", EnumDyeColor.class, "func_176762_d");
addMapping("byMetadata", EnumDyeColor.class, "func_176764_b");
addMapping("getMetadata", EnumDyeColor.class, "func_176765_a");
addMapping("byDyeDamage", EnumDyeColor.class, "func_176766_a");
addMapping("getDyeDamage", EnumDyeColor.class, "func_176767_b");
addMapping("getDyeColorName", EnumDyeColor.class, "func_192396_c");
addMapping("getColorComponentValues", EnumDyeColor.class, "func_193349_f");
addMapping("getColorValue", EnumDyeColor.class, "func_193350_e");
addMapping("apply", IItemPropertyGetter.class, "func_185085_a");
addMapping("getItemAttributeModifiers", Item.class, "func_111205_h");
addMapping("getByNameOrId", Item.class, "func_111206_d");
addMapping("itemInteractionForEntity", Item.class, "func_111207_a");
addMapping("getIdFromItem", Item.class, "func_150891_b");
addMapping("getDestroySpeed", Item.class, "func_150893_a");
addMapping("getSubItems", Item.class, "func_150895_a");
addMapping("canHarvestBlock", Item.class, "func_150897_b");
addMapping("getItemFromBlock", Item.class, "func_150898_a");
addMapping("getItemById", Item.class, "func_150899_d");
addMapping("registerItems", Item.class, "func_150900_l");
addMapping("registerItemBlock", Item.class, "func_179214_a");
addMapping("updateItemStackNBT", Item.class, "func_179215_a");
addMapping("registerItemBlock", Item.class, "func_179216_c");
addMapping("registerItem", Item.class, "func_179217_a");
addMapping("onBlockDestroyed", Item.class, "func_179218_a");
addMapping("registerItem", Item.class, "func_179219_a");
addMapping("onItemUse", Item.class, "func_180614_a");
addMapping("hasCustomProperties", Item.class, "func_185040_i");
addMapping("addPropertyOverride", Item.class, "func_185043_a");
addMapping("getPropertyGetter", Item.class, "func_185045_a");
addMapping("getDefaultInstance", Item.class, "func_190903_i");
addMapping("isInCreativeTab", Item.class, "func_194125_a");
addMapping("getMaxDamage", Item.class, "func_77612_l");
addMapping("getRarity", Item.class, "func_77613_e");
addMapping("getHasSubtypes", Item.class, "func_77614_k");
addMapping("onPlayerStoppedUsing", Item.class, "func_77615_a");
addMapping("isEnchantable", Item.class, "func_77616_k");
addMapping("getItemEnchantability", Item.class, "func_77619_b");
addMapping("rayTrace", Item.class, "func_77621_a");
addMapping("onCreated", Item.class, "func_77622_d");
addMapping("addInformation", Item.class, "func_77624_a");
addMapping("setMaxStackSize", Item.class, "func_77625_d");
addMapping("getMaxItemUseDuration", Item.class, "func_77626_a");
addMapping("setHasSubtypes", Item.class, "func_77627_a");
addMapping("shouldRotateAroundWhenRendering", Item.class, "func_77629_n_");
addMapping("hasContainerItem", Item.class, "func_77634_r");
addMapping("hasEffect", Item.class, "func_77636_d");
addMapping("setCreativeTab", Item.class, "func_77637_a");
addMapping("getItemStackLimit", Item.class, "func_77639_j");
addMapping("getCreativeTab", Item.class, "func_77640_w");
addMapping("setContainerItem", Item.class, "func_77642_a");
addMapping("isMap", Item.class, "func_77643_m_");
addMapping("hitEntity", Item.class, "func_77644_a");
addMapping("isDamageable", Item.class, "func_77645_m");
addMapping("getMetadata", Item.class, "func_77647_b");
addMapping("getShareTag", Item.class, "func_77651_p");
addMapping("getItemStackDisplayName", Item.class, "func_77653_i");
addMapping("onItemUseFinish", Item.class, "func_77654_b");
addMapping("setUnlocalizedName", Item.class, "func_77655_b");
addMapping("setMaxDamage", Item.class, "func_77656_e");
addMapping("getUnlocalizedNameInefficiently", Item.class, "func_77657_g");
addMapping("getUnlocalizedName", Item.class, "func_77658_a");
addMapping("onItemRightClick", Item.class, "func_77659_a");
addMapping("getItemUseAction", Item.class, "func_77661_b");
addMapping("isFull3D", Item.class, "func_77662_d");
addMapping("onUpdate", Item.class, "func_77663_a");
addMapping("setFull3D", Item.class, "func_77664_n");
addMapping("getUnlocalizedName", Item.class, "func_77667_c");
addMapping("getContainerItem", Item.class, "func_77668_q");
addMapping("canItemEditBlocks", Item.class, "func_82788_x");
addMapping("getIsRepairable", Item.class, "func_82789_a");
addMapping("addInformation", ItemAir.class, "func_77624_a");
addMapping("getUnlocalizedName", ItemAir.class, "func_77658_a");
addMapping("getUnlocalizedName", ItemAir.class, "func_77667_c");
addMapping("getMetadata", ItemAnvilBlock.class, "func_77647_b");
addMapping("getSubItems", ItemAppleGold.class, "func_150895_a");
addMapping("getRarity", ItemAppleGold.class, "func_77613_e");
addMapping("hasEffect", ItemAppleGold.class, "func_77636_d");
addMapping("onFoodEaten", ItemAppleGold.class, "func_77849_c");
addMapping("getItemAttributeModifiers", ItemArmor.class, "func_111205_h");
addMapping("dispenseArmor", ItemArmor.class, "func_185082_a");
addMapping("getEquipmentSlot", ItemArmor.class, "func_185083_B_");
addMapping("getItemEnchantability", ItemArmor.class, "func_77619_b");
addMapping("onItemRightClick", ItemArmor.class, "func_77659_a");
addMapping("getIsRepairable", ItemArmor.class, "func_82789_a");
addMapping("getArmorMaterial", ItemArmor.class, "func_82812_d");
addMapping("setColor", ItemArmor.class, "func_82813_b");
addMapping("getColor", ItemArmor.class, "func_82814_b");
addMapping("removeColor", ItemArmor.class, "func_82815_c");
addMapping("hasColor", ItemArmor.class, "func_82816_b_");
addMapping("applyRandomRotations", ItemArmorStand.class, "func_179221_a");
addMapping("onItemUse", ItemArmorStand.class, "func_180614_a");
addMapping("createArrow", ItemArrow.class, "func_185052_a");
addMapping("getDestroySpeed", ItemAxe.class, "func_150893_a");
addMapping("getSubItems", ItemBanner.class, "func_150895_a");
addMapping("getBaseColor", ItemBanner.class, "func_179225_h");
addMapping("onItemUse", ItemBanner.class, "func_180614_a");
addMapping("appendHoverTextFromTileEntityTag", ItemBanner.class, "func_185054_a");
addMapping("makeBanner", ItemBanner.class, "func_190910_a");
addMapping("addInformation", ItemBanner.class, "func_77624_a");
addMapping("getCreativeTab", ItemBanner.class, "func_77640_w");
addMapping("getItemStackDisplayName", ItemBanner.class, "func_77653_i");
addMapping("getSubItems", ItemBed.class, "func_150895_a");
addMapping("onItemUse", ItemBed.class, "func_180614_a");
addMapping("getUnlocalizedName", ItemBed.class, "func_77667_c");
addMapping("getSubItems", ItemBlock.class, "func_150895_a");
addMapping("canPlaceBlockOnSide", ItemBlock.class, "func_179222_a");
addMapping("getBlock", ItemBlock.class, "func_179223_d");
addMapping("setTileEntityNBT", ItemBlock.class, "func_179224_a");
addMapping("onItemUse", ItemBlock.class, "func_180614_a");
addMapping("addInformation", ItemBlock.class, "func_77624_a");
addMapping("getCreativeTab", ItemBlock.class, "func_77640_w");
addMapping("getUnlocalizedName", ItemBlock.class, "func_77658_a");
addMapping("getUnlocalizedName", ItemBlock.class, "func_77667_c");
addMapping("onItemUse", ItemBlockSpecial.class, "func_180614_a");
addMapping("onItemRightClick", ItemBoat.class, "func_77659_a");
addMapping("isEnchantable", ItemBook.class, "func_77616_k");
addMapping("getItemEnchantability", ItemBook.class, "func_77619_b");
addMapping("isArrow", ItemBow.class, "func_185058_h_");
addMapping("getArrowVelocity", ItemBow.class, "func_185059_b");
addMapping("findAmmo", ItemBow.class, "func_185060_a");
addMapping("onPlayerStoppedUsing", ItemBow.class, "func_77615_a");
addMapping("getItemEnchantability", ItemBow.class, "func_77619_b");
addMapping("getMaxItemUseDuration", ItemBow.class, "func_77626_a");
addMapping("onItemRightClick", ItemBow.class, "func_77659_a");
addMapping("getItemUseAction", ItemBow.class, "func_77661_b");
addMapping("fillBucket", ItemBucket.class, "func_150910_a");
addMapping("tryPlaceContainedLiquid", ItemBucket.class, "func_180616_a");
addMapping("onItemRightClick", ItemBucket.class, "func_77659_a");
addMapping("getMaxItemUseDuration", ItemBucketMilk.class, "func_77626_a");
addMapping("onItemUseFinish", ItemBucketMilk.class, "func_77654_b");
addMapping("onItemRightClick", ItemBucketMilk.class, "func_77659_a");
addMapping("getItemUseAction", ItemBucketMilk.class, "func_77661_b");
addMapping("shouldRotateAroundWhenRendering", ItemCarrotOnAStick.class, "func_77629_n_");
addMapping("onItemRightClick", ItemCarrotOnAStick.class, "func_77659_a");
addMapping("isFull3D", ItemCarrotOnAStick.class, "func_77662_d");
addMapping("onItemUseFinish", ItemChorusFruit.class, "func_77654_b");
addMapping("getMetadata", ItemCloth.class, "func_77647_b");
addMapping("getUnlocalizedName", ItemCloth.class, "func_77667_c");
addMapping("getSubItems", ItemCoal.class, "func_150895_a");
addMapping("getUnlocalizedName", ItemCoal.class, "func_77667_c");
addMapping("setSubtypeNames", ItemColored.class, "func_150943_a");
addMapping("getMetadata", ItemColored.class, "func_77647_b");
addMapping("getUnlocalizedName", ItemColored.class, "func_77667_c");
addMapping("placeDoor", ItemDoor.class, "func_179235_a");
addMapping("onItemUse", ItemDoor.class, "func_180614_a");
addMapping("itemInteractionForEntity", ItemDye.class, "func_111207_a");
addMapping("getSubItems", ItemDye.class, "func_150895_a");
addMapping("applyBonemeal", ItemDye.class, "func_179234_a");
addMapping("onItemUse", ItemDye.class, "func_180614_a");
addMapping("spawnBonemealParticles", ItemDye.class, "func_180617_a");
addMapping("getUnlocalizedName", ItemDye.class, "func_77667_c");
addMapping("onItemRightClick", ItemEgg.class, "func_77659_a");
addMapping("isUsable", ItemElytra.class, "func_185069_d");
addMapping("onItemRightClick", ItemElytra.class, "func_77659_a");
addMapping("getIsRepairable", ItemElytra.class, "func_82789_a");
addMapping("onItemRightClick", ItemEmptyMap.class, "func_77659_a");
addMapping("getSubItems", ItemEnchantedBook.class, "func_150895_a");
addMapping("getRarity", ItemEnchantedBook.class, "func_77613_e");
addMapping("isEnchantable", ItemEnchantedBook.class, "func_77616_k");
addMapping("addInformation", ItemEnchantedBook.class, "func_77624_a");
addMapping("hasEffect", ItemEnchantedBook.class, "func_77636_d");
addMapping("getEnchantments", ItemEnchantedBook.class, "func_92110_g");
addMapping("getEnchantedItemStack", ItemEnchantedBook.class, "func_92111_a");
addMapping("addEnchantment", ItemEnchantedBook.class, "func_92115_a");
addMapping("onItemUse", ItemEndCrystal.class, "func_180614_a");
addMapping("hasEffect", ItemEndCrystal.class, "func_77636_d");
addMapping("onItemUse", ItemEnderEye.class, "func_180614_a");
addMapping("onItemRightClick", ItemEnderEye.class, "func_77659_a");
addMapping("onItemRightClick", ItemEnderPearl.class, "func_77659_a");
addMapping("hasEffect", ItemExpBottle.class, "func_77636_d");
addMapping("onItemRightClick", ItemExpBottle.class, "func_77659_a");
addMapping("onItemUse", ItemFireball.class, "func_180614_a");
addMapping("onItemUse", ItemFirework.class, "func_180614_a");
addMapping("addInformation", ItemFirework.class, "func_77624_a");
addMapping("onItemRightClick", ItemFirework.class, "func_77659_a");
addMapping("addExplosionInfo", ItemFireworkCharge.class, "func_150902_a");
addMapping("getExplosionTag", ItemFireworkCharge.class, "func_150903_a");
addMapping("addInformation", ItemFireworkCharge.class, "func_77624_a");
addMapping("getSubItems", ItemFishFood.class, "func_150895_a");
addMapping("getHealAmount", ItemFishFood.class, "func_150905_g");
addMapping("getSaturationModifier", ItemFishFood.class, "func_150906_h");
addMapping("getUnlocalizedName", ItemFishFood.class, "func_77667_c");
addMapping("onFoodEaten", ItemFishFood.class, "func_77849_c");
addMapping("getItemEnchantability", ItemFishingRod.class, "func_77619_b");
addMapping("shouldRotateAroundWhenRendering", ItemFishingRod.class, "func_77629_n_");
addMapping("onItemRightClick", ItemFishingRod.class, "func_77659_a");
addMapping("isFull3D", ItemFishingRod.class, "func_77662_d");
addMapping("onItemUse", ItemFlintAndSteel.class, "func_180614_a");
addMapping("getHealAmount", ItemFood.class, "func_150905_g");
addMapping("getSaturationModifier", ItemFood.class, "func_150906_h");
addMapping("setPotionEffect", ItemFood.class, "func_185070_a");
addMapping("getMaxItemUseDuration", ItemFood.class, "func_77626_a");
addMapping("onItemUseFinish", ItemFood.class, "func_77654_b");
addMapping("onItemRightClick", ItemFood.class, "func_77659_a");
addMapping("getItemUseAction", ItemFood.class, "func_77661_b");
addMapping("isWolfsFavoriteMeat", ItemFood.class, "func_77845_h");
addMapping("setAlwaysEdible", ItemFood.class, "func_77848_i");
addMapping("onFoodEaten", ItemFood.class, "func_77849_c");
addMapping("turnBottleIntoItem", ItemGlassBottle.class, "func_185061_a");
addMapping("onItemRightClick", ItemGlassBottle.class, "func_77659_a");
addMapping("createEntity", ItemHangingEntity.class, "func_179233_a");
addMapping("onItemUse", ItemHangingEntity.class, "func_180614_a");
addMapping("getItemAttributeModifiers", ItemHoe.class, "func_111205_h");
addMapping("onItemUse", ItemHoe.class, "func_180614_a");
addMapping("setBlock", ItemHoe.class, "func_185071_a");
addMapping("hitEntity", ItemHoe.class, "func_77644_a");
addMapping("isFull3D", ItemHoe.class, "func_77662_d");
addMapping("getMaterialName", ItemHoe.class, "func_77842_f");
addMapping("onItemRightClick", ItemKnowledgeBook.class, "func_77659_a");
addMapping("onItemUse", ItemLead.class, "func_180614_a");
addMapping("attachToFence", ItemLead.class, "func_180618_a");
addMapping("getMetadata", ItemLeaves.class, "func_77647_b");
addMapping("getUnlocalizedName", ItemLeaves.class, "func_77667_c");
addMapping("onItemRightClick", ItemLilyPad.class, "func_77659_a");
addMapping("addInformation", ItemLingeringPotion.class, "func_77624_a");
addMapping("getItemStackDisplayName", ItemLingeringPotion.class, "func_77653_i");
addMapping("onItemRightClick", ItemLingeringPotion.class, "func_77659_a");
addMapping("createMapDataPacket", ItemMap.class, "func_150911_c");
addMapping("loadMapData", ItemMap.class, "func_150912_a");
addMapping("scaleMap", ItemMap.class, "func_185063_a");
addMapping("enableMapTracking", ItemMap.class, "func_185064_b");
addMapping("renderBiomePreviewMap", ItemMap.class, "func_190905_a");
addMapping("setupNewMap", ItemMap.class, "func_190906_a");
addMapping("getColor", ItemMap.class, "func_190907_h");
addMapping("onCreated", ItemMap.class, "func_77622_d");
addMapping("addInformation", ItemMap.class, "func_77624_a");
addMapping("onUpdate", ItemMap.class, "func_77663_a");
addMapping("updateMapData", ItemMap.class, "func_77872_a");
addMapping("getMapData", ItemMap.class, "func_77873_a");
addMapping("createMapDataPacket", ItemMapBase.class, "func_150911_c");
addMapping("isMap", ItemMapBase.class, "func_77643_m_");
addMapping("onItemUse", ItemMinecart.class, "func_180614_a");
addMapping("getSubItems", ItemMonsterPlacer.class, "func_150895_a");
addMapping("onItemUse", ItemMonsterPlacer.class, "func_180614_a");
addMapping("applyEntityIdToItemStack", ItemMonsterPlacer.class, "func_185078_a");
addMapping("applyItemEntityDataToEntity", ItemMonsterPlacer.class, "func_185079_a");
addMapping("getNamedIdFrom", ItemMonsterPlacer.class, "func_190908_h");
addMapping("getYOffset", ItemMonsterPlacer.class, "func_190909_a");
addMapping("getItemStackDisplayName", ItemMonsterPlacer.class, "func_77653_i");
addMapping("onItemRightClick", ItemMonsterPlacer.class, "func_77659_a");
addMapping("spawnCreature", ItemMonsterPlacer.class, "func_77840_a");
addMapping("getMetadata", ItemMultiTexture.class, "func_77647_b");
addMapping("getUnlocalizedName", ItemMultiTexture.class, "func_77667_c");
addMapping("itemInteractionForEntity", ItemNameTag.class, "func_111207_a");
addMapping("getDestroySpeed", ItemPickaxe.class, "func_150893_a");
addMapping("canHarvestBlock", ItemPickaxe.class, "func_150897_b");
addMapping("getMetadata", ItemPiston.class, "func_77647_b");
addMapping("getSubItems", ItemPotion.class, "func_150895_a");
addMapping("getDefaultInstance", ItemPotion.class, "func_190903_i");
addMapping("addInformation", ItemPotion.class, "func_77624_a");
addMapping("getMaxItemUseDuration", ItemPotion.class, "func_77626_a");
addMapping("hasEffect", ItemPotion.class, "func_77636_d");
addMapping("getItemStackDisplayName", ItemPotion.class, "func_77653_i");
addMapping("onItemUseFinish", ItemPotion.class, "func_77654_b");
addMapping("onItemRightClick", ItemPotion.class, "func_77659_a");
addMapping("getItemUseAction", ItemPotion.class, "func_77661_b");
addMapping("getRecordNameLocal", ItemRecord.class, "func_150927_i");
addMapping("onItemUse", ItemRecord.class, "func_180614_a");
addMapping("getBySound", ItemRecord.class, "func_185074_a");
addMapping("getSound", ItemRecord.class, "func_185075_h");
addMapping("getRarity", ItemRecord.class, "func_77613_e");
addMapping("addInformation", ItemRecord.class, "func_77624_a");
addMapping("onItemUse", ItemRedstone.class, "func_180614_a");
addMapping("itemInteractionForEntity", ItemSaddle.class, "func_111207_a");
addMapping("onItemUse", ItemSeedFood.class, "func_180614_a");
addMapping("onItemUse", ItemSeeds.class, "func_180614_a");
addMapping("getDestroySpeed", ItemShears.class, "func_150893_a");
addMapping("canHarvestBlock", ItemShears.class, "func_150897_b");
addMapping("onBlockDestroyed", ItemShears.class, "func_179218_a");
addMapping("addInformation", ItemShield.class, "func_77624_a");
addMapping("getMaxItemUseDuration", ItemShield.class, "func_77626_a");
addMapping("getItemStackDisplayName", ItemShield.class, "func_77653_i");
addMapping("onItemRightClick", ItemShield.class, "func_77659_a");
addMapping("getItemUseAction", ItemShield.class, "func_77661_b");
addMapping("getIsRepairable", ItemShield.class, "func_82789_a");
addMapping("onItemUse", ItemSign.class, "func_180614_a");
addMapping("hasEffect", ItemSimpleFoiled.class, "func_77636_d");
addMapping("getSubItems", ItemSkull.class, "func_150895_a");
addMapping("updateItemStackNBT", ItemSkull.class, "func_179215_a");
addMapping("onItemUse", ItemSkull.class, "func_180614_a");
addMapping("getMetadata", ItemSkull.class, "func_77647_b");
addMapping("getItemStackDisplayName", ItemSkull.class, "func_77653_i");
addMapping("getUnlocalizedName", ItemSkull.class, "func_77667_c");
addMapping("canPlaceBlockOnSide", ItemSlab.class, "func_179222_a");
addMapping("onItemUse", ItemSlab.class, "func_180614_a");
addMapping("tryPlace", ItemSlab.class, "func_180615_a");
addMapping("makeState", ItemSlab.class, "func_185055_a");
addMapping("getMetadata", ItemSlab.class, "func_77647_b");
addMapping("getUnlocalizedName", ItemSlab.class, "func_77667_c");
addMapping("onItemUse", ItemSnow.class, "func_180614_a");
addMapping("getMetadata", ItemSnow.class, "func_77647_b");
addMapping("onItemRightClick", ItemSnowball.class, "func_77659_a");
addMapping("onItemUseFinish", ItemSoup.class, "func_77654_b");
addMapping("canHarvestBlock", ItemSpade.class, "func_150897_b");
addMapping("onItemUse", ItemSpade.class, "func_180614_a");
addMapping("createArrow", ItemSpectralArrow.class, "func_185052_a");
addMapping("getItemStackDisplayName", ItemSplashPotion.class, "func_77653_i");
addMapping("onItemRightClick", ItemSplashPotion.class, "func_77659_a");
addMapping("interactWithEntity", ItemStack.class, "func_111282_a");
addMapping("getAttributeModifiers", ItemStack.class, "func_111283_C");
addMapping("clearCustomName", ItemStack.class, "func_135074_t");
addMapping("getDestroySpeed", ItemStack.class, "func_150997_a");
addMapping("canHarvestBlock", ItemStack.class, "func_150998_b");
addMapping("getTextComponent", ItemStack.class, "func_151000_E");
addMapping("setStackDisplayName", ItemStack.class, "func_151001_c");
addMapping("getSubCompound", ItemStack.class, "func_179543_a");
addMapping("canDestroy", ItemStack.class, "func_179544_c");
addMapping("areItemsEqual", ItemStack.class, "func_179545_c");
addMapping("onItemUse", ItemStack.class, "func_179546_a");
addMapping("canPlaceOn", ItemStack.class, "func_179547_d");
addMapping("onBlockDestroyed", ItemStack.class, "func_179548_a");
addMapping("addAttributeModifier", ItemStack.class, "func_185129_a");
addMapping("areItemsEqualIgnoreDurability", ItemStack.class, "func_185132_d");
addMapping("isItemEqualIgnoreDurability", ItemStack.class, "func_185136_b");
addMapping("registerFixes", ItemStack.class, "func_189868_a");
addMapping("setAnimationsToGo", ItemStack.class, "func_190915_d");
addMapping("getCount", ItemStack.class, "func_190916_E");
addMapping("grow", ItemStack.class, "func_190917_f");
addMapping("shrink", ItemStack.class, "func_190918_g");
addMapping("removeSubCompound", ItemStack.class, "func_190919_e");
addMapping("setCount", ItemStack.class, "func_190920_e");
addMapping("getAnimationsToGo", ItemStack.class, "func_190921_D");
addMapping("updateEmptyState", ItemStack.class, "func_190923_F");
addMapping("setTranslatableName", ItemStack.class, "func_190924_f");
addMapping("getOrCreateSubCompound", ItemStack.class, "func_190925_c");
addMapping("isEmpty", ItemStack.class, "func_190926_b");
addMapping("hasTagCompound", ItemStack.class, "func_77942_o");
addMapping("updateAnimation", ItemStack.class, "func_77945_a");
addMapping("copy", ItemStack.class, "func_77946_l");
addMapping("isItemEnchanted", ItemStack.class, "func_77948_v");
addMapping("onItemUseFinish", ItemStack.class, "func_77950_b");
addMapping("isItemDamaged", ItemStack.class, "func_77951_h");
addMapping("getItemDamage", ItemStack.class, "func_77952_i");
addMapping("getRarity", ItemStack.class, "func_77953_t");
addMapping("writeToNBT", ItemStack.class, "func_77955_b");
addMapping("isItemEnchantable", ItemStack.class, "func_77956_u");
addMapping("useItemRightClick", ItemStack.class, "func_77957_a");
addMapping("getMaxDamage", ItemStack.class, "func_77958_k");
addMapping("isItemStackEqual", ItemStack.class, "func_77959_d");
addMapping("getMetadata", ItemStack.class, "func_77960_j");
addMapping("hitEntity", ItemStack.class, "func_77961_a");
addMapping("hasEffect", ItemStack.class, "func_77962_s");
addMapping("setItemDamage", ItemStack.class, "func_77964_b");
addMapping("addEnchantment", ItemStack.class, "func_77966_a");
addMapping("isItemEqual", ItemStack.class, "func_77969_a");
addMapping("areItemStackTagsEqual", ItemStack.class, "func_77970_a");
addMapping("damageItem", ItemStack.class, "func_77972_a");
addMapping("getItem", ItemStack.class, "func_77973_b");
addMapping("onPlayerStoppedUsing", ItemStack.class, "func_77974_b");
addMapping("getItemUseAction", ItemStack.class, "func_77975_n");
addMapping("getMaxStackSize", ItemStack.class, "func_77976_d");
addMapping("getUnlocalizedName", ItemStack.class, "func_77977_a");
addMapping("getTagCompound", ItemStack.class, "func_77978_p");
addMapping("splitStack", ItemStack.class, "func_77979_a");
addMapping("onCrafting", ItemStack.class, "func_77980_a");
addMapping("getHasSubtypes", ItemStack.class, "func_77981_g");
addMapping("setTagCompound", ItemStack.class, "func_77982_d");
addMapping("setTagInfo", ItemStack.class, "func_77983_a");
addMapping("isItemStackDamageable", ItemStack.class, "func_77984_f");
addMapping("isStackable", ItemStack.class, "func_77985_e");
addMapping("getEnchantmentTagList", ItemStack.class, "func_77986_q");
addMapping("getMaxItemUseDuration", ItemStack.class, "func_77988_m");
addMapping("areItemStacksEqual", ItemStack.class, "func_77989_b");
addMapping("getDisplayName", ItemStack.class, "func_82833_r");
addMapping("canEditBlocks", ItemStack.class, "func_82835_x");
addMapping("getItemFrame", ItemStack.class, "func_82836_z");
addMapping("hasDisplayName", ItemStack.class, "func_82837_s");
addMapping("getRepairCost", ItemStack.class, "func_82838_A");
addMapping("isOnItemFrame", ItemStack.class, "func_82839_y");
addMapping("getTooltip", ItemStack.class, "func_82840_a");
addMapping("setRepairCost", ItemStack.class, "func_82841_c");
addMapping("setItemFrame", ItemStack.class, "func_82842_a");
addMapping("attemptDamageItem", ItemStack.class, "func_96631_a");
addMapping("getItemAttributeModifiers", ItemSword.class, "func_111205_h");
addMapping("getDestroySpeed", ItemSword.class, "func_150893_a");
addMapping("canHarvestBlock", ItemSword.class, "func_150897_b");
addMapping("getAttackDamage", ItemSword.class, "func_150931_i");
addMapping("getToolMaterialName", ItemSword.class, "func_150932_j");
addMapping("onBlockDestroyed", ItemSword.class, "func_179218_a");
addMapping("getItemEnchantability", ItemSword.class, "func_77619_b");
addMapping("hitEntity", ItemSword.class, "func_77644_a");
addMapping("isFull3D", ItemSword.class, "func_77662_d");
addMapping("getIsRepairable", ItemSword.class, "func_82789_a");
addMapping("getSubItems", ItemTippedArrow.class, "func_150895_a");
addMapping("createArrow", ItemTippedArrow.class, "func_185052_a");
addMapping("getDefaultInstance", ItemTippedArrow.class, "func_190903_i");
addMapping("addInformation", ItemTippedArrow.class, "func_77624_a");
addMapping("getItemStackDisplayName", ItemTippedArrow.class, "func_77653_i");
addMapping("getItemAttributeModifiers", ItemTool.class, "func_111205_h");
addMapping("getDestroySpeed", ItemTool.class, "func_150893_a");
addMapping("onBlockDestroyed", ItemTool.class, "func_179218_a");
addMapping("getItemEnchantability", ItemTool.class, "func_77619_b");
addMapping("hitEntity", ItemTool.class, "func_77644_a");
addMapping("isFull3D", ItemTool.class, "func_77662_d");
addMapping("getToolMaterialName", ItemTool.class, "func_77861_e");
addMapping("getIsRepairable", ItemTool.class, "func_82789_a");
addMapping("isNBTValid", ItemWritableBook.class, "func_150930_a");
addMapping("onItemRightClick", ItemWritableBook.class, "func_77659_a");
addMapping("resolveContents", ItemWrittenBook.class, "func_179229_a");
addMapping("getGeneration", ItemWrittenBook.class, "func_179230_h");
addMapping("addInformation", ItemWrittenBook.class, "func_77624_a");
addMapping("hasEffect", ItemWrittenBook.class, "func_77636_d");
addMapping("getItemStackDisplayName", ItemWrittenBook.class, "func_77653_i");
addMapping("onItemRightClick", ItemWrittenBook.class, "func_77659_a");
addMapping("validBookTagContents", ItemWrittenBook.class, "func_77828_a");
addMapping("getRemainingItems", CraftingManager.class, "func_180303_b");
addMapping("findMatchingRecipe", CraftingManager.class, "func_192413_b");
addMapping("parseJsonRecipes", CraftingManager.class, "func_192420_c");
addMapping("register", CraftingManager.class, "func_193372_a");
addMapping("getRecipe", CraftingManager.class, "func_193373_a");
addMapping("getRecipeById", CraftingManager.class, "func_193374_a");
addMapping("getIDForRecipe", CraftingManager.class, "func_193375_a");
addMapping("parseRecipeJson", CraftingManager.class, "func_193376_a");
addMapping("init", CraftingManager.class, "func_193377_a");
addMapping("register", CraftingManager.class, "func_193379_a");
addMapping("findMatchingResult", CraftingManager.class, "func_82787_a");
addMapping("addSmeltingRecipeForBlock", FurnaceRecipes.class, "func_151393_a");
addMapping("addSmeltingRecipe", FurnaceRecipes.class, "func_151394_a");
addMapping("getSmeltingResult", FurnaceRecipes.class, "func_151395_a");
addMapping("addSmelting", FurnaceRecipes.class, "func_151396_a");
addMapping("compareItemStacks", FurnaceRecipes.class, "func_151397_a");
addMapping("getSmeltingExperience", FurnaceRecipes.class, "func_151398_b");
addMapping("getSmeltingList", FurnaceRecipes.class, "func_77599_b");
addMapping("instance", FurnaceRecipes.class, "func_77602_a");
addMapping("getRemainingItems", IRecipe.class, "func_179532_b");
addMapping("isDynamic", IRecipe.class, "func_192399_d");
addMapping("getIngredients", IRecipe.class, "func_192400_c");
addMapping("getGroup", IRecipe.class, "func_193358_e");
addMapping("canFit", IRecipe.class, "func_194133_a");
addMapping("matches", IRecipe.class, "func_77569_a");
addMapping("getRecipeOutput", IRecipe.class, "func_77571_b");
addMapping("getCraftingResult", IRecipe.class, "func_77572_b");
addMapping("getMatchingStacks", Ingredient.class, "func_193365_a");
addMapping("fromItem", Ingredient.class, "func_193367_a");
addMapping("fromItems", Ingredient.class, "func_193368_a");
addMapping("fromStacks", Ingredient.class, "func_193369_a");
addMapping("getValidItemStacksPacked", Ingredient.class, "func_194139_b");
addMapping("getRemainingItems", RecipeBookCloning.class, "func_179532_b");
addMapping("isDynamic", RecipeBookCloning.class, "func_192399_d");
addMapping("canFit", RecipeBookCloning.class, "func_194133_a");
addMapping("matches", RecipeBookCloning.class, "func_77569_a");
addMapping("getRecipeOutput", RecipeBookCloning.class, "func_77571_b");
addMapping("getCraftingResult", RecipeBookCloning.class, "func_77572_b");
addMapping("getRemainingItems", RecipeFireworks.class, "func_179532_b");
addMapping("isDynamic", RecipeFireworks.class, "func_192399_d");
addMapping("canFit", RecipeFireworks.class, "func_194133_a");
addMapping("matches", RecipeFireworks.class, "func_77569_a");
addMapping("getRecipeOutput", RecipeFireworks.class, "func_77571_b");
addMapping("getCraftingResult", RecipeFireworks.class, "func_77572_b");
addMapping("getRemainingItems", RecipeRepairItem.class, "func_179532_b");
addMapping("isDynamic", RecipeRepairItem.class, "func_192399_d");
addMapping("canFit", RecipeRepairItem.class, "func_194133_a");
addMapping("matches", RecipeRepairItem.class, "func_77569_a");
addMapping("getRecipeOutput", RecipeRepairItem.class, "func_77571_b");
addMapping("getCraftingResult", RecipeRepairItem.class, "func_77572_b");
addMapping("getRemainingItems", RecipeTippedArrow.class, "func_179532_b");
addMapping("isDynamic", RecipeTippedArrow.class, "func_192399_d");
addMapping("canFit", RecipeTippedArrow.class, "func_194133_a");
addMapping("matches", RecipeTippedArrow.class, "func_77569_a");
addMapping("getRecipeOutput", RecipeTippedArrow.class, "func_77571_b");
addMapping("getCraftingResult", RecipeTippedArrow.class, "func_77572_b");
addMapping("getRemainingItems", RecipesArmorDyes.class, "func_179532_b");
addMapping("isDynamic", RecipesArmorDyes.class, "func_192399_d");
addMapping("canFit", RecipesArmorDyes.class, "func_194133_a");
addMapping("matches", RecipesArmorDyes.class, "func_77569_a");
addMapping("getRecipeOutput", RecipesArmorDyes.class, "func_77571_b");
addMapping("getCraftingResult", RecipesArmorDyes.class, "func_77572_b");
addMapping("getRemainingItems", RecipesMapCloning.class, "func_179532_b");
addMapping("isDynamic", RecipesMapCloning.class, "func_192399_d");
addMapping("canFit", RecipesMapCloning.class, "func_194133_a");
addMapping("matches", RecipesMapCloning.class, "func_77569_a");
addMapping("getRecipeOutput", RecipesMapCloning.class, "func_77571_b");
addMapping("getCraftingResult", RecipesMapCloning.class, "func_77572_b");
addMapping("isExplorationMap", RecipesMapExtending.class, "func_190934_a");
addMapping("isDynamic", RecipesMapExtending.class, "func_192399_d");
addMapping("matches", RecipesMapExtending.class, "func_77569_a");
addMapping("getCraftingResult", RecipesMapExtending.class, "func_77572_b");
addMapping("getRemainingItems", ShapedRecipes.class, "func_179532_b");
addMapping("getIngredients", ShapedRecipes.class, "func_192400_c");
addMapping("deserializeIngredients", ShapedRecipes.class, "func_192402_a");
addMapping("getWidth", ShapedRecipes.class, "func_192403_f");
addMapping("getHeight", ShapedRecipes.class, "func_192404_g");
addMapping("deserializeItem", ShapedRecipes.class, "func_192405_a");
addMapping("patternFromJson", ShapedRecipes.class, "func_192407_a");
addMapping("deserializeKey", ShapedRecipes.class, "func_192408_a");
addMapping("getGroup", ShapedRecipes.class, "func_193358_e");
addMapping("deserializeIngredient", ShapedRecipes.class, "func_193361_a");
addMapping("deserialize", ShapedRecipes.class, "func_193362_a");
addMapping("canFit", ShapedRecipes.class, "func_194133_a");
addMapping("shrink", ShapedRecipes.class, "func_194134_a");
addMapping("firstNonSpace", ShapedRecipes.class, "func_194135_a");
addMapping("lastNonSpace", ShapedRecipes.class, "func_194136_b");
addMapping("matches", ShapedRecipes.class, "func_77569_a");
addMapping("getRecipeOutput", ShapedRecipes.class, "func_77571_b");
addMapping("getCraftingResult", ShapedRecipes.class, "func_77572_b");
addMapping("checkMatch", ShapedRecipes.class, "func_77573_a");
addMapping("getRemainingItems", ShapelessRecipes.class, "func_179532_b");
addMapping("getIngredients", ShapelessRecipes.class, "func_192400_c");
addMapping("getGroup", ShapelessRecipes.class, "func_193358_e");
addMapping("deserialize", ShapelessRecipes.class, "func_193363_a");
addMapping("deserializeIngredients", ShapelessRecipes.class, "func_193364_a");
addMapping("canFit", ShapelessRecipes.class, "func_194133_a");
addMapping("matches", ShapelessRecipes.class, "func_77569_a");
addMapping("getRecipeOutput", ShapelessRecipes.class, "func_77571_b");
addMapping("getCraftingResult", ShapelessRecipes.class, "func_77572_b");
addMapping("writeTag", CompressedStreamTools.class, "func_150663_a");
addMapping("read", CompressedStreamTools.class, "func_152455_a");
addMapping("read", CompressedStreamTools.class, "func_152456_a");
addMapping("safeWrite", CompressedStreamTools.class, "func_74793_a");
addMapping("read", CompressedStreamTools.class, "func_74794_a");
addMapping("write", CompressedStreamTools.class, "func_74795_b");
addMapping("readCompressed", CompressedStreamTools.class, "func_74796_a");
addMapping("read", CompressedStreamTools.class, "func_74797_a");
addMapping("writeCompressed", CompressedStreamTools.class, "func_74799_a");
addMapping("write", CompressedStreamTools.class, "func_74800_a");
addMapping("getTagFromJson", JsonToNBT.class, "func_180713_a");
addMapping("readStruct", JsonToNBT.class, "func_193593_f");
addMapping("pop", JsonToNBT.class, "func_193594_o");
addMapping("readQuotedString", JsonToNBT.class, "func_193595_h");
addMapping("type", JsonToNBT.class, "func_193596_c");
addMapping("peek", JsonToNBT.class, "func_193597_b");
addMapping("peek", JsonToNBT.class, "func_193598_n");
addMapping("isAllowedInKey", JsonToNBT.class, "func_193599_a");
addMapping("readListTag", JsonToNBT.class, "func_193600_j");
addMapping("readKey", JsonToNBT.class, "func_193601_b");
addMapping("exception", JsonToNBT.class, "func_193602_b");
addMapping("readArray", JsonToNBT.class, "func_193603_a");
addMapping("expect", JsonToNBT.class, "func_193604_b");
addMapping("readList", JsonToNBT.class, "func_193605_e");
addMapping("readArrayTag", JsonToNBT.class, "func_193606_k");
addMapping("skipWhitespace", JsonToNBT.class, "func_193607_l");
addMapping("canRead", JsonToNBT.class, "func_193608_a");
addMapping("readSingleStruct", JsonToNBT.class, "func_193609_a");
addMapping("readValue", JsonToNBT.class, "func_193610_d");
addMapping("readTypedValue", JsonToNBT.class, "func_193611_c");
addMapping("canRead", JsonToNBT.class, "func_193612_g");
addMapping("hasElementSeparator", JsonToNBT.class, "func_193613_m");
addMapping("readString", JsonToNBT.class, "func_193614_i");
addMapping("createNewByType", NBTBase.class, "func_150284_a");
addMapping("getString", NBTBase.class, "func_150285_a_");
addMapping("read", NBTBase.class, "func_152446_a");
addMapping("getTagTypeName", NBTBase.class, "func_193581_j");
addMapping("getId", NBTBase.class, "func_74732_a");
addMapping("write", NBTBase.class, "func_74734_a");
addMapping("copy", NBTBase.class, "func_74737_b");
addMapping("hasNoTags", NBTBase.class, "func_82582_d");
addMapping("slice", NBTException.class, "func_193592_a");
addMapping("getDouble", NBTPrimitive.class, "func_150286_g");
addMapping("getInt", NBTPrimitive.class, "func_150287_d");
addMapping("getFloat", NBTPrimitive.class, "func_150288_h");
addMapping("getShort", NBTPrimitive.class, "func_150289_e");
addMapping("getByte", NBTPrimitive.class, "func_150290_f");
addMapping("getLong", NBTPrimitive.class, "func_150291_c");
addMapping("read", NBTSizeTracker.class, "func_152450_a");
addMapping("getDouble", NBTTagByte.class, "func_150286_g");
addMapping("getInt", NBTTagByte.class, "func_150287_d");
addMapping("getFloat", NBTTagByte.class, "func_150288_h");
addMapping("getShort", NBTTagByte.class, "func_150289_e");
addMapping("getByte", NBTTagByte.class, "func_150290_f");
addMapping("getLong", NBTTagByte.class, "func_150291_c");
addMapping("read", NBTTagByte.class, "func_152446_a");
addMapping("getId", NBTTagByte.class, "func_74732_a");
addMapping("write", NBTTagByte.class, "func_74734_a");
addMapping("copy", NBTTagByte.class, "func_74737_b");
addMapping("getByteArray", NBTTagByteArray.class, "func_150292_c");
addMapping("read", NBTTagByteArray.class, "func_152446_a");
addMapping("toArray", NBTTagByteArray.class, "func_193589_a");
addMapping("getId", NBTTagByteArray.class, "func_74732_a");
addMapping("write", NBTTagByteArray.class, "func_74734_a");
addMapping("copy", NBTTagByteArray.class, "func_74737_b");
addMapping("getTagList", NBTTagCompound.class, "func_150295_c");
addMapping("getKeySet", NBTTagCompound.class, "func_150296_c");
addMapping("hasKey", NBTTagCompound.class, "func_150297_b");
addMapping("writeEntry", NBTTagCompound.class, "func_150298_a");
addMapping("getTagId", NBTTagCompound.class, "func_150299_b");
addMapping("read", NBTTagCompound.class, "func_152446_a");
addMapping("readType", NBTTagCompound.class, "func_152447_a");
addMapping("readKey", NBTTagCompound.class, "func_152448_b");
addMapping("readNBT", NBTTagCompound.class, "func_152449_a");
addMapping("merge", NBTTagCompound.class, "func_179237_a");
addMapping("setUniqueId", NBTTagCompound.class, "func_186854_a");
addMapping("hasUniqueId", NBTTagCompound.class, "func_186855_b");
addMapping("getSize", NBTTagCompound.class, "func_186856_d");
addMapping("getUniqueId", NBTTagCompound.class, "func_186857_a");
addMapping("handleEscape", NBTTagCompound.class, "func_193582_s");
addMapping("getId", NBTTagCompound.class, "func_74732_a");
addMapping("write", NBTTagCompound.class, "func_74734_a");
addMapping("copy", NBTTagCompound.class, "func_74737_b");
addMapping("setBoolean", NBTTagCompound.class, "func_74757_a");
addMapping("getIntArray", NBTTagCompound.class, "func_74759_k");
addMapping("getFloat", NBTTagCompound.class, "func_74760_g");
addMapping("getInteger", NBTTagCompound.class, "func_74762_e");
addMapping("getLong", NBTTagCompound.class, "func_74763_f");
addMapping("hasKey", NBTTagCompound.class, "func_74764_b");
addMapping("getShort", NBTTagCompound.class, "func_74765_d");
addMapping("getBoolean", NBTTagCompound.class, "func_74767_n");
addMapping("setInteger", NBTTagCompound.class, "func_74768_a");
addMapping("getDouble", NBTTagCompound.class, "func_74769_h");
addMapping("getByteArray", NBTTagCompound.class, "func_74770_j");
addMapping("getByte", NBTTagCompound.class, "func_74771_c");
addMapping("setLong", NBTTagCompound.class, "func_74772_a");
addMapping("setByteArray", NBTTagCompound.class, "func_74773_a");
addMapping("setByte", NBTTagCompound.class, "func_74774_a");
addMapping("getCompoundTag", NBTTagCompound.class, "func_74775_l");
addMapping("setFloat", NBTTagCompound.class, "func_74776_a");
addMapping("setShort", NBTTagCompound.class, "func_74777_a");
addMapping("setString", NBTTagCompound.class, "func_74778_a");
addMapping("getString", NBTTagCompound.class, "func_74779_i");
addMapping("setDouble", NBTTagCompound.class, "func_74780_a");
addMapping("getTag", NBTTagCompound.class, "func_74781_a");
addMapping("setTag", NBTTagCompound.class, "func_74782_a");
addMapping("setIntArray", NBTTagCompound.class, "func_74783_a");
addMapping("removeTag", NBTTagCompound.class, "func_82580_o");
addMapping("createCrashReport", NBTTagCompound.class, "func_82581_a");
addMapping("hasNoTags", NBTTagCompound.class, "func_82582_d");
addMapping("getDouble", NBTTagDouble.class, "func_150286_g");
addMapping("getInt", NBTTagDouble.class, "func_150287_d");
addMapping("getFloat", NBTTagDouble.class, "func_150288_h");
addMapping("getShort", NBTTagDouble.class, "func_150289_e");
addMapping("getByte", NBTTagDouble.class, "func_150290_f");
addMapping("getLong", NBTTagDouble.class, "func_150291_c");
addMapping("read", NBTTagDouble.class, "func_152446_a");
addMapping("getId", NBTTagDouble.class, "func_74732_a");
addMapping("write", NBTTagDouble.class, "func_74734_a");
addMapping("copy", NBTTagDouble.class, "func_74737_b");
addMapping("read", NBTTagEnd.class, "func_152446_a");
addMapping("getId", NBTTagEnd.class, "func_74732_a");
addMapping("write", NBTTagEnd.class, "func_74734_a");
addMapping("copy", NBTTagEnd.class, "func_74737_b");
addMapping("getDouble", NBTTagFloat.class, "func_150286_g");
addMapping("getInt", NBTTagFloat.class, "func_150287_d");
addMapping("getFloat", NBTTagFloat.class, "func_150288_h");
addMapping("getShort", NBTTagFloat.class, "func_150289_e");
addMapping("getByte", NBTTagFloat.class, "func_150290_f");
addMapping("getLong", NBTTagFloat.class, "func_150291_c");
addMapping("read", NBTTagFloat.class, "func_152446_a");
addMapping("getId", NBTTagFloat.class, "func_74732_a");
addMapping("write", NBTTagFloat.class, "func_74734_a");
addMapping("copy", NBTTagFloat.class, "func_74737_b");
addMapping("getDouble", NBTTagInt.class, "func_150286_g");
addMapping("getInt", NBTTagInt.class, "func_150287_d");
addMapping("getFloat", NBTTagInt.class, "func_150288_h");
addMapping("getShort", NBTTagInt.class, "func_150289_e");
addMapping("getByte", NBTTagInt.class, "func_150290_f");
addMapping("getLong", NBTTagInt.class, "func_150291_c");
addMapping("read", NBTTagInt.class, "func_152446_a");
addMapping("getId", NBTTagInt.class, "func_74732_a");
addMapping("write", NBTTagInt.class, "func_74734_a");
addMapping("copy", NBTTagInt.class, "func_74737_b");
addMapping("getIntArray", NBTTagIntArray.class, "func_150302_c");
addMapping("read", NBTTagIntArray.class, "func_152446_a");
addMapping("toArray", NBTTagIntArray.class, "func_193584_a");
addMapping("getId", NBTTagIntArray.class, "func_74732_a");
addMapping("write", NBTTagIntArray.class, "func_74734_a");
addMapping("copy", NBTTagIntArray.class, "func_74737_b");
addMapping("getTagType", NBTTagList.class, "func_150303_d");
addMapping("set", NBTTagList.class, "func_150304_a");
addMapping("getCompoundTagAt", NBTTagList.class, "func_150305_b");
addMapping("getIntArrayAt", NBTTagList.class, "func_150306_c");
addMapping("getStringTagAt", NBTTagList.class, "func_150307_f");
addMapping("getFloatAt", NBTTagList.class, "func_150308_e");
addMapping("getDoubleAt", NBTTagList.class, "func_150309_d");
addMapping("read", NBTTagList.class, "func_152446_a");
addMapping("get", NBTTagList.class, "func_179238_g");
addMapping("getIntAt", NBTTagList.class, "func_186858_c");
addMapping("getId", NBTTagList.class, "func_74732_a");
addMapping("write", NBTTagList.class, "func_74734_a");
addMapping("copy", NBTTagList.class, "func_74737_b");
addMapping("appendTag", NBTTagList.class, "func_74742_a");
addMapping("removeTag", NBTTagList.class, "func_74744_a");
addMapping("tagCount", NBTTagList.class, "func_74745_c");
addMapping("hasNoTags", NBTTagList.class, "func_82582_d");
addMapping("getDouble", NBTTagLong.class, "func_150286_g");
addMapping("getInt", NBTTagLong.class, "func_150287_d");
addMapping("getFloat", NBTTagLong.class, "func_150288_h");
addMapping("getShort", NBTTagLong.class, "func_150289_e");
addMapping("getByte", NBTTagLong.class, "func_150290_f");
addMapping("getLong", NBTTagLong.class, "func_150291_c");
addMapping("read", NBTTagLong.class, "func_152446_a");
addMapping("getId", NBTTagLong.class, "func_74732_a");
addMapping("write", NBTTagLong.class, "func_74734_a");
addMapping("copy", NBTTagLong.class, "func_74737_b");
addMapping("read", NBTTagLongArray.class, "func_152446_a");
addMapping("toArray", NBTTagLongArray.class, "func_193586_a");
addMapping("getId", NBTTagLongArray.class, "func_74732_a");
addMapping("write", NBTTagLongArray.class, "func_74734_a");
addMapping("copy", NBTTagLongArray.class, "func_74737_b");
addMapping("getDouble", NBTTagShort.class, "func_150286_g");
addMapping("getInt", NBTTagShort.class, "func_150287_d");
addMapping("getFloat", NBTTagShort.class, "func_150288_h");
addMapping("getShort", NBTTagShort.class, "func_150289_e");
addMapping("getByte", NBTTagShort.class, "func_150290_f");
addMapping("getLong", NBTTagShort.class, "func_150291_c");
addMapping("read", NBTTagShort.class, "func_152446_a");
addMapping("getId", NBTTagShort.class, "func_74732_a");
addMapping("write", NBTTagShort.class, "func_74734_a");
addMapping("copy", NBTTagShort.class, "func_74737_b");
addMapping("getString", NBTTagString.class, "func_150285_a_");
addMapping("read", NBTTagString.class, "func_152446_a");
addMapping("quoteAndEscape", NBTTagString.class, "func_193588_a");
addMapping("getId", NBTTagString.class, "func_74732_a");
addMapping("write", NBTTagString.class, "func_74734_a");
addMapping("copy", NBTTagString.class, "func_74737_b");
addMapping("hasNoTags", NBTTagString.class, "func_82582_d");
addMapping("readGameProfileFromNBT", NBTUtil.class, "func_152459_a");
addMapping("writeGameProfile", NBTUtil.class, "func_180708_a");
addMapping("areNBTEquals", NBTUtil.class, "func_181123_a");
addMapping("createPosTag", NBTUtil.class, "func_186859_a");
addMapping("getUUIDFromTag", NBTUtil.class, "func_186860_b");
addMapping("getPosFromTag", NBTUtil.class, "func_186861_c");
addMapping("createUUIDTag", NBTUtil.class, "func_186862_a");
addMapping("readBlockState", NBTUtil.class, "func_190008_d");
addMapping("writeBlockState", NBTUtil.class, "func_190009_a");
addMapping("getName", NBTUtil.class, "func_190010_a");
addMapping("setValueHelper", NBTUtil.class, "func_193590_a");
addMapping("getFromPacket", EnumConnectionState.class, "func_150752_a");
addMapping("getId", EnumConnectionState.class, "func_150759_c");
addMapping("getById", EnumConnectionState.class, "func_150760_a");
addMapping("getPacket", EnumConnectionState.class, "func_179244_a");
addMapping("registerPacket", EnumConnectionState.class, "func_179245_a");
addMapping("getPacketId", EnumConnectionState.class, "func_179246_a");
addMapping("onDisconnect", INetHandler.class, "func_147231_a");
addMapping("getStringBuffer", LegacyPingHandler.class, "func_151255_a");
addMapping("writeAndFlush", LegacyPingHandler.class, "func_151256_a");
addMapping("onDisconnect", NetHandlerPlayServer.class, "func_147231_a");
addMapping("processEnchantItem", NetHandlerPlayServer.class, "func_147338_a");
addMapping("processConfirmTransaction", NetHandlerPlayServer.class, "func_147339_a");
addMapping("processUseEntity", NetHandlerPlayServer.class, "func_147340_a");
addMapping("processTabComplete", NetHandlerPlayServer.class, "func_147341_a");
addMapping("processClientStatus", NetHandlerPlayServer.class, "func_147342_a");
addMapping("processUpdateSign", NetHandlerPlayServer.class, "func_147343_a");
addMapping("processCreativeInventoryAction", NetHandlerPlayServer.class, "func_147344_a");
addMapping("processPlayerDigging", NetHandlerPlayServer.class, "func_147345_a");
addMapping("processTryUseItem", NetHandlerPlayServer.class, "func_147346_a");
addMapping("processPlayer", NetHandlerPlayServer.class, "func_147347_a");
addMapping("processPlayerAbilities", NetHandlerPlayServer.class, "func_147348_a");
addMapping("processCustomPayload", NetHandlerPlayServer.class, "func_147349_a");
addMapping("processClickWindow", NetHandlerPlayServer.class, "func_147351_a");
addMapping("processClientSettings", NetHandlerPlayServer.class, "func_147352_a");
addMapping("processKeepAlive", NetHandlerPlayServer.class, "func_147353_a");
addMapping("processChatMessage", NetHandlerPlayServer.class, "func_147354_a");
addMapping("processHeldItemChange", NetHandlerPlayServer.class, "func_147355_a");
addMapping("processCloseWindow", NetHandlerPlayServer.class, "func_147356_a");
addMapping("processEntityAction", NetHandlerPlayServer.class, "func_147357_a");
addMapping("processInput", NetHandlerPlayServer.class, "func_147358_a");
addMapping("sendPacket", NetHandlerPlayServer.class, "func_147359_a");
addMapping("handleSlashCommand", NetHandlerPlayServer.class, "func_147361_d");
addMapping("getNetworkManager", NetHandlerPlayServer.class, "func_147362_b");
addMapping("currentTimeMillis", NetHandlerPlayServer.class, "func_147363_d");
addMapping("setPlayerLocation", NetHandlerPlayServer.class, "func_147364_a");
addMapping("handleResourcePackStatus", NetHandlerPlayServer.class, "func_175086_a");
addMapping("handleAnimation", NetHandlerPlayServer.class, "func_175087_a");
addMapping("handleSpectate", NetHandlerPlayServer.class, "func_175088_a");
addMapping("setPlayerLocation", NetHandlerPlayServer.class, "func_175089_a");
addMapping("isMovePlayerPacketInvalid", NetHandlerPlayServer.class, "func_183006_b");
addMapping("processTryUseItemOnBlock", NetHandlerPlayServer.class, "func_184337_a");
addMapping("processVehicleMove", NetHandlerPlayServer.class, "func_184338_a");
addMapping("processConfirmTeleport", NetHandlerPlayServer.class, "func_184339_a");
addMapping("processSteerBoat", NetHandlerPlayServer.class, "func_184340_a");
addMapping("isMoveVehiclePacketInvalid", NetHandlerPlayServer.class, "func_184341_b");
addMapping("captureCurrentPosition", NetHandlerPlayServer.class, "func_184342_d");
addMapping("handleRecipeBookUpdate", NetHandlerPlayServer.class, "func_191984_a");
addMapping("handleRecipePlacement", NetHandlerPlayServer.class, "func_191985_a");
addMapping("checkIfMoveItemMatch", NetHandlerPlayServer.class, "func_193074_a");
addMapping("handleSeenAdvancements", NetHandlerPlayServer.class, "func_194027_a");
addMapping("disconnect", NetHandlerPlayServer.class, "func_194028_b");
addMapping("update", NetHandlerPlayServer.class, "func_73660_a");
addMapping("setCompressionThreshold", NettyCompressionDecoder.class, "func_179303_a");
addMapping("setCompressionThreshold", NettyCompressionEncoder.class, "func_179299_a");
addMapping("bufToBytes", NettyEncryptionTranslator.class, "func_150502_a");
addMapping("decipher", NettyEncryptionTranslator.class, "func_150503_a");
addMapping("cipher", NettyEncryptionTranslator.class, "func_150504_a");
addMapping("closeChannel", NetworkManager.class, "func_150718_a");
addMapping("setNetHandler", NetworkManager.class, "func_150719_a");
addMapping("disableAutoRead", NetworkManager.class, "func_150721_g");
addMapping("provideLocalClient", NetworkManager.class, "func_150722_a");
addMapping("setConnectionState", NetworkManager.class, "func_150723_a");
addMapping("isChannelOpen", NetworkManager.class, "func_150724_d");
addMapping("enableEncryption", NetworkManager.class, "func_150727_a");
addMapping("getNetHandler", NetworkManager.class, "func_150729_e");
addMapping("getExitMessage", NetworkManager.class, "func_150730_f");
addMapping("isLocalChannel", NetworkManager.class, "func_150731_c");
addMapping("dispatchPacket", NetworkManager.class, "func_150732_b");
addMapping("flushOutboundQueue", NetworkManager.class, "func_150733_h");
addMapping("sendPacket", NetworkManager.class, "func_179288_a");
addMapping("setCompressionThreshold", NetworkManager.class, "func_179289_a");
addMapping("sendPacket", NetworkManager.class, "func_179290_a");
addMapping("hasNoChannel", NetworkManager.class, "func_179291_h");
addMapping("isEncrypted", NetworkManager.class, "func_179292_f");
addMapping("checkDisconnected", NetworkManager.class, "func_179293_l");
addMapping("createNetworkManagerAndConnect", NetworkManager.class, "func_181124_a");
addMapping("processReceivedPackets", NetworkManager.class, "func_74428_b");
addMapping("getRemoteAddress", NetworkManager.class, "func_74430_c");
addMapping("addLanEndpoint", NetworkSystem.class, "func_151265_a");
addMapping("getServer", NetworkSystem.class, "func_151267_d");
addMapping("terminateEndpoints", NetworkSystem.class, "func_151268_b");
addMapping("networkTick", NetworkSystem.class, "func_151269_c");
addMapping("addLocalEndpoint", NetworkSystem.class, "func_151270_a");
addMapping("processPacket", Packet.class, "func_148833_a");
addMapping("readPacketData", Packet.class, "func_148837_a");
addMapping("writePacketData", Packet.class, "func_148840_b");
addMapping("writeCompoundTag", PacketBuffer.class, "func_150786_a");
addMapping("writeVarInt", PacketBuffer.class, "func_150787_b");
addMapping("writeItemStack", PacketBuffer.class, "func_150788_a");
addMapping("readString", PacketBuffer.class, "func_150789_c");
addMapping("getVarIntSize", PacketBuffer.class, "func_150790_a");
addMapping("readItemStack", PacketBuffer.class, "func_150791_c");
addMapping("readVarInt", PacketBuffer.class, "func_150792_a");
addMapping("readCompoundTag", PacketBuffer.class, "func_150793_b");
addMapping("writeEnumValue", PacketBuffer.class, "func_179249_a");
addMapping("writeByteArray", PacketBuffer.class, "func_179250_a");
addMapping("readByteArray", PacketBuffer.class, "func_179251_a");
addMapping("writeUniqueId", PacketBuffer.class, "func_179252_a");
addMapping("readUniqueId", PacketBuffer.class, "func_179253_g");
addMapping("writeVarLong", PacketBuffer.class, "func_179254_b");
addMapping("writeBlockPos", PacketBuffer.class, "func_179255_a");
addMapping("writeTextComponent", PacketBuffer.class, "func_179256_a");
addMapping("readEnumValue", PacketBuffer.class, "func_179257_a");
addMapping("readTextComponent", PacketBuffer.class, "func_179258_d");
addMapping("readBlockPos", PacketBuffer.class, "func_179259_c");
addMapping("readVarLong", PacketBuffer.class, "func_179260_f");
addMapping("writeString", PacketBuffer.class, "func_180714_a");
addMapping("readVarIntArray", PacketBuffer.class, "func_186863_b");
addMapping("writeLongArray", PacketBuffer.class, "func_186865_a");
addMapping("readLongArray", PacketBuffer.class, "func_186873_b");
addMapping("writeVarIntArray", PacketBuffer.class, "func_186875_a");
addMapping("readLongArray", PacketBuffer.class, "func_189423_a");
addMapping("readVarIntArray", PacketBuffer.class, "func_189424_c");
addMapping("readByteArray", PacketBuffer.class, "func_189425_b");
addMapping("writeResourceLocation", PacketBuffer.class, "func_192572_a");
addMapping("readTime", PacketBuffer.class, "func_192573_m");
addMapping("writeTime", PacketBuffer.class, "func_192574_a");
addMapping("readResourceLocation", PacketBuffer.class, "func_192575_l");
addMapping("checkThreadAndEnqueue", PacketThreadUtil.class, "func_180031_a");
addMapping("setServerDescription", ServerStatusResponse.class, "func_151315_a");
addMapping("getFavicon", ServerStatusResponse.class, "func_151316_d");
addMapping("getServerDescription", ServerStatusResponse.class, "func_151317_a");
addMapping("getPlayers", ServerStatusResponse.class, "func_151318_b");
addMapping("setPlayers", ServerStatusResponse.class, "func_151319_a");
addMapping("setFavicon", ServerStatusResponse.class, "func_151320_a");
addMapping("setVersion", ServerStatusResponse.class, "func_151321_a");
addMapping("getVersion", ServerStatusResponse.class, "func_151322_c");
addMapping("getId", DataParameter.class, "func_187155_a");
addMapping("getSerializer", DataParameter.class, "func_187156_b");
addMapping("read", DataSerializer.class, "func_187159_a");
addMapping("write", DataSerializer.class, "func_187160_a");
addMapping("createKey", DataSerializer.class, "func_187161_a");
addMapping("copyValue", DataSerializer.class, "func_192717_a");
addMapping("getSerializerId", DataSerializers.class, "func_187188_b");
addMapping("registerSerializer", DataSerializers.class, "func_187189_a");
addMapping("getSerializer", DataSerializers.class, "func_187190_a");
addMapping("register", EntityDataManager.class, "func_187214_a");
addMapping("readEntries", EntityDataManager.class, "func_187215_b");
addMapping("writeEntries", EntityDataManager.class, "func_187216_a");
addMapping("setDirty", EntityDataManager.class, "func_187217_b");
addMapping("setEntryValues", EntityDataManager.class, "func_187218_a");
addMapping("getEntry", EntityDataManager.class, "func_187219_c");
addMapping("writeEntry", EntityDataManager.class, "func_187220_a");
addMapping("getDirty", EntityDataManager.class, "func_187221_b");
addMapping("setEntry", EntityDataManager.class, "func_187222_c");
addMapping("isDirty", EntityDataManager.class, "func_187223_a");
addMapping("setEntryValue", EntityDataManager.class, "func_187224_a");
addMapping("get", EntityDataManager.class, "func_187225_a");
addMapping("createKey", EntityDataManager.class, "func_187226_a");
addMapping("set", EntityDataManager.class, "func_187227_b");
addMapping("isEmpty", EntityDataManager.class, "func_187228_d");
addMapping("writeEntries", EntityDataManager.class, "func_187229_a");
addMapping("setClean", EntityDataManager.class, "func_187230_e");
addMapping("getAll", EntityDataManager.class, "func_187231_c");
addMapping("processHandshake", INetHandlerHandshakeServer.class, "func_147383_a");
addMapping("processPacket", C00Handshake.class, "func_148833_a");
addMapping("readPacketData", C00Handshake.class, "func_148837_a");
addMapping("writePacketData", C00Handshake.class, "func_148840_b");
addMapping("getRequestedState", C00Handshake.class, "func_149594_c");
addMapping("getProtocolVersion", C00Handshake.class, "func_149595_d");
addMapping("handleDisconnect", INetHandlerLoginClient.class, "func_147388_a");
addMapping("handleEncryptionRequest", INetHandlerLoginClient.class, "func_147389_a");
addMapping("handleLoginSuccess", INetHandlerLoginClient.class, "func_147390_a");
addMapping("handleEnableCompression", INetHandlerLoginClient.class, "func_180464_a");
addMapping("processEncryptionResponse", INetHandlerLoginServer.class, "func_147315_a");
addMapping("processLoginStart", INetHandlerLoginServer.class, "func_147316_a");
addMapping("processPacket", CPacketEncryptionResponse.class, "func_148833_a");
addMapping("readPacketData", CPacketEncryptionResponse.class, "func_148837_a");
addMapping("writePacketData", CPacketEncryptionResponse.class, "func_148840_b");
addMapping("getVerifyToken", CPacketEncryptionResponse.class, "func_149299_b");
addMapping("getSecretKey", CPacketEncryptionResponse.class, "func_149300_a");
addMapping("processPacket", CPacketLoginStart.class, "func_148833_a");
addMapping("readPacketData", CPacketLoginStart.class, "func_148837_a");
addMapping("writePacketData", CPacketLoginStart.class, "func_148840_b");
addMapping("getProfile", CPacketLoginStart.class, "func_149304_c");
addMapping("processPacket", SPacketDisconnect.class, "func_148833_a");
addMapping("readPacketData", SPacketDisconnect.class, "func_148837_a");
addMapping("writePacketData", SPacketDisconnect.class, "func_148840_b");
addMapping("getReason", SPacketDisconnect.class, "func_149603_c");
addMapping("processPacket", SPacketEnableCompression.class, "func_148833_a");
addMapping("readPacketData", SPacketEnableCompression.class, "func_148837_a");
addMapping("writePacketData", SPacketEnableCompression.class, "func_148840_b");
addMapping("getCompressionThreshold", SPacketEnableCompression.class, "func_179731_a");
addMapping("processPacket", SPacketEncryptionRequest.class, "func_148833_a");
addMapping("readPacketData", SPacketEncryptionRequest.class, "func_148837_a");
addMapping("writePacketData", SPacketEncryptionRequest.class, "func_148840_b");
addMapping("getVerifyToken", SPacketEncryptionRequest.class, "func_149607_e");
addMapping("getPublicKey", SPacketEncryptionRequest.class, "func_149608_d");
addMapping("getServerId", SPacketEncryptionRequest.class, "func_149609_c");
addMapping("processPacket", SPacketLoginSuccess.class, "func_148833_a");
addMapping("readPacketData", SPacketLoginSuccess.class, "func_148837_a");
addMapping("writePacketData", SPacketLoginSuccess.class, "func_148840_b");
addMapping("getProfile", SPacketLoginSuccess.class, "func_179730_a");
addMapping("handleBlockChange", INetHandlerPlayClient.class, "func_147234_a");
addMapping("handleSpawnObject", INetHandlerPlayClient.class, "func_147235_a");
addMapping("handleEntityStatus", INetHandlerPlayClient.class, "func_147236_a");
addMapping("handleSpawnPlayer", INetHandlerPlayClient.class, "func_147237_a");
addMapping("handleDestroyEntities", INetHandlerPlayClient.class, "func_147238_a");
addMapping("handleConfirmTransaction", INetHandlerPlayClient.class, "func_147239_a");
addMapping("handleCustomPayload", INetHandlerPlayClient.class, "func_147240_a");
addMapping("handleWindowItems", INetHandlerPlayClient.class, "func_147241_a");
addMapping("handleEntityEquipment", INetHandlerPlayClient.class, "func_147242_a");
addMapping("handleEntityAttach", INetHandlerPlayClient.class, "func_147243_a");
addMapping("handleEntityVelocity", INetHandlerPlayClient.class, "func_147244_a");
addMapping("handleWindowProperty", INetHandlerPlayClient.class, "func_147245_a");
addMapping("handleCollectItem", INetHandlerPlayClient.class, "func_147246_a");
addMapping("handleTeams", INetHandlerPlayClient.class, "func_147247_a");
addMapping("handleUpdateHealth", INetHandlerPlayClient.class, "func_147249_a");
addMapping("handleUpdateScore", INetHandlerPlayClient.class, "func_147250_a");
addMapping("handleChat", INetHandlerPlayClient.class, "func_147251_a");
addMapping("handleChangeGameState", INetHandlerPlayClient.class, "func_147252_a");
addMapping("handleDisconnect", INetHandlerPlayClient.class, "func_147253_a");
addMapping("handleDisplayObjective", INetHandlerPlayClient.class, "func_147254_a");
addMapping("handlePlayerListItem", INetHandlerPlayClient.class, "func_147256_a");
addMapping("handleHeldItemChange", INetHandlerPlayClient.class, "func_147257_a");
addMapping("handleEntityMovement", INetHandlerPlayClient.class, "func_147259_a");
addMapping("handleEntityEffect", INetHandlerPlayClient.class, "func_147260_a");
addMapping("handleBlockAction", INetHandlerPlayClient.class, "func_147261_a");
addMapping("handleRemoveEntityEffect", INetHandlerPlayClient.class, "func_147262_a");
addMapping("handleChunkData", INetHandlerPlayClient.class, "func_147263_a");
addMapping("handleMaps", INetHandlerPlayClient.class, "func_147264_a");
addMapping("handleOpenWindow", INetHandlerPlayClient.class, "func_147265_a");
addMapping("handleSetSlot", INetHandlerPlayClient.class, "func_147266_a");
addMapping("handleEntityHeadLook", INetHandlerPlayClient.class, "func_147267_a");
addMapping("handleSignEditorOpen", INetHandlerPlayClient.class, "func_147268_a");
addMapping("handlePlayerAbilities", INetHandlerPlayClient.class, "func_147270_a");
addMapping("handleSpawnPosition", INetHandlerPlayClient.class, "func_147271_a");
addMapping("handleKeepAlive", INetHandlerPlayClient.class, "func_147272_a");
addMapping("handleUpdateTileEntity", INetHandlerPlayClient.class, "func_147273_a");
addMapping("handleTabComplete", INetHandlerPlayClient.class, "func_147274_a");
addMapping("handleEntityTeleport", INetHandlerPlayClient.class, "func_147275_a");
addMapping("handleCloseWindow", INetHandlerPlayClient.class, "func_147276_a");
addMapping("handleEffect", INetHandlerPlayClient.class, "func_147277_a");
addMapping("handleUseBed", INetHandlerPlayClient.class, "func_147278_a");
addMapping("handleAnimation", INetHandlerPlayClient.class, "func_147279_a");
addMapping("handleRespawn", INetHandlerPlayClient.class, "func_147280_a");
addMapping("handleSpawnMob", INetHandlerPlayClient.class, "func_147281_a");
addMapping("handleJoinGame", INetHandlerPlayClient.class, "func_147282_a");
addMapping("handleExplosion", INetHandlerPlayClient.class, "func_147283_a");
addMapping("handleEntityMetadata", INetHandlerPlayClient.class, "func_147284_a");
addMapping("handleTimeUpdate", INetHandlerPlayClient.class, "func_147285_a");
addMapping("handleSpawnExperienceOrb", INetHandlerPlayClient.class, "func_147286_a");
addMapping("handleMultiBlockChange", INetHandlerPlayClient.class, "func_147287_a");
addMapping("handleSpawnPainting", INetHandlerPlayClient.class, "func_147288_a");
addMapping("handleParticles", INetHandlerPlayClient.class, "func_147289_a");
addMapping("handleEntityProperties", INetHandlerPlayClient.class, "func_147290_a");
addMapping("handleScoreboardObjective", INetHandlerPlayClient.class, "func_147291_a");
addMapping("handleSpawnGlobalEntity", INetHandlerPlayClient.class, "func_147292_a");
addMapping("handleStatistics", INetHandlerPlayClient.class, "func_147293_a");
addMapping("handleBlockBreakAnim", INetHandlerPlayClient.class, "func_147294_a");
addMapping("handleSetExperience", INetHandlerPlayClient.class, "func_147295_a");
addMapping("handleWorldBorder", INetHandlerPlayClient.class, "func_175093_a");
addMapping("handleCamera", INetHandlerPlayClient.class, "func_175094_a");
addMapping("handleResourcePack", INetHandlerPlayClient.class, "func_175095_a");
addMapping("handlePlayerListHeaderFooter", INetHandlerPlayClient.class, "func_175096_a");
addMapping("handleCombatEvent", INetHandlerPlayClient.class, "func_175098_a");
addMapping("handleTitle", INetHandlerPlayClient.class, "func_175099_a");
addMapping("handleServerDifficulty", INetHandlerPlayClient.class, "func_175101_a");
addMapping("handleMoveVehicle", INetHandlerPlayClient.class, "func_184323_a");
addMapping("handleCooldown", INetHandlerPlayClient.class, "func_184324_a");
addMapping("handleUpdateBossInfo", INetHandlerPlayClient.class, "func_184325_a");
addMapping("processChunkUnload", INetHandlerPlayClient.class, "func_184326_a");
addMapping("handleSoundEffect", INetHandlerPlayClient.class, "func_184327_a");
addMapping("handleSetPassengers", INetHandlerPlayClient.class, "func_184328_a");
addMapping("handleCustomSound", INetHandlerPlayClient.class, "func_184329_a");
addMapping("handlePlayerPosLook", INetHandlerPlayClient.class, "func_184330_a");
addMapping("handleRecipeBook", INetHandlerPlayClient.class, "func_191980_a");
addMapping("handleAdvancementInfo", INetHandlerPlayClient.class, "func_191981_a");
addMapping("handleSelectAdvancementsTab", INetHandlerPlayClient.class, "func_194022_a");
addMapping("processEnchantItem", INetHandlerPlayServer.class, "func_147338_a");
addMapping("processConfirmTransaction", INetHandlerPlayServer.class, "func_147339_a");
addMapping("processUseEntity", INetHandlerPlayServer.class, "func_147340_a");
addMapping("processTabComplete", INetHandlerPlayServer.class, "func_147341_a");
addMapping("processClientStatus", INetHandlerPlayServer.class, "func_147342_a");
addMapping("processUpdateSign", INetHandlerPlayServer.class, "func_147343_a");
addMapping("processCreativeInventoryAction", INetHandlerPlayServer.class, "func_147344_a");
addMapping("processPlayerDigging", INetHandlerPlayServer.class, "func_147345_a");
addMapping("processTryUseItem", INetHandlerPlayServer.class, "func_147346_a");
addMapping("processPlayer", INetHandlerPlayServer.class, "func_147347_a");
addMapping("processPlayerAbilities", INetHandlerPlayServer.class, "func_147348_a");
addMapping("processCustomPayload", INetHandlerPlayServer.class, "func_147349_a");
addMapping("processClickWindow", INetHandlerPlayServer.class, "func_147351_a");
addMapping("processClientSettings", INetHandlerPlayServer.class, "func_147352_a");
addMapping("processKeepAlive", INetHandlerPlayServer.class, "func_147353_a");
addMapping("processChatMessage", INetHandlerPlayServer.class, "func_147354_a");
addMapping("processHeldItemChange", INetHandlerPlayServer.class, "func_147355_a");
addMapping("processCloseWindow", INetHandlerPlayServer.class, "func_147356_a");
addMapping("processEntityAction", INetHandlerPlayServer.class, "func_147357_a");
addMapping("processInput", INetHandlerPlayServer.class, "func_147358_a");
addMapping("handleResourcePackStatus", INetHandlerPlayServer.class, "func_175086_a");
addMapping("handleAnimation", INetHandlerPlayServer.class, "func_175087_a");
addMapping("handleSpectate", INetHandlerPlayServer.class, "func_175088_a");
addMapping("processTryUseItemOnBlock", INetHandlerPlayServer.class, "func_184337_a");
addMapping("processVehicleMove", INetHandlerPlayServer.class, "func_184338_a");
addMapping("processConfirmTeleport", INetHandlerPlayServer.class, "func_184339_a");
addMapping("processSteerBoat", INetHandlerPlayServer.class, "func_184340_a");
addMapping("handleRecipeBookUpdate", INetHandlerPlayServer.class, "func_191984_a");
addMapping("handleRecipePlacement", INetHandlerPlayServer.class, "func_191985_a");
addMapping("handleSeenAdvancements", INetHandlerPlayServer.class, "func_194027_a");
addMapping("processPacket", CPacketAnimation.class, "func_148833_a");
addMapping("readPacketData", CPacketAnimation.class, "func_148837_a");
addMapping("writePacketData", CPacketAnimation.class, "func_148840_b");
addMapping("getHand", CPacketAnimation.class, "func_187018_a");
addMapping("processPacket", CPacketChatMessage.class, "func_148833_a");
addMapping("readPacketData", CPacketChatMessage.class, "func_148837_a");
addMapping("writePacketData", CPacketChatMessage.class, "func_148840_b");
addMapping("getMessage", CPacketChatMessage.class, "func_149439_c");
addMapping("processPacket", CPacketClickWindow.class, "func_148833_a");
addMapping("readPacketData", CPacketClickWindow.class, "func_148837_a");
addMapping("writePacketData", CPacketClickWindow.class, "func_148840_b");
addMapping("getUsedButton", CPacketClickWindow.class, "func_149543_e");
addMapping("getSlotId", CPacketClickWindow.class, "func_149544_d");
addMapping("getClickedItem", CPacketClickWindow.class, "func_149546_g");
addMapping("getActionNumber", CPacketClickWindow.class, "func_149547_f");
addMapping("getWindowId", CPacketClickWindow.class, "func_149548_c");
addMapping("getClickType", CPacketClickWindow.class, "func_186993_f");
addMapping("processPacket", CPacketClientSettings.class, "func_148833_a");
addMapping("readPacketData", CPacketClientSettings.class, "func_148837_a");
addMapping("writePacketData", CPacketClientSettings.class, "func_148840_b");
addMapping("isColorsEnabled", CPacketClientSettings.class, "func_149520_f");
addMapping("getModelPartFlags", CPacketClientSettings.class, "func_149521_d");
addMapping("getChatVisibility", CPacketClientSettings.class, "func_149523_e");
addMapping("getLang", CPacketClientSettings.class, "func_149524_c");
addMapping("getMainHand", CPacketClientSettings.class, "func_186991_f");
addMapping("processPacket", CPacketClientStatus.class, "func_148833_a");
addMapping("readPacketData", CPacketClientStatus.class, "func_148837_a");
addMapping("writePacketData", CPacketClientStatus.class, "func_148840_b");
addMapping("getStatus", CPacketClientStatus.class, "func_149435_c");
addMapping("processPacket", CPacketCloseWindow.class, "func_148833_a");
addMapping("readPacketData", CPacketCloseWindow.class, "func_148837_a");
addMapping("writePacketData", CPacketCloseWindow.class, "func_148840_b");
addMapping("processPacket", CPacketConfirmTeleport.class, "func_148833_a");
addMapping("readPacketData", CPacketConfirmTeleport.class, "func_148837_a");
addMapping("writePacketData", CPacketConfirmTeleport.class, "func_148840_b");
addMapping("getTeleportId", CPacketConfirmTeleport.class, "func_186987_a");
addMapping("processPacket", CPacketConfirmTransaction.class, "func_148833_a");
addMapping("readPacketData", CPacketConfirmTransaction.class, "func_148837_a");
addMapping("writePacketData", CPacketConfirmTransaction.class, "func_148840_b");
addMapping("getWindowId", CPacketConfirmTransaction.class, "func_149532_c");
addMapping("getUid", CPacketConfirmTransaction.class, "func_149533_d");
addMapping("processPacket", CPacketCreativeInventoryAction.class, "func_148833_a");
addMapping("readPacketData", CPacketCreativeInventoryAction.class, "func_148837_a");
addMapping("writePacketData", CPacketCreativeInventoryAction.class, "func_148840_b");
addMapping("getStack", CPacketCreativeInventoryAction.class, "func_149625_d");
addMapping("getSlotId", CPacketCreativeInventoryAction.class, "func_149627_c");
addMapping("processPacket", CPacketCustomPayload.class, "func_148833_a");
addMapping("readPacketData", CPacketCustomPayload.class, "func_148837_a");
addMapping("writePacketData", CPacketCustomPayload.class, "func_148840_b");
addMapping("getChannelName", CPacketCustomPayload.class, "func_149559_c");
addMapping("getBufferData", CPacketCustomPayload.class, "func_180760_b");
addMapping("processPacket", CPacketEnchantItem.class, "func_148833_a");
addMapping("readPacketData", CPacketEnchantItem.class, "func_148837_a");
addMapping("writePacketData", CPacketEnchantItem.class, "func_148840_b");
addMapping("getButton", CPacketEnchantItem.class, "func_149537_d");
addMapping("getWindowId", CPacketEnchantItem.class, "func_149539_c");
addMapping("processPacket", CPacketEntityAction.class, "func_148833_a");
addMapping("readPacketData", CPacketEntityAction.class, "func_148837_a");
addMapping("writePacketData", CPacketEntityAction.class, "func_148840_b");
addMapping("getAuxData", CPacketEntityAction.class, "func_149512_e");
addMapping("getAction", CPacketEntityAction.class, "func_180764_b");
addMapping("processPacket", CPacketHeldItemChange.class, "func_148833_a");
addMapping("readPacketData", CPacketHeldItemChange.class, "func_148837_a");
addMapping("writePacketData", CPacketHeldItemChange.class, "func_148840_b");
addMapping("getSlotId", CPacketHeldItemChange.class, "func_149614_c");
addMapping("processPacket", CPacketInput.class, "func_148833_a");
addMapping("readPacketData", CPacketInput.class, "func_148837_a");
addMapping("writePacketData", CPacketInput.class, "func_148840_b");
addMapping("isSneaking", CPacketInput.class, "func_149617_f");
addMapping("isJumping", CPacketInput.class, "func_149618_e");
addMapping("getStrafeSpeed", CPacketInput.class, "func_149620_c");
addMapping("getForwardSpeed", CPacketInput.class, "func_192620_b");
addMapping("processPacket", CPacketKeepAlive.class, "func_148833_a");
addMapping("readPacketData", CPacketKeepAlive.class, "func_148837_a");
addMapping("writePacketData", CPacketKeepAlive.class, "func_148840_b");
addMapping("getKey", CPacketKeepAlive.class, "func_149460_c");
addMapping("processPacket", CPacketPlayer.class, "func_148833_a");
addMapping("readPacketData", CPacketPlayer.class, "func_148837_a");
addMapping("writePacketData", CPacketPlayer.class, "func_148840_b");
addMapping("isOnGround", CPacketPlayer.class, "func_149465_i");
addMapping("getY", CPacketPlayer.class, "func_186996_b");
addMapping("getX", CPacketPlayer.class, "func_186997_a");
addMapping("getPitch", CPacketPlayer.class, "func_186998_b");
addMapping("getYaw", CPacketPlayer.class, "func_186999_a");
addMapping("getZ", CPacketPlayer.class, "func_187000_c");
addMapping("processPacket", CPacketPlayerAbilities.class, "func_148833_a");
addMapping("readPacketData", CPacketPlayerAbilities.class, "func_148837_a");
addMapping("writePacketData", CPacketPlayerAbilities.class, "func_148840_b");
addMapping("setFlying", CPacketPlayerAbilities.class, "func_149483_b");
addMapping("isCreativeMode", CPacketPlayerAbilities.class, "func_149484_f");
addMapping("setFlySpeed", CPacketPlayerAbilities.class, "func_149485_a");
addMapping("isAllowFlying", CPacketPlayerAbilities.class, "func_149486_e");
addMapping("isFlying", CPacketPlayerAbilities.class, "func_149488_d");
addMapping("setInvulnerable", CPacketPlayerAbilities.class, "func_149490_a");
addMapping("setAllowFlying", CPacketPlayerAbilities.class, "func_149491_c");
addMapping("setWalkSpeed", CPacketPlayerAbilities.class, "func_149492_b");
addMapping("setCreativeMode", CPacketPlayerAbilities.class, "func_149493_d");
addMapping("isInvulnerable", CPacketPlayerAbilities.class, "func_149494_c");
addMapping("processPacket", CPacketPlayerDigging.class, "func_148833_a");
addMapping("readPacketData", CPacketPlayerDigging.class, "func_148837_a");
addMapping("writePacketData", CPacketPlayerDigging.class, "func_148840_b");
addMapping("getFacing", CPacketPlayerDigging.class, "func_179714_b");
addMapping("getPosition", CPacketPlayerDigging.class, "func_179715_a");
addMapping("getAction", CPacketPlayerDigging.class, "func_180762_c");
addMapping("processPacket", CPacketPlayerTryUseItem.class, "func_148833_a");
addMapping("readPacketData", CPacketPlayerTryUseItem.class, "func_148837_a");
addMapping("writePacketData", CPacketPlayerTryUseItem.class, "func_148840_b");
addMapping("getHand", CPacketPlayerTryUseItem.class, "func_187028_a");
addMapping("processPacket", CPacketPlayerTryUseItemOnBlock.class, "func_148833_a");
addMapping("readPacketData", CPacketPlayerTryUseItemOnBlock.class, "func_148837_a");
addMapping("writePacketData", CPacketPlayerTryUseItemOnBlock.class, "func_148840_b");
addMapping("getFacingZ", CPacketPlayerTryUseItemOnBlock.class, "func_187020_f");
addMapping("getHand", CPacketPlayerTryUseItemOnBlock.class, "func_187022_c");
addMapping("getPos", CPacketPlayerTryUseItemOnBlock.class, "func_187023_a");
addMapping("getDirection", CPacketPlayerTryUseItemOnBlock.class, "func_187024_b");
addMapping("getFacingY", CPacketPlayerTryUseItemOnBlock.class, "func_187025_e");
addMapping("getFacingX", CPacketPlayerTryUseItemOnBlock.class, "func_187026_d");
addMapping("processPacket", CPacketRecipeInfo.class, "func_148833_a");
addMapping("readPacketData", CPacketRecipeInfo.class, "func_148837_a");
addMapping("writePacketData", CPacketRecipeInfo.class, "func_148840_b");
addMapping("isGuiOpen", CPacketRecipeInfo.class, "func_192624_c");
addMapping("isFilteringCraftable", CPacketRecipeInfo.class, "func_192625_d");
addMapping("getRecipe", CPacketRecipeInfo.class, "func_193648_b");
addMapping("getPurpose", CPacketRecipeInfo.class, "func_194156_a");
addMapping("processPacket", CPacketRecipePlacement.class, "func_148833_a");
addMapping("readPacketData", CPacketRecipePlacement.class, "func_148837_a");
addMapping("writePacketData", CPacketRecipePlacement.class, "func_148840_b");
addMapping("getMoveItemsFromGrid", CPacketRecipePlacement.class, "func_192610_d");
addMapping("readMoveItems", CPacketRecipePlacement.class, "func_192611_c");
addMapping("writeMoveItems", CPacketRecipePlacement.class, "func_192612_a");
addMapping("getContainerId", CPacketRecipePlacement.class, "func_192613_a");
addMapping("getUid", CPacketRecipePlacement.class, "func_192614_b");
addMapping("getMoveItemsToGrid", CPacketRecipePlacement.class, "func_192615_c");
addMapping("processPacket", CPacketResourcePackStatus.class, "func_148833_a");
addMapping("readPacketData", CPacketResourcePackStatus.class, "func_148837_a");
addMapping("writePacketData", CPacketResourcePackStatus.class, "func_148840_b");
addMapping("processPacket", CPacketSeenAdvancements.class, "func_148833_a");
addMapping("readPacketData", CPacketSeenAdvancements.class, "func_148837_a");
addMapping("writePacketData", CPacketSeenAdvancements.class, "func_148840_b");
addMapping("getAction", CPacketSeenAdvancements.class, "func_194162_b");
addMapping("openedTab", CPacketSeenAdvancements.class, "func_194163_a");
addMapping("closedScreen", CPacketSeenAdvancements.class, "func_194164_a");
addMapping("getTab", CPacketSeenAdvancements.class, "func_194165_c");
addMapping("processPacket", CPacketSpectate.class, "func_148833_a");
addMapping("readPacketData", CPacketSpectate.class, "func_148837_a");
addMapping("writePacketData", CPacketSpectate.class, "func_148840_b");
addMapping("getEntity", CPacketSpectate.class, "func_179727_a");
addMapping("processPacket", CPacketSteerBoat.class, "func_148833_a");
addMapping("readPacketData", CPacketSteerBoat.class, "func_148837_a");
addMapping("writePacketData", CPacketSteerBoat.class, "func_148840_b");
addMapping("getLeft", CPacketSteerBoat.class, "func_187012_a");
addMapping("getRight", CPacketSteerBoat.class, "func_187014_b");
addMapping("processPacket", CPacketTabComplete.class, "func_148833_a");
addMapping("readPacketData", CPacketTabComplete.class, "func_148837_a");
addMapping("writePacketData", CPacketTabComplete.class, "func_148840_b");
addMapping("getMessage", CPacketTabComplete.class, "func_149419_c");
addMapping("getTargetBlock", CPacketTabComplete.class, "func_179709_b");
addMapping("hasTargetBlock", CPacketTabComplete.class, "func_186989_c");
addMapping("processPacket", CPacketUpdateSign.class, "func_148833_a");
addMapping("readPacketData", CPacketUpdateSign.class, "func_148837_a");
addMapping("writePacketData", CPacketUpdateSign.class, "func_148840_b");
addMapping("getPosition", CPacketUpdateSign.class, "func_179722_a");
addMapping("getLines", CPacketUpdateSign.class, "func_187017_b");
addMapping("processPacket", CPacketUseEntity.class, "func_148833_a");
addMapping("readPacketData", CPacketUseEntity.class, "func_148837_a");
addMapping("writePacketData", CPacketUseEntity.class, "func_148840_b");
addMapping("getEntityFromWorld", CPacketUseEntity.class, "func_149564_a");
addMapping("getAction", CPacketUseEntity.class, "func_149565_c");
addMapping("getHitVec", CPacketUseEntity.class, "func_179712_b");
addMapping("getHand", CPacketUseEntity.class, "func_186994_b");
addMapping("processPacket", CPacketVehicleMove.class, "func_148833_a");
addMapping("readPacketData", CPacketVehicleMove.class, "func_148837_a");
addMapping("writePacketData", CPacketVehicleMove.class, "func_148840_b");
addMapping("getY", CPacketVehicleMove.class, "func_187002_b");
addMapping("getZ", CPacketVehicleMove.class, "func_187003_c");
addMapping("getX", CPacketVehicleMove.class, "func_187004_a");
addMapping("getPitch", CPacketVehicleMove.class, "func_187005_e");
addMapping("getYaw", CPacketVehicleMove.class, "func_187006_d");
addMapping("processPacket", SPacketAdvancementInfo.class, "func_148833_a");
addMapping("readPacketData", SPacketAdvancementInfo.class, "func_148837_a");
addMapping("writePacketData", SPacketAdvancementInfo.class, "func_148840_b");
addMapping("getAdvancementsToRemove", SPacketAdvancementInfo.class, "func_192600_b");
addMapping("isFirstSync", SPacketAdvancementInfo.class, "func_192602_d");
addMapping("getAdvancementsToAdd", SPacketAdvancementInfo.class, "func_192603_a");
addMapping("getProgressUpdates", SPacketAdvancementInfo.class, "func_192604_c");
addMapping("processPacket", SPacketAnimation.class, "func_148833_a");
addMapping("readPacketData", SPacketAnimation.class, "func_148837_a");
addMapping("writePacketData", SPacketAnimation.class, "func_148840_b");
addMapping("getAnimationType", SPacketAnimation.class, "func_148977_d");
addMapping("getEntityID", SPacketAnimation.class, "func_148978_c");
addMapping("processPacket", SPacketBlockAction.class, "func_148833_a");
addMapping("readPacketData", SPacketBlockAction.class, "func_148837_a");
addMapping("writePacketData", SPacketBlockAction.class, "func_148840_b");
addMapping("getData2", SPacketBlockAction.class, "func_148864_h");
addMapping("getBlockType", SPacketBlockAction.class, "func_148868_c");
addMapping("getData1", SPacketBlockAction.class, "func_148869_g");
addMapping("getBlockPosition", SPacketBlockAction.class, "func_179825_a");
addMapping("processPacket", SPacketBlockBreakAnim.class, "func_148833_a");
addMapping("readPacketData", SPacketBlockBreakAnim.class, "func_148837_a");
addMapping("writePacketData", SPacketBlockBreakAnim.class, "func_148840_b");
addMapping("getBreakerId", SPacketBlockBreakAnim.class, "func_148845_c");
addMapping("getProgress", SPacketBlockBreakAnim.class, "func_148846_g");
addMapping("getPosition", SPacketBlockBreakAnim.class, "func_179821_b");
addMapping("processPacket", SPacketBlockChange.class, "func_148833_a");
addMapping("readPacketData", SPacketBlockChange.class, "func_148837_a");
addMapping("writePacketData", SPacketBlockChange.class, "func_148840_b");
addMapping("getBlockPosition", SPacketBlockChange.class, "func_179827_b");
addMapping("getBlockState", SPacketBlockChange.class, "func_180728_a");
addMapping("processPacket", SPacketCamera.class, "func_148833_a");
addMapping("readPacketData", SPacketCamera.class, "func_148837_a");
addMapping("writePacketData", SPacketCamera.class, "func_148840_b");
addMapping("getEntity", SPacketCamera.class, "func_179780_a");
addMapping("processPacket", SPacketChangeGameState.class, "func_148833_a");
addMapping("readPacketData", SPacketChangeGameState.class, "func_148837_a");
addMapping("writePacketData", SPacketChangeGameState.class, "func_148840_b");
addMapping("getValue", SPacketChangeGameState.class, "func_149137_d");
addMapping("getGameState", SPacketChangeGameState.class, "func_149138_c");
addMapping("processPacket", SPacketChat.class, "func_148833_a");
addMapping("readPacketData", SPacketChat.class, "func_148837_a");
addMapping("writePacketData", SPacketChat.class, "func_148840_b");
addMapping("getChatComponent", SPacketChat.class, "func_148915_c");
addMapping("isSystem", SPacketChat.class, "func_148916_d");
addMapping("getType", SPacketChat.class, "func_192590_c");
addMapping("processPacket", SPacketChunkData.class, "func_148833_a");
addMapping("readPacketData", SPacketChunkData.class, "func_148837_a");
addMapping("writePacketData", SPacketChunkData.class, "func_148840_b");
addMapping("getChunkZ", SPacketChunkData.class, "func_149271_f");
addMapping("getChunkX", SPacketChunkData.class, "func_149273_e");
addMapping("isFullChunk", SPacketChunkData.class, "func_149274_i");
addMapping("getExtractedSize", SPacketChunkData.class, "func_149276_g");
addMapping("getWriteBuffer", SPacketChunkData.class, "func_186945_f");
addMapping("getReadBuffer", SPacketChunkData.class, "func_186946_a");
addMapping("getTileEntityTags", SPacketChunkData.class, "func_189554_f");
addMapping("extractChunkData", SPacketChunkData.class, "func_189555_a");
addMapping("calculateChunkSize", SPacketChunkData.class, "func_189556_a");
addMapping("processPacket", SPacketCloseWindow.class, "func_148833_a");
addMapping("readPacketData", SPacketCloseWindow.class, "func_148837_a");
addMapping("writePacketData", SPacketCloseWindow.class, "func_148840_b");
addMapping("processPacket", SPacketCollectItem.class, "func_148833_a");
addMapping("readPacketData", SPacketCollectItem.class, "func_148837_a");
addMapping("writePacketData", SPacketCollectItem.class, "func_148840_b");
addMapping("getEntityID", SPacketCollectItem.class, "func_149353_d");
addMapping("getCollectedItemEntityID", SPacketCollectItem.class, "func_149354_c");
addMapping("getAmount", SPacketCollectItem.class, "func_191208_c");
addMapping("processPacket", SPacketCombatEvent.class, "func_148833_a");
addMapping("readPacketData", SPacketCombatEvent.class, "func_148837_a");
addMapping("writePacketData", SPacketCombatEvent.class, "func_148840_b");
addMapping("processPacket", SPacketConfirmTransaction.class, "func_148833_a");
addMapping("readPacketData", SPacketConfirmTransaction.class, "func_148837_a");
addMapping("writePacketData", SPacketConfirmTransaction.class, "func_148840_b");
addMapping("wasAccepted", SPacketConfirmTransaction.class, "func_148888_e");
addMapping("getWindowId", SPacketConfirmTransaction.class, "func_148889_c");
addMapping("getActionNumber", SPacketConfirmTransaction.class, "func_148890_d");
addMapping("processPacket", SPacketCooldown.class, "func_148833_a");
addMapping("readPacketData", SPacketCooldown.class, "func_148837_a");
addMapping("writePacketData", SPacketCooldown.class, "func_148840_b");
addMapping("getItem", SPacketCooldown.class, "func_186920_a");
addMapping("getTicks", SPacketCooldown.class, "func_186922_b");
addMapping("processPacket", SPacketCustomPayload.class, "func_148833_a");
addMapping("readPacketData", SPacketCustomPayload.class, "func_148837_a");
addMapping("writePacketData", SPacketCustomPayload.class, "func_148840_b");
addMapping("getChannelName", SPacketCustomPayload.class, "func_149169_c");
addMapping("getBufferData", SPacketCustomPayload.class, "func_180735_b");
addMapping("processPacket", SPacketCustomSound.class, "func_148833_a");
addMapping("readPacketData", SPacketCustomSound.class, "func_148837_a");
addMapping("writePacketData", SPacketCustomSound.class, "func_148840_b");
addMapping("getZ", SPacketCustomSound.class, "func_186925_e");
addMapping("getY", SPacketCustomSound.class, "func_186926_d");
addMapping("getVolume", SPacketCustomSound.class, "func_186927_f");
addMapping("getPitch", SPacketCustomSound.class, "func_186928_g");
addMapping("getCategory", SPacketCustomSound.class, "func_186929_b");
addMapping("getSoundName", SPacketCustomSound.class, "func_186930_a");
addMapping("getX", SPacketCustomSound.class, "func_186932_c");
addMapping("processPacket", SPacketDestroyEntities.class, "func_148833_a");
addMapping("readPacketData", SPacketDestroyEntities.class, "func_148837_a");
addMapping("writePacketData", SPacketDestroyEntities.class, "func_148840_b");
addMapping("getEntityIDs", SPacketDestroyEntities.class, "func_149098_c");
addMapping("processPacket", SPacketDisconnect.class, "func_148833_a");
addMapping("readPacketData", SPacketDisconnect.class, "func_148837_a");
addMapping("writePacketData", SPacketDisconnect.class, "func_148840_b");
addMapping("getReason", SPacketDisconnect.class, "func_149165_c");
addMapping("processPacket", SPacketDisplayObjective.class, "func_148833_a");
addMapping("readPacketData", SPacketDisplayObjective.class, "func_148837_a");
addMapping("writePacketData", SPacketDisplayObjective.class, "func_148840_b");
addMapping("getName", SPacketDisplayObjective.class, "func_149370_d");
addMapping("getPosition", SPacketDisplayObjective.class, "func_149371_c");
addMapping("processPacket", SPacketEffect.class, "func_148833_a");
addMapping("readPacketData", SPacketEffect.class, "func_148837_a");
addMapping("writePacketData", SPacketEffect.class, "func_148840_b");
addMapping("getSoundData", SPacketEffect.class, "func_149241_e");
addMapping("getSoundType", SPacketEffect.class, "func_149242_d");
addMapping("isSoundServerwide", SPacketEffect.class, "func_149244_c");
addMapping("getSoundPos", SPacketEffect.class, "func_179746_d");
addMapping("processPacket", SPacketEntity.class, "func_148833_a");
addMapping("readPacketData", SPacketEntity.class, "func_148837_a");
addMapping("writePacketData", SPacketEntity.class, "func_148840_b");
addMapping("isRotating", SPacketEntity.class, "func_149060_h");
addMapping("getPitch", SPacketEntity.class, "func_149063_g");
addMapping("getEntity", SPacketEntity.class, "func_149065_a");
addMapping("getYaw", SPacketEntity.class, "func_149066_f");
addMapping("getOnGround", SPacketEntity.class, "func_179742_g");
addMapping("getZ", SPacketEntity.class, "func_186951_c");
addMapping("getX", SPacketEntity.class, "func_186952_a");
addMapping("getY", SPacketEntity.class, "func_186953_b");
addMapping("processPacket", SPacketEntityAttach.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityAttach.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityAttach.class, "func_148840_b");
addMapping("getVehicleEntityId", SPacketEntityAttach.class, "func_149402_e");
addMapping("getEntityId", SPacketEntityAttach.class, "func_149403_d");
addMapping("processPacket", SPacketEntityEffect.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityEffect.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityEffect.class, "func_148840_b");
addMapping("getEntityId", SPacketEntityEffect.class, "func_149426_d");
addMapping("getEffectId", SPacketEntityEffect.class, "func_149427_e");
addMapping("getAmplifier", SPacketEntityEffect.class, "func_149428_f");
addMapping("isMaxDuration", SPacketEntityEffect.class, "func_149429_c");
addMapping("doesShowParticles", SPacketEntityEffect.class, "func_179707_f");
addMapping("getDuration", SPacketEntityEffect.class, "func_180755_e");
addMapping("getIsAmbient", SPacketEntityEffect.class, "func_186984_g");
addMapping("processPacket", SPacketEntityEquipment.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityEquipment.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityEquipment.class, "func_148840_b");
addMapping("getEntityID", SPacketEntityEquipment.class, "func_149389_d");
addMapping("getItemStack", SPacketEntityEquipment.class, "func_149390_c");
addMapping("getEquipmentSlot", SPacketEntityEquipment.class, "func_186969_c");
addMapping("processPacket", SPacketEntityHeadLook.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityHeadLook.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityHeadLook.class, "func_148840_b");
addMapping("getYaw", SPacketEntityHeadLook.class, "func_149380_c");
addMapping("getEntity", SPacketEntityHeadLook.class, "func_149381_a");
addMapping("processPacket", SPacketEntityMetadata.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityMetadata.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityMetadata.class, "func_148840_b");
addMapping("getEntityId", SPacketEntityMetadata.class, "func_149375_d");
addMapping("getDataManagerEntries", SPacketEntityMetadata.class, "func_149376_c");
addMapping("processPacket", SPacketEntityProperties.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityProperties.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityProperties.class, "func_148840_b");
addMapping("getSnapshots", SPacketEntityProperties.class, "func_149441_d");
addMapping("getEntityId", SPacketEntityProperties.class, "func_149442_c");
addMapping("processPacket", SPacketEntityStatus.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityStatus.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityStatus.class, "func_148840_b");
addMapping("getOpCode", SPacketEntityStatus.class, "func_149160_c");
addMapping("getEntity", SPacketEntityStatus.class, "func_149161_a");
addMapping("processPacket", SPacketEntityTeleport.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityTeleport.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityTeleport.class, "func_148840_b");
addMapping("getPitch", SPacketEntityTeleport.class, "func_149447_h");
addMapping("getYaw", SPacketEntityTeleport.class, "func_149450_g");
addMapping("getEntityId", SPacketEntityTeleport.class, "func_149451_c");
addMapping("getOnGround", SPacketEntityTeleport.class, "func_179697_g");
addMapping("getZ", SPacketEntityTeleport.class, "func_186981_d");
addMapping("getX", SPacketEntityTeleport.class, "func_186982_b");
addMapping("getY", SPacketEntityTeleport.class, "func_186983_c");
addMapping("processPacket", SPacketEntityVelocity.class, "func_148833_a");
addMapping("readPacketData", SPacketEntityVelocity.class, "func_148837_a");
addMapping("writePacketData", SPacketEntityVelocity.class, "func_148840_b");
addMapping("getMotionZ", SPacketEntityVelocity.class, "func_149409_f");
addMapping("getMotionY", SPacketEntityVelocity.class, "func_149410_e");
addMapping("getMotionX", SPacketEntityVelocity.class, "func_149411_d");
addMapping("getEntityID", SPacketEntityVelocity.class, "func_149412_c");
addMapping("processPacket", SPacketExplosion.class, "func_148833_a");
addMapping("readPacketData", SPacketExplosion.class, "func_148837_a");
addMapping("writePacketData", SPacketExplosion.class, "func_148840_b");
addMapping("getY", SPacketExplosion.class, "func_149143_g");
addMapping("getMotionY", SPacketExplosion.class, "func_149144_d");
addMapping("getZ", SPacketExplosion.class, "func_149145_h");
addMapping("getStrength", SPacketExplosion.class, "func_149146_i");
addMapping("getMotionZ", SPacketExplosion.class, "func_149147_e");
addMapping("getX", SPacketExplosion.class, "func_149148_f");
addMapping("getMotionX", SPacketExplosion.class, "func_149149_c");
addMapping("getAffectedBlockPositions", SPacketExplosion.class, "func_149150_j");
addMapping("processPacket", SPacketHeldItemChange.class, "func_148833_a");
addMapping("readPacketData", SPacketHeldItemChange.class, "func_148837_a");
addMapping("writePacketData", SPacketHeldItemChange.class, "func_148840_b");
addMapping("getHeldItemHotbarIndex", SPacketHeldItemChange.class, "func_149385_c");
addMapping("processPacket", SPacketJoinGame.class, "func_148833_a");
addMapping("readPacketData", SPacketJoinGame.class, "func_148837_a");
addMapping("writePacketData", SPacketJoinGame.class, "func_148840_b");
addMapping("getDifficulty", SPacketJoinGame.class, "func_149192_g");
addMapping("getMaxPlayers", SPacketJoinGame.class, "func_149193_h");
addMapping("getDimension", SPacketJoinGame.class, "func_149194_f");
addMapping("isHardcoreMode", SPacketJoinGame.class, "func_149195_d");
addMapping("getWorldType", SPacketJoinGame.class, "func_149196_i");
addMapping("getPlayerId", SPacketJoinGame.class, "func_149197_c");
addMapping("getGameType", SPacketJoinGame.class, "func_149198_e");
addMapping("isReducedDebugInfo", SPacketJoinGame.class, "func_179744_h");
addMapping("processPacket", SPacketKeepAlive.class, "func_148833_a");
addMapping("readPacketData", SPacketKeepAlive.class, "func_148837_a");
addMapping("writePacketData", SPacketKeepAlive.class, "func_148840_b");
addMapping("getId", SPacketKeepAlive.class, "func_149134_c");
addMapping("processPacket", SPacketMaps.class, "func_148833_a");
addMapping("readPacketData", SPacketMaps.class, "func_148837_a");
addMapping("writePacketData", SPacketMaps.class, "func_148840_b");
addMapping("getMapId", SPacketMaps.class, "func_149188_c");
addMapping("setMapdataTo", SPacketMaps.class, "func_179734_a");
addMapping("processPacket", SPacketMoveVehicle.class, "func_148833_a");
addMapping("readPacketData", SPacketMoveVehicle.class, "func_148837_a");
addMapping("writePacketData", SPacketMoveVehicle.class, "func_148840_b");
addMapping("getY", SPacketMoveVehicle.class, "func_186955_b");
addMapping("getZ", SPacketMoveVehicle.class, "func_186956_c");
addMapping("getX", SPacketMoveVehicle.class, "func_186957_a");
addMapping("getPitch", SPacketMoveVehicle.class, "func_186958_e");
addMapping("getYaw", SPacketMoveVehicle.class, "func_186959_d");
addMapping("processPacket", SPacketMultiBlockChange.class, "func_148833_a");
addMapping("readPacketData", SPacketMultiBlockChange.class, "func_148837_a");
addMapping("writePacketData", SPacketMultiBlockChange.class, "func_148840_b");
addMapping("getChangedBlocks", SPacketMultiBlockChange.class, "func_179844_a");
addMapping("processPacket", SPacketOpenWindow.class, "func_148833_a");
addMapping("readPacketData", SPacketOpenWindow.class, "func_148837_a");
addMapping("writePacketData", SPacketOpenWindow.class, "func_148840_b");
addMapping("getEntityId", SPacketOpenWindow.class, "func_148897_h");
addMapping("getSlotCount", SPacketOpenWindow.class, "func_148898_f");
addMapping("hasSlots", SPacketOpenWindow.class, "func_148900_g");
addMapping("getWindowId", SPacketOpenWindow.class, "func_148901_c");
addMapping("getGuiId", SPacketOpenWindow.class, "func_148902_e");
addMapping("getWindowTitle", SPacketOpenWindow.class, "func_179840_c");
addMapping("processPacket", SPacketParticles.class, "func_148833_a");
addMapping("readPacketData", SPacketParticles.class, "func_148837_a");
addMapping("writePacketData", SPacketParticles.class, "func_148840_b");
addMapping("getXCoordinate", SPacketParticles.class, "func_149220_d");
addMapping("getXOffset", SPacketParticles.class, "func_149221_g");
addMapping("getParticleCount", SPacketParticles.class, "func_149222_k");
addMapping("getZOffset", SPacketParticles.class, "func_149223_i");
addMapping("getYOffset", SPacketParticles.class, "func_149224_h");
addMapping("getZCoordinate", SPacketParticles.class, "func_149225_f");
addMapping("getYCoordinate", SPacketParticles.class, "func_149226_e");
addMapping("getParticleSpeed", SPacketParticles.class, "func_149227_j");
addMapping("getParticleArgs", SPacketParticles.class, "func_179748_k");
addMapping("getParticleType", SPacketParticles.class, "func_179749_a");
addMapping("isLongDistance", SPacketParticles.class, "func_179750_b");
addMapping("processPacket", SPacketPlayerAbilities.class, "func_148833_a");
addMapping("readPacketData", SPacketPlayerAbilities.class, "func_148837_a");
addMapping("writePacketData", SPacketPlayerAbilities.class, "func_148840_b");
addMapping("getFlySpeed", SPacketPlayerAbilities.class, "func_149101_g");
addMapping("setFlying", SPacketPlayerAbilities.class, "func_149102_b");
addMapping("isCreativeMode", SPacketPlayerAbilities.class, "func_149103_f");
addMapping("setFlySpeed", SPacketPlayerAbilities.class, "func_149104_a");
addMapping("isAllowFlying", SPacketPlayerAbilities.class, "func_149105_e");
addMapping("isFlying", SPacketPlayerAbilities.class, "func_149106_d");
addMapping("getWalkSpeed", SPacketPlayerAbilities.class, "func_149107_h");
addMapping("setInvulnerable", SPacketPlayerAbilities.class, "func_149108_a");
addMapping("setAllowFlying", SPacketPlayerAbilities.class, "func_149109_c");
addMapping("setWalkSpeed", SPacketPlayerAbilities.class, "func_149110_b");
addMapping("setCreativeMode", SPacketPlayerAbilities.class, "func_149111_d");
addMapping("isInvulnerable", SPacketPlayerAbilities.class, "func_149112_c");
addMapping("processPacket", SPacketPlayerListHeaderFooter.class, "func_148833_a");
addMapping("readPacketData", SPacketPlayerListHeaderFooter.class, "func_148837_a");
addMapping("writePacketData", SPacketPlayerListHeaderFooter.class, "func_148840_b");
addMapping("getHeader", SPacketPlayerListHeaderFooter.class, "func_179700_a");
addMapping("getFooter", SPacketPlayerListHeaderFooter.class, "func_179701_b");
addMapping("processPacket", SPacketPlayerListItem.class, "func_148833_a");
addMapping("readPacketData", SPacketPlayerListItem.class, "func_148837_a");
addMapping("writePacketData", SPacketPlayerListItem.class, "func_148840_b");
addMapping("getEntries", SPacketPlayerListItem.class, "func_179767_a");
addMapping("getAction", SPacketPlayerListItem.class, "func_179768_b");
addMapping("processPacket", SPacketPlayerPosLook.class, "func_148833_a");
addMapping("readPacketData", SPacketPlayerPosLook.class, "func_148837_a");
addMapping("writePacketData", SPacketPlayerPosLook.class, "func_148840_b");
addMapping("getY", SPacketPlayerPosLook.class, "func_148928_d");
addMapping("getPitch", SPacketPlayerPosLook.class, "func_148930_g");
addMapping("getYaw", SPacketPlayerPosLook.class, "func_148931_f");
addMapping("getX", SPacketPlayerPosLook.class, "func_148932_c");
addMapping("getZ", SPacketPlayerPosLook.class, "func_148933_e");
addMapping("getFlags", SPacketPlayerPosLook.class, "func_179834_f");
addMapping("getTeleportId", SPacketPlayerPosLook.class, "func_186965_f");
addMapping("processPacket", SPacketRecipeBook.class, "func_148833_a");
addMapping("readPacketData", SPacketRecipeBook.class, "func_148837_a");
addMapping("writePacketData", SPacketRecipeBook.class, "func_148840_b");
addMapping("isGuiOpen", SPacketRecipeBook.class, "func_192593_c");
addMapping("isFilteringCraftable", SPacketRecipeBook.class, "func_192594_d");
addMapping("getRecipes", SPacketRecipeBook.class, "func_192595_a");
addMapping("getDisplayedRecipes", SPacketRecipeBook.class, "func_193644_b");
addMapping("getState", SPacketRecipeBook.class, "func_194151_e");
addMapping("processPacket", SPacketRemoveEntityEffect.class, "func_148833_a");
addMapping("readPacketData", SPacketRemoveEntityEffect.class, "func_148837_a");
addMapping("writePacketData", SPacketRemoveEntityEffect.class, "func_148840_b");
addMapping("getEntity", SPacketRemoveEntityEffect.class, "func_186967_a");
addMapping("getPotion", SPacketRemoveEntityEffect.class, "func_186968_a");
addMapping("processPacket", SPacketResourcePackSend.class, "func_148833_a");
addMapping("readPacketData", SPacketResourcePackSend.class, "func_148837_a");
addMapping("writePacketData", SPacketResourcePackSend.class, "func_148840_b");
addMapping("getURL", SPacketResourcePackSend.class, "func_179783_a");
addMapping("getHash", SPacketResourcePackSend.class, "func_179784_b");
addMapping("processPacket", SPacketRespawn.class, "func_148833_a");
addMapping("readPacketData", SPacketRespawn.class, "func_148837_a");
addMapping("writePacketData", SPacketRespawn.class, "func_148840_b");
addMapping("getWorldType", SPacketRespawn.class, "func_149080_f");
addMapping("getDifficulty", SPacketRespawn.class, "func_149081_d");
addMapping("getDimensionID", SPacketRespawn.class, "func_149082_c");
addMapping("getGameType", SPacketRespawn.class, "func_149083_e");
addMapping("processPacket", SPacketScoreboardObjective.class, "func_148833_a");
addMapping("readPacketData", SPacketScoreboardObjective.class, "func_148837_a");
addMapping("writePacketData", SPacketScoreboardObjective.class, "func_148840_b");
addMapping("getObjectiveValue", SPacketScoreboardObjective.class, "func_149337_d");
addMapping("getAction", SPacketScoreboardObjective.class, "func_149338_e");
addMapping("getObjectiveName", SPacketScoreboardObjective.class, "func_149339_c");
addMapping("getRenderType", SPacketScoreboardObjective.class, "func_179817_d");
addMapping("processPacket", SPacketSelectAdvancementsTab.class, "func_148833_a");
addMapping("readPacketData", SPacketSelectAdvancementsTab.class, "func_148837_a");
addMapping("writePacketData", SPacketSelectAdvancementsTab.class, "func_148840_b");
addMapping("getTab", SPacketSelectAdvancementsTab.class, "func_194154_a");
addMapping("processPacket", SPacketServerDifficulty.class, "func_148833_a");
addMapping("readPacketData", SPacketServerDifficulty.class, "func_148837_a");
addMapping("writePacketData", SPacketServerDifficulty.class, "func_148840_b");
addMapping("isDifficultyLocked", SPacketServerDifficulty.class, "func_179830_a");
addMapping("getDifficulty", SPacketServerDifficulty.class, "func_179831_b");
addMapping("processPacket", SPacketSetExperience.class, "func_148833_a");
addMapping("readPacketData", SPacketSetExperience.class, "func_148837_a");
addMapping("writePacketData", SPacketSetExperience.class, "func_148840_b");
addMapping("getLevel", SPacketSetExperience.class, "func_149395_e");
addMapping("getTotalExperience", SPacketSetExperience.class, "func_149396_d");
addMapping("getExperienceBar", SPacketSetExperience.class, "func_149397_c");
addMapping("processPacket", SPacketSetPassengers.class, "func_148833_a");
addMapping("readPacketData", SPacketSetPassengers.class, "func_148837_a");
addMapping("writePacketData", SPacketSetPassengers.class, "func_148840_b");
addMapping("getPassengerIds", SPacketSetPassengers.class, "func_186971_a");
addMapping("getEntityId", SPacketSetPassengers.class, "func_186972_b");
addMapping("processPacket", SPacketSetSlot.class, "func_148833_a");
addMapping("readPacketData", SPacketSetSlot.class, "func_148837_a");
addMapping("writePacketData", SPacketSetSlot.class, "func_148840_b");
addMapping("getSlot", SPacketSetSlot.class, "func_149173_d");
addMapping("getStack", SPacketSetSlot.class, "func_149174_e");
addMapping("getWindowId", SPacketSetSlot.class, "func_149175_c");
addMapping("processPacket", SPacketSignEditorOpen.class, "func_148833_a");
addMapping("readPacketData", SPacketSignEditorOpen.class, "func_148837_a");
addMapping("writePacketData", SPacketSignEditorOpen.class, "func_148840_b");
addMapping("getSignPosition", SPacketSignEditorOpen.class, "func_179777_a");
addMapping("processPacket", SPacketSoundEffect.class, "func_148833_a");
addMapping("readPacketData", SPacketSoundEffect.class, "func_148837_a");
addMapping("writePacketData", SPacketSoundEffect.class, "func_148840_b");
addMapping("getX", SPacketSoundEffect.class, "func_149207_d");
addMapping("getVolume", SPacketSoundEffect.class, "func_149208_g");
addMapping("getPitch", SPacketSoundEffect.class, "func_149209_h");
addMapping("getZ", SPacketSoundEffect.class, "func_149210_f");
addMapping("getY", SPacketSoundEffect.class, "func_149211_e");
addMapping("getCategory", SPacketSoundEffect.class, "func_186977_b");
addMapping("getSound", SPacketSoundEffect.class, "func_186978_a");
addMapping("processPacket", SPacketSpawnExperienceOrb.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnExperienceOrb.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnExperienceOrb.class, "func_148840_b");
addMapping("getEntityID", SPacketSpawnExperienceOrb.class, "func_148985_c");
addMapping("getXPValue", SPacketSpawnExperienceOrb.class, "func_148986_g");
addMapping("getZ", SPacketSpawnExperienceOrb.class, "func_186884_d");
addMapping("getX", SPacketSpawnExperienceOrb.class, "func_186885_b");
addMapping("getY", SPacketSpawnExperienceOrb.class, "func_186886_c");
addMapping("processPacket", SPacketSpawnGlobalEntity.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnGlobalEntity.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnGlobalEntity.class, "func_148840_b");
addMapping("getEntityId", SPacketSpawnGlobalEntity.class, "func_149052_c");
addMapping("getType", SPacketSpawnGlobalEntity.class, "func_149053_g");
addMapping("getZ", SPacketSpawnGlobalEntity.class, "func_186887_d");
addMapping("getX", SPacketSpawnGlobalEntity.class, "func_186888_b");
addMapping("getY", SPacketSpawnGlobalEntity.class, "func_186889_c");
addMapping("processPacket", SPacketSpawnMob.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnMob.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnMob.class, "func_148840_b");
addMapping("getEntityID", SPacketSpawnMob.class, "func_149024_d");
addMapping("getEntityType", SPacketSpawnMob.class, "func_149025_e");
addMapping("getVelocityX", SPacketSpawnMob.class, "func_149026_i");
addMapping("getDataManagerEntries", SPacketSpawnMob.class, "func_149027_c");
addMapping("getYaw", SPacketSpawnMob.class, "func_149028_l");
addMapping("getPitch", SPacketSpawnMob.class, "func_149030_m");
addMapping("getVelocityZ", SPacketSpawnMob.class, "func_149031_k");
addMapping("getHeadPitch", SPacketSpawnMob.class, "func_149032_n");
addMapping("getVelocityY", SPacketSpawnMob.class, "func_149033_j");
addMapping("getUniqueId", SPacketSpawnMob.class, "func_186890_c");
addMapping("getX", SPacketSpawnMob.class, "func_186891_e");
addMapping("getY", SPacketSpawnMob.class, "func_186892_f");
addMapping("getZ", SPacketSpawnMob.class, "func_186893_g");
addMapping("processPacket", SPacketSpawnObject.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnObject.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnObject.class, "func_148840_b");
addMapping("getType", SPacketSpawnObject.class, "func_148993_l");
addMapping("getSpeedZ", SPacketSpawnObject.class, "func_148999_i");
addMapping("setSpeedY", SPacketSpawnObject.class, "func_149000_e");
addMapping("getEntityID", SPacketSpawnObject.class, "func_149001_c");
addMapping("setData", SPacketSpawnObject.class, "func_149002_g");
addMapping("setSpeedX", SPacketSpawnObject.class, "func_149003_d");
addMapping("getSpeedY", SPacketSpawnObject.class, "func_149004_h");
addMapping("getYaw", SPacketSpawnObject.class, "func_149006_k");
addMapping("setSpeedZ", SPacketSpawnObject.class, "func_149007_f");
addMapping("getPitch", SPacketSpawnObject.class, "func_149008_j");
addMapping("getData", SPacketSpawnObject.class, "func_149009_m");
addMapping("getSpeedX", SPacketSpawnObject.class, "func_149010_g");
addMapping("getUniqueId", SPacketSpawnObject.class, "func_186879_b");
addMapping("getX", SPacketSpawnObject.class, "func_186880_c");
addMapping("getZ", SPacketSpawnObject.class, "func_186881_e");
addMapping("getY", SPacketSpawnObject.class, "func_186882_d");
addMapping("processPacket", SPacketSpawnPainting.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnPainting.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnPainting.class, "func_148840_b");
addMapping("getTitle", SPacketSpawnPainting.class, "func_148961_h");
addMapping("getEntityID", SPacketSpawnPainting.class, "func_148965_c");
addMapping("getFacing", SPacketSpawnPainting.class, "func_179836_c");
addMapping("getPosition", SPacketSpawnPainting.class, "func_179837_b");
addMapping("getUniqueId", SPacketSpawnPainting.class, "func_186895_b");
addMapping("processPacket", SPacketSpawnPlayer.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnPlayer.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnPlayer.class, "func_148840_b");
addMapping("getYaw", SPacketSpawnPlayer.class, "func_148941_i");
addMapping("getEntityID", SPacketSpawnPlayer.class, "func_148943_d");
addMapping("getDataManagerEntries", SPacketSpawnPlayer.class, "func_148944_c");
addMapping("getPitch", SPacketSpawnPlayer.class, "func_148945_j");
addMapping("getUniqueId", SPacketSpawnPlayer.class, "func_179819_c");
addMapping("getY", SPacketSpawnPlayer.class, "func_186897_e");
addMapping("getX", SPacketSpawnPlayer.class, "func_186898_d");
addMapping("getZ", SPacketSpawnPlayer.class, "func_186899_f");
addMapping("processPacket", SPacketSpawnPosition.class, "func_148833_a");
addMapping("readPacketData", SPacketSpawnPosition.class, "func_148837_a");
addMapping("writePacketData", SPacketSpawnPosition.class, "func_148840_b");
addMapping("getSpawnPos", SPacketSpawnPosition.class, "func_179800_a");
addMapping("processPacket", SPacketStatistics.class, "func_148833_a");
addMapping("readPacketData", SPacketStatistics.class, "func_148837_a");
addMapping("writePacketData", SPacketStatistics.class, "func_148840_b");
addMapping("getStatisticMap", SPacketStatistics.class, "func_148974_c");
addMapping("processPacket", SPacketTabComplete.class, "func_148833_a");
addMapping("readPacketData", SPacketTabComplete.class, "func_148837_a");
addMapping("writePacketData", SPacketTabComplete.class, "func_148840_b");
addMapping("getMatches", SPacketTabComplete.class, "func_149630_c");
addMapping("processPacket", SPacketTeams.class, "func_148833_a");
addMapping("readPacketData", SPacketTeams.class, "func_148837_a");
addMapping("writePacketData", SPacketTeams.class, "func_148840_b");
addMapping("getDisplayName", SPacketTeams.class, "func_149306_d");
addMapping("getAction", SPacketTeams.class, "func_149307_h");
addMapping("getFriendlyFlags", SPacketTeams.class, "func_149308_i");
addMapping("getSuffix", SPacketTeams.class, "func_149309_f");
addMapping("getPlayers", SPacketTeams.class, "func_149310_g");
addMapping("getPrefix", SPacketTeams.class, "func_149311_e");
addMapping("getName", SPacketTeams.class, "func_149312_c");
addMapping("getColor", SPacketTeams.class, "func_179813_h");
addMapping("getNameTagVisibility", SPacketTeams.class, "func_179814_i");
addMapping("getCollisionRule", SPacketTeams.class, "func_186975_j");
addMapping("processPacket", SPacketTimeUpdate.class, "func_148833_a");
addMapping("readPacketData", SPacketTimeUpdate.class, "func_148837_a");
addMapping("writePacketData", SPacketTimeUpdate.class, "func_148840_b");
addMapping("getWorldTime", SPacketTimeUpdate.class, "func_149365_d");
addMapping("getTotalWorldTime", SPacketTimeUpdate.class, "func_149366_c");
addMapping("processPacket", SPacketTitle.class, "func_148833_a");
addMapping("readPacketData", SPacketTitle.class, "func_148837_a");
addMapping("writePacketData", SPacketTitle.class, "func_148840_b");
addMapping("getFadeOutTime", SPacketTitle.class, "func_179803_e");
addMapping("getDisplayTime", SPacketTitle.class, "func_179804_d");
addMapping("getMessage", SPacketTitle.class, "func_179805_b");
addMapping("getFadeInTime", SPacketTitle.class, "func_179806_c");
addMapping("getType", SPacketTitle.class, "func_179807_a");
addMapping("processPacket", SPacketUnloadChunk.class, "func_148833_a");
addMapping("readPacketData", SPacketUnloadChunk.class, "func_148837_a");
addMapping("writePacketData", SPacketUnloadChunk.class, "func_148840_b");
addMapping("getX", SPacketUnloadChunk.class, "func_186940_a");
addMapping("getZ", SPacketUnloadChunk.class, "func_186941_b");
addMapping("processPacket", SPacketUpdateBossInfo.class, "func_148833_a");
addMapping("readPacketData", SPacketUpdateBossInfo.class, "func_148837_a");
addMapping("writePacketData", SPacketUpdateBossInfo.class, "func_148840_b");
addMapping("getColor", SPacketUpdateBossInfo.class, "func_186900_e");
addMapping("shouldCreateFog", SPacketUpdateBossInfo.class, "func_186901_i");
addMapping("getOperation", SPacketUpdateBossInfo.class, "func_186902_b");
addMapping("setFlags", SPacketUpdateBossInfo.class, "func_186903_a");
addMapping("getOverlay", SPacketUpdateBossInfo.class, "func_186904_f");
addMapping("getFlags", SPacketUpdateBossInfo.class, "func_186905_j");
addMapping("getPercent", SPacketUpdateBossInfo.class, "func_186906_d");
addMapping("getName", SPacketUpdateBossInfo.class, "func_186907_c");
addMapping("getUniqueId", SPacketUpdateBossInfo.class, "func_186908_a");
addMapping("shouldDarkenSky", SPacketUpdateBossInfo.class, "func_186909_g");
addMapping("shouldPlayEndBossMusic", SPacketUpdateBossInfo.class, "func_186910_h");
addMapping("processPacket", SPacketUpdateHealth.class, "func_148833_a");
addMapping("readPacketData", SPacketUpdateHealth.class, "func_148837_a");
addMapping("writePacketData", SPacketUpdateHealth.class, "func_148840_b");
addMapping("getFoodLevel", SPacketUpdateHealth.class, "func_149330_d");
addMapping("getSaturationLevel", SPacketUpdateHealth.class, "func_149331_e");
addMapping("getHealth", SPacketUpdateHealth.class, "func_149332_c");
addMapping("processPacket", SPacketUpdateScore.class, "func_148833_a");
addMapping("readPacketData", SPacketUpdateScore.class, "func_148837_a");
addMapping("writePacketData", SPacketUpdateScore.class, "func_148840_b");
addMapping("getObjectiveName", SPacketUpdateScore.class, "func_149321_d");
addMapping("getScoreValue", SPacketUpdateScore.class, "func_149323_e");
addMapping("getPlayerName", SPacketUpdateScore.class, "func_149324_c");
addMapping("getScoreAction", SPacketUpdateScore.class, "func_180751_d");
addMapping("processPacket", SPacketUpdateTileEntity.class, "func_148833_a");
addMapping("readPacketData", SPacketUpdateTileEntity.class, "func_148837_a");
addMapping("writePacketData", SPacketUpdateTileEntity.class, "func_148840_b");
addMapping("getTileEntityType", SPacketUpdateTileEntity.class, "func_148853_f");
addMapping("getNbtCompound", SPacketUpdateTileEntity.class, "func_148857_g");
addMapping("getPos", SPacketUpdateTileEntity.class, "func_179823_a");
addMapping("processPacket", SPacketUseBed.class, "func_148833_a");
addMapping("readPacketData", SPacketUseBed.class, "func_148837_a");
addMapping("writePacketData", SPacketUseBed.class, "func_148840_b");
addMapping("getPlayer", SPacketUseBed.class, "func_149091_a");
addMapping("getBedPosition", SPacketUseBed.class, "func_179798_a");
addMapping("processPacket", SPacketWindowItems.class, "func_148833_a");
addMapping("readPacketData", SPacketWindowItems.class, "func_148837_a");
addMapping("writePacketData", SPacketWindowItems.class, "func_148840_b");
addMapping("getItemStacks", SPacketWindowItems.class, "func_148910_d");
addMapping("getWindowId", SPacketWindowItems.class, "func_148911_c");
addMapping("processPacket", SPacketWindowProperty.class, "func_148833_a");
addMapping("readPacketData", SPacketWindowProperty.class, "func_148837_a");
addMapping("writePacketData", SPacketWindowProperty.class, "func_148840_b");
addMapping("getValue", SPacketWindowProperty.class, "func_149180_e");
addMapping("getProperty", SPacketWindowProperty.class, "func_149181_d");
addMapping("getWindowId", SPacketWindowProperty.class, "func_149182_c");
addMapping("processPacket", SPacketWorldBorder.class, "func_148833_a");
addMapping("readPacketData", SPacketWorldBorder.class, "func_148837_a");
addMapping("writePacketData", SPacketWorldBorder.class, "func_148840_b");
addMapping("apply", SPacketWorldBorder.class, "func_179788_a");
addMapping("logDebug", IServer.class, "func_71198_k");
addMapping("logSevere", IServer.class, "func_71201_j");
addMapping("getOnlinePlayerNames", IServer.class, "func_71213_z");
addMapping("getCurrentPlayerCount", IServer.class, "func_71233_x");
addMapping("getPort", IServer.class, "func_71234_u");
addMapping("logWarning", IServer.class, "func_71236_h");
addMapping("isDebuggingEnabled", IServer.class, "func_71239_B");
addMapping("logInfo", IServer.class, "func_71244_g");
addMapping("getMinecraftVersion", IServer.class, "func_71249_w");
addMapping("handleRConCommand", IServer.class, "func_71252_i");
addMapping("getPlugins", IServer.class, "func_71258_A");
addMapping("getFolderName", IServer.class, "func_71270_I");
addMapping("getMotd", IServer.class, "func_71274_v");
addMapping("getMaxPlayers", IServer.class, "func_71275_y");
addMapping("getHostname", IServer.class, "func_71277_t");
addMapping("saveProperties", IServer.class, "func_71326_a");
addMapping("getIntProperty", IServer.class, "func_71327_a");
addMapping("setProperty", IServer.class, "func_71328_a");
addMapping("getSettingsFilename", IServer.class, "func_71329_c");
addMapping("getStringProperty", IServer.class, "func_71330_a");
addMapping("getEntityWorld", RConConsoleSource.class, "func_130014_f_");
addMapping("sendMessage", RConConsoleSource.class, "func_145747_a");
addMapping("sendCommandFeedback", RConConsoleSource.class, "func_174792_t_");
addMapping("getServer", RConConsoleSource.class, "func_184102_h");
addMapping("canUseCommand", RConConsoleSource.class, "func_70003_b");
addMapping("getName", RConConsoleSource.class, "func_70005_c_");
addMapping("resetLog", RConConsoleSource.class, "func_70007_b");
addMapping("getLogContents", RConConsoleSource.class, "func_70008_c");
addMapping("writeInt", RConOutputStream.class, "func_72667_a");
addMapping("writeShort", RConOutputStream.class, "func_72668_a");
addMapping("reset", RConOutputStream.class, "func_72669_b");
addMapping("writeByteArray", RConOutputStream.class, "func_72670_a");
addMapping("writeString", RConOutputStream.class, "func_72671_a");
addMapping("toByteArray", RConOutputStream.class, "func_72672_a");
addMapping("registerSocket", RConThreadBase.class, "func_72601_a");
addMapping("startThread", RConThreadBase.class, "func_72602_a");
addMapping("getNumberOfPlayers", RConThreadBase.class, "func_72603_d");
addMapping("closeSocket", RConThreadBase.class, "func_72604_a");
addMapping("closeServerSocket_do", RConThreadBase.class, "func_72605_a");
addMapping("logWarning", RConThreadBase.class, "func_72606_c");
addMapping("logDebug", RConThreadBase.class, "func_72607_a");
addMapping("closeServerSocket", RConThreadBase.class, "func_72608_b");
addMapping("logInfo", RConThreadBase.class, "func_72609_b");
addMapping("logSevere", RConThreadBase.class, "func_72610_d");
addMapping("closeAllSockets", RConThreadBase.class, "func_72611_e");
addMapping("closeAllSockets_do", RConThreadBase.class, "func_72612_a");
addMapping("isRunning", RConThreadBase.class, "func_72613_c");
addMapping("closeSocket", RConThreadClient.class, "func_72653_g");
addMapping("sendResponse", RConThreadClient.class, "func_72654_a");
addMapping("sendMultipacketResponse", RConThreadClient.class, "func_72655_a");
addMapping("sendLoginFailedResponse", RConThreadClient.class, "func_72656_f");
addMapping("startThread", RConThreadMain.class, "func_72602_a");
addMapping("cleanClientThreadsMap", RConThreadMain.class, "func_72645_g");
addMapping("initClientThreadList", RConThreadMain.class, "func_72646_f");
addMapping("startThread", RConThreadQuery.class, "func_72602_a");
addMapping("sendResponsePacket", RConThreadQuery.class, "func_72620_a");
addMapping("parseIncomingPacket", RConThreadQuery.class, "func_72621_a");
addMapping("sendAuthChallenge", RConThreadQuery.class, "func_72622_d");
addMapping("stopWithException", RConThreadQuery.class, "func_72623_a");
addMapping("createQueryResponse", RConThreadQuery.class, "func_72624_b");
addMapping("getRequestID", RConThreadQuery.class, "func_72625_a");
addMapping("initQuerySystem", RConThreadQuery.class, "func_72626_g");
addMapping("verifyClientAuth", RConThreadQuery.class, "func_72627_c");
addMapping("cleanQueryClientsMap", RConThreadQuery.class, "func_72628_f");
addMapping("getBytesAsString", RConUtils.class, "func_72661_a");
addMapping("getRemainingBytesAsLEInt", RConUtils.class, "func_72662_b");
addMapping("getByteAsHexString", RConUtils.class, "func_72663_a");
addMapping("getBytesAsBEint", RConUtils.class, "func_72664_c");
addMapping("getBytesAsLEInt", RConUtils.class, "func_72665_b");
addMapping("handleServerInfo", INetHandlerStatusClient.class, "func_147397_a");
addMapping("handlePong", INetHandlerStatusClient.class, "func_147398_a");
addMapping("processPing", INetHandlerStatusServer.class, "func_147311_a");
addMapping("processServerQuery", INetHandlerStatusServer.class, "func_147312_a");
addMapping("processPacket", CPacketPing.class, "func_148833_a");
addMapping("readPacketData", CPacketPing.class, "func_148837_a");
addMapping("writePacketData", CPacketPing.class, "func_148840_b");
addMapping("getClientTime", CPacketPing.class, "func_149289_c");
addMapping("processPacket", CPacketServerQuery.class, "func_148833_a");
addMapping("readPacketData", CPacketServerQuery.class, "func_148837_a");
addMapping("writePacketData", CPacketServerQuery.class, "func_148840_b");
addMapping("processPacket", SPacketPong.class, "func_148833_a");
addMapping("readPacketData", SPacketPong.class, "func_148837_a");
addMapping("writePacketData", SPacketPong.class, "func_148840_b");
addMapping("processPacket", SPacketServerInfo.class, "func_148833_a");
addMapping("readPacketData", SPacketServerInfo.class, "func_148837_a");
addMapping("writePacketData", SPacketServerInfo.class, "func_148840_b");
addMapping("getResponse", SPacketServerInfo.class, "func_149294_c");
addMapping("openPoint", FlyingNodeProcessor.class, "func_176159_a");
addMapping("postProcess", FlyingNodeProcessor.class, "func_176163_a");
addMapping("init", FlyingNodeProcessor.class, "func_186315_a");
addMapping("getStart", FlyingNodeProcessor.class, "func_186318_b");
addMapping("getPathNodeType", FlyingNodeProcessor.class, "func_186319_a");
addMapping("findPathOptions", FlyingNodeProcessor.class, "func_186320_a");
addMapping("getPathPointToCoords", FlyingNodeProcessor.class, "func_186325_a");
addMapping("getPathNodeType", FlyingNodeProcessor.class, "func_186330_a");
addMapping("getPathNodeType", FlyingNodeProcessor.class, "func_192558_a");
addMapping("getPathNodeType", FlyingNodeProcessor.class, "func_192559_a");
addMapping("openPoint", NodeProcessor.class, "func_176159_a");
addMapping("postProcess", NodeProcessor.class, "func_176163_a");
addMapping("init", NodeProcessor.class, "func_186315_a");
addMapping("setCanSwim", NodeProcessor.class, "func_186316_c");
addMapping("setCanEnterDoors", NodeProcessor.class, "func_186317_a");
addMapping("getStart", NodeProcessor.class, "func_186318_b");
addMapping("getPathNodeType", NodeProcessor.class, "func_186319_a");
addMapping("findPathOptions", NodeProcessor.class, "func_186320_a");
addMapping("setCanOpenDoors", NodeProcessor.class, "func_186321_b");
addMapping("getCanSwim", NodeProcessor.class, "func_186322_e");
addMapping("getCanEnterDoors", NodeProcessor.class, "func_186323_c");
addMapping("getCanOpenDoors", NodeProcessor.class, "func_186324_d");
addMapping("getPathPointToCoords", NodeProcessor.class, "func_186325_a");
addMapping("getPathNodeType", NodeProcessor.class, "func_186330_a");
addMapping("setPoint", Path.class, "func_186309_a");
addMapping("getCurrentPos", Path.class, "func_186310_f");
addMapping("read", Path.class, "func_186311_b");
addMapping("getTarget", Path.class, "func_189964_i");
addMapping("getClosedSet", Path.class, "func_189965_h");
addMapping("getOpenSet", Path.class, "func_189966_g");
addMapping("getFinalPathPoint", Path.class, "func_75870_c");
addMapping("setCurrentPathLength", Path.class, "func_75871_b");
addMapping("setCurrentPathIndex", Path.class, "func_75872_c");
addMapping("getCurrentPathIndex", Path.class, "func_75873_e");
addMapping("getCurrentPathLength", Path.class, "func_75874_d");
addMapping("incrementPathIndex", Path.class, "func_75875_a");
addMapping("isSamePath", Path.class, "func_75876_a");
addMapping("getPathPointFromIndex", Path.class, "func_75877_a");
addMapping("getPosition", Path.class, "func_75878_a");
addMapping("isFinished", Path.class, "func_75879_b");
addMapping("getVectorFromIndex", Path.class, "func_75881_a");
addMapping("findPath", PathFinder.class, "func_186333_a");
addMapping("findPath", PathFinder.class, "func_186334_a");
addMapping("findPath", PathFinder.class, "func_186335_a");
addMapping("findPath", PathFinder.class, "func_186336_a");
addMapping("createPath", PathFinder.class, "func_75853_a");
addMapping("dequeue", PathHeap.class, "func_75844_c");
addMapping("isPathEmpty", PathHeap.class, "func_75845_e");
addMapping("sortForward", PathHeap.class, "func_75846_b");
addMapping("sortBack", PathHeap.class, "func_75847_a");
addMapping("clearPath", PathHeap.class, "func_75848_a");
addMapping("addPoint", PathHeap.class, "func_75849_a");
addMapping("changeDistance", PathHeap.class, "func_75850_a");
addMapping("getPathSearchRange", PathNavigate.class, "func_111269_d");
addMapping("checkForStuck", PathNavigate.class, "func_179677_a");
addMapping("getPathFinder", PathNavigate.class, "func_179679_a");
addMapping("getPathToPos", PathNavigate.class, "func_179680_a");
addMapping("canUpdatePathOnTimeout", PathNavigate.class, "func_188553_i");
addMapping("updatePath", PathNavigate.class, "func_188554_j");
addMapping("canEntityStandOnPos", PathNavigate.class, "func_188555_b");
addMapping("getNodeProcessor", PathNavigate.class, "func_189566_q");
addMapping("debugPathFinding", PathNavigate.class, "func_192876_m");
addMapping("setPath", PathNavigate.class, "func_75484_a");
addMapping("canNavigate", PathNavigate.class, "func_75485_k");
addMapping("removeSunnyPath", PathNavigate.class, "func_75487_m");
addMapping("getPathToXYZ", PathNavigate.class, "func_75488_a");
addMapping("setSpeed", PathNavigate.class, "func_75489_a");
addMapping("tryMoveToXYZ", PathNavigate.class, "func_75492_a");
addMapping("isDirectPathBetweenPoints", PathNavigate.class, "func_75493_a");
addMapping("getPathToEntityLiving", PathNavigate.class, "func_75494_a");
addMapping("tryMoveToEntityLiving", PathNavigate.class, "func_75497_a");
addMapping("clearPath", PathNavigate.class, "func_75499_g");
addMapping("noPath", PathNavigate.class, "func_75500_f");
addMapping("onUpdateNavigation", PathNavigate.class, "func_75501_e");
addMapping("getEntityPosition", PathNavigate.class, "func_75502_i");
addMapping("getPath", PathNavigate.class, "func_75505_d");
addMapping("isInLiquid", PathNavigate.class, "func_75506_l");
addMapping("pathFollow", PathNavigate.class, "func_75508_h");
addMapping("getPathToPos", PathNavigateClimber.class, "func_179680_a");
addMapping("getPathToEntityLiving", PathNavigateClimber.class, "func_75494_a");
addMapping("tryMoveToEntityLiving", PathNavigateClimber.class, "func_75497_a");
addMapping("onUpdateNavigation", PathNavigateClimber.class, "func_75501_e");
addMapping("getPathFinder", PathNavigateFlying.class, "func_179679_a");
addMapping("canEntityStandOnPos", PathNavigateFlying.class, "func_188555_b");
addMapping("setCanFloat", PathNavigateFlying.class, "func_192877_c");
addMapping("setCanEnterDoors", PathNavigateFlying.class, "func_192878_b");
addMapping("setCanOpenDoors", PathNavigateFlying.class, "func_192879_a");
addMapping("canFloat", PathNavigateFlying.class, "func_192880_g");
addMapping("canNavigate", PathNavigateFlying.class, "func_75485_k");
addMapping("isDirectPathBetweenPoints", PathNavigateFlying.class, "func_75493_a");
addMapping("getPathToEntityLiving", PathNavigateFlying.class, "func_75494_a");
addMapping("onUpdateNavigation", PathNavigateFlying.class, "func_75501_e");
addMapping("getEntityPosition", PathNavigateFlying.class, "func_75502_i");
addMapping("getPathFinder", PathNavigateGround.class, "func_179679_a");
addMapping("getPathToPos", PathNavigateGround.class, "func_179680_a");
addMapping("isSafeToStandAt", PathNavigateGround.class, "func_179683_a");
addMapping("getCanSwim", PathNavigateGround.class, "func_179684_h");
addMapping("setAvoidSun", PathNavigateGround.class, "func_179685_e");
addMapping("getEnterDoors", PathNavigateGround.class, "func_179686_g");
addMapping("getPathablePosY", PathNavigateGround.class, "func_179687_p");
addMapping("setBreakDoors", PathNavigateGround.class, "func_179688_b");
addMapping("setEnterDoors", PathNavigateGround.class, "func_179691_c");
addMapping("isPositionClear", PathNavigateGround.class, "func_179692_b");
addMapping("setCanSwim", PathNavigateGround.class, "func_179693_d");
addMapping("canNavigate", PathNavigateGround.class, "func_75485_k");
addMapping("removeSunnyPath", PathNavigateGround.class, "func_75487_m");
addMapping("isDirectPathBetweenPoints", PathNavigateGround.class, "func_75493_a");
addMapping("getPathToEntityLiving", PathNavigateGround.class, "func_75494_a");
addMapping("getEntityPosition", PathNavigateGround.class, "func_75502_i");
addMapping("getPathFinder", PathNavigateSwimmer.class, "func_179679_a");
addMapping("canEntityStandOnPos", PathNavigateSwimmer.class, "func_188555_b");
addMapping("canNavigate", PathNavigateSwimmer.class, "func_75485_k");
addMapping("isDirectPathBetweenPoints", PathNavigateSwimmer.class, "func_75493_a");
addMapping("getEntityPosition", PathNavigateSwimmer.class, "func_75502_i");
addMapping("pathFollow", PathNavigateSwimmer.class, "func_75508_h");
addMapping("getPriority", PathNodeType.class, "func_186289_a");
addMapping("distanceManhattan", PathPoint.class, "func_186281_c");
addMapping("createFromBuffer", PathPoint.class, "func_186282_b");
addMapping("cloneMove", PathPoint.class, "func_186283_a");
addMapping("distanceTo", PathPoint.class, "func_75829_a");
addMapping("makeHash", PathPoint.class, "func_75830_a");
addMapping("isAssigned", PathPoint.class, "func_75831_a");
addMapping("distanceToSquared", PathPoint.class, "func_75832_b");
addMapping("markBlockRangeForRenderUpdate", PathWorldListener.class, "func_147585_a");
addMapping("notifyLightSet", PathWorldListener.class, "func_174959_b");
addMapping("playEvent", PathWorldListener.class, "func_180439_a");
addMapping("broadcastSound", PathWorldListener.class, "func_180440_a");
addMapping("sendBlockBreakProgress", PathWorldListener.class, "func_180441_b");
addMapping("spawnParticle", PathWorldListener.class, "func_180442_a");
addMapping("playSoundToAllNearExcept", PathWorldListener.class, "func_184375_a");
addMapping("notifyBlockUpdate", PathWorldListener.class, "func_184376_a");
addMapping("playRecord", PathWorldListener.class, "func_184377_a");
addMapping("didBlockChange", PathWorldListener.class, "func_184378_a");
addMapping("spawnParticle", PathWorldListener.class, "func_190570_a");
addMapping("onEntityAdded", PathWorldListener.class, "func_72703_a");
addMapping("onEntityRemoved", PathWorldListener.class, "func_72709_b");
addMapping("getStart", SwimNodeProcessor.class, "func_186318_b");
addMapping("getPathNodeType", SwimNodeProcessor.class, "func_186319_a");
addMapping("findPathOptions", SwimNodeProcessor.class, "func_186320_a");
addMapping("getPathPointToCoords", SwimNodeProcessor.class, "func_186325_a");
addMapping("isFree", SwimNodeProcessor.class, "func_186327_c");
addMapping("getWaterNode", SwimNodeProcessor.class, "func_186328_b");
addMapping("getPathNodeType", SwimNodeProcessor.class, "func_186330_a");
addMapping("postProcess", WalkNodeProcessor.class, "func_176163_a");
addMapping("init", WalkNodeProcessor.class, "func_186315_a");
addMapping("getStart", WalkNodeProcessor.class, "func_186318_b");
addMapping("getPathNodeType", WalkNodeProcessor.class, "func_186319_a");
addMapping("findPathOptions", WalkNodeProcessor.class, "func_186320_a");
addMapping("getPathPointToCoords", WalkNodeProcessor.class, "func_186325_a");
addMapping("getPathNodeType", WalkNodeProcessor.class, "func_186329_a");
addMapping("getPathNodeType", WalkNodeProcessor.class, "func_186330_a");
addMapping("getPathNodeType", WalkNodeProcessor.class, "func_186331_a");
addMapping("getSafePoint", WalkNodeProcessor.class, "func_186332_a");
addMapping("getPathNodeTypeRaw", WalkNodeProcessor.class, "func_189553_b");
addMapping("getPathNodeType", WalkNodeProcessor.class, "func_193577_a");
addMapping("checkNeighborBlocks", WalkNodeProcessor.class, "func_193578_a");
addMapping("getAttributeModifierAmount", Potion.class, "func_111183_a");
addMapping("registerPotionAttributeModifier", Potion.class, "func_111184_a");
addMapping("applyAttributesModifiersToEntity", Potion.class, "func_111185_a");
addMapping("getAttributeModifierMap", Potion.class, "func_111186_k");
addMapping("removeAttributesModifiersFromEntity", Potion.class, "func_111187_a");
addMapping("getPotionFromResourceLocation", Potion.class, "func_180142_b");
addMapping("affectEntity", Potion.class, "func_180793_a");
addMapping("isBeneficial", Potion.class, "func_188408_i");
addMapping("getIdFromPotion", Potion.class, "func_188409_a");
addMapping("getPotionDurationString", Potion.class, "func_188410_a");
addMapping("registerPotions", Potion.class, "func_188411_k");
addMapping("getPotionById", Potion.class, "func_188412_a");
addMapping("setBeneficial", Potion.class, "func_188413_j");
addMapping("setPotionName", Potion.class, "func_76390_b");
addMapping("getStatusIconIndex", Potion.class, "func_76392_e");
addMapping("getName", Potion.class, "func_76393_a");
addMapping("performEffect", Potion.class, "func_76394_a");
addMapping("isReady", Potion.class, "func_76397_a");
addMapping("isBadEffect", Potion.class, "func_76398_f");
addMapping("setIconIndex", Potion.class, "func_76399_b");
addMapping("hasStatusIcon", Potion.class, "func_76400_d");
addMapping("getLiquidColor", Potion.class, "func_76401_j");
addMapping("isInstant", Potion.class, "func_76403_b");
addMapping("setEffectiveness", Potion.class, "func_76404_a");
addMapping("applyAttributesModifiersToEntity", PotionAbsorption.class, "func_111185_a");
addMapping("removeAttributesModifiersFromEntity", PotionAbsorption.class, "func_111187_a");
addMapping("getAttributeModifierAmount", PotionAttackDamage.class, "func_111183_a");
addMapping("getIsPotionDurationMax", PotionEffect.class, "func_100011_g");
addMapping("setPotionDurationMax", PotionEffect.class, "func_100012_b");
addMapping("doesShowParticles", PotionEffect.class, "func_188418_e");
addMapping("getPotion", PotionEffect.class, "func_188419_a");
addMapping("combine", PotionEffect.class, "func_76452_a");
addMapping("getEffectName", PotionEffect.class, "func_76453_d");
addMapping("deincrementDuration", PotionEffect.class, "func_76454_e");
addMapping("onUpdate", PotionEffect.class, "func_76455_a");
addMapping("performEffect", PotionEffect.class, "func_76457_b");
addMapping("getAmplifier", PotionEffect.class, "func_76458_c");
addMapping("getDuration", PotionEffect.class, "func_76459_b");
addMapping("writeCustomPotionEffectToNBT", PotionEffect.class, "func_82719_a");
addMapping("getIsAmbient", PotionEffect.class, "func_82720_e");
addMapping("readCustomPotionEffectFromNBT", PotionEffect.class, "func_82722_b");
addMapping("isReady", PotionHealth.class, "func_76397_a");
addMapping("isInstant", PotionHealth.class, "func_76403_b");
addMapping("removeAttributesModifiersFromEntity", PotionHealthBoost.class, "func_111187_a");
addMapping("isItemConversionReagent", PotionHelper.class, "func_185203_b");
addMapping("isReagent", PotionHelper.class, "func_185205_a");
addMapping("hasItemConversions", PotionHelper.class, "func_185206_b");
addMapping("init", PotionHelper.class, "func_185207_a");
addMapping("hasConversions", PotionHelper.class, "func_185208_a");
addMapping("hasTypeConversions", PotionHelper.class, "func_185209_c");
addMapping("isTypeConversionReagent", PotionHelper.class, "func_185211_c");
addMapping("doReaction", PotionHelper.class, "func_185212_d");
addMapping("addContainer", PotionHelper.class, "func_193354_a");
addMapping("addContainerRecipe", PotionHelper.class, "func_193355_a");
addMapping("addMix", PotionHelper.class, "func_193356_a");
addMapping("addMix", PotionHelper.class, "func_193357_a");
addMapping("getPotionTypeForName", PotionType.class, "func_185168_a");
addMapping("getEffects", PotionType.class, "func_185170_a");
addMapping("hasInstantEffect", PotionType.class, "func_185172_c");
addMapping("registerPotionType", PotionType.class, "func_185173_a");
addMapping("getNamePrefixed", PotionType.class, "func_185174_b");
addMapping("registerPotionTypes", PotionType.class, "func_185175_b");
addMapping("getPotionColorFromEffectList", PotionUtils.class, "func_185181_a");
addMapping("addPotionTooltip", PotionUtils.class, "func_185182_a");
addMapping("getPotionColor", PotionUtils.class, "func_185183_a");
addMapping("appendEffects", PotionUtils.class, "func_185184_a");
addMapping("getEffectsFromTag", PotionUtils.class, "func_185185_a");
addMapping("mergeEffects", PotionUtils.class, "func_185186_a");
addMapping("getPotionTypeFromNBT", PotionUtils.class, "func_185187_c");
addMapping("addPotionToItemStack", PotionUtils.class, "func_185188_a");
addMapping("getEffectsFromStack", PotionUtils.class, "func_185189_a");
addMapping("getFullEffectsFromItem", PotionUtils.class, "func_185190_b");
addMapping("getPotionFromItem", PotionUtils.class, "func_185191_c");
addMapping("getFullEffectsFromTag", PotionUtils.class, "func_185192_b");
addMapping("addCustomPotionEffectToList", PotionUtils.class, "func_185193_a");
addMapping("getColor", PotionUtils.class, "func_190932_c");
addMapping("addServerStatsToSnooper", ISnooperInfo.class, "func_70000_a");
addMapping("addServerTypeToSnooper", ISnooperInfo.class, "func_70001_b");
addMapping("isSnooperEnabled", ISnooperInfo.class, "func_70002_Q");
addMapping("clearProfiling", Profiler.class, "func_76317_a");
addMapping("endStartSection", Profiler.class, "func_76318_c");
addMapping("endSection", Profiler.class, "func_76319_b");
addMapping("startSection", Profiler.class, "func_76320_a");
addMapping("getProfilingData", Profiler.class, "func_76321_b");
addMapping("getNameOfLastSection", Profiler.class, "func_76322_c");
addMapping("getMinecraftStartTimeMillis", Snooper.class, "func_130105_g");
addMapping("addOSData", Snooper.class, "func_152766_h");
addMapping("addStatToSnooper", Snooper.class, "func_152767_b");
addMapping("addClientStat", Snooper.class, "func_152768_a");
addMapping("startSnooper", Snooper.class, "func_76463_a");
addMapping("getCurrentStats", Snooper.class, "func_76465_c");
addMapping("addJvmArgsToSnooper", Snooper.class, "func_76467_g");
addMapping("isSnooperRunning", Snooper.class, "func_76468_d");
addMapping("stopSnooper", Snooper.class, "func_76470_e");
addMapping("addMemoryStatsToSnooper", Snooper.class, "func_76471_b");
addMapping("getUniqueID", Snooper.class, "func_80006_f");
addMapping("getRenderType", IScoreCriteria.class, "func_178790_c");
addMapping("getName", IScoreCriteria.class, "func_96636_a");
addMapping("isReadOnly", IScoreCriteria.class, "func_96637_b");
addMapping("setLocked", Score.class, "func_178815_a");
addMapping("isLocked", Score.class, "func_178816_g");
addMapping("getObjective", Score.class, "func_96645_d");
addMapping("decreaseScore", Score.class, "func_96646_b");
addMapping("setScorePoints", Score.class, "func_96647_c");
addMapping("incrementScore", Score.class, "func_96648_a");
addMapping("increaseScore", Score.class, "func_96649_a");
addMapping("getScoreScoreboard", Score.class, "func_96650_f");
addMapping("getScorePoints", Score.class, "func_96652_c");
addMapping("getPlayerName", Score.class, "func_96653_e");
addMapping("getRenderType", ScoreCriteria.class, "func_178790_c");
addMapping("getName", ScoreCriteria.class, "func_96636_a");
addMapping("isReadOnly", ScoreCriteria.class, "func_96637_b");
addMapping("getRenderType", ScoreCriteriaColored.class, "func_178790_c");
addMapping("getName", ScoreCriteriaColored.class, "func_96636_a");
addMapping("isReadOnly", ScoreCriteriaColored.class, "func_96637_b");
addMapping("getRenderType", ScoreCriteriaHealth.class, "func_178790_c");
addMapping("isReadOnly", ScoreCriteriaHealth.class, "func_96637_b");
addMapping("isReadOnly", ScoreCriteriaReadOnly.class, "func_96637_b");
addMapping("getRenderType", ScoreObjective.class, "func_178766_e");
addMapping("setRenderType", ScoreObjective.class, "func_178767_a");
addMapping("getDisplayName", ScoreObjective.class, "func_96678_d");
addMapping("getName", ScoreObjective.class, "func_96679_b");
addMapping("getCriteria", ScoreObjective.class, "func_96680_c");
addMapping("setDisplayName", ScoreObjective.class, "func_96681_a");
addMapping("getScoreboard", ScoreObjective.class, "func_96682_a");
addMapping("formatString", ScorePlayerTeam.class, "func_142053_d");
addMapping("getNameTagVisibility", ScorePlayerTeam.class, "func_178770_i");
addMapping("getDeathMessageVisibility", ScorePlayerTeam.class, "func_178771_j");
addMapping("setNameTagVisibility", ScorePlayerTeam.class, "func_178772_a");
addMapping("setDeathMessageVisibility", ScorePlayerTeam.class, "func_178773_b");
addMapping("setColor", ScorePlayerTeam.class, "func_178774_a");
addMapping("getColor", ScorePlayerTeam.class, "func_178775_l");
addMapping("getCollisionRule", ScorePlayerTeam.class, "func_186681_k");
addMapping("setCollisionRule", ScorePlayerTeam.class, "func_186682_a");
addMapping("setAllowFriendlyFire", ScorePlayerTeam.class, "func_96660_a");
addMapping("getName", ScorePlayerTeam.class, "func_96661_b");
addMapping("setSuffix", ScorePlayerTeam.class, "func_96662_c");
addMapping("getSuffix", ScorePlayerTeam.class, "func_96663_f");
addMapping("setDisplayName", ScorePlayerTeam.class, "func_96664_a");
addMapping("getAllowFriendlyFire", ScorePlayerTeam.class, "func_96665_g");
addMapping("setPrefix", ScorePlayerTeam.class, "func_96666_b");
addMapping("formatPlayerName", ScorePlayerTeam.class, "func_96667_a");
addMapping("getPrefix", ScorePlayerTeam.class, "func_96668_e");
addMapping("getDisplayName", ScorePlayerTeam.class, "func_96669_c");
addMapping("getMembershipCollection", ScorePlayerTeam.class, "func_96670_d");
addMapping("getSeeFriendlyInvisiblesEnabled", ScorePlayerTeam.class, "func_98297_h");
addMapping("setFriendlyFlags", ScorePlayerTeam.class, "func_98298_a");
addMapping("getFriendlyFlags", ScorePlayerTeam.class, "func_98299_i");
addMapping("setSeeFriendlyInvisiblesEnabled", ScorePlayerTeam.class, "func_98300_b");
addMapping("addPlayerToTeam", Scoreboard.class, "func_151392_a");
addMapping("entityHasObjective", Scoreboard.class, "func_178819_b");
addMapping("broadcastScoreUpdate", Scoreboard.class, "func_178820_a");
addMapping("getDisplaySlotStrings", Scoreboard.class, "func_178821_h");
addMapping("removeObjectiveFromEntity", Scoreboard.class, "func_178822_d");
addMapping("removeEntity", Scoreboard.class, "func_181140_a");
addMapping("getTeam", Scoreboard.class, "func_96508_e");
addMapping("getPlayersTeam", Scoreboard.class, "func_96509_i");
addMapping("getObjectivesForEntity", Scoreboard.class, "func_96510_d");
addMapping("removeTeam", Scoreboard.class, "func_96511_d");
addMapping("removePlayerFromTeam", Scoreboard.class, "func_96512_b");
addMapping("broadcastTeamRemove", Scoreboard.class, "func_96513_c");
addMapping("getScoreObjectives", Scoreboard.class, "func_96514_c");
addMapping("broadcastScoreUpdate", Scoreboard.class, "func_96516_a");
addMapping("getObjectiveDisplaySlot", Scoreboard.class, "func_96517_b");
addMapping("getObjective", Scoreboard.class, "func_96518_b");
addMapping("removeObjective", Scoreboard.class, "func_96519_k");
addMapping("getObjectivesFromCriteria", Scoreboard.class, "func_96520_a");
addMapping("onScoreObjectiveAdded", Scoreboard.class, "func_96522_a");
addMapping("broadcastTeamCreated", Scoreboard.class, "func_96523_a");
addMapping("removePlayerFromTeams", Scoreboard.class, "func_96524_g");
addMapping("getTeams", Scoreboard.class, "func_96525_g");
addMapping("getObjectiveNames", Scoreboard.class, "func_96526_d");
addMapping("createTeam", Scoreboard.class, "func_96527_f");
addMapping("getScores", Scoreboard.class, "func_96528_e");
addMapping("getOrCreateScore", Scoreboard.class, "func_96529_a");
addMapping("setObjectiveInDisplaySlot", Scoreboard.class, "func_96530_a");
addMapping("getTeamNames", Scoreboard.class, "func_96531_f");
addMapping("onObjectiveDisplayNameChanged", Scoreboard.class, "func_96532_b");
addMapping("onScoreObjectiveRemoved", Scoreboard.class, "func_96533_c");
addMapping("getSortedScores", Scoreboard.class, "func_96534_i");
addMapping("addScoreObjective", Scoreboard.class, "func_96535_a");
addMapping("onScoreUpdated", Scoreboard.class, "func_96536_a");
addMapping("getObjectiveDisplaySlotNumber", Scoreboard.class, "func_96537_j");
addMapping("broadcastTeamInfoUpdate", Scoreboard.class, "func_96538_b");
addMapping("getObjectiveInDisplaySlot", Scoreboard.class, "func_96539_a");
addMapping("writeToNBT", ScoreboardSaveData.class, "func_189551_b");
addMapping("readFromNBT", ScoreboardSaveData.class, "func_76184_a");
addMapping("teamsToNbt", ScoreboardSaveData.class, "func_96496_a");
addMapping("fillInDisplaySlots", ScoreboardSaveData.class, "func_96497_d");
addMapping("readTeams", ScoreboardSaveData.class, "func_96498_a");
addMapping("setScoreboard", ScoreboardSaveData.class, "func_96499_a");
addMapping("readScores", ScoreboardSaveData.class, "func_96500_c");
addMapping("readObjectives", ScoreboardSaveData.class, "func_96501_b");
addMapping("loadTeamPlayers", ScoreboardSaveData.class, "func_96502_a");
addMapping("scoresToNbt", ScoreboardSaveData.class, "func_96503_e");
addMapping("readDisplayConfig", ScoreboardSaveData.class, "func_96504_c");
addMapping("objectivesToNbt", ScoreboardSaveData.class, "func_96505_b");
addMapping("addPlayerToTeam", ServerScoreboard.class, "func_151392_a");
addMapping("broadcastScoreUpdate", ServerScoreboard.class, "func_178820_a");
addMapping("addDirtyRunnable", ServerScoreboard.class, "func_186684_a");
addMapping("removePlayerFromTeam", ServerScoreboard.class, "func_96512_b");
addMapping("broadcastTeamRemove", ServerScoreboard.class, "func_96513_c");
addMapping("broadcastScoreUpdate", ServerScoreboard.class, "func_96516_a");
addMapping("onScoreObjectiveAdded", ServerScoreboard.class, "func_96522_a");
addMapping("broadcastTeamCreated", ServerScoreboard.class, "func_96523_a");
addMapping("setObjectiveInDisplaySlot", ServerScoreboard.class, "func_96530_a");
addMapping("onObjectiveDisplayNameChanged", ServerScoreboard.class, "func_96532_b");
addMapping("onScoreObjectiveRemoved", ServerScoreboard.class, "func_96533_c");
addMapping("onScoreUpdated", ServerScoreboard.class, "func_96536_a");
addMapping("broadcastTeamInfoUpdate", ServerScoreboard.class, "func_96538_b");
addMapping("sendDisplaySlotRemovalPackets", ServerScoreboard.class, "func_96546_g");
addMapping("getDestroyPackets", ServerScoreboard.class, "func_96548_f");
addMapping("addObjective", ServerScoreboard.class, "func_96549_e");
addMapping("getCreatePackets", ServerScoreboard.class, "func_96550_d");
addMapping("markSaveDataDirty", ServerScoreboard.class, "func_96551_b");
addMapping("getObjectiveDisplaySlotCount", ServerScoreboard.class, "func_96552_h");
addMapping("formatString", Team.class, "func_142053_d");
addMapping("isSameTeam", Team.class, "func_142054_a");
addMapping("getNameTagVisibility", Team.class, "func_178770_i");
addMapping("getDeathMessageVisibility", Team.class, "func_178771_j");
addMapping("getColor", Team.class, "func_178775_l");
addMapping("getCollisionRule", Team.class, "func_186681_k");
addMapping("getName", Team.class, "func_96661_b");
addMapping("getAllowFriendlyFire", Team.class, "func_96665_g");
addMapping("getMembershipCollection", Team.class, "func_96670_d");
addMapping("getSeeFriendlyInvisiblesEnabled", Team.class, "func_98297_h");
addMapping("logString", DebugLoggingPrintStream.class, "func_179882_a");
addMapping("setForceGamemode", MinecraftServer.class, "func_104055_i");
addMapping("getForceGamemode", MinecraftServer.class, "func_104056_am");
addMapping("getServerProxy", MinecraftServer.class, "func_110454_ao");
addMapping("getOpPermissionLevel", MinecraftServer.class, "func_110455_j");
addMapping("getEntityWorld", MinecraftServer.class, "func_130014_f_");
addMapping("getCurrentTimeMillis", MinecraftServer.class, "func_130071_aq");
addMapping("setPlayerIdleTimeout", MinecraftServer.class, "func_143006_e");
addMapping("getMaxPlayerIdleMinutes", MinecraftServer.class, "func_143007_ar");
addMapping("sendMessage", MinecraftServer.class, "func_145747_a");
addMapping("getMinecraftSessionService", MinecraftServer.class, "func_147130_as");
addMapping("refreshStatusNextTick", MinecraftServer.class, "func_147132_au");
addMapping("getResourcePackUrl", MinecraftServer.class, "func_147133_T");
addMapping("getServerStatusResponse", MinecraftServer.class, "func_147134_at");
addMapping("getDifficulty", MinecraftServer.class, "func_147135_j");
addMapping("getNetworkSystem", MinecraftServer.class, "func_147137_ag");
addMapping("setDifficultyForAllWorlds", MinecraftServer.class, "func_147139_a");
addMapping("addScheduledTask", MinecraftServer.class, "func_152344_a");
addMapping("isCallingFromMinecraftThread", MinecraftServer.class, "func_152345_ab");
addMapping("getOnlinePlayerProfiles", MinecraftServer.class, "func_152357_F");
addMapping("getPlayerProfileCache", MinecraftServer.class, "func_152358_ax");
addMapping("getGameProfileRepository", MinecraftServer.class, "func_152359_aw");
addMapping("sendCommandFeedback", MinecraftServer.class, "func_174792_t_");
addMapping("getEntityFromUuid", MinecraftServer.class, "func_175576_a");
addMapping("getNetworkCompressionThreshold", MinecraftServer.class, "func_175577_aI");
addMapping("isAnvilFileSet", MinecraftServer.class, "func_175578_N");
addMapping("isBlockProtected", MinecraftServer.class, "func_175579_a");
addMapping("getMaxWorldSize", MinecraftServer.class, "func_175580_aG");
addMapping("getResourcePackHash", MinecraftServer.class, "func_175581_ab");
addMapping("createCommandManager", MinecraftServer.class, "func_175582_h");
addMapping("getServerThread", MinecraftServer.class, "func_175583_aK");
addMapping("setResourcePackFromWorld", MinecraftServer.class, "func_175584_a");
addMapping("callFromMainThread", MinecraftServer.class, "func_175586_a");
addMapping("getCurrentTime", MinecraftServer.class, "func_175587_aJ");
addMapping("setResourcePack", MinecraftServer.class, "func_180507_a_");
addMapping("shouldBroadcastRconToOps", MinecraftServer.class, "func_181034_q");
addMapping("shouldUseNativeTransport", MinecraftServer.class, "func_181035_ah");
addMapping("shouldBroadcastConsoleToOps", MinecraftServer.class, "func_183002_r");
addMapping("getServer", MinecraftServer.class, "func_184102_h");
addMapping("getPlayerList", MinecraftServer.class, "func_184103_al");
addMapping("getTabCompletions", MinecraftServer.class, "func_184104_a");
addMapping("setPlayerList", MinecraftServer.class, "func_184105_a");
addMapping("isWorldIconSet", MinecraftServer.class, "func_184106_y");
addMapping("applyServerIconToResponse", MinecraftServer.class, "func_184107_a");
addMapping("getSpawnRadius", MinecraftServer.class, "func_184108_a");
addMapping("getWorldIconFile", MinecraftServer.class, "func_184109_z");
addMapping("setPreventProxyConnections", MinecraftServer.class, "func_190517_e");
addMapping("getPreventProxyConnections", MinecraftServer.class, "func_190518_ac");
addMapping("getAdvancementManager", MinecraftServer.class, "func_191949_aK");
addMapping("getFunctionManager", MinecraftServer.class, "func_193030_aL");
addMapping("reload", MinecraftServer.class, "func_193031_aM");
addMapping("addServerStatsToSnooper", MinecraftServer.class, "func_70000_a");
addMapping("addServerTypeToSnooper", MinecraftServer.class, "func_70001_b");
addMapping("isSnooperEnabled", MinecraftServer.class, "func_70002_Q");
addMapping("canUseCommand", MinecraftServer.class, "func_70003_b");
addMapping("getName", MinecraftServer.class, "func_70005_c_");
addMapping("getCommandManager", MinecraftServer.class, "func_71187_D");
addMapping("setAllowPvp", MinecraftServer.class, "func_71188_g");
addMapping("setHostname", MinecraftServer.class, "func_71189_e");
addMapping("updateTimeLightAndEntities", MinecraftServer.class, "func_71190_q");
addMapping("setBuildLimit", MinecraftServer.class, "func_71191_d");
addMapping("setUserMessage", MinecraftServer.class, "func_71192_d");
addMapping("allowSpawnMonsters", MinecraftServer.class, "func_71193_K");
addMapping("canCreateBonusChest", MinecraftServer.class, "func_71194_c");
addMapping("getUserMessage", MinecraftServer.class, "func_71195_b_");
addMapping("init", MinecraftServer.class, "func_71197_b");
addMapping("logDebug", MinecraftServer.class, "func_71198_k");
addMapping("isHardcore", MinecraftServer.class, "func_71199_h");
addMapping("serverIsInRunLoop", MinecraftServer.class, "func_71200_ad");
addMapping("logSevere", MinecraftServer.class, "func_71201_j");
addMapping("setDemo", MinecraftServer.class, "func_71204_b");
addMapping("setMOTD", MinecraftServer.class, "func_71205_p");
addMapping("shareToLAN", MinecraftServer.class, "func_71206_a");
addMapping("getBuildLimit", MinecraftServer.class, "func_71207_Z");
addMapping("setServerPort", MinecraftServer.class, "func_71208_b");
addMapping("getFile", MinecraftServer.class, "func_71209_f");
addMapping("getServerHostname", MinecraftServer.class, "func_71211_k");
addMapping("getOnlinePlayerNames", MinecraftServer.class, "func_71213_z");
addMapping("getServerOwner", MinecraftServer.class, "func_71214_G");
addMapping("getServerPort", MinecraftServer.class, "func_71215_F");
addMapping("outputPercentRemaining", MinecraftServer.class, "func_71216_a_");
addMapping("tick", MinecraftServer.class, "func_71217_p");
addMapping("getWorld", MinecraftServer.class, "func_71218_a");
addMapping("isPVPEnabled", MinecraftServer.class, "func_71219_W");
addMapping("getCanSpawnNPCs", MinecraftServer.class, "func_71220_V");
addMapping("getWorldName", MinecraftServer.class, "func_71221_J");
addMapping("initialWorldChunkLoad", MinecraftServer.class, "func_71222_d");
addMapping("enableProfiling", MinecraftServer.class, "func_71223_ag");
addMapping("setServerOwner", MinecraftServer.class, "func_71224_l");
addMapping("canStructuresSpawn", MinecraftServer.class, "func_71225_e");
addMapping("finalTick", MinecraftServer.class, "func_71228_a");
addMapping("setOnlineMode", MinecraftServer.class, "func_71229_d");
addMapping("addServerInfoToCrashReport", MinecraftServer.class, "func_71230_b");
addMapping("isFlightAllowed", MinecraftServer.class, "func_71231_X");
addMapping("getCurrentPlayerCount", MinecraftServer.class, "func_71233_x");
addMapping("setGameType", MinecraftServer.class, "func_71235_a");
addMapping("logWarning", MinecraftServer.class, "func_71236_h");
addMapping("convertMapIfNeeded", MinecraftServer.class, "func_71237_c");
addMapping("getDataDirectory", MinecraftServer.class, "func_71238_n");
addMapping("isDebuggingEnabled", MinecraftServer.class, "func_71239_B");
addMapping("systemExitNow", MinecraftServer.class, "func_71240_o");
addMapping("isServerStopped", MinecraftServer.class, "func_71241_aa");
addMapping("isDemo", MinecraftServer.class, "func_71242_L");
addMapping("clearCurrentTask", MinecraftServer.class, "func_71243_i");
addMapping("logInfo", MinecraftServer.class, "func_71244_g");
addMapping("setAllowFlight", MinecraftServer.class, "func_71245_h");
addMapping("setWorldName", MinecraftServer.class, "func_71246_n");
addMapping("loadAllWorlds", MinecraftServer.class, "func_71247_a");
addMapping("getMinecraftVersion", MinecraftServer.class, "func_71249_w");
addMapping("getKeyPair", MinecraftServer.class, "func_71250_E");
addMapping("setCanSpawnAnimals", MinecraftServer.class, "func_71251_e");
addMapping("setKeyPair", MinecraftServer.class, "func_71253_a");
addMapping("getActiveAnvilConverter", MinecraftServer.class, "func_71254_M");
addMapping("getAllowNether", MinecraftServer.class, "func_71255_r");
addMapping("startServerThread", MinecraftServer.class, "func_71256_s");
addMapping("setCanSpawnNPCs", MinecraftServer.class, "func_71257_f");
addMapping("getTickCounter", MinecraftServer.class, "func_71259_af");
addMapping("stopServer", MinecraftServer.class, "func_71260_j");
addMapping("setFolderName", MinecraftServer.class, "func_71261_m");
addMapping("isDedicatedServer", MinecraftServer.class, "func_71262_S");
addMapping("initiateShutdown", MinecraftServer.class, "func_71263_m");
addMapping("isSinglePlayer", MinecraftServer.class, "func_71264_H");
addMapping("getGameType", MinecraftServer.class, "func_71265_f");
addMapping("isServerInOnlineMode", MinecraftServer.class, "func_71266_T");
addMapping("saveAllWorlds", MinecraftServer.class, "func_71267_a");
addMapping("getCanSpawnAnimals", MinecraftServer.class, "func_71268_U");
addMapping("getFolderName", MinecraftServer.class, "func_71270_I");
addMapping("getMOTD", MinecraftServer.class, "func_71273_Y");
addMapping("getMaxPlayers", MinecraftServer.class, "func_71275_y");
addMapping("isServerRunning", MinecraftServer.class, "func_71278_l");
addMapping("getGuiEnabled", MinecraftServer.class, "func_71279_ae");
addMapping("getPlayerUsageSnooper", MinecraftServer.class, "func_80003_ah");
addMapping("registerTickable", MinecraftServer.class, "func_82010_a");
addMapping("isCommandBlockEnabled", MinecraftServer.class, "func_82356_Z");
addMapping("getSpawnProtectionSize", MinecraftServer.class, "func_82357_ak");
addMapping("hasAcceptedEULA", ServerEula.class, "func_154346_a");
addMapping("loadEULAFile", ServerEula.class, "func_154347_a");
addMapping("createEULAFile", ServerEula.class, "func_154348_b");
addMapping("removePlayerFromWhitelist", DedicatedPlayerList.class, "func_152597_c");
addMapping("addWhitelistedPlayer", DedicatedPlayerList.class, "func_152601_d");
addMapping("addOp", DedicatedPlayerList.class, "func_152605_a");
addMapping("canJoin", DedicatedPlayerList.class, "func_152607_e");
addMapping("removeOp", DedicatedPlayerList.class, "func_152610_b");
addMapping("bypassesPlayerLimit", DedicatedPlayerList.class, "func_183023_f");
addMapping("reloadWhitelist", DedicatedPlayerList.class, "func_187244_a");
addMapping("loadPlayerBanList", DedicatedPlayerList.class, "func_187246_z");
addMapping("saveIPBanList", DedicatedPlayerList.class, "func_187247_w");
addMapping("savePlayerBanList", DedicatedPlayerList.class, "func_187248_x");
addMapping("loadIPBanList", DedicatedPlayerList.class, "func_187249_y");
addMapping("getServerInstance", DedicatedPlayerList.class, "func_72365_p");
addMapping("setWhiteListEnabled", DedicatedPlayerList.class, "func_72371_a");
addMapping("loadOpsList", DedicatedPlayerList.class, "func_72417_t");
addMapping("readWhiteList", DedicatedPlayerList.class, "func_72418_v");
addMapping("saveOpsList", DedicatedPlayerList.class, "func_72419_u");
addMapping("saveWhiteList", DedicatedPlayerList.class, "func_72421_w");
addMapping("getOpPermissionLevel", DedicatedServer.class, "func_110455_j");
addMapping("setGuiEnabled", DedicatedServer.class, "func_120011_ar");
addMapping("setPlayerIdleTimeout", DedicatedServer.class, "func_143006_e");
addMapping("getDifficulty", DedicatedServer.class, "func_147135_j");
addMapping("convertFiles", DedicatedServer.class, "func_152368_aE");
addMapping("sleepFiveSeconds", DedicatedServer.class, "func_152369_aG");
addMapping("getNetworkCompressionThreshold", DedicatedServer.class, "func_175577_aI");
addMapping("isBlockProtected", DedicatedServer.class, "func_175579_a");
addMapping("getMaxWorldSize", DedicatedServer.class, "func_175580_aG");
addMapping("getMaxTickTime", DedicatedServer.class, "func_175593_aQ");
addMapping("shouldBroadcastRconToOps", DedicatedServer.class, "func_181034_q");
addMapping("shouldUseNativeTransport", DedicatedServer.class, "func_181035_ah");
addMapping("shouldBroadcastConsoleToOps", DedicatedServer.class, "func_183002_r");
addMapping("getPlayerList", DedicatedServer.class, "func_184103_al");
addMapping("loadResourcePackSHA", DedicatedServer.class, "func_184113_aK");
addMapping("addServerStatsToSnooper", DedicatedServer.class, "func_70000_a");
addMapping("isSnooperEnabled", DedicatedServer.class, "func_70002_Q");
addMapping("updateTimeLightAndEntities", DedicatedServer.class, "func_71190_q");
addMapping("allowSpawnMonsters", DedicatedServer.class, "func_71193_K");
addMapping("init", DedicatedServer.class, "func_71197_b");
addMapping("isHardcore", DedicatedServer.class, "func_71199_h");
addMapping("shareToLAN", DedicatedServer.class, "func_71206_a");
addMapping("canStructuresSpawn", DedicatedServer.class, "func_71225_e");
addMapping("addServerInfoToCrashReport", DedicatedServer.class, "func_71230_b");
addMapping("getPort", DedicatedServer.class, "func_71234_u");
addMapping("setGameType", DedicatedServer.class, "func_71235_a");
addMapping("systemExitNow", DedicatedServer.class, "func_71240_o");
addMapping("handleRConCommand", DedicatedServer.class, "func_71252_i");
addMapping("getAllowNether", DedicatedServer.class, "func_71255_r");
addMapping("getPlugins", DedicatedServer.class, "func_71258_A");
addMapping("isDedicatedServer", DedicatedServer.class, "func_71262_S");
addMapping("getGameType", DedicatedServer.class, "func_71265_f");
addMapping("getMotd", DedicatedServer.class, "func_71274_v");
addMapping("getHostname", DedicatedServer.class, "func_71277_t");
addMapping("getGuiEnabled", DedicatedServer.class, "func_71279_ae");
addMapping("saveProperties", DedicatedServer.class, "func_71326_a");
addMapping("getIntProperty", DedicatedServer.class, "func_71327_a");
addMapping("setProperty", DedicatedServer.class, "func_71328_a");
addMapping("getSettingsFilename", DedicatedServer.class, "func_71329_c");
addMapping("getStringProperty", DedicatedServer.class, "func_71330_a");
addMapping("addPendingCommand", DedicatedServer.class, "func_71331_a");
addMapping("getBooleanProperty", DedicatedServer.class, "func_71332_a");
addMapping("executePendingCommands", DedicatedServer.class, "func_71333_ah");
addMapping("isCommandBlockEnabled", DedicatedServer.class, "func_82356_Z");
addMapping("getSpawnProtectionSize", DedicatedServer.class, "func_82357_ak");
addMapping("getLongProperty", PropertyManager.class, "func_179885_a");
addMapping("removeProperty", PropertyManager.class, "func_187238_b");
addMapping("hasProperty", PropertyManager.class, "func_187239_a");
addMapping("getPropertiesFile", PropertyManager.class, "func_73665_c");
addMapping("generateNewProperties", PropertyManager.class, "func_73666_a");
addMapping("setProperty", PropertyManager.class, "func_73667_a");
addMapping("saveProperties", PropertyManager.class, "func_73668_b");
addMapping("getIntProperty", PropertyManager.class, "func_73669_a");
addMapping("getBooleanProperty", PropertyManager.class, "func_73670_a");
addMapping("getStringProperty", PropertyManager.class, "func_73671_a");
addMapping("scheduleHalt", ServerHangWatchdog.class, "func_180248_a");
addMapping("createServerGui", MinecraftServerGui.class, "func_120016_a");
addMapping("getLogComponent", MinecraftServerGui.class, "func_120018_d");
addMapping("getStatsComponent", MinecraftServerGui.class, "func_120019_b");
addMapping("getPlayerListComponent", MinecraftServerGui.class, "func_120020_c");
addMapping("appendLine", MinecraftServerGui.class, "func_164247_a");
addMapping("update", PlayerListComponent.class, "func_73660_a");
addMapping("tick", StatsComponent.class, "func_120034_a");
addMapping("mean", StatsComponent.class, "func_120035_a");
addMapping("allowUserToConnect", IntegratedPlayerList.class, "func_148542_a");
addMapping("getServerInstance", IntegratedPlayerList.class, "func_72365_p");
addMapping("getHostPlayerData", IntegratedPlayerList.class, "func_72378_q");
addMapping("writePlayerData", IntegratedPlayerList.class, "func_72391_b");
addMapping("getOpPermissionLevel", IntegratedServer.class, "func_110455_j");
addMapping("getDifficulty", IntegratedServer.class, "func_147135_j");
addMapping("setDifficultyForAllWorlds", IntegratedServer.class, "func_147139_a");
addMapping("createCommandManager", IntegratedServer.class, "func_175582_h");
addMapping("shouldBroadcastRconToOps", IntegratedServer.class, "func_181034_q");
addMapping("shouldUseNativeTransport", IntegratedServer.class, "func_181035_ah");
addMapping("shouldBroadcastConsoleToOps", IntegratedServer.class, "func_183002_r");
addMapping("addServerStatsToSnooper", IntegratedServer.class, "func_70000_a");
addMapping("isSnooperEnabled", IntegratedServer.class, "func_70002_Q");
addMapping("init", IntegratedServer.class, "func_71197_b");
addMapping("isHardcore", IntegratedServer.class, "func_71199_h");
addMapping("shareToLAN", IntegratedServer.class, "func_71206_a");
addMapping("tick", IntegratedServer.class, "func_71217_p");
addMapping("canStructuresSpawn", IntegratedServer.class, "func_71225_e");
addMapping("finalTick", IntegratedServer.class, "func_71228_a");
addMapping("addServerInfoToCrashReport", IntegratedServer.class, "func_71230_b");
addMapping("setGameType", IntegratedServer.class, "func_71235_a");
addMapping("getDataDirectory", IntegratedServer.class, "func_71238_n");
addMapping("loadAllWorlds", IntegratedServer.class, "func_71247_a");
addMapping("stopServer", IntegratedServer.class, "func_71260_j");
addMapping("isDedicatedServer", IntegratedServer.class, "func_71262_S");
addMapping("initiateShutdown", IntegratedServer.class, "func_71263_m");
addMapping("getGameType", IntegratedServer.class, "func_71265_f");
addMapping("saveAllWorlds", IntegratedServer.class, "func_71267_a");
addMapping("getPublic", IntegratedServer.class, "func_71344_c");
addMapping("isCommandBlockEnabled", IntegratedServer.class, "func_82356_Z");
addMapping("tryHarvestBlock", DemoPlayerInteractionManager.class, "func_180237_b");
addMapping("onBlockClicked", DemoPlayerInteractionManager.class, "func_180784_a");
addMapping("blockRemoving", DemoPlayerInteractionManager.class, "func_180785_a");
addMapping("processRightClick", DemoPlayerInteractionManager.class, "func_187250_a");
addMapping("processRightClickBlock", DemoPlayerInteractionManager.class, "func_187251_a");
addMapping("updateBlockRemoving", DemoPlayerInteractionManager.class, "func_73075_a");
addMapping("sendDemoReminder", DemoPlayerInteractionManager.class, "func_73101_e");
addMapping("contains", PlayerChunkMap.class, "func_152621_a");
addMapping("setPlayerViewRadius", PlayerChunkMap.class, "func_152622_a");
addMapping("markBlockForUpdate", PlayerChunkMap.class, "func_180244_a");
addMapping("getChunkIterator", PlayerChunkMap.class, "func_187300_b");
addMapping("getEntry", PlayerChunkMap.class, "func_187301_b");
addMapping("getOrCreateEntry", PlayerChunkMap.class, "func_187302_c");
addMapping("entryChanged", PlayerChunkMap.class, "func_187304_a");
addMapping("removeEntry", PlayerChunkMap.class, "func_187305_b");
addMapping("markSortPending", PlayerChunkMap.class, "func_187306_e");
addMapping("getIndex", PlayerChunkMap.class, "func_187307_d");
addMapping("addPlayer", PlayerChunkMap.class, "func_72683_a");
addMapping("overlaps", PlayerChunkMap.class, "func_72684_a");
addMapping("updateMovingPlayer", PlayerChunkMap.class, "func_72685_d");
addMapping("getFurthestViewableBlock", PlayerChunkMap.class, "func_72686_a");
addMapping("getWorldServer", PlayerChunkMap.class, "func_72688_a");
addMapping("tick", PlayerChunkMap.class, "func_72693_b");
addMapping("isPlayerWatchingChunk", PlayerChunkMap.class, "func_72694_a");
addMapping("removePlayer", PlayerChunkMap.class, "func_72695_c");
addMapping("getPos", PlayerChunkMapEntry.class, "func_187264_a");
addMapping("blockChanged", PlayerChunkMapEntry.class, "func_187265_a");
addMapping("getChunk", PlayerChunkMapEntry.class, "func_187266_f");
addMapping("sendPacket", PlayerChunkMapEntry.class, "func_187267_a");
addMapping("providePlayerChunk", PlayerChunkMapEntry.class, "func_187268_a");
addMapping("hasPlayerMatching", PlayerChunkMapEntry.class, "func_187269_a");
addMapping("getClosestPlayerDistance", PlayerChunkMapEntry.class, "func_187270_g");
addMapping("hasPlayerMatchingInRange", PlayerChunkMapEntry.class, "func_187271_a");
addMapping("sendToPlayers", PlayerChunkMapEntry.class, "func_187272_b");
addMapping("sendBlockEntity", PlayerChunkMapEntry.class, "func_187273_a");
addMapping("isSentToPlayers", PlayerChunkMapEntry.class, "func_187274_e");
addMapping("containsPlayer", PlayerChunkMapEntry.class, "func_187275_d");
addMapping("addPlayer", PlayerChunkMapEntry.class, "func_187276_a");
addMapping("removePlayer", PlayerChunkMapEntry.class, "func_187277_b");
addMapping("sendToPlayer", PlayerChunkMapEntry.class, "func_187278_c");
addMapping("updateChunkInhabitedTime", PlayerChunkMapEntry.class, "func_187279_c");
addMapping("update", PlayerChunkMapEntry.class, "func_187280_d");
addMapping("removeBlock", PlayerInteractionManager.class, "func_180235_c");
addMapping("tryHarvestBlock", PlayerInteractionManager.class, "func_180237_b");
addMapping("cancelDestroyingBlock", PlayerInteractionManager.class, "func_180238_e");
addMapping("survivalOrAdventure", PlayerInteractionManager.class, "func_180239_c");
addMapping("onBlockClicked", PlayerInteractionManager.class, "func_180784_a");
addMapping("blockRemoving", PlayerInteractionManager.class, "func_180785_a");
addMapping("processRightClick", PlayerInteractionManager.class, "func_187250_a");
addMapping("processRightClickBlock", PlayerInteractionManager.class, "func_187251_a");
addMapping("updateBlockRemoving", PlayerInteractionManager.class, "func_73075_a");
addMapping("setGameType", PlayerInteractionManager.class, "func_73076_a");
addMapping("initializeGameType", PlayerInteractionManager.class, "func_73077_b");
addMapping("setWorld", PlayerInteractionManager.class, "func_73080_a");
addMapping("getGameType", PlayerInteractionManager.class, "func_73081_b");
addMapping("isCreative", PlayerInteractionManager.class, "func_73083_d");
addMapping("sendPacketToAllPlayersInDimension", PlayerList.class, "func_148537_a");
addMapping("sendMessage", PlayerList.class, "func_148539_a");
addMapping("sendPacketToAllPlayers", PlayerList.class, "func_148540_a");
addMapping("allowUserToConnect", PlayerList.class, "func_148542_a");
addMapping("sendToAllNearExcept", PlayerList.class, "func_148543_a");
addMapping("sendMessage", PlayerList.class, "func_148544_a");
addMapping("createPlayerForUser", PlayerList.class, "func_148545_a");
addMapping("canSendCommands", PlayerList.class, "func_152596_g");
addMapping("removePlayerFromWhitelist", PlayerList.class, "func_152597_c");
addMapping("getWhitelistedPlayerNames", PlayerList.class, "func_152598_l");
addMapping("getWhitelistedPlayers", PlayerList.class, "func_152599_k");
addMapping("getOnlinePlayerProfiles", PlayerList.class, "func_152600_g");
addMapping("addWhitelistedPlayer", PlayerList.class, "func_152601_d");
addMapping("getPlayerStatsFile", PlayerList.class, "func_152602_a");
addMapping("getOppedPlayers", PlayerList.class, "func_152603_m");
addMapping("setGameType", PlayerList.class, "func_152604_a");
addMapping("addOp", PlayerList.class, "func_152605_a");
addMapping("getOppedPlayerNames", PlayerList.class, "func_152606_n");
addMapping("canJoin", PlayerList.class, "func_152607_e");
addMapping("getBannedPlayers", PlayerList.class, "func_152608_h");
addMapping("removeOp", PlayerList.class, "func_152610_b");
addMapping("setViewDistance", PlayerList.class, "func_152611_a");
addMapping("getPlayerByUsername", PlayerList.class, "func_152612_a");
addMapping("getPlayerByUUID", PlayerList.class, "func_177451_a");
addMapping("sendMessageToTeamOrAllPlayers", PlayerList.class, "func_177452_b");
addMapping("sendMessageToAllTeamMembers", PlayerList.class, "func_177453_a");
addMapping("getPlayers", PlayerList.class, "func_181057_v");
addMapping("getFormattedListOfPlayers", PlayerList.class, "func_181058_b");
addMapping("bypassesPlayerLimit", PlayerList.class, "func_183023_f");
addMapping("changePlayerDimension", PlayerList.class, "func_187242_a");
addMapping("updatePermissionLevel", PlayerList.class, "func_187243_f");
addMapping("reloadWhitelist", PlayerList.class, "func_187244_a");
addMapping("sendPlayerPermissionLevel", PlayerList.class, "func_187245_a");
addMapping("getPlayerAdvancements", PlayerList.class, "func_192054_h");
addMapping("reloadResources", PlayerList.class, "func_193244_w");
addMapping("getMaxPlayers", PlayerList.class, "func_72352_l");
addMapping("updateTimeAndWeatherForPlayer", PlayerList.class, "func_72354_b");
addMapping("initializeConnectionToPlayer", PlayerList.class, "func_72355_a");
addMapping("serverUpdateMovingPlayer", PlayerList.class, "func_72358_d");
addMapping("getBannedIPs", PlayerList.class, "func_72363_f");
addMapping("setPlayerManager", PlayerList.class, "func_72364_a");
addMapping("getServerInstance", PlayerList.class, "func_72365_p");
addMapping("playerLoggedOut", PlayerList.class, "func_72367_e");
addMapping("recreatePlayerEntity", PlayerList.class, "func_72368_a");
addMapping("getOnlinePlayerNames", PlayerList.class, "func_72369_d");
addMapping("setWhiteListEnabled", PlayerList.class, "func_72371_a");
addMapping("getEntityViewDistance", PlayerList.class, "func_72372_a");
addMapping("getAvailablePlayerDat", PlayerList.class, "func_72373_m");
addMapping("onTick", PlayerList.class, "func_72374_b");
addMapping("preparePlayer", PlayerList.class, "func_72375_a");
addMapping("playerLoggedIn", PlayerList.class, "func_72377_c");
addMapping("getHostPlayerData", PlayerList.class, "func_72378_q");
addMapping("readPlayerDataFromFile", PlayerList.class, "func_72380_a");
addMapping("setPlayerGameTypeBasedOnOther", PlayerList.class, "func_72381_a");
addMapping("getPlayersMatchingAddress", PlayerList.class, "func_72382_j");
addMapping("isWhiteListEnabled", PlayerList.class, "func_72383_n");
addMapping("syncPlayerInventory", PlayerList.class, "func_72385_f");
addMapping("setCommandsAllowedForAll", PlayerList.class, "func_72387_b");
addMapping("saveAllPlayerData", PlayerList.class, "func_72389_g");
addMapping("writePlayerData", PlayerList.class, "func_72391_b");
addMapping("removeAllPlayers", PlayerList.class, "func_72392_r");
addMapping("getCurrentPlayerCount", PlayerList.class, "func_72394_k");
addMapping("getViewDistance", PlayerList.class, "func_72395_o");
addMapping("transferEntityToWorld", PlayerList.class, "func_82448_a");
addMapping("sendScoreboard", PlayerList.class, "func_96456_a");
addMapping("addEntry", PlayerProfileCache.class, "func_152649_a");
addMapping("addEntry", PlayerProfileCache.class, "func_152651_a");
addMapping("getProfileByUUID", PlayerProfileCache.class, "func_152652_a");
addMapping("getByUUID", PlayerProfileCache.class, "func_152653_b");
addMapping("getUsernames", PlayerProfileCache.class, "func_152654_a");
addMapping("getGameProfileForUsername", PlayerProfileCache.class, "func_152655_a");
addMapping("getEntriesWithLimit", PlayerProfileCache.class, "func_152656_a");
addMapping("load", PlayerProfileCache.class, "func_152657_b");
addMapping("save", PlayerProfileCache.class, "func_152658_c");
addMapping("lookupProfile", PlayerProfileCache.class, "func_187319_a");
addMapping("setOnlineMode", PlayerProfileCache.class, "func_187320_a");
addMapping("isOnlineMode", PlayerProfileCache.class, "func_187321_d");
addMapping("convertWhitelist", PreYggdrasilConverter.class, "func_152710_d");
addMapping("mkdir", PreYggdrasilConverter.class, "func_152711_b");
addMapping("hasUnconvertableFiles", PreYggdrasilConverter.class, "func_152712_b");
addMapping("parseDate", PreYggdrasilConverter.class, "func_152713_b");
addMapping("tryConvert", PreYggdrasilConverter.class, "func_152714_a");
addMapping("hasUnconvertablePlayerFiles", PreYggdrasilConverter.class, "func_152715_c");
addMapping("lookupNames", PreYggdrasilConverter.class, "func_152717_a");
addMapping("convertOplist", PreYggdrasilConverter.class, "func_152718_c");
addMapping("readFile", PreYggdrasilConverter.class, "func_152721_a");
addMapping("convertIpBanlist", PreYggdrasilConverter.class, "func_152722_b");
addMapping("convertSaveFiles", PreYggdrasilConverter.class, "func_152723_a");
addMapping("convertUserBanlist", PreYggdrasilConverter.class, "func_152724_a");
addMapping("getPlayersDirectory", PreYggdrasilConverter.class, "func_152725_d");
addMapping("backupConverted", PreYggdrasilConverter.class, "func_152727_c");
addMapping("convertMobOwnerIfNeeded", PreYggdrasilConverter.class, "func_187473_a");
addMapping("writeChanges", UserList.class, "func_152678_f");
addMapping("readSavedFile", UserList.class, "func_152679_g");
addMapping("removeExpired", UserList.class, "func_152680_h");
addMapping("getObjectKey", UserList.class, "func_152681_a");
addMapping("createEntry", UserList.class, "func_152682_a");
addMapping("getEntry", UserList.class, "func_152683_b");
addMapping("removeEntry", UserList.class, "func_152684_c");
addMapping("getKeys", UserList.class, "func_152685_a");
addMapping("setLanServer", UserList.class, "func_152686_a");
addMapping("addEntry", UserList.class, "func_152687_a");
addMapping("getValues", UserList.class, "func_152688_e");
addMapping("isLanServer", UserList.class, "func_152689_b");
addMapping("isEmpty", UserList.class, "func_152690_d");
addMapping("getSaveFile", UserList.class, "func_152691_c");
addMapping("hasEntry", UserList.class, "func_152692_d");
addMapping("getObjectKey", UserListBans.class, "func_152681_a");
addMapping("createEntry", UserListBans.class, "func_152682_a");
addMapping("getKeys", UserListBans.class, "func_152685_a");
addMapping("isBanned", UserListBans.class, "func_152702_a");
addMapping("getBannedProfile", UserListBans.class, "func_152703_a");
addMapping("onSerialization", UserListBansEntry.class, "func_152641_a");
addMapping("toGameProfile", UserListBansEntry.class, "func_152648_b");
addMapping("getValue", UserListEntry.class, "func_152640_f");
addMapping("onSerialization", UserListEntry.class, "func_152641_a");
addMapping("hasBanExpired", UserListEntry.class, "func_73682_e");
addMapping("onSerialization", UserListEntryBan.class, "func_152641_a");
addMapping("getBanEndDate", UserListEntryBan.class, "func_73680_d");
addMapping("hasBanExpired", UserListEntryBan.class, "func_73682_e");
addMapping("getBanReason", UserListEntryBan.class, "func_73686_f");
addMapping("createEntry", UserListIPBans.class, "func_152682_a");
addMapping("addressToString", UserListIPBans.class, "func_152707_c");
addMapping("isBanned", UserListIPBans.class, "func_152708_a");
addMapping("getBanEntry", UserListIPBans.class, "func_152709_b");
addMapping("onSerialization", UserListIPBansEntry.class, "func_152641_a");
addMapping("getIPFromJson", UserListIPBansEntry.class, "func_152647_b");
addMapping("getObjectKey", UserListOps.class, "func_152681_a");
addMapping("createEntry", UserListOps.class, "func_152682_a");
addMapping("getKeys", UserListOps.class, "func_152685_a");
addMapping("getGameProfileFromName", UserListOps.class, "func_152700_a");
addMapping("bypassesPlayerLimit", UserListOps.class, "func_183026_b");
addMapping("getPermissionLevel", UserListOps.class, "func_187452_a");
addMapping("onSerialization", UserListOpsEntry.class, "func_152641_a");
addMapping("constructProfile", UserListOpsEntry.class, "func_152643_b");
addMapping("getPermissionLevel", UserListOpsEntry.class, "func_152644_a");
addMapping("bypassesPlayerLimit", UserListOpsEntry.class, "func_183024_b");
addMapping("getObjectKey", UserListWhitelist.class, "func_152681_a");
addMapping("createEntry", UserListWhitelist.class, "func_152682_a");
addMapping("getKeys", UserListWhitelist.class, "func_152685_a");
addMapping("isWhitelisted", UserListWhitelist.class, "func_152705_a");
addMapping("getByName", UserListWhitelist.class, "func_152706_a");
addMapping("onSerialization", UserListWhitelistEntry.class, "func_152641_a");
addMapping("gameProfileFromJsonObject", UserListWhitelistEntry.class, "func_152646_b");
addMapping("onDisconnect", NetHandlerHandshakeTCP.class, "func_147231_a");
addMapping("processHandshake", NetHandlerHandshakeTCP.class, "func_147383_a");
addMapping("onDisconnect", NetHandlerLoginServer.class, "func_147231_a");
addMapping("processEncryptionResponse", NetHandlerLoginServer.class, "func_147315_a");
addMapping("processLoginStart", NetHandlerLoginServer.class, "func_147316_a");
addMapping("getConnectionInfo", NetHandlerLoginServer.class, "func_147317_d");
addMapping("tryAcceptPlayer", NetHandlerLoginServer.class, "func_147326_c");
addMapping("getOfflineProfile", NetHandlerLoginServer.class, "func_152506_a");
addMapping("disconnect", NetHandlerLoginServer.class, "func_194026_b");
addMapping("update", NetHandlerLoginServer.class, "func_73660_a");
addMapping("onDisconnect", NetHandlerStatusServer.class, "func_147231_a");
addMapping("processPing", NetHandlerStatusServer.class, "func_147311_a");
addMapping("processServerQuery", NetHandlerStatusServer.class, "func_147312_a");
addMapping("format", IStatType.class, "func_75843_a");
addMapping("setFilteringCraftable", RecipeBook.class, "func_192810_b");
addMapping("isGuiOpen", RecipeBook.class, "func_192812_b");
addMapping("setGuiOpen", RecipeBook.class, "func_192813_a");
addMapping("isFilteringCraftable", RecipeBook.class, "func_192815_c");
addMapping("copyFrom", RecipeBook.class, "func_193824_a");
addMapping("markNew", RecipeBook.class, "func_193825_e");
addMapping("isUnlocked", RecipeBook.class, "func_193830_f");
addMapping("lock", RecipeBook.class, "func_193831_b");
addMapping("unlock", RecipeBook.class, "func_194073_a");
addMapping("markSeen", RecipeBook.class, "func_194074_f");
addMapping("getRecipeId", RecipeBook.class, "func_194075_d");
addMapping("isNew", RecipeBook.class, "func_194076_e");
addMapping("write", RecipeBookServer.class, "func_192824_e");
addMapping("read", RecipeBookServer.class, "func_192825_a");
addMapping("init", RecipeBookServer.class, "func_192826_c");
addMapping("remove", RecipeBookServer.class, "func_193834_b");
addMapping("add", RecipeBookServer.class, "func_193835_a");
addMapping("getRecipes", RecipeBookServer.class, "func_194079_d");
addMapping("getDisplayedRecipes", RecipeBookServer.class, "func_194080_e");
addMapping("sendPacket", RecipeBookServer.class, "func_194081_a");
addMapping("getStatName", StatBase.class, "func_150951_e");
addMapping("getCriteria", StatBase.class, "func_150952_k");
addMapping("getSerializableClazz", StatBase.class, "func_150954_l");
addMapping("initIndependentStat", StatBase.class, "func_75966_h");
addMapping("format", StatBase.class, "func_75968_a");
addMapping("registerStat", StatBase.class, "func_75971_g");
addMapping("registerStat", StatBasic.class, "func_75971_g");
addMapping("getItem", StatCrafting.class, "func_150959_a");
addMapping("getStatEntityKilledBy", StatList.class, "func_151176_b");
addMapping("getOneShotStat", StatList.class, "func_151177_a");
addMapping("init", StatList.class, "func_151178_a");
addMapping("initItemDepleteStats", StatList.class, "func_151179_e");
addMapping("mergeStatBases", StatList.class, "func_151180_a");
addMapping("initMiningStats", StatList.class, "func_151181_c");
addMapping("getStatKillEntity", StatList.class, "func_151182_a");
addMapping("getItemName", StatList.class, "func_180204_a");
addMapping("initPickedUpAndDroppedStats", StatList.class, "func_188054_f");
addMapping("getBlockStats", StatList.class, "func_188055_a");
addMapping("getObjectsPickedUpStats", StatList.class, "func_188056_d");
addMapping("getObjectUseStats", StatList.class, "func_188057_b");
addMapping("getDroppedObjectStats", StatList.class, "func_188058_e");
addMapping("getObjectBreakStats", StatList.class, "func_188059_c");
addMapping("getCraftStats", StatList.class, "func_188060_a");
addMapping("initCraftableStats", StatList.class, "func_75918_d");
addMapping("replaceAllSimilarBlocks", StatList.class, "func_75924_a");
addMapping("initStats", StatList.class, "func_75925_c");
addMapping("increaseStat", StatisticsManager.class, "func_150871_b");
addMapping("unlockAchievement", StatisticsManager.class, "func_150873_a");
addMapping("readStat", StatisticsManager.class, "func_77444_a");
addMapping("unlockAchievement", StatisticsManagerServer.class, "func_150873_a");
addMapping("sendStats", StatisticsManagerServer.class, "func_150876_a");
addMapping("markAllDirty", StatisticsManagerServer.class, "func_150877_d");
addMapping("getDirty", StatisticsManagerServer.class, "func_150878_c");
addMapping("dumpJson", StatisticsManagerServer.class, "func_150880_a");
addMapping("parseJson", StatisticsManagerServer.class, "func_150881_a");
addMapping("readStatFile", StatisticsManagerServer.class, "func_150882_a");
addMapping("saveStatFile", StatisticsManagerServer.class, "func_150883_b");
addMapping("getHashname", BannerPattern.class, "func_190993_b");
addMapping("byHash", BannerPattern.class, "func_190994_a");
addMapping("getPatterns", BannerPattern.class, "func_190996_c");
addMapping("getFileName", BannerPattern.class, "func_190997_a");
addMapping("getPatternItem", BannerPattern.class, "func_190998_f");
addMapping("hasPatternItem", BannerPattern.class, "func_190999_e");
addMapping("hasPattern", BannerPattern.class, "func_191000_d");
addMapping("sendMessage", CommandBlockBaseLogic.class, "func_145747_a");
addMapping("getLastOutput", CommandBlockBaseLogic.class, "func_145749_h");
addMapping("setLastOutput", CommandBlockBaseLogic.class, "func_145750_b");
addMapping("getCommandBlockType", CommandBlockBaseLogic.class, "func_145751_f");
addMapping("setCommand", CommandBlockBaseLogic.class, "func_145752_a");
addMapping("getCommand", CommandBlockBaseLogic.class, "func_145753_i");
addMapping("setName", CommandBlockBaseLogic.class, "func_145754_b");
addMapping("trigger", CommandBlockBaseLogic.class, "func_145755_a");
addMapping("updateCommand", CommandBlockBaseLogic.class, "func_145756_e");
addMapping("fillInInfo", CommandBlockBaseLogic.class, "func_145757_a");
addMapping("readDataFromNBT", CommandBlockBaseLogic.class, "func_145759_b");
addMapping("getSuccessCount", CommandBlockBaseLogic.class, "func_145760_g");
addMapping("sendCommandFeedback", CommandBlockBaseLogic.class, "func_174792_t_");
addMapping("setCommandStat", CommandBlockBaseLogic.class, "func_174794_a");
addMapping("shouldTrackOutput", CommandBlockBaseLogic.class, "func_175571_m");
addMapping("getCommandResultStats", CommandBlockBaseLogic.class, "func_175572_n");
addMapping("setTrackOutput", CommandBlockBaseLogic.class, "func_175573_a");
addMapping("tryOpenEditCommandBlock", CommandBlockBaseLogic.class, "func_175574_a");
addMapping("setSuccessCount", CommandBlockBaseLogic.class, "func_184167_a");
addMapping("writeToNBT", CommandBlockBaseLogic.class, "func_189510_a");
addMapping("canUseCommand", CommandBlockBaseLogic.class, "func_70003_b");
addMapping("getName", CommandBlockBaseLogic.class, "func_70005_c_");
addMapping("getWorld", IHopper.class, "func_145831_w");
addMapping("getXPos", IHopper.class, "func_96107_aA");
addMapping("getZPos", IHopper.class, "func_96108_aC");
addMapping("getYPos", IHopper.class, "func_96109_aB");
addMapping("getSpawnerPosition", MobSpawnerBaseLogic.class, "func_177221_b");
addMapping("getMobRotation", MobSpawnerBaseLogic.class, "func_177222_d");
addMapping("getPrevMobRotation", MobSpawnerBaseLogic.class, "func_177223_e");
addMapping("setNextSpawnData", MobSpawnerBaseLogic.class, "func_184993_a");
addMapping("getCachedEntity", MobSpawnerBaseLogic.class, "func_184994_d");
addMapping("writeToNBT", MobSpawnerBaseLogic.class, "func_189530_b");
addMapping("setEntityId", MobSpawnerBaseLogic.class, "func_190894_a");
addMapping("getEntityId", MobSpawnerBaseLogic.class, "func_190895_g");
addMapping("broadcastEvent", MobSpawnerBaseLogic.class, "func_98267_a");
addMapping("setDelayToMin", MobSpawnerBaseLogic.class, "func_98268_b");
addMapping("readFromNBT", MobSpawnerBaseLogic.class, "func_98270_a");
addMapping("getSpawnerWorld", MobSpawnerBaseLogic.class, "func_98271_a");
addMapping("resetTimer", MobSpawnerBaseLogic.class, "func_98273_j");
addMapping("updateSpawner", MobSpawnerBaseLogic.class, "func_98278_g");
addMapping("isActivated", MobSpawnerBaseLogic.class, "func_98279_f");
addMapping("getDisplayName", TileEntity.class, "func_145748_c_");
addMapping("addInfoToCrashReport", TileEntity.class, "func_145828_a");
addMapping("validate", TileEntity.class, "func_145829_t");
addMapping("hasWorld", TileEntity.class, "func_145830_o");
addMapping("getWorld", TileEntity.class, "func_145831_w");
addMapping("getBlockMetadata", TileEntity.class, "func_145832_p");
addMapping("getMaxRenderDistanceSquared", TileEntity.class, "func_145833_n");
addMapping("setWorld", TileEntity.class, "func_145834_a");
addMapping("getDistanceSq", TileEntity.class, "func_145835_a");
addMapping("updateContainingBlockInfo", TileEntity.class, "func_145836_u");
addMapping("isInvalid", TileEntity.class, "func_145837_r");
addMapping("getBlockType", TileEntity.class, "func_145838_q");
addMapping("readFromNBT", TileEntity.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntity.class, "func_145842_c");
addMapping("invalidate", TileEntity.class, "func_145843_s");
addMapping("getPos", TileEntity.class, "func_174877_v");
addMapping("setPos", TileEntity.class, "func_174878_a");
addMapping("onlyOpsCanSetNbt", TileEntity.class, "func_183000_F");
addMapping("writeToNBT", TileEntity.class, "func_189515_b");
addMapping("writeInternal", TileEntity.class, "func_189516_d");
addMapping("getUpdateTag", TileEntity.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntity.class, "func_189518_D_");
addMapping("rotate", TileEntity.class, "func_189667_a");
addMapping("mirror", TileEntity.class, "func_189668_a");
addMapping("create", TileEntity.class, "func_190200_a");
addMapping("setWorldCreate", TileEntity.class, "func_190201_b");
addMapping("getKey", TileEntity.class, "func_190559_a");
addMapping("register", TileEntity.class, "func_190560_a");
addMapping("markDirty", TileEntity.class, "func_70296_d");
addMapping("getDisplayName", TileEntityBanner.class, "func_145748_c_");
addMapping("hasCustomName", TileEntityBanner.class, "func_145818_k_");
addMapping("readFromNBT", TileEntityBanner.class, "func_145839_a");
addMapping("initializeBannerData", TileEntityBanner.class, "func_175109_g");
addMapping("getColorList", TileEntityBanner.class, "func_175110_d");
addMapping("setItemValues", TileEntityBanner.class, "func_175112_a");
addMapping("getPatterns", TileEntityBanner.class, "func_175113_c");
addMapping("getPatternList", TileEntityBanner.class, "func_175114_c");
addMapping("getPatternResourceLocation", TileEntityBanner.class, "func_175116_e");
addMapping("removeBannerData", TileEntityBanner.class, "func_175117_e");
addMapping("writeToNBT", TileEntityBanner.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityBanner.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityBanner.class, "func_189518_D_");
addMapping("getItem", TileEntityBanner.class, "func_190615_l");
addMapping("getColor", TileEntityBanner.class, "func_190616_d");
addMapping("getName", TileEntityBanner.class, "func_70005_c_");
addMapping("hasCustomName", TileEntityBeacon.class, "func_145818_k_");
addMapping("getMaxRenderDistanceSquared", TileEntityBeacon.class, "func_145833_n");
addMapping("readFromNBT", TileEntityBeacon.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntityBeacon.class, "func_145842_c");
addMapping("setName", TileEntityBeacon.class, "func_145999_a");
addMapping("addEffectsToPlayers", TileEntityBeacon.class, "func_146000_x");
addMapping("shouldBeamRender", TileEntityBeacon.class, "func_146002_i");
addMapping("updateSegmentColors", TileEntityBeacon.class, "func_146003_y");
addMapping("getGuiID", TileEntityBeacon.class, "func_174875_k");
addMapping("createContainer", TileEntityBeacon.class, "func_174876_a");
addMapping("setField", TileEntityBeacon.class, "func_174885_b");
addMapping("closeInventory", TileEntityBeacon.class, "func_174886_c");
addMapping("getField", TileEntityBeacon.class, "func_174887_a_");
addMapping("clear", TileEntityBeacon.class, "func_174888_l");
addMapping("openInventory", TileEntityBeacon.class, "func_174889_b");
addMapping("getFieldCount", TileEntityBeacon.class, "func_174890_g");
addMapping("getBeamSegments", TileEntityBeacon.class, "func_174907_n");
addMapping("updateBeacon", TileEntityBeacon.class, "func_174908_m");
addMapping("canExtractItem", TileEntityBeacon.class, "func_180461_b");
addMapping("canInsertItem", TileEntityBeacon.class, "func_180462_a");
addMapping("getSlotsForFace", TileEntityBeacon.class, "func_180463_a");
addMapping("isBeaconEffect", TileEntityBeacon.class, "func_184279_f");
addMapping("writeToNBT", TileEntityBeacon.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityBeacon.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityBeacon.class, "func_189518_D_");
addMapping("isEmpty", TileEntityBeacon.class, "func_191420_l");
addMapping("getLevels", TileEntityBeacon.class, "func_191979_s");
addMapping("getName", TileEntityBeacon.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityBeacon.class, "func_70297_j_");
addMapping("decrStackSize", TileEntityBeacon.class, "func_70298_a");
addMapping("setInventorySlotContents", TileEntityBeacon.class, "func_70299_a");
addMapping("isUsableByPlayer", TileEntityBeacon.class, "func_70300_a");
addMapping("getStackInSlot", TileEntityBeacon.class, "func_70301_a");
addMapping("getSizeInventory", TileEntityBeacon.class, "func_70302_i_");
addMapping("removeStackFromSlot", TileEntityBeacon.class, "func_70304_b");
addMapping("update", TileEntityBeacon.class, "func_73660_a");
addMapping("isItemValidForSlot", TileEntityBeacon.class, "func_94041_b");
addMapping("readFromNBT", TileEntityBed.class, "func_145839_a");
addMapping("writeToNBT", TileEntityBed.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityBed.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityBed.class, "func_189518_D_");
addMapping("getColor", TileEntityBed.class, "func_193048_a");
addMapping("getItemStack", TileEntityBed.class, "func_193049_f");
addMapping("isHeadPiece", TileEntityBed.class, "func_193050_e");
addMapping("setItemValues", TileEntityBed.class, "func_193051_a");
addMapping("setColor", TileEntityBed.class, "func_193052_a");
addMapping("hasCustomName", TileEntityBrewingStand.class, "func_145818_k_");
addMapping("readFromNBT", TileEntityBrewingStand.class, "func_145839_a");
addMapping("canBrew", TileEntityBrewingStand.class, "func_145934_k");
addMapping("setName", TileEntityBrewingStand.class, "func_145937_a");
addMapping("brewPotions", TileEntityBrewingStand.class, "func_145940_l");
addMapping("getGuiID", TileEntityBrewingStand.class, "func_174875_k");
addMapping("createContainer", TileEntityBrewingStand.class, "func_174876_a");
addMapping("setField", TileEntityBrewingStand.class, "func_174885_b");
addMapping("closeInventory", TileEntityBrewingStand.class, "func_174886_c");
addMapping("getField", TileEntityBrewingStand.class, "func_174887_a_");
addMapping("clear", TileEntityBrewingStand.class, "func_174888_l");
addMapping("openInventory", TileEntityBrewingStand.class, "func_174889_b");
addMapping("getFieldCount", TileEntityBrewingStand.class, "func_174890_g");
addMapping("createFilledSlotsArray", TileEntityBrewingStand.class, "func_174902_m");
addMapping("canExtractItem", TileEntityBrewingStand.class, "func_180461_b");
addMapping("canInsertItem", TileEntityBrewingStand.class, "func_180462_a");
addMapping("getSlotsForFace", TileEntityBrewingStand.class, "func_180463_a");
addMapping("writeToNBT", TileEntityBrewingStand.class, "func_189515_b");
addMapping("registerFixesBrewingStand", TileEntityBrewingStand.class, "func_189675_a");
addMapping("isEmpty", TileEntityBrewingStand.class, "func_191420_l");
addMapping("getName", TileEntityBrewingStand.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityBrewingStand.class, "func_70297_j_");
addMapping("decrStackSize", TileEntityBrewingStand.class, "func_70298_a");
addMapping("setInventorySlotContents", TileEntityBrewingStand.class, "func_70299_a");
addMapping("isUsableByPlayer", TileEntityBrewingStand.class, "func_70300_a");
addMapping("getStackInSlot", TileEntityBrewingStand.class, "func_70301_a");
addMapping("getSizeInventory", TileEntityBrewingStand.class, "func_70302_i_");
addMapping("removeStackFromSlot", TileEntityBrewingStand.class, "func_70304_b");
addMapping("update", TileEntityBrewingStand.class, "func_73660_a");
addMapping("isItemValidForSlot", TileEntityBrewingStand.class, "func_94041_b");
addMapping("updateContainingBlockInfo", TileEntityChest.class, "func_145836_u");
addMapping("readFromNBT", TileEntityChest.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntityChest.class, "func_145842_c");
addMapping("invalidate", TileEntityChest.class, "func_145843_s");
addMapping("checkForAdjacentChests", TileEntityChest.class, "func_145979_i");
addMapping("getChestType", TileEntityChest.class, "func_145980_j");
addMapping("getGuiID", TileEntityChest.class, "func_174875_k");
addMapping("createContainer", TileEntityChest.class, "func_174876_a");
addMapping("closeInventory", TileEntityChest.class, "func_174886_c");
addMapping("openInventory", TileEntityChest.class, "func_174889_b");
addMapping("setNeighbor", TileEntityChest.class, "func_174910_a");
addMapping("getAdjacentChest", TileEntityChest.class, "func_174911_a");
addMapping("isChestAt", TileEntityChest.class, "func_174912_b");
addMapping("writeToNBT", TileEntityChest.class, "func_189515_b");
addMapping("registerFixesChest", TileEntityChest.class, "func_189677_a");
addMapping("getItems", TileEntityChest.class, "func_190576_q");
addMapping("isEmpty", TileEntityChest.class, "func_191420_l");
addMapping("getName", TileEntityChest.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityChest.class, "func_70297_j_");
addMapping("getSizeInventory", TileEntityChest.class, "func_70302_i_");
addMapping("update", TileEntityChest.class, "func_73660_a");
addMapping("validate", TileEntityCommandBlock.class, "func_145829_t");
addMapping("readFromNBT", TileEntityCommandBlock.class, "func_145839_a");
addMapping("getCommandBlockLogic", TileEntityCommandBlock.class, "func_145993_a");
addMapping("getCommandResultStats", TileEntityCommandBlock.class, "func_175124_c");
addMapping("onlyOpsCanSetNbt", TileEntityCommandBlock.class, "func_183000_F");
addMapping("setConditionMet", TileEntityCommandBlock.class, "func_184249_c");
addMapping("setPowered", TileEntityCommandBlock.class, "func_184250_a");
addMapping("getMode", TileEntityCommandBlock.class, "func_184251_i");
addMapping("setSendToClient", TileEntityCommandBlock.class, "func_184252_d");
addMapping("setAuto", TileEntityCommandBlock.class, "func_184253_b");
addMapping("isAuto", TileEntityCommandBlock.class, "func_184254_e");
addMapping("isPowered", TileEntityCommandBlock.class, "func_184255_d");
addMapping("isConditionMet", TileEntityCommandBlock.class, "func_184256_g");
addMapping("isSendToClient", TileEntityCommandBlock.class, "func_184257_h");
addMapping("isConditional", TileEntityCommandBlock.class, "func_184258_j");
addMapping("writeToNBT", TileEntityCommandBlock.class, "func_189515_b");
addMapping("getUpdatePacket", TileEntityCommandBlock.class, "func_189518_D_");
addMapping("readFromNBT", TileEntityComparator.class, "func_145839_a");
addMapping("setOutputSignal", TileEntityComparator.class, "func_145995_a");
addMapping("getOutputSignal", TileEntityComparator.class, "func_145996_a");
addMapping("writeToNBT", TileEntityComparator.class, "func_189515_b");
addMapping("update", TileEntityDaylightDetector.class, "func_73660_a");
addMapping("readFromNBT", TileEntityDispenser.class, "func_145839_a");
addMapping("getDispenseSlot", TileEntityDispenser.class, "func_146017_i");
addMapping("addItemStack", TileEntityDispenser.class, "func_146019_a");
addMapping("getGuiID", TileEntityDispenser.class, "func_174875_k");
addMapping("createContainer", TileEntityDispenser.class, "func_174876_a");
addMapping("writeToNBT", TileEntityDispenser.class, "func_189515_b");
addMapping("registerFixes", TileEntityDispenser.class, "func_189678_a");
addMapping("getItems", TileEntityDispenser.class, "func_190576_q");
addMapping("isEmpty", TileEntityDispenser.class, "func_191420_l");
addMapping("getName", TileEntityDispenser.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityDispenser.class, "func_70297_j_");
addMapping("getSizeInventory", TileEntityDispenser.class, "func_70302_i_");
addMapping("getGuiID", TileEntityDropper.class, "func_174875_k");
addMapping("registerFixesDropper", TileEntityDropper.class, "func_189679_b");
addMapping("getName", TileEntityDropper.class, "func_70005_c_");
addMapping("getDisplayName", TileEntityEnchantmentTable.class, "func_145748_c_");
addMapping("hasCustomName", TileEntityEnchantmentTable.class, "func_145818_k_");
addMapping("readFromNBT", TileEntityEnchantmentTable.class, "func_145839_a");
addMapping("setCustomName", TileEntityEnchantmentTable.class, "func_145920_a");
addMapping("getGuiID", TileEntityEnchantmentTable.class, "func_174875_k");
addMapping("createContainer", TileEntityEnchantmentTable.class, "func_174876_a");
addMapping("writeToNBT", TileEntityEnchantmentTable.class, "func_189515_b");
addMapping("getName", TileEntityEnchantmentTable.class, "func_70005_c_");
addMapping("update", TileEntityEnchantmentTable.class, "func_73660_a");
addMapping("getMaxRenderDistanceSquared", TileEntityEndGateway.class, "func_145833_n");
addMapping("readFromNBT", TileEntityEndGateway.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntityEndGateway.class, "func_145842_c");
addMapping("triggerCooldown", TileEntityEndGateway.class, "func_184300_h");
addMapping("getChunk", TileEntityEndGateway.class, "func_184301_a");
addMapping("getSpawnPercent", TileEntityEndGateway.class, "func_184302_e");
addMapping("findExitPosition", TileEntityEndGateway.class, "func_184303_j");
addMapping("getParticleAmount", TileEntityEndGateway.class, "func_184304_i");
addMapping("getCooldownPercent", TileEntityEndGateway.class, "func_184305_g");
addMapping("teleportEntity", TileEntityEndGateway.class, "func_184306_a");
addMapping("findSpawnpointInChunk", TileEntityEndGateway.class, "func_184307_a");
addMapping("findHighestBlock", TileEntityEndGateway.class, "func_184308_a");
addMapping("isSpawning", TileEntityEndGateway.class, "func_184309_b");
addMapping("isCoolingDown", TileEntityEndGateway.class, "func_184310_d");
addMapping("findExitPortal", TileEntityEndGateway.class, "func_184311_k");
addMapping("createExitPortal", TileEntityEndGateway.class, "func_184312_b");
addMapping("shouldRenderFace", TileEntityEndGateway.class, "func_184313_a");
addMapping("writeToNBT", TileEntityEndGateway.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityEndGateway.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityEndGateway.class, "func_189518_D_");
addMapping("setExactPosition", TileEntityEndGateway.class, "func_190603_b");
addMapping("update", TileEntityEndGateway.class, "func_73660_a");
addMapping("shouldRenderFace", TileEntityEndPortal.class, "func_184313_a");
addMapping("receiveClientEvent", TileEntityEnderChest.class, "func_145842_c");
addMapping("invalidate", TileEntityEnderChest.class, "func_145843_s");
addMapping("openChest", TileEntityEnderChest.class, "func_145969_a");
addMapping("closeChest", TileEntityEnderChest.class, "func_145970_b");
addMapping("canBeUsed", TileEntityEnderChest.class, "func_145971_a");
addMapping("update", TileEntityEnderChest.class, "func_73660_a");
addMapping("readFromNBT", TileEntityFlowerPot.class, "func_145839_a");
addMapping("getFlowerPotItem", TileEntityFlowerPot.class, "func_145965_a");
addMapping("getFlowerPotData", TileEntityFlowerPot.class, "func_145966_b");
addMapping("getFlowerItemStack", TileEntityFlowerPot.class, "func_184403_b");
addMapping("writeToNBT", TileEntityFlowerPot.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityFlowerPot.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityFlowerPot.class, "func_189518_D_");
addMapping("registerFixesFlowerPot", TileEntityFlowerPot.class, "func_189699_a");
addMapping("setItemStack", TileEntityFlowerPot.class, "func_190614_a");
addMapping("hasCustomName", TileEntityFurnace.class, "func_145818_k_");
addMapping("readFromNBT", TileEntityFurnace.class, "func_145839_a");
addMapping("canSmelt", TileEntityFurnace.class, "func_145948_k");
addMapping("smeltItem", TileEntityFurnace.class, "func_145949_j");
addMapping("isBurning", TileEntityFurnace.class, "func_145950_i");
addMapping("setCustomInventoryName", TileEntityFurnace.class, "func_145951_a");
addMapping("getItemBurnTime", TileEntityFurnace.class, "func_145952_a");
addMapping("isItemFuel", TileEntityFurnace.class, "func_145954_b");
addMapping("getGuiID", TileEntityFurnace.class, "func_174875_k");
addMapping("createContainer", TileEntityFurnace.class, "func_174876_a");
addMapping("setField", TileEntityFurnace.class, "func_174885_b");
addMapping("closeInventory", TileEntityFurnace.class, "func_174886_c");
addMapping("getField", TileEntityFurnace.class, "func_174887_a_");
addMapping("clear", TileEntityFurnace.class, "func_174888_l");
addMapping("openInventory", TileEntityFurnace.class, "func_174889_b");
addMapping("getFieldCount", TileEntityFurnace.class, "func_174890_g");
addMapping("isBurning", TileEntityFurnace.class, "func_174903_a");
addMapping("getCookTime", TileEntityFurnace.class, "func_174904_a");
addMapping("canExtractItem", TileEntityFurnace.class, "func_180461_b");
addMapping("canInsertItem", TileEntityFurnace.class, "func_180462_a");
addMapping("getSlotsForFace", TileEntityFurnace.class, "func_180463_a");
addMapping("writeToNBT", TileEntityFurnace.class, "func_189515_b");
addMapping("registerFixesFurnace", TileEntityFurnace.class, "func_189676_a");
addMapping("isEmpty", TileEntityFurnace.class, "func_191420_l");
addMapping("getName", TileEntityFurnace.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityFurnace.class, "func_70297_j_");
addMapping("decrStackSize", TileEntityFurnace.class, "func_70298_a");
addMapping("setInventorySlotContents", TileEntityFurnace.class, "func_70299_a");
addMapping("isUsableByPlayer", TileEntityFurnace.class, "func_70300_a");
addMapping("getStackInSlot", TileEntityFurnace.class, "func_70301_a");
addMapping("getSizeInventory", TileEntityFurnace.class, "func_70302_i_");
addMapping("removeStackFromSlot", TileEntityFurnace.class, "func_70304_b");
addMapping("update", TileEntityFurnace.class, "func_73660_a");
addMapping("isItemValidForSlot", TileEntityFurnace.class, "func_94041_b");
addMapping("readFromNBT", TileEntityHopper.class, "func_145839_a");
addMapping("transferItemsOut", TileEntityHopper.class, "func_145883_k");
addMapping("getSourceInventory", TileEntityHopper.class, "func_145884_b");
addMapping("updateHopper", TileEntityHopper.class, "func_145887_i");
addMapping("isOnTransferCooldown", TileEntityHopper.class, "func_145888_j");
addMapping("pullItems", TileEntityHopper.class, "func_145891_a");
addMapping("getInventoryAtPosition", TileEntityHopper.class, "func_145893_b");
addMapping("canCombine", TileEntityHopper.class, "func_145894_a");
addMapping("getInventoryForHopperTransfer", TileEntityHopper.class, "func_145895_l");
addMapping("setTransferCooldown", TileEntityHopper.class, "func_145896_c");
addMapping("putDropInInventoryAllSlots", TileEntityHopper.class, "func_145898_a");
addMapping("isInventoryEmpty", TileEntityHopper.class, "func_152104_k");
addMapping("isFull", TileEntityHopper.class, "func_152105_l");
addMapping("getGuiID", TileEntityHopper.class, "func_174875_k");
addMapping("createContainer", TileEntityHopper.class, "func_174876_a");
addMapping("mayTransfer", TileEntityHopper.class, "func_174914_o");
addMapping("pullItemFromSlot", TileEntityHopper.class, "func_174915_a");
addMapping("insertStack", TileEntityHopper.class, "func_174916_c");
addMapping("isInventoryEmpty", TileEntityHopper.class, "func_174917_b");
addMapping("putStackInInventoryAllSlots", TileEntityHopper.class, "func_174918_a");
addMapping("isInventoryFull", TileEntityHopper.class, "func_174919_a");
addMapping("canInsertItemInSlot", TileEntityHopper.class, "func_174920_a");
addMapping("canExtractItemFromSlot", TileEntityHopper.class, "func_174921_b");
addMapping("getCaptureItems", TileEntityHopper.class, "func_184292_a");
addMapping("writeToNBT", TileEntityHopper.class, "func_189515_b");
addMapping("registerFixesHopper", TileEntityHopper.class, "func_189683_a");
addMapping("getItems", TileEntityHopper.class, "func_190576_q");
addMapping("isEmpty", TileEntityHopper.class, "func_191420_l");
addMapping("getName", TileEntityHopper.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityHopper.class, "func_70297_j_");
addMapping("decrStackSize", TileEntityHopper.class, "func_70298_a");
addMapping("setInventorySlotContents", TileEntityHopper.class, "func_70299_a");
addMapping("getSizeInventory", TileEntityHopper.class, "func_70302_i_");
addMapping("update", TileEntityHopper.class, "func_73660_a");
addMapping("getXPos", TileEntityHopper.class, "func_96107_aA");
addMapping("getZPos", TileEntityHopper.class, "func_96108_aC");
addMapping("getYPos", TileEntityHopper.class, "func_96109_aB");
addMapping("getDisplayName", TileEntityLockable.class, "func_145748_c_");
addMapping("readFromNBT", TileEntityLockable.class, "func_145839_a");
addMapping("getLockCode", TileEntityLockable.class, "func_174891_i");
addMapping("setLockCode", TileEntityLockable.class, "func_174892_a");
addMapping("isLocked", TileEntityLockable.class, "func_174893_q_");
addMapping("writeToNBT", TileEntityLockable.class, "func_189515_b");
addMapping("hasCustomName", TileEntityLockableLoot.class, "func_145818_k_");
addMapping("setField", TileEntityLockableLoot.class, "func_174885_b");
addMapping("closeInventory", TileEntityLockableLoot.class, "func_174886_c");
addMapping("getField", TileEntityLockableLoot.class, "func_174887_a_");
addMapping("clear", TileEntityLockableLoot.class, "func_174888_l");
addMapping("openInventory", TileEntityLockableLoot.class, "func_174889_b");
addMapping("getFieldCount", TileEntityLockableLoot.class, "func_174890_g");
addMapping("getLootTable", TileEntityLockableLoot.class, "func_184276_b");
addMapping("fillWithLoot", TileEntityLockableLoot.class, "func_184281_d");
addMapping("checkLootAndWrite", TileEntityLockableLoot.class, "func_184282_c");
addMapping("checkLootAndRead", TileEntityLockableLoot.class, "func_184283_b");
addMapping("setLootTable", TileEntityLockableLoot.class, "func_189404_a");
addMapping("setCustomName", TileEntityLockableLoot.class, "func_190575_a");
addMapping("getItems", TileEntityLockableLoot.class, "func_190576_q");
addMapping("decrStackSize", TileEntityLockableLoot.class, "func_70298_a");
addMapping("setInventorySlotContents", TileEntityLockableLoot.class, "func_70299_a");
addMapping("isUsableByPlayer", TileEntityLockableLoot.class, "func_70300_a");
addMapping("getStackInSlot", TileEntityLockableLoot.class, "func_70301_a");
addMapping("removeStackFromSlot", TileEntityLockableLoot.class, "func_70304_b");
addMapping("isItemValidForSlot", TileEntityLockableLoot.class, "func_94041_b");
addMapping("readFromNBT", TileEntityMobSpawner.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntityMobSpawner.class, "func_145842_c");
addMapping("getSpawnerBaseLogic", TileEntityMobSpawner.class, "func_145881_a");
addMapping("onlyOpsCanSetNbt", TileEntityMobSpawner.class, "func_183000_F");
addMapping("writeToNBT", TileEntityMobSpawner.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityMobSpawner.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityMobSpawner.class, "func_189518_D_");
addMapping("registerFixesMobSpawner", TileEntityMobSpawner.class, "func_189684_a");
addMapping("update", TileEntityMobSpawner.class, "func_73660_a");
addMapping("readFromNBT", TileEntityNote.class, "func_145839_a");
addMapping("changePitch", TileEntityNote.class, "func_145877_a");
addMapping("triggerNote", TileEntityNote.class, "func_175108_a");
addMapping("writeToNBT", TileEntityNote.class, "func_189515_b");
addMapping("getBlockMetadata", TileEntityPiston.class, "func_145832_p");
addMapping("readFromNBT", TileEntityPiston.class, "func_145839_a");
addMapping("getProgress", TileEntityPiston.class, "func_145860_a");
addMapping("clearPistonTileEntity", TileEntityPiston.class, "func_145866_f");
addMapping("shouldPistonHeadBeRendered", TileEntityPiston.class, "func_145867_d");
addMapping("isExtending", TileEntityPiston.class, "func_145868_b");
addMapping("getOffsetZ", TileEntityPiston.class, "func_174926_d");
addMapping("getPistonState", TileEntityPiston.class, "func_174927_b");
addMapping("getOffsetY", TileEntityPiston.class, "func_174928_c");
addMapping("getOffsetX", TileEntityPiston.class, "func_174929_b");
addMapping("getFacing", TileEntityPiston.class, "func_174930_e");
addMapping("getAABB", TileEntityPiston.class, "func_184319_a");
addMapping("getExtendedProgress", TileEntityPiston.class, "func_184320_e");
addMapping("getAABB", TileEntityPiston.class, "func_184321_a");
addMapping("moveCollidedEntities", TileEntityPiston.class, "func_184322_i");
addMapping("writeToNBT", TileEntityPiston.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityPiston.class, "func_189517_E_");
addMapping("registerFixesPiston", TileEntityPiston.class, "func_189685_a");
addMapping("getDeltaZ", TileEntityPiston.class, "func_190604_d");
addMapping("fixEntityWithinPistonBase", TileEntityPiston.class, "func_190605_a");
addMapping("getCollisionRelatedBlockState", TileEntityPiston.class, "func_190606_j");
addMapping("moveByPositionAndProgress", TileEntityPiston.class, "func_190607_a");
addMapping("getDeltaY", TileEntityPiston.class, "func_190608_c");
addMapping("addCollissionAABBs", TileEntityPiston.class, "func_190609_a");
addMapping("getMovementArea", TileEntityPiston.class, "func_190610_a");
addMapping("getDeltaX", TileEntityPiston.class, "func_190611_b");
addMapping("getMovement", TileEntityPiston.class, "func_190612_a");
addMapping("getMinMaxPiecesAABB", TileEntityPiston.class, "func_191515_a");
addMapping("update", TileEntityPiston.class, "func_73660_a");
addMapping("readFromNBT", TileEntityShulkerBox.class, "func_145839_a");
addMapping("receiveClientEvent", TileEntityShulkerBox.class, "func_145842_c");
addMapping("getGuiID", TileEntityShulkerBox.class, "func_174875_k");
addMapping("createContainer", TileEntityShulkerBox.class, "func_174876_a");
addMapping("closeInventory", TileEntityShulkerBox.class, "func_174886_c");
addMapping("clear", TileEntityShulkerBox.class, "func_174888_l");
addMapping("openInventory", TileEntityShulkerBox.class, "func_174889_b");
addMapping("canExtractItem", TileEntityShulkerBox.class, "func_180461_b");
addMapping("canInsertItem", TileEntityShulkerBox.class, "func_180462_a");
addMapping("getSlotsForFace", TileEntityShulkerBox.class, "func_180463_a");
addMapping("writeToNBT", TileEntityShulkerBox.class, "func_189515_b");
addMapping("getUpdatePacket", TileEntityShulkerBox.class, "func_189518_D_");
addMapping("getItems", TileEntityShulkerBox.class, "func_190576_q");
addMapping("setDestroyedByCreativePlayer", TileEntityShulkerBox.class, "func_190579_a");
addMapping("saveToNbt", TileEntityShulkerBox.class, "func_190580_f");
addMapping("isDestroyedByCreativePlayer", TileEntityShulkerBox.class, "func_190581_E");
addMapping("shouldDrop", TileEntityShulkerBox.class, "func_190582_F");
addMapping("updateAnimation", TileEntityShulkerBox.class, "func_190583_o");
addMapping("getBoundingBox", TileEntityShulkerBox.class, "func_190584_a");
addMapping("getProgress", TileEntityShulkerBox.class, "func_190585_a");
addMapping("loadFromNbt", TileEntityShulkerBox.class, "func_190586_e");
addMapping("getBoundingBox", TileEntityShulkerBox.class, "func_190587_b");
addMapping("getTopBoundingBox", TileEntityShulkerBox.class, "func_190588_c");
addMapping("moveCollidedEntities", TileEntityShulkerBox.class, "func_190589_G");
addMapping("isCleared", TileEntityShulkerBox.class, "func_190590_r");
addMapping("getAnimationStatus", TileEntityShulkerBox.class, "func_190591_p");
addMapping("getColor", TileEntityShulkerBox.class, "func_190592_s");
addMapping("registerFixesShulkerBox", TileEntityShulkerBox.class, "func_190593_a");
addMapping("isEmpty", TileEntityShulkerBox.class, "func_191420_l");
addMapping("getName", TileEntityShulkerBox.class, "func_70005_c_");
addMapping("getInventoryStackLimit", TileEntityShulkerBox.class, "func_70297_j_");
addMapping("getSizeInventory", TileEntityShulkerBox.class, "func_70302_i_");
addMapping("update", TileEntityShulkerBox.class, "func_73660_a");
addMapping("readFromNBT", TileEntitySign.class, "func_145839_a");
addMapping("getPlayer", TileEntitySign.class, "func_145911_b");
addMapping("setPlayer", TileEntitySign.class, "func_145912_a");
addMapping("setEditable", TileEntitySign.class, "func_145913_a");
addMapping("getIsEditable", TileEntitySign.class, "func_145914_a");
addMapping("getStats", TileEntitySign.class, "func_174880_d");
addMapping("executeCommand", TileEntitySign.class, "func_174882_b");
addMapping("onlyOpsCanSetNbt", TileEntitySign.class, "func_183000_F");
addMapping("writeToNBT", TileEntitySign.class, "func_189515_b");
addMapping("getUpdateTag", TileEntitySign.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntitySign.class, "func_189518_D_");
addMapping("setWorldCreate", TileEntitySign.class, "func_190201_b");
addMapping("readFromNBT", TileEntitySkull.class, "func_145839_a");
addMapping("setSkullRotation", TileEntitySkull.class, "func_145903_a");
addMapping("getSkullType", TileEntitySkull.class, "func_145904_a");
addMapping("getSkullRotation", TileEntitySkull.class, "func_145906_b");
addMapping("setPlayerProfile", TileEntitySkull.class, "func_152106_a");
addMapping("setType", TileEntitySkull.class, "func_152107_a");
addMapping("getPlayerProfile", TileEntitySkull.class, "func_152108_a");
addMapping("updatePlayerProfile", TileEntitySkull.class, "func_152109_d");
addMapping("updateGameprofile", TileEntitySkull.class, "func_174884_b");
addMapping("setProfileCache", TileEntitySkull.class, "func_184293_a");
addMapping("setSessionService", TileEntitySkull.class, "func_184294_a");
addMapping("getAnimationProgress", TileEntitySkull.class, "func_184295_a");
addMapping("writeToNBT", TileEntitySkull.class, "func_189515_b");
addMapping("getUpdateTag", TileEntitySkull.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntitySkull.class, "func_189518_D_");
addMapping("rotate", TileEntitySkull.class, "func_189667_a");
addMapping("mirror", TileEntitySkull.class, "func_189668_a");
addMapping("update", TileEntitySkull.class, "func_73660_a");
addMapping("getDisplayName", TileEntityStructure.class, "func_145748_c_");
addMapping("readFromNBT", TileEntityStructure.class, "func_145839_a");
addMapping("setName", TileEntityStructure.class, "func_184404_a");
addMapping("setMode", TileEntityStructure.class, "func_184405_a");
addMapping("setIgnoresEntities", TileEntityStructure.class, "func_184406_a");
addMapping("setRotation", TileEntityStructure.class, "func_184408_a");
addMapping("setSize", TileEntityStructure.class, "func_184409_c");
addMapping("setMetadata", TileEntityStructure.class, "func_184410_b");
addMapping("setMirror", TileEntityStructure.class, "func_184411_a");
addMapping("load", TileEntityStructure.class, "func_184412_n");
addMapping("setPosition", TileEntityStructure.class, "func_184414_b");
addMapping("filterRelatedCornerBlocks", TileEntityStructure.class, "func_184415_a");
addMapping("calculateEnclosingBoundingBox", TileEntityStructure.class, "func_184416_a");
addMapping("detectSize", TileEntityStructure.class, "func_184417_l");
addMapping("getNearbyCornerBlocks", TileEntityStructure.class, "func_184418_a");
addMapping("save", TileEntityStructure.class, "func_184419_m");
addMapping("writeToNBT", TileEntityStructure.class, "func_189515_b");
addMapping("getUpdateTag", TileEntityStructure.class, "func_189517_E_");
addMapping("getUpdatePacket", TileEntityStructure.class, "func_189518_D_");
addMapping("getMode", TileEntityStructure.class, "func_189700_k");
addMapping("usedBy", TileEntityStructure.class, "func_189701_a");
addMapping("getIntegrity", TileEntityStructure.class, "func_189702_n");
addMapping("setShowAir", TileEntityStructure.class, "func_189703_e");
addMapping("updateBlockState", TileEntityStructure.class, "func_189704_J");
addMapping("writeCoordinates", TileEntityStructure.class, "func_189705_a");
addMapping("unloadStructure", TileEntityStructure.class, "func_189706_E");
addMapping("showsAir", TileEntityStructure.class, "func_189707_H");
addMapping("getMetadata", TileEntityStructure.class, "func_189708_j");
addMapping("isStructureLoadable", TileEntityStructure.class, "func_189709_F");
addMapping("setShowBoundingBox", TileEntityStructure.class, "func_189710_f");
addMapping("getPosition", TileEntityStructure.class, "func_189711_e");
addMapping("save", TileEntityStructure.class, "func_189712_b");
addMapping("ignoresEntities", TileEntityStructure.class, "func_189713_m");
addMapping("load", TileEntityStructure.class, "func_189714_c");
addMapping("getName", TileEntityStructure.class, "func_189715_d");
addMapping("getMirror", TileEntityStructure.class, "func_189716_h");
addMapping("getStructureSize", TileEntityStructure.class, "func_189717_g");
addMapping("setIntegrity", TileEntityStructure.class, "func_189718_a");
addMapping("getSeed", TileEntityStructure.class, "func_189719_o");
addMapping("createdBy", TileEntityStructure.class, "func_189720_a");
addMapping("showsBoundingBox", TileEntityStructure.class, "func_189721_I");
addMapping("isPowered", TileEntityStructure.class, "func_189722_G");
addMapping("setPowered", TileEntityStructure.class, "func_189723_d");
addMapping("nextMode", TileEntityStructure.class, "func_189724_l");
addMapping("setSeed", TileEntityStructure.class, "func_189725_a");
addMapping("getRotation", TileEntityStructure.class, "func_189726_i");
addMapping("getType", ActionResult.class, "func_188397_a");
addMapping("getResult", ActionResult.class, "func_188398_b");
addMapping("setAt", BitArray.class, "func_188141_a");
addMapping("getAt", BitArray.class, "func_188142_a");
addMapping("getBackingLongArray", BitArray.class, "func_188143_a");
addMapping("size", BitArray.class, "func_188144_b");
addMapping("filterAllowedCharacters", ChatAllowedCharacters.class, "func_71565_a");
addMapping("isAllowedCharacter", ChatAllowedCharacters.class, "func_71566_a");
addMapping("createLookup", ClassInheritanceMultiMap.class, "func_180213_a");
addMapping("getByClass", ClassInheritanceMultiMap.class, "func_180215_b");
addMapping("initializeClassLookup", ClassInheritanceMultiMap.class, "func_181157_b");
addMapping("addForClass", ClassInheritanceMultiMap.class, "func_181743_a");
addMapping("getDamageSrcDisplayName", CombatEntry.class, "func_151522_h");
addMapping("isLivingDamageSrc", CombatEntry.class, "func_94559_f");
addMapping("getDamageSrc", CombatEntry.class, "func_94560_a");
addMapping("getDamageAmount", CombatEntry.class, "func_94561_i");
addMapping("getFallSuffix", CombatEntry.class, "func_94562_g");
addMapping("getDamage", CombatEntry.class, "func_94563_c");
addMapping("getDamageAfterMagicAbsorb", CombatRules.class, "func_188401_b");
addMapping("getDamageAfterAbsorb", CombatRules.class, "func_189427_a");
addMapping("getDeathMessage", CombatTracker.class, "func_151521_b");
addMapping("getCombatDuration", CombatTracker.class, "func_180134_f");
addMapping("getFighter", CombatTracker.class, "func_180135_h");
addMapping("resetFallSuffix", CombatTracker.class, "func_94542_g");
addMapping("getBestCombatEntry", CombatTracker.class, "func_94544_f");
addMapping("calculateFallSuffix", CombatTracker.class, "func_94545_a");
addMapping("trackDamage", CombatTracker.class, "func_94547_a");
addMapping("getFallSuffix", CombatTracker.class, "func_94548_b");
addMapping("reset", CombatTracker.class, "func_94549_h");
addMapping("getBestAttacker", CombatTracker.class, "func_94550_c");
addMapping("notifyOnSet", CooldownTracker.class, "func_185140_b");
addMapping("hasCooldown", CooldownTracker.class, "func_185141_a");
addMapping("removeCooldown", CooldownTracker.class, "func_185142_b");
addMapping("getCooldown", CooldownTracker.class, "func_185143_a");
addMapping("tick", CooldownTracker.class, "func_185144_a");
addMapping("setCooldown", CooldownTracker.class, "func_185145_a");
addMapping("notifyOnRemove", CooldownTracker.class, "func_185146_c");
addMapping("notifyOnSet", CooldownTrackerServer.class, "func_185140_b");
addMapping("notifyOnRemove", CooldownTrackerServer.class, "func_185146_c");
addMapping("createNetCipherInstance", CryptManager.class, "func_151229_a");
addMapping("cipherOperation", CryptManager.class, "func_75885_a");
addMapping("createTheCipherInstance", CryptManager.class, "func_75886_a");
addMapping("decryptSharedKey", CryptManager.class, "func_75887_a");
addMapping("decryptData", CryptManager.class, "func_75889_b");
addMapping("createNewSharedKey", CryptManager.class, "func_75890_a");
addMapping("generateKeyPair", CryptManager.class, "func_75891_b");
addMapping("digestOperation", CryptManager.class, "func_75893_a");
addMapping("encryptData", CryptManager.class, "func_75894_a");
addMapping("getServerIdHash", CryptManager.class, "func_75895_a");
addMapping("decodePublicKey", CryptManager.class, "func_75896_a");
addMapping("isDamageAbsolute", DamageSource.class, "func_151517_h");
addMapping("setDamageIsAbsolute", DamageSource.class, "func_151518_m");
addMapping("getDeathMessage", DamageSource.class, "func_151519_b");
addMapping("isCreativePlayer", DamageSource.class, "func_180136_u");
addMapping("causeIndirectDamage", DamageSource.class, "func_188403_a");
addMapping("getDamageLocation", DamageSource.class, "func_188404_v");
addMapping("causeExplosionDamage", DamageSource.class, "func_188405_b");
addMapping("getHungerDamage", DamageSource.class, "func_76345_d");
addMapping("getTrueSource", DamageSource.class, "func_76346_g");
addMapping("isFireDamage", DamageSource.class, "func_76347_k");
addMapping("setDamageBypassesArmor", DamageSource.class, "func_76348_h");
addMapping("setProjectile", DamageSource.class, "func_76349_b");
addMapping("isDifficultyScaled", DamageSource.class, "func_76350_n");
addMapping("setDifficultyScaled", DamageSource.class, "func_76351_m");
addMapping("isProjectile", DamageSource.class, "func_76352_a");
addMapping("causeArrowDamage", DamageSource.class, "func_76353_a");
addMapping("causeIndirectMagicDamage", DamageSource.class, "func_76354_b");
addMapping("getDamageType", DamageSource.class, "func_76355_l");
addMapping("causeThrownDamage", DamageSource.class, "func_76356_a");
addMapping("canHarmInCreative", DamageSource.class, "func_76357_e");
addMapping("causeMobDamage", DamageSource.class, "func_76358_a");
addMapping("setDamageAllowedInCreativeMode", DamageSource.class, "func_76359_i");
addMapping("setFireDamage", DamageSource.class, "func_76361_j");
addMapping("causeFireballDamage", DamageSource.class, "func_76362_a");
addMapping("isUnblockable", DamageSource.class, "func_76363_c");
addMapping("getImmediateSource", DamageSource.class, "func_76364_f");
addMapping("causePlayerDamage", DamageSource.class, "func_76365_a");
addMapping("isMagicDamage", DamageSource.class, "func_82725_o");
addMapping("setMagicDamage", DamageSource.class, "func_82726_p");
addMapping("causeThornsDamage", DamageSource.class, "func_92087_a");
addMapping("causeExplosionDamage", DamageSource.class, "func_94539_a");
addMapping("setExplosion", DamageSource.class, "func_94540_d");
addMapping("isExplosion", DamageSource.class, "func_94541_c");
addMapping("generateNewRandomName", EnchantmentNameParts.class, "func_148334_a");
addMapping("reseedRandomGenerator", EnchantmentNameParts.class, "func_148335_a");
addMapping("getInstance", EnchantmentNameParts.class, "func_178176_a");
addMapping("getDeathMessage", EntityDamageSource.class, "func_151519_b");
addMapping("setIsThornsDamage", EntityDamageSource.class, "func_180138_v");
addMapping("getIsThornsDamage", EntityDamageSource.class, "func_180139_w");
addMapping("getDamageLocation", EntityDamageSource.class, "func_188404_v");
addMapping("getTrueSource", EntityDamageSource.class, "func_76346_g");
addMapping("isDifficultyScaled", EntityDamageSource.class, "func_76350_n");
addMapping("getDeathMessage", EntityDamageSourceIndirect.class, "func_151519_b");
addMapping("getTrueSource", EntityDamageSourceIndirect.class, "func_76346_g");
addMapping("getImmediateSource", EntityDamageSourceIndirect.class, "func_76364_f");
addMapping("getTeamCollisionPredicate", EntitySelectors.class, "func_188442_a");
addMapping("withinRange", EntitySelectors.class, "func_188443_a");
addMapping("notRiding", EntitySelectors.class, "func_191324_b");
addMapping("getName", EnumFacing.class, "func_176610_l");
addMapping("getDirectionVec", EnumFacing.class, "func_176730_m");
addMapping("getHorizontal", EnumFacing.class, "func_176731_b");
addMapping("rotateAround", EnumFacing.class, "func_176732_a");
addMapping("fromAngle", EnumFacing.class, "func_176733_a");
addMapping("getOpposite", EnumFacing.class, "func_176734_d");
addMapping("rotateYCCW", EnumFacing.class, "func_176735_f");
addMapping("getHorizontalIndex", EnumFacing.class, "func_176736_b");
addMapping("getFacingFromVector", EnumFacing.class, "func_176737_a");
addMapping("rotateZ", EnumFacing.class, "func_176738_p");
addMapping("byName", EnumFacing.class, "func_176739_a");
addMapping("getAxis", EnumFacing.class, "func_176740_k");
addMapping("random", EnumFacing.class, "func_176741_a");
addMapping("getName2", EnumFacing.class, "func_176742_j");
addMapping("getAxisDirection", EnumFacing.class, "func_176743_c");
addMapping("rotateX", EnumFacing.class, "func_176744_n");
addMapping("getIndex", EnumFacing.class, "func_176745_a");
addMapping("rotateY", EnumFacing.class, "func_176746_e");
addMapping("getFacingFromAxis", EnumFacing.class, "func_181076_a");
addMapping("getHorizontalAngle", EnumFacing.class, "func_185119_l");
addMapping("getDirectionFromEntityLiving", EnumFacing.class, "func_190914_a");
addMapping("getFrontOffsetZ", EnumFacing.class, "func_82599_e");
addMapping("getFront", EnumFacing.class, "func_82600_a");
addMapping("getFrontOffsetX", EnumFacing.class, "func_82601_c");
addMapping("getFrontOffsetY", EnumFacing.class, "func_96559_d");
addMapping("opposite", EnumHandSide.class, "func_188468_a");
addMapping("getParticleFromId", EnumParticleTypes.class, "func_179342_a");
addMapping("getShouldIgnoreRange", EnumParticleTypes.class, "func_179344_e");
addMapping("getArgumentCount", EnumParticleTypes.class, "func_179345_d");
addMapping("getParticleName", EnumParticleTypes.class, "func_179346_b");
addMapping("getParticleID", EnumParticleTypes.class, "func_179348_c");
addMapping("getByName", EnumParticleTypes.class, "func_186831_a");
addMapping("getParticleNames", EnumParticleTypes.class, "func_186832_a");
addMapping("getName", EnumTypeAdapterFactory.class, "func_151232_a");
addMapping("addStats", FoodStats.class, "func_151686_a");
addMapping("readNBT", FoodStats.class, "func_75112_a");
addMapping("addExhaustion", FoodStats.class, "func_75113_a");
addMapping("setFoodLevel", FoodStats.class, "func_75114_a");
addMapping("getSaturationLevel", FoodStats.class, "func_75115_e");
addMapping("getFoodLevel", FoodStats.class, "func_75116_a");
addMapping("writeNBT", FoodStats.class, "func_75117_b");
addMapping("onUpdate", FoodStats.class, "func_75118_a");
addMapping("setFoodSaturationLevel", FoodStats.class, "func_75119_b");
addMapping("needFood", FoodStats.class, "func_75121_c");
addMapping("addStats", FoodStats.class, "func_75122_a");
addMapping("getFrames", FrameTimer.class, "func_181746_c");
addMapping("addFrame", FrameTimer.class, "func_181747_a");
addMapping("getLagometerValue", FrameTimer.class, "func_181748_a");
addMapping("getLastIndex", FrameTimer.class, "func_181749_a");
addMapping("getIndex", FrameTimer.class, "func_181750_b");
addMapping("parseIndex", FrameTimer.class, "func_181751_b");
addMapping("post", HttpUtil.class, "func_151225_a");
addMapping("postMap", HttpUtil.class, "func_151226_a");
addMapping("downloadResourcePack", HttpUtil.class, "func_180192_a");
addMapping("buildPostString", HttpUtil.class, "func_76179_a");
addMapping("getSuitableLanPort", HttpUtil.class, "func_76181_a");
addMapping("getSerializableElement", IJsonSerializable.class, "func_151003_a");
addMapping("fromJson", IJsonSerializable.class, "func_152753_a");
addMapping("setDoneWorking", IProgressUpdate.class, "func_146586_a");
addMapping("setLoadingProgress", IProgressUpdate.class, "func_73718_a");
addMapping("displayLoadingString", IProgressUpdate.class, "func_73719_c");
addMapping("displaySavingString", IProgressUpdate.class, "func_73720_a");
addMapping("resetProgressAndMessage", IProgressUpdate.class, "func_73721_b");
addMapping("getName", IStringSerializable.class, "func_176610_l");
addMapping("setCompletions", ITabCompleter.class, "func_184072_a");
addMapping("addScheduledTask", IThreadListener.class, "func_152344_a");
addMapping("isCallingFromMinecraftThread", IThreadListener.class, "func_152345_ab");
addMapping("update", ITickable.class, "func_73660_a");
addMapping("removeEntry", IntHashMap.class, "func_76036_e");
addMapping("containsItem", IntHashMap.class, "func_76037_b");
addMapping("addKey", IntHashMap.class, "func_76038_a");
addMapping("insert", IntHashMap.class, "func_76040_a");
addMapping("lookup", IntHashMap.class, "func_76041_a");
addMapping("getSlotIndex", IntHashMap.class, "func_76043_a");
addMapping("computeHash", IntHashMap.class, "func_76044_g");
addMapping("lookupEntry", IntHashMap.class, "func_76045_c");
addMapping("clearMap", IntHashMap.class, "func_76046_c");
addMapping("grow", IntHashMap.class, "func_76047_h");
addMapping("copyTo", IntHashMap.class, "func_76048_a");
addMapping("removeObject", IntHashMap.class, "func_76049_d");
addMapping("getValue", IntIdentityHashBiMap.class, "func_186805_c");
addMapping("findEmpty", IntIdentityHashBiMap.class, "func_186806_e");
addMapping("grow", IntIdentityHashBiMap.class, "func_186807_d");
addMapping("add", IntIdentityHashBiMap.class, "func_186808_c");
addMapping("nextId", IntIdentityHashBiMap.class, "func_186809_c");
addMapping("size", IntIdentityHashBiMap.class, "func_186810_b");
addMapping("hashObject", IntIdentityHashBiMap.class, "func_186811_d");
addMapping("clear", IntIdentityHashBiMap.class, "func_186812_a");
addMapping("get", IntIdentityHashBiMap.class, "func_186813_a");
addMapping("put", IntIdentityHashBiMap.class, "func_186814_a");
addMapping("getId", IntIdentityHashBiMap.class, "func_186815_a");
addMapping("getIndex", IntIdentityHashBiMap.class, "func_186816_b");
addMapping("getInteger", IntegerCache.class, "func_181756_a");
addMapping("getString", JsonUtils.class, "func_151200_h");
addMapping("isJsonPrimitive", JsonUtils.class, "func_151201_f");
addMapping("isJsonArray", JsonUtils.class, "func_151202_d");
addMapping("getInt", JsonUtils.class, "func_151203_m");
addMapping("hasField", JsonUtils.class, "func_151204_g");
addMapping("isString", JsonUtils.class, "func_151205_a");
addMapping("getString", JsonUtils.class, "func_151206_a");
addMapping("getJsonArray", JsonUtils.class, "func_151207_m");
addMapping("getInt", JsonUtils.class, "func_151208_a");
addMapping("getBoolean", JsonUtils.class, "func_151209_a");
addMapping("getJsonObject", JsonUtils.class, "func_151210_l");
addMapping("isString", JsonUtils.class, "func_151211_a");
addMapping("getBoolean", JsonUtils.class, "func_151212_i");
addMapping("getJsonArray", JsonUtils.class, "func_151213_a");
addMapping("getJsonArray", JsonUtils.class, "func_151214_t");
addMapping("getInt", JsonUtils.class, "func_151215_f");
addMapping("getBoolean", JsonUtils.class, "func_151216_b");
addMapping("getFloat", JsonUtils.class, "func_151217_k");
addMapping("getJsonObject", JsonUtils.class, "func_151218_a");
addMapping("getString", JsonUtils.class, "func_151219_a");
addMapping("getFloat", JsonUtils.class, "func_151220_d");
addMapping("getFloat", JsonUtils.class, "func_151221_a");
addMapping("toString", JsonUtils.class, "func_151222_d");
addMapping("getJsonObject", JsonUtils.class, "func_152754_s");
addMapping("isBoolean", JsonUtils.class, "func_180199_c");
addMapping("getItem", JsonUtils.class, "func_188172_b");
addMapping("gsonDeserialize", JsonUtils.class, "func_188173_a");
addMapping("deserializeClass", JsonUtils.class, "func_188174_a");
addMapping("isNumber", JsonUtils.class, "func_188175_b");
addMapping("gsonDeserialize", JsonUtils.class, "func_188176_a");
addMapping("deserializeClass", JsonUtils.class, "func_188177_a");
addMapping("gsonDeserialize", JsonUtils.class, "func_188178_a");
addMapping("deserializeClass", JsonUtils.class, "func_188179_a");
addMapping("getItem", JsonUtils.class, "func_188180_i");
addMapping("fromJson", JsonUtils.class, "func_193837_a");
addMapping("fromJson", JsonUtils.class, "func_193838_a");
addMapping("fromJson", JsonUtils.class, "func_193839_a");
addMapping("gsonDeserialize", JsonUtils.class, "func_193840_a");
addMapping("fromJson", JsonUtils.class, "func_193841_a");
addMapping("load", LazyLoadBase.class, "func_179280_b");
addMapping("getValue", LazyLoadBase.class, "func_179281_c");
addMapping("logString", LoggingPrintStream.class, "func_179882_a");
addMapping("populateMap", MapPopulator.class, "func_179399_a");
addMapping("createMap", MapPopulator.class, "func_179400_b");
addMapping("toRotation", Mirror.class, "func_185800_a");
addMapping("mirrorRotation", Mirror.class, "func_185802_a");
addMapping("mirror", Mirror.class, "func_185803_b");
addMapping("reset", MouseFilter.class, "func_180179_a");
addMapping("smooth", MouseFilter.class, "func_76333_a");
addMapping("grabMouseCursor", MouseHelper.class, "func_74372_a");
addMapping("ungrabMouseCursor", MouseHelper.class, "func_74373_b");
addMapping("mouseXYChange", MouseHelper.class, "func_74374_c");
addMapping("getMoveVector", MovementInput.class, "func_190020_b");
addMapping("updatePlayerMoveState", MovementInput.class, "func_78898_a");
addMapping("updatePlayerMoveState", MovementInputFromOptions.class, "func_78898_a");
addMapping("create", NonNullList.class, "func_191196_a");
addMapping("withSize", NonNullList.class, "func_191197_a");
addMapping("from", NonNullList.class, "func_193580_a");
addMapping("getByValue", ObjectIntIdentityMap.class, "func_148745_a");
addMapping("put", ObjectIntIdentityMap.class, "func_148746_a");
addMapping("get", ObjectIntIdentityMap.class, "func_148747_b");
addMapping("size", ObjectIntIdentityMap.class, "func_186804_a");
addMapping("getCrashReport", ReportedException.class, "func_71575_a");
addMapping("getResourcePath", ResourceLocation.class, "func_110623_a");
addMapping("getResourceDomain", ResourceLocation.class, "func_110624_b");
addMapping("splitObjectName", ResourceLocation.class, "func_177516_a");
addMapping("add", Rotation.class, "func_185830_a");
addMapping("rotate", Rotation.class, "func_185831_a");
addMapping("rotate", Rotation.class, "func_185833_a");
addMapping("saveScreenshot", ScreenShotHelper.class, "func_148259_a");
addMapping("saveScreenshot", ScreenShotHelper.class, "func_148260_a");
addMapping("createScreenshot", ScreenShotHelper.class, "func_186719_a");
addMapping("getTimestampedPNGFileForDirectory", ScreenShotHelper.class, "func_74290_a");
addMapping("getUsername", Session.class, "func_111285_a");
addMapping("getSessionID", Session.class, "func_111286_b");
addMapping("getToken", Session.class, "func_148254_d");
addMapping("getPlayerID", Session.class, "func_148255_b");
addMapping("getProfile", Session.class, "func_148256_e");
addMapping("getName", SoundCategory.class, "func_187948_a");
addMapping("getSoundCategoryNames", SoundCategory.class, "func_187949_b");
addMapping("getByName", SoundCategory.class, "func_187950_a");
addMapping("registerSound", SoundEvent.class, "func_187502_a");
addMapping("getSoundName", SoundEvent.class, "func_187503_a");
addMapping("registerSounds", SoundEvent.class, "func_187504_b");
addMapping("isNullOrEmpty", StringUtils.class, "func_151246_b");
addMapping("ticksToElapsedTime", StringUtils.class, "func_76337_a");
addMapping("stripControlCodes", StringUtils.class, "func_76338_a");
addMapping("requestCompletions", TabCompleter.class, "func_186838_a");
addMapping("getTargetBlockPos", TabCompleter.class, "func_186839_b");
addMapping("setCompletions", TabCompleter.class, "func_186840_a");
addMapping("complete", TabCompleter.class, "func_186841_a");
addMapping("resetDidComplete", TabCompleter.class, "func_186842_c");
addMapping("resetRequested", TabCompleter.class, "func_186843_d");
addMapping("updateTimer", Timer.class, "func_74275_a");
addMapping("getSecond", Tuple.class, "func_76340_b");
addMapping("getFirst", Tuple.class, "func_76341_a");
addMapping("getJsonSerializableValue", TupleIntJsonSerializable.class, "func_151187_b");
addMapping("setIntegerValue", TupleIntJsonSerializable.class, "func_151188_a");
addMapping("getIntegerValue", TupleIntJsonSerializable.class, "func_151189_a");
addMapping("setJsonSerializableValue", TupleIntJsonSerializable.class, "func_151190_a");
addMapping("getOSType", Util.class, "func_110647_a");
addMapping("runTask", Util.class, "func_181617_a");
addMapping("getLastElement", Util.class, "func_184878_a");
addMapping("getRandomItem", WeightedRandom.class, "func_180166_a");
addMapping("getRandomItem", WeightedRandom.class, "func_76271_a");
addMapping("getTotalWeight", WeightedRandom.class, "func_76272_a");
addMapping("getRandomItem", WeightedRandom.class, "func_76273_a");
addMapping("getNbt", WeightedSpawnerEntity.class, "func_185277_b");
addMapping("toCompoundTag", WeightedSpawnerEntity.class, "func_185278_a");
addMapping("process", DataFixer.class, "func_188251_a");
addMapping("processFixes", DataFixer.class, "func_188252_b");
addMapping("processWalkers", DataFixer.class, "func_188253_c");
addMapping("getTypeList", DataFixer.class, "func_188254_a");
addMapping("registerVanillaWalker", DataFixer.class, "func_188255_a");
addMapping("registerFix", DataFixer.class, "func_188256_a");
addMapping("process", DataFixer.class, "func_188257_a");
addMapping("registerWalker", DataFixer.class, "func_188258_a");
addMapping("registerFixes", DataFixesManager.class, "func_188276_a");
addMapping("processItemStack", DataFixesManager.class, "func_188277_a");
addMapping("processInventory", DataFixesManager.class, "func_188278_b");
addMapping("createFixer", DataFixesManager.class, "func_188279_a");
addMapping("process", IDataFixer.class, "func_188251_a");
addMapping("process", IDataWalker.class, "func_188266_a");
addMapping("getFixVersion", IFixableData.class, "func_188216_a");
addMapping("fixTagCompound", IFixableData.class, "func_188217_a");
addMapping("getFixVersion", AddBedTileEntity.class, "func_188216_a");
addMapping("fixTagCompound", AddBedTileEntity.class, "func_188217_a");
addMapping("getFixVersion", ArmorStandSilent.class, "func_188216_a");
addMapping("fixTagCompound", ArmorStandSilent.class, "func_188217_a");
addMapping("getFixVersion", BannerItemColor.class, "func_188216_a");
addMapping("fixTagCompound", BannerItemColor.class, "func_188217_a");
addMapping("getFixVersion", BedItemColor.class, "func_188216_a");
addMapping("fixTagCompound", BedItemColor.class, "func_188217_a");
addMapping("getFixVersion", BookPagesStrictJSON.class, "func_188216_a");
addMapping("fixTagCompound", BookPagesStrictJSON.class, "func_188217_a");
addMapping("getFixVersion", CookedFishIDTypo.class, "func_188216_a");
addMapping("fixTagCompound", CookedFishIDTypo.class, "func_188217_a");
addMapping("getFixVersion", ElderGuardianSplit.class, "func_188216_a");
addMapping("fixTagCompound", ElderGuardianSplit.class, "func_188217_a");
addMapping("getFixVersion", EntityArmorAndHeld.class, "func_188216_a");
addMapping("fixTagCompound", EntityArmorAndHeld.class, "func_188217_a");
addMapping("getFixVersion", EntityHealth.class, "func_188216_a");
addMapping("fixTagCompound", EntityHealth.class, "func_188217_a");
addMapping("getFixVersion", EntityId.class, "func_188216_a");
addMapping("fixTagCompound", EntityId.class, "func_188217_a");
addMapping("getFixVersion", ForceVBOOn.class, "func_188216_a");
addMapping("fixTagCompound", ForceVBOOn.class, "func_188217_a");
addMapping("getFixVersion", HorseSaddle.class, "func_188216_a");
addMapping("fixTagCompound", HorseSaddle.class, "func_188217_a");
addMapping("getFixVersion", HorseSplit.class, "func_188216_a");
addMapping("fixTagCompound", HorseSplit.class, "func_188217_a");
addMapping("getFixVersion", ItemIntIDToString.class, "func_188216_a");
addMapping("fixTagCompound", ItemIntIDToString.class, "func_188217_a");
addMapping("getFixVersion", MinecartEntityTypes.class, "func_188216_a");
addMapping("fixTagCompound", MinecartEntityTypes.class, "func_188217_a");
addMapping("getFixVersion", OptionsLowerCaseLanguage.class, "func_188216_a");
addMapping("fixTagCompound", OptionsLowerCaseLanguage.class, "func_188217_a");
addMapping("getFixVersion", PaintingDirection.class, "func_188216_a");
addMapping("fixTagCompound", PaintingDirection.class, "func_188217_a");
addMapping("getFixVersion", PotionItems.class, "func_188216_a");
addMapping("fixTagCompound", PotionItems.class, "func_188217_a");
addMapping("getFixVersion", PotionWater.class, "func_188216_a");
addMapping("fixTagCompound", PotionWater.class, "func_188217_a");
addMapping("getFixVersion", RedundantChanceTags.class, "func_188216_a");
addMapping("fixTagCompound", RedundantChanceTags.class, "func_188217_a");
addMapping("getFixVersion", RidingToPassengers.class, "func_188216_a");
addMapping("fixTagCompound", RidingToPassengers.class, "func_188217_a");
addMapping("addPassengerToVehicle", RidingToPassengers.class, "func_188219_a");
addMapping("extractVehicle", RidingToPassengers.class, "func_188220_b");
addMapping("getFixVersion", ShulkerBoxEntityColor.class, "func_188216_a");
addMapping("fixTagCompound", ShulkerBoxEntityColor.class, "func_188217_a");
addMapping("getFixVersion", ShulkerBoxItemColor.class, "func_188216_a");
addMapping("fixTagCompound", ShulkerBoxItemColor.class, "func_188217_a");
addMapping("getFixVersion", ShulkerBoxTileColor.class, "func_188216_a");
addMapping("fixTagCompound", ShulkerBoxTileColor.class, "func_188217_a");
addMapping("getFixVersion", SignStrictJSON.class, "func_188216_a");
addMapping("fixTagCompound", SignStrictJSON.class, "func_188217_a");
addMapping("updateLine", SignStrictJSON.class, "func_188224_a");
addMapping("getFixVersion", SkeletonSplit.class, "func_188216_a");
addMapping("fixTagCompound", SkeletonSplit.class, "func_188217_a");
addMapping("getFixVersion", SpawnEggNames.class, "func_188216_a");
addMapping("fixTagCompound", SpawnEggNames.class, "func_188217_a");
addMapping("getFixVersion", SpawnerEntityTypes.class, "func_188216_a");
addMapping("fixTagCompound", SpawnerEntityTypes.class, "func_188217_a");
addMapping("getFixVersion", StringToUUID.class, "func_188216_a");
addMapping("fixTagCompound", StringToUUID.class, "func_188217_a");
addMapping("getFixVersion", TileEntityId.class, "func_188216_a");
addMapping("fixTagCompound", TileEntityId.class, "func_188217_a");
addMapping("getFixVersion", TotemItemRename.class, "func_188216_a");
addMapping("fixTagCompound", TotemItemRename.class, "func_188217_a");
addMapping("getFixVersion", ZombieProfToType.class, "func_188216_a");
addMapping("fixTagCompound", ZombieProfToType.class, "func_188217_a");
addMapping("getVillagerProfession", ZombieProfToType.class, "func_191277_a");
addMapping("getFixVersion", ZombieSplit.class, "func_188216_a");
addMapping("fixTagCompound", ZombieSplit.class, "func_188217_a");
addMapping("process", BlockEntityTag.class, "func_188266_a");
addMapping("getBlockEntityID", BlockEntityTag.class, "func_188267_a");
addMapping("process", EntityTag.class, "func_188266_a");
addMapping("process", Filtered.class, "func_188266_a");
addMapping("filteredProcess", Filtered.class, "func_188271_b");
addMapping("filteredProcess", ItemStackData.class, "func_188271_b");
addMapping("filteredProcess", ItemStackDataLists.class, "func_188271_b");
addMapping("union", AxisAlignedBB.class, "func_111270_a");
addMapping("hasNaN", AxisAlignedBB.class, "func_181656_b");
addMapping("intersectsWithYZ", AxisAlignedBB.class, "func_186660_b");
addMapping("isClosest", AxisAlignedBB.class, "func_186661_a");
addMapping("grow", AxisAlignedBB.class, "func_186662_g");
addMapping("collideWithYPlane", AxisAlignedBB.class, "func_186663_b");
addMapping("shrink", AxisAlignedBB.class, "func_186664_h");
addMapping("collideWithZPlane", AxisAlignedBB.class, "func_186665_c");
addMapping("setMaxY", AxisAlignedBB.class, "func_186666_e");
addMapping("intersectsWithXZ", AxisAlignedBB.class, "func_186667_c");
addMapping("intersects", AxisAlignedBB.class, "func_186668_a");
addMapping("intersectsWithXY", AxisAlignedBB.class, "func_186669_d");
addMapping("offset", AxisAlignedBB.class, "func_186670_a");
addMapping("collideWithXPlane", AxisAlignedBB.class, "func_186671_a");
addMapping("getCenter", AxisAlignedBB.class, "func_189972_c");
addMapping("intersects", AxisAlignedBB.class, "func_189973_a");
addMapping("offset", AxisAlignedBB.class, "func_191194_a");
addMapping("contract", AxisAlignedBB.class, "func_191195_a");
addMapping("intersect", AxisAlignedBB.class, "func_191500_a");
addMapping("grow", AxisAlignedBB.class, "func_72314_b");
addMapping("calculateXOffset", AxisAlignedBB.class, "func_72316_a");
addMapping("offset", AxisAlignedBB.class, "func_72317_d");
addMapping("contains", AxisAlignedBB.class, "func_72318_a");
addMapping("getAverageEdgeLength", AxisAlignedBB.class, "func_72320_b");
addMapping("expand", AxisAlignedBB.class, "func_72321_a");
addMapping("calculateZOffset", AxisAlignedBB.class, "func_72322_c");
addMapping("calculateYOffset", AxisAlignedBB.class, "func_72323_b");
addMapping("intersects", AxisAlignedBB.class, "func_72326_a");
addMapping("calculateIntercept", AxisAlignedBB.class, "func_72327_a");
addMapping("crossProduct", BlockPos.class, "func_177955_d");
addMapping("add", BlockPos.class, "func_177963_a");
addMapping("north", BlockPos.class, "func_177964_d");
addMapping("east", BlockPos.class, "func_177965_g");
addMapping("offset", BlockPos.class, "func_177967_a");
addMapping("south", BlockPos.class, "func_177968_d");
addMapping("fromLong", BlockPos.class, "func_177969_a");
addMapping("south", BlockPos.class, "func_177970_e");
addMapping("add", BlockPos.class, "func_177971_a");
addMapping("offset", BlockPos.class, "func_177972_a");
addMapping("subtract", BlockPos.class, "func_177973_b");
addMapping("east", BlockPos.class, "func_177974_f");
addMapping("getAllInBoxMutable", BlockPos.class, "func_177975_b");
addMapping("west", BlockPos.class, "func_177976_e");
addMapping("down", BlockPos.class, "func_177977_b");
addMapping("north", BlockPos.class, "func_177978_c");
addMapping("down", BlockPos.class, "func_177979_c");
addMapping("getAllInBox", BlockPos.class, "func_177980_a");
addMapping("up", BlockPos.class, "func_177981_b");
addMapping("add", BlockPos.class, "func_177982_a");
addMapping("up", BlockPos.class, "func_177984_a");
addMapping("west", BlockPos.class, "func_177985_f");
addMapping("toLong", BlockPos.class, "func_177986_g");
addMapping("toImmutable", BlockPos.class, "func_185334_h");
addMapping("rotate", BlockPos.class, "func_190942_a");
addMapping("getAllInBoxMutable", BlockPos.class, "func_191531_b");
addMapping("getAllInBox", BlockPos.class, "func_191532_a");
addMapping("cartesianProduct", Cartesian.class, "func_179318_a");
addMapping("createArray", Cartesian.class, "func_179319_b");
addMapping("cartesianProduct", Cartesian.class, "func_179321_a");
addMapping("toArray", Cartesian.class, "func_179322_b");
addMapping("arraysAsLists", Cartesian.class, "func_179323_b");
addMapping("getZEnd", ChunkPos.class, "func_180330_f");
addMapping("getBlock", ChunkPos.class, "func_180331_a");
addMapping("getXEnd", ChunkPos.class, "func_180332_e");
addMapping("getZStart", ChunkPos.class, "func_180333_d");
addMapping("getXStart", ChunkPos.class, "func_180334_c");
addMapping("getDistanceSq", ChunkPos.class, "func_185327_a");
addMapping("asLong", ChunkPos.class, "func_77272_a");
addMapping("isPowerOfTwo", MathHelper.class, "func_151235_d");
addMapping("smallestEncompassingPowerOfTwo", MathHelper.class, "func_151236_b");
addMapping("clamp", MathHelper.class, "func_151237_a");
addMapping("clampedLerp", MathHelper.class, "func_151238_b");
addMapping("log2", MathHelper.class, "func_151239_c");
addMapping("nextFloat", MathHelper.class, "func_151240_a");
addMapping("log2DeBruijn", MathHelper.class, "func_151241_e");
addMapping("absFloor", MathHelper.class, "func_154353_e");
addMapping("roundUp", MathHelper.class, "func_154354_b");
addMapping("rgb", MathHelper.class, "func_180181_b");
addMapping("getRandomUUID", MathHelper.class, "func_180182_a");
addMapping("rgb", MathHelper.class, "func_180183_b");
addMapping("normalizeAngle", MathHelper.class, "func_180184_b");
addMapping("epsilonEquals", MathHelper.class, "func_180185_a");
addMapping("getPositionRandom", MathHelper.class, "func_180186_a");
addMapping("getCoordinateRandom", MathHelper.class, "func_180187_c");
addMapping("multiplyColor", MathHelper.class, "func_180188_d");
addMapping("atan2", MathHelper.class, "func_181159_b");
addMapping("pct", MathHelper.class, "func_181160_c");
addMapping("fastInvSqrt", MathHelper.class, "func_181161_i");
addMapping("frac", MathHelper.class, "func_181162_h");
addMapping("hsvToRGB", MathHelper.class, "func_181758_c");
addMapping("positiveModulo", MathHelper.class, "func_188207_b");
addMapping("hash", MathHelper.class, "func_188208_f");
addMapping("wrapDegrees", MathHelper.class, "func_188209_b");
addMapping("getRandomUUID", MathHelper.class, "func_188210_a");
addMapping("positiveModulo", MathHelper.class, "func_191273_b");
addMapping("ceil", MathHelper.class, "func_76123_f");
addMapping("lfloor", MathHelper.class, "func_76124_d");
addMapping("clamp", MathHelper.class, "func_76125_a");
addMapping("sin", MathHelper.class, "func_76126_a");
addMapping("average", MathHelper.class, "func_76127_a");
addMapping("floor", MathHelper.class, "func_76128_c");
addMapping("sqrt", MathHelper.class, "func_76129_c");
addMapping("abs", MathHelper.class, "func_76130_a");
addMapping("clamp", MathHelper.class, "func_76131_a");
addMapping("absMax", MathHelper.class, "func_76132_a");
addMapping("sqrt", MathHelper.class, "func_76133_a");
addMapping("cos", MathHelper.class, "func_76134_b");
addMapping("abs", MathHelper.class, "func_76135_e");
addMapping("getInt", MathHelper.class, "func_76136_a");
addMapping("intFloorDiv", MathHelper.class, "func_76137_a");
addMapping("wrapDegrees", MathHelper.class, "func_76138_g");
addMapping("fastFloor", MathHelper.class, "func_76140_b");
addMapping("floor", MathHelper.class, "func_76141_d");
addMapping("wrapDegrees", MathHelper.class, "func_76142_g");
addMapping("ceil", MathHelper.class, "func_76143_f");
addMapping("getDouble", MathHelper.class, "func_82712_a");
addMapping("getDouble", MathHelper.class, "func_82713_a");
addMapping("getInt", MathHelper.class, "func_82714_a");
addMapping("getInt", MathHelper.class, "func_82715_a");
addMapping("nextDouble", MathHelper.class, "func_82716_a");
addMapping("getBlockPos", RayTraceResult.class, "func_178782_a");
addMapping("getZ", Rotations.class, "func_179413_d");
addMapping("writeToNBT", Rotations.class, "func_179414_a");
addMapping("getX", Rotations.class, "func_179415_b");
addMapping("getY", Rotations.class, "func_179416_c");
addMapping("rotateYaw", Vec3d.class, "func_178785_b");
addMapping("subtract", Vec3d.class, "func_178786_a");
addMapping("add", Vec3d.class, "func_178787_e");
addMapping("subtract", Vec3d.class, "func_178788_d");
addMapping("rotatePitch", Vec3d.class, "func_178789_a");
addMapping("scale", Vec3d.class, "func_186678_a");
addMapping("squareDistanceTo", Vec3d.class, "func_186679_c");
addMapping("fromPitchYawVector", Vec3d.class, "func_189984_a");
addMapping("lengthSquared", Vec3d.class, "func_189985_c");
addMapping("fromPitchYaw", Vec3d.class, "func_189986_a");
addMapping("getIntermediateWithXValue", Vec3d.class, "func_72429_b");
addMapping("dotProduct", Vec3d.class, "func_72430_b");
addMapping("crossProduct", Vec3d.class, "func_72431_c");
addMapping("normalize", Vec3d.class, "func_72432_b");
addMapping("lengthVector", Vec3d.class, "func_72433_c");
addMapping("getIntermediateWithZValue", Vec3d.class, "func_72434_d");
addMapping("getIntermediateWithYValue", Vec3d.class, "func_72435_c");
addMapping("squareDistanceTo", Vec3d.class, "func_72436_e");
addMapping("distanceTo", Vec3d.class, "func_72438_d");
addMapping("addVector", Vec3d.class, "func_72441_c");
addMapping("subtractReverse", Vec3d.class, "func_72444_a");
addMapping("distanceSq", Vec3i.class, "func_177951_i");
addMapping("getZ", Vec3i.class, "func_177952_p");
addMapping("distanceSq", Vec3i.class, "func_177954_c");
addMapping("crossProduct", Vec3i.class, "func_177955_d");
addMapping("getY", Vec3i.class, "func_177956_o");
addMapping("distanceSqToCenter", Vec3i.class, "func_177957_d");
addMapping("getX", Vec3i.class, "func_177958_n");
addMapping("getDistance", Vec3i.class, "func_185332_f");
addMapping("getKeys", IRegistry.class, "func_148742_b");
addMapping("getObject", IRegistry.class, "func_82594_a");
addMapping("putObject", IRegistry.class, "func_82595_a");
addMapping("getObject", RegistryDefaulted.class, "func_82594_a");
addMapping("createUnderlyingMap", RegistryNamespaced.class, "func_148740_a");
addMapping("containsKey", RegistryNamespaced.class, "func_148741_d");
addMapping("getObjectById", RegistryNamespaced.class, "func_148754_a");
addMapping("getIDForObject", RegistryNamespaced.class, "func_148757_b");
addMapping("getNameForObject", RegistryNamespaced.class, "func_177774_c");
addMapping("register", RegistryNamespaced.class, "func_177775_a");
addMapping("getObject", RegistryNamespaced.class, "func_82594_a");
addMapping("getObjectById", RegistryNamespacedDefaultedByKey.class, "func_148754_a");
addMapping("getIDForObject", RegistryNamespacedDefaultedByKey.class, "func_148757_b");
addMapping("getNameForObject", RegistryNamespacedDefaultedByKey.class, "func_177774_c");
addMapping("register", RegistryNamespacedDefaultedByKey.class, "func_177775_a");
addMapping("validateKey", RegistryNamespacedDefaultedByKey.class, "func_177776_a");
addMapping("getRandomObject", RegistryNamespacedDefaultedByKey.class, "func_186801_a");
addMapping("getObject", RegistryNamespacedDefaultedByKey.class, "func_82594_a");
addMapping("createUnderlyingMap", RegistrySimple.class, "func_148740_a");
addMapping("containsKey", RegistrySimple.class, "func_148741_d");
addMapping("getKeys", RegistrySimple.class, "func_148742_b");
addMapping("getRandomObject", RegistrySimple.class, "func_186801_a");
addMapping("getObject", RegistrySimple.class, "func_82594_a");
addMapping("putObject", RegistrySimple.class, "func_82595_a");
addMapping("byId", ChatType.class, "func_192582_a");
addMapping("getId", ChatType.class, "func_192583_a");
addMapping("getSiblings", ITextComponent.class, "func_150253_a");
addMapping("getFormattedText", ITextComponent.class, "func_150254_d");
addMapping("setStyle", ITextComponent.class, "func_150255_a");
addMapping("getStyle", ITextComponent.class, "func_150256_b");
addMapping("appendSibling", ITextComponent.class, "func_150257_a");
addMapping("appendText", ITextComponent.class, "func_150258_a");
addMapping("createCopy", ITextComponent.class, "func_150259_f");
addMapping("getUnformattedText", ITextComponent.class, "func_150260_c");
addMapping("getUnformattedComponentText", ITextComponent.class, "func_150261_e");
addMapping("createDeepCopy", Style.class, "func_150206_m");
addMapping("setHoverEvent", Style.class, "func_150209_a");
addMapping("getHoverEvent", Style.class, "func_150210_i");
addMapping("getColor", Style.class, "func_150215_a");
addMapping("setItalic", Style.class, "func_150217_b");
addMapping("getFormattingCode", Style.class, "func_150218_j");
addMapping("setParentStyle", Style.class, "func_150221_a");
addMapping("getBold", Style.class, "func_150223_b");
addMapping("getParent", Style.class, "func_150224_n");
addMapping("setStrikethrough", Style.class, "func_150225_c");
addMapping("setBold", Style.class, "func_150227_a");
addMapping("setUnderlined", Style.class, "func_150228_d");
addMapping("isEmpty", Style.class, "func_150229_g");
addMapping("createShallowCopy", Style.class, "func_150232_l");
addMapping("getObfuscated", Style.class, "func_150233_f");
addMapping("getUnderlined", Style.class, "func_150234_e");
addMapping("getClickEvent", Style.class, "func_150235_h");
addMapping("getStrikethrough", Style.class, "func_150236_d");
addMapping("setObfuscated", Style.class, "func_150237_e");
addMapping("setColor", Style.class, "func_150238_a");
addMapping("setClickEvent", Style.class, "func_150241_a");
addMapping("getItalic", Style.class, "func_150242_c");
addMapping("getInsertion", Style.class, "func_179986_j");
addMapping("setInsertion", Style.class, "func_179989_a");
addMapping("getSiblings", TextComponentBase.class, "func_150253_a");
addMapping("getFormattedText", TextComponentBase.class, "func_150254_d");
addMapping("setStyle", TextComponentBase.class, "func_150255_a");
addMapping("getStyle", TextComponentBase.class, "func_150256_b");
addMapping("appendSibling", TextComponentBase.class, "func_150257_a");
addMapping("appendText", TextComponentBase.class, "func_150258_a");
addMapping("getUnformattedText", TextComponentBase.class, "func_150260_c");
addMapping("createDeepCopyIterator", TextComponentBase.class, "func_150262_a");
addMapping("createCopy", TextComponentKeybind.class, "func_150259_f");
addMapping("getUnformattedComponentText", TextComponentKeybind.class, "func_150261_e");
addMapping("getKeybind", TextComponentKeybind.class, "func_193633_h");
addMapping("createCopy", TextComponentScore.class, "func_150259_f");
addMapping("getUnformattedComponentText", TextComponentScore.class, "func_150261_e");
addMapping("getObjective", TextComponentScore.class, "func_179994_h");
addMapping("getName", TextComponentScore.class, "func_179995_g");
addMapping("setValue", TextComponentScore.class, "func_179997_b");
addMapping("resolve", TextComponentScore.class, "func_186876_a");
addMapping("createCopy", TextComponentSelector.class, "func_150259_f");
addMapping("getUnformattedComponentText", TextComponentSelector.class, "func_150261_e");
addMapping("getSelector", TextComponentSelector.class, "func_179992_g");
addMapping("createCopy", TextComponentString.class, "func_150259_f");
addMapping("getUnformattedComponentText", TextComponentString.class, "func_150261_e");
addMapping("getText", TextComponentString.class, "func_150265_g");
addMapping("setStyle", TextComponentTranslation.class, "func_150255_a");
addMapping("createCopy", TextComponentTranslation.class, "func_150259_f");
addMapping("getUnformattedComponentText", TextComponentTranslation.class, "func_150261_e");
addMapping("getKey", TextComponentTranslation.class, "func_150268_i");
addMapping("initializeFromFormat", TextComponentTranslation.class, "func_150269_b");
addMapping("ensureInitialized", TextComponentTranslation.class, "func_150270_g");
addMapping("getFormatArgs", TextComponentTranslation.class, "func_150271_j");
addMapping("getFormatArgumentAsComponent", TextComponentTranslation.class, "func_150272_a");
addMapping("processComponent", TextComponentUtils.class, "func_179985_a");
addMapping("getTextWithoutFormattingCodes", TextFormatting.class, "func_110646_a");
addMapping("fromColorIndex", TextFormatting.class, "func_175744_a");
addMapping("lowercaseAlpha", TextFormatting.class, "func_175745_c");
addMapping("getColorIndex", TextFormatting.class, "func_175746_b");
addMapping("getValidValues", TextFormatting.class, "func_96296_a");
addMapping("getFriendlyName", TextFormatting.class, "func_96297_d");
addMapping("getValueByName", TextFormatting.class, "func_96300_b");
addMapping("isFancyStyling", TextFormatting.class, "func_96301_b");
addMapping("isColor", TextFormatting.class, "func_96302_c");
addMapping("getValue", ClickEvent.class, "func_150668_b");
addMapping("getAction", ClickEvent.class, "func_150669_a");
addMapping("getAction", HoverEvent.class, "func_150701_a");
addMapping("getValue", HoverEvent.class, "func_150702_b");
addMapping("translateToFallback", I18n.class, "func_150826_b");
addMapping("getLastTranslationUpdateTimeInMilliseconds", I18n.class, "func_150827_a");
addMapping("translateToLocalFormatted", I18n.class, "func_74837_a");
addMapping("translateToLocal", I18n.class, "func_74838_a");
addMapping("canTranslate", I18n.class, "func_94522_b");
addMapping("replaceWith", LanguageMap.class, "func_135063_a");
addMapping("tryTranslateKey", LanguageMap.class, "func_135064_c");
addMapping("getLastUpdateTimeInMilliseconds", LanguageMap.class, "func_150510_c");
addMapping("translateKeyFormat", LanguageMap.class, "func_74803_a");
addMapping("translateKey", LanguageMap.class, "func_74805_b");
addMapping("getInstance", LanguageMap.class, "func_74808_a");
addMapping("isKeyTranslated", LanguageMap.class, "func_94520_b");
addMapping("getMaxTradeUses", MerchantRecipe.class, "func_180320_f");
addMapping("getToolUses", MerchantRecipe.class, "func_180321_e");
addMapping("getRewardsExp", MerchantRecipe.class, "func_180322_j");
addMapping("readFromTags", MerchantRecipe.class, "func_77390_a");
addMapping("getItemToBuy", MerchantRecipe.class, "func_77394_a");
addMapping("writeToTags", MerchantRecipe.class, "func_77395_g");
addMapping("getSecondItemToBuy", MerchantRecipe.class, "func_77396_b");
addMapping("getItemToSell", MerchantRecipe.class, "func_77397_d");
addMapping("hasSecondItemToBuy", MerchantRecipe.class, "func_77398_c");
addMapping("incrementToolUses", MerchantRecipe.class, "func_77399_f");
addMapping("increaseMaxTradeUses", MerchantRecipe.class, "func_82783_a");
addMapping("isRecipeDisabled", MerchantRecipe.class, "func_82784_g");
addMapping("compensateToolUses", MerchantRecipe.class, "func_82785_h");
addMapping("readFromBuf", MerchantRecipeList.class, "func_151390_b");
addMapping("writeToBuf", MerchantRecipeList.class, "func_151391_a");
addMapping("areItemStacksExactlyEqual", MerchantRecipeList.class, "func_181078_a");
addMapping("readRecipiesFromTags", MerchantRecipeList.class, "func_77201_a");
addMapping("getRecipiesAsTags", MerchantRecipeList.class, "func_77202_a");
addMapping("canRecipeBeUsed", MerchantRecipeList.class, "func_77203_a");
addMapping("isWoodDoor", Village.class, "func_179860_f");
addMapping("isAreaClearAround", Village.class, "func_179861_a");
addMapping("findRandomSpawnPos", Village.class, "func_179862_a");
addMapping("getDoorInfo", Village.class, "func_179863_c");
addMapping("getExistedDoor", Village.class, "func_179864_e");
addMapping("getNearestDoor", Village.class, "func_179865_b");
addMapping("isBlockPosWithinSqVillageRadius", Village.class, "func_179866_a");
addMapping("getCenter", Village.class, "func_180608_a");
addMapping("removeDeadAndOutOfRangeDoors", Village.class, "func_75557_k");
addMapping("getVillageDoorInfoList", Village.class, "func_75558_f");
addMapping("tick", Village.class, "func_75560_a");
addMapping("getTicksSinceLastDoorAdding", Village.class, "func_75561_d");
addMapping("getNumVillagers", Village.class, "func_75562_e");
addMapping("removeDeadAndOldAgressors", Village.class, "func_75565_j");
addMapping("isAnnihilated", Village.class, "func_75566_g");
addMapping("getNumVillageDoors", Village.class, "func_75567_c");
addMapping("getVillageRadius", Village.class, "func_75568_b");
addMapping("findNearestVillageAggressor", Village.class, "func_75571_b");
addMapping("updateNumVillagers", Village.class, "func_75572_i");
addMapping("updateVillageRadiusAndCenter", Village.class, "func_75573_l");
addMapping("addOrRenewAgressor", Village.class, "func_75575_a");
addMapping("addVillageDoorInfo", Village.class, "func_75576_a");
addMapping("updateNumIronGolems", Village.class, "func_75579_h");
addMapping("setDefaultPlayerReputation", Village.class, "func_82683_b");
addMapping("getPlayerReputation", Village.class, "func_82684_a");
addMapping("getNearestTargetPlayer", Village.class, "func_82685_c");
addMapping("isMatingSeason", Village.class, "func_82686_i");
addMapping("isPlayerReputationTooLow", Village.class, "func_82687_d");
addMapping("modifyPlayerReputation", Village.class, "func_82688_a");
addMapping("writeVillageDataToNBT", Village.class, "func_82689_b");
addMapping("readVillageDataFromNBT", Village.class, "func_82690_a");
addMapping("setWorld", Village.class, "func_82691_a");
addMapping("endMatingSeason", Village.class, "func_82692_h");
addMapping("checkDoorExistence", VillageCollection.class, "func_176055_c");
addMapping("getNearestVillage", VillageCollection.class, "func_176056_a");
addMapping("positionInList", VillageCollection.class, "func_176057_e");
addMapping("isWoodDoor", VillageCollection.class, "func_176058_f");
addMapping("addToNewDoorsList", VillageCollection.class, "func_176059_d");
addMapping("addToVillagerPositionList", VillageCollection.class, "func_176060_a");
addMapping("countBlocksCanSeeSky", VillageCollection.class, "func_176061_a");
addMapping("fileNameForProvider", VillageCollection.class, "func_176062_a");
addMapping("addDoorsAround", VillageCollection.class, "func_180609_b");
addMapping("writeToNBT", VillageCollection.class, "func_189551_b");
addMapping("getVillageList", VillageCollection.class, "func_75540_b");
addMapping("dropOldestVillagerPosition", VillageCollection.class, "func_75543_d");
addMapping("tick", VillageCollection.class, "func_75544_a");
addMapping("addNewDoorsToVillageOrCreateVillage", VillageCollection.class, "func_75545_e");
addMapping("removeAnnihilatedVillages", VillageCollection.class, "func_75549_c");
addMapping("readFromNBT", VillageCollection.class, "func_76184_a");
addMapping("setWorldsForAll", VillageCollection.class, "func_82566_a");
addMapping("getDistanceToInsideBlockSq", VillageDoorInfo.class, "func_179846_b");
addMapping("getInsideOffsetX", VillageDoorInfo.class, "func_179847_f");
addMapping("getDistanceToDoorBlockSq", VillageDoorInfo.class, "func_179848_a");
addMapping("setLastActivityTimestamp", VillageDoorInfo.class, "func_179849_a");
addMapping("isInsideSide", VillageDoorInfo.class, "func_179850_c");
addMapping("getIsDetachedFromVillageFlag", VillageDoorInfo.class, "func_179851_i");
addMapping("getDoorBlockPos", VillageDoorInfo.class, "func_179852_d");
addMapping("setIsDetachedFromVillageFlag", VillageDoorInfo.class, "func_179853_a");
addMapping("getFaceDirection", VillageDoorInfo.class, "func_179854_a");
addMapping("getInsideOffsetZ", VillageDoorInfo.class, "func_179855_g");
addMapping("getInsideBlockPos", VillageDoorInfo.class, "func_179856_e");
addMapping("getInsideDirection", VillageDoorInfo.class, "func_188567_j");
addMapping("resetDoorOpeningRestrictionCounter", VillageDoorInfo.class, "func_75466_d");
addMapping("getDoorOpeningRestrictionCounter", VillageDoorInfo.class, "func_75468_f");
addMapping("incrementDoorOpeningRestrictionCounter", VillageDoorInfo.class, "func_75470_e");
addMapping("getLastActivityTimestamp", VillageDoorInfo.class, "func_75473_b");
addMapping("getDistanceSquared", VillageDoorInfo.class, "func_75474_b");
addMapping("findRandomSpawnPos", VillageSiege.class, "func_179867_a");
addMapping("tick", VillageSiege.class, "func_75528_a");
addMapping("trySetupSiege", VillageSiege.class, "func_75529_b");
addMapping("spawnZombie", VillageSiege.class, "func_75530_c");
addMapping("shouldDarkenSky", BossInfo.class, "func_186734_i");
addMapping("setPercent", BossInfo.class, "func_186735_a");
addMapping("getColor", BossInfo.class, "func_186736_g");
addMapping("getUniqueId", BossInfo.class, "func_186737_d");
addMapping("getPercent", BossInfo.class, "func_186738_f");
addMapping("setName", BossInfo.class, "func_186739_a");
addMapping("getOverlay", BossInfo.class, "func_186740_h");
addMapping("setDarkenSky", BossInfo.class, "func_186741_a");
addMapping("setPlayEndBossMusic", BossInfo.class, "func_186742_b");
addMapping("setCreateFog", BossInfo.class, "func_186743_c");
addMapping("getName", BossInfo.class, "func_186744_e");
addMapping("setColor", BossInfo.class, "func_186745_a");
addMapping("setOverlay", BossInfo.class, "func_186746_a");
addMapping("shouldPlayEndBossMusic", BossInfo.class, "func_186747_j");
addMapping("shouldCreateFog", BossInfo.class, "func_186748_k");
addMapping("setPercent", BossInfoServer.class, "func_186735_a");
addMapping("setName", BossInfoServer.class, "func_186739_a");
addMapping("setDarkenSky", BossInfoServer.class, "func_186741_a");
addMapping("setPlayEndBossMusic", BossInfoServer.class, "func_186742_b");
addMapping("setCreateFog", BossInfoServer.class, "func_186743_c");
addMapping("setColor", BossInfoServer.class, "func_186745_a");
addMapping("setOverlay", BossInfoServer.class, "func_186746_a");
addMapping("getPlayers", BossInfoServer.class, "func_186757_c");
addMapping("setVisible", BossInfoServer.class, "func_186758_d");
addMapping("sendUpdate", BossInfoServer.class, "func_186759_a");
addMapping("addPlayer", BossInfoServer.class, "func_186760_a");
addMapping("removePlayer", BossInfoServer.class, "func_186761_b");
addMapping("isAirBlock", ChunkCache.class, "func_175623_d");
addMapping("getWorldType", ChunkCache.class, "func_175624_G");
addMapping("getTileEntity", ChunkCache.class, "func_175625_s");
addMapping("getCombinedLight", ChunkCache.class, "func_175626_b");
addMapping("getStrongPower", ChunkCache.class, "func_175627_a");
addMapping("getLightFor", ChunkCache.class, "func_175628_b");
addMapping("getLightForExt", ChunkCache.class, "func_175629_a");
addMapping("getBiome", ChunkCache.class, "func_180494_b");
addMapping("getBlockState", ChunkCache.class, "func_180495_p");
addMapping("getTileEntity", ChunkCache.class, "func_190300_a");
addMapping("isEmpty", ChunkCache.class, "func_72806_N");
addMapping("getFoliageColorPine", ColorizerFoliage.class, "func_77466_a");
addMapping("setFoliageBiomeColorizer", ColorizerFoliage.class, "func_77467_a");
addMapping("getFoliageColorBasic", ColorizerFoliage.class, "func_77468_c");
addMapping("getFoliageColorBirch", ColorizerFoliage.class, "func_77469_b");
addMapping("getFoliageColor", ColorizerFoliage.class, "func_77470_a");
addMapping("setGrassBiomeColorizer", ColorizerGrass.class, "func_77479_a");
addMapping("getGrassColor", ColorizerGrass.class, "func_77480_a");
addMapping("getAdditionalDifficulty", DifficultyInstance.class, "func_180168_b");
addMapping("calculateAdditionalDifficulty", DifficultyInstance.class, "func_180169_a");
addMapping("getClampedAdditionalDifficulty", DifficultyInstance.class, "func_180170_c");
addMapping("isHarderThan", DifficultyInstance.class, "func_193845_a");
addMapping("getName", DimensionType.class, "func_186065_b");
addMapping("getSuffix", DimensionType.class, "func_186067_c");
addMapping("getId", DimensionType.class, "func_186068_a");
addMapping("getById", DimensionType.class, "func_186069_a");
addMapping("createDimension", DimensionType.class, "func_186070_d");
addMapping("byName", DimensionType.class, "func_193417_a");
addMapping("getDifficultyEnum", EnumDifficulty.class, "func_151523_a");
addMapping("getDifficultyId", EnumDifficulty.class, "func_151525_a");
addMapping("getDifficultyResourceKey", EnumDifficulty.class, "func_151526_b");
addMapping("clearAffectedBlockPositions", Explosion.class, "func_180342_d");
addMapping("getAffectedBlockPositions", Explosion.class, "func_180343_e");
addMapping("getPlayerKnockbackMap", Explosion.class, "func_77277_b");
addMapping("doExplosionA", Explosion.class, "func_77278_a");
addMapping("doExplosionB", Explosion.class, "func_77279_a");
addMapping("getExplosivePlacedBy", Explosion.class, "func_94613_c");
addMapping("addGameRule", GameRules.class, "func_180262_a");
addMapping("getInt", GameRules.class, "func_180263_c");
addMapping("areSameType", GameRules.class, "func_180264_a");
addMapping("getRules", GameRules.class, "func_82763_b");
addMapping("setOrCreateGameRule", GameRules.class, "func_82764_b");
addMapping("hasRule", GameRules.class, "func_82765_e");
addMapping("getBoolean", GameRules.class, "func_82766_b");
addMapping("getString", GameRules.class, "func_82767_a");
addMapping("readFromNBT", GameRules.class, "func_82768_a");
addMapping("writeToNBT", GameRules.class, "func_82770_a");
addMapping("parseGameTypeWithDefault", GameType.class, "func_185328_a");
addMapping("parseGameTypeWithDefault", GameType.class, "func_185329_a");
addMapping("getByName", GameType.class, "func_77142_a");
addMapping("isSurvivalOrAdventure", GameType.class, "func_77144_e");
addMapping("isCreative", GameType.class, "func_77145_d");
addMapping("getByID", GameType.class, "func_77146_a");
addMapping("configurePlayerCapabilities", GameType.class, "func_77147_a");
addMapping("getID", GameType.class, "func_77148_a");
addMapping("getName", GameType.class, "func_77149_b");
addMapping("hasLimitedInteractions", GameType.class, "func_82752_c");
addMapping("isAirBlock", IBlockAccess.class, "func_175623_d");
addMapping("getWorldType", IBlockAccess.class, "func_175624_G");
addMapping("getTileEntity", IBlockAccess.class, "func_175625_s");
addMapping("getCombinedLight", IBlockAccess.class, "func_175626_b");
addMapping("getStrongPower", IBlockAccess.class, "func_175627_a");
addMapping("getBiome", IBlockAccess.class, "func_180494_b");
addMapping("getBlockState", IBlockAccess.class, "func_180495_p");
addMapping("getGuiID", IInteractionObject.class, "func_174875_k");
addMapping("createContainer", IInteractionObject.class, "func_174876_a");
addMapping("getLockCode", ILockableContainer.class, "func_174891_i");
addMapping("setLockCode", ILockableContainer.class, "func_174892_a");
addMapping("isLocked", ILockableContainer.class, "func_174893_q_");
addMapping("markBlockRangeForRenderUpdate", IWorldEventListener.class, "func_147585_a");
addMapping("notifyLightSet", IWorldEventListener.class, "func_174959_b");
addMapping("playEvent", IWorldEventListener.class, "func_180439_a");
addMapping("broadcastSound", IWorldEventListener.class, "func_180440_a");
addMapping("sendBlockBreakProgress", IWorldEventListener.class, "func_180441_b");
addMapping("spawnParticle", IWorldEventListener.class, "func_180442_a");
addMapping("playSoundToAllNearExcept", IWorldEventListener.class, "func_184375_a");
addMapping("notifyBlockUpdate", IWorldEventListener.class, "func_184376_a");
addMapping("playRecord", IWorldEventListener.class, "func_184377_a");
addMapping("spawnParticle", IWorldEventListener.class, "func_190570_a");
addMapping("onEntityAdded", IWorldEventListener.class, "func_72703_a");
addMapping("onEntityRemoved", IWorldEventListener.class, "func_72709_b");
addMapping("getDisplayName", IWorldNameable.class, "func_145748_c_");
addMapping("hasCustomName", IWorldNameable.class, "func_145818_k_");
addMapping("getName", IWorldNameable.class, "func_70005_c_");
addMapping("toNBT", LockCode.class, "func_180157_a");
addMapping("fromNBT", LockCode.class, "func_180158_b");
addMapping("getLock", LockCode.class, "func_180159_b");
addMapping("isEmpty", LockCode.class, "func_180160_a");
addMapping("getBlock", NextTickListEntry.class, "func_151351_a");
addMapping("setScheduledTime", NextTickListEntry.class, "func_77176_a");
addMapping("setPriority", NextTickListEntry.class, "func_82753_a");
addMapping("markBlockRangeForRenderUpdate", ServerWorldEventHandler.class, "func_147585_a");
addMapping("notifyLightSet", ServerWorldEventHandler.class, "func_174959_b");
addMapping("playEvent", ServerWorldEventHandler.class, "func_180439_a");
addMapping("broadcastSound", ServerWorldEventHandler.class, "func_180440_a");
addMapping("sendBlockBreakProgress", ServerWorldEventHandler.class, "func_180441_b");
addMapping("spawnParticle", ServerWorldEventHandler.class, "func_180442_a");
addMapping("playSoundToAllNearExcept", ServerWorldEventHandler.class, "func_184375_a");
addMapping("notifyBlockUpdate", ServerWorldEventHandler.class, "func_184376_a");
addMapping("playRecord", ServerWorldEventHandler.class, "func_184377_a");
addMapping("spawnParticle", ServerWorldEventHandler.class, "func_190570_a");
addMapping("onEntityAdded", ServerWorldEventHandler.class, "func_72703_a");
addMapping("onEntityRemoved", ServerWorldEventHandler.class, "func_72709_b");
addMapping("placeInPortal", Teleporter.class, "func_180266_a");
addMapping("placeInExistingPortal", Teleporter.class, "func_180620_b");
addMapping("makePortal", Teleporter.class, "func_85188_a");
addMapping("removeStalePortalLocations", Teleporter.class, "func_85189_a");
addMapping("getCurrentMoonPhaseFactor", World.class, "func_130001_d");
addMapping("setThunderStrength", World.class, "func_147442_i");
addMapping("rayTraceBlocks", World.class, "func_147447_a");
addMapping("addTileEntities", World.class, "func_147448_a");
addMapping("updateBlocks", World.class, "func_147456_g");
addMapping("markTileEntityForRemoval", World.class, "func_147457_a");
addMapping("markBlockRangeForRenderUpdate", World.class, "func_147458_c");
addMapping("playMoodSoundAndCheckLight", World.class, "func_147467_a");
addMapping("isFlammableWithin", World.class, "func_147470_e");
addMapping("getPlayerEntityByUUID", World.class, "func_152378_a");
addMapping("isAirBlock", World.class, "func_175623_d");
addMapping("getWorldType", World.class, "func_175624_G");
addMapping("getTileEntity", World.class, "func_175625_s");
addMapping("getCombinedLight", World.class, "func_175626_b");
addMapping("getStrongPower", World.class, "func_175627_a");
addMapping("isAnyPlayerWithinRangeAt", World.class, "func_175636_b");
addMapping("getRawLight", World.class, "func_175638_a");
addMapping("isAreaLoaded", World.class, "func_175639_b");
addMapping("isBlockPowered", World.class, "func_175640_z");
addMapping("addBlockEvent", World.class, "func_175641_c");
addMapping("getLightFor", World.class, "func_175642_b");
addMapping("init", World.class, "func_175643_b");
addMapping("getEntities", World.class, "func_175644_a");
addMapping("getHeight", World.class, "func_175645_m");
addMapping("markChunkDirty", World.class, "func_175646_b");
addMapping("getEntitiesWithinAABB", World.class, "func_175647_a");
addMapping("isAreaLoaded", World.class, "func_175648_a");
addMapping("getDifficultyForLocation", World.class, "func_175649_E");
addMapping("loadEntities", World.class, "func_175650_b");
addMapping("getRedstonePower", World.class, "func_175651_c");
addMapping("setSpawnPoint", World.class, "func_175652_B");
addMapping("setLightFor", World.class, "func_175653_a");
addMapping("updateBlockTick", World.class, "func_175654_a");
addMapping("destroyBlock", World.class, "func_175655_b");
addMapping("setBlockState", World.class, "func_175656_a");
addMapping("getSkylightSubtracted", World.class, "func_175657_ab");
addMapping("getLastLightningBolt", World.class, "func_175658_ac");
addMapping("getDifficulty", World.class, "func_175659_aa");
addMapping("isBlockModifiable", World.class, "func_175660_a");
addMapping("getPlayers", World.class, "func_175661_b");
addMapping("canBlockFreezeNoWater", World.class, "func_175662_w");
addMapping("isAreaLoaded", World.class, "func_175663_a");
addMapping("checkLight", World.class, "func_175664_x");
addMapping("isBlockFullCube", World.class, "func_175665_u");
addMapping("updateComparatorOutputLevel", World.class, "func_175666_e");
addMapping("isBlockLoaded", World.class, "func_175667_e");
addMapping("isBlockLoaded", World.class, "func_175668_a");
addMapping("playBroadcastSound", World.class, "func_175669_a");
addMapping("canBlockFreeze", World.class, "func_175670_e");
addMapping("getLightFromNeighbors", World.class, "func_175671_l");
addMapping("getTopSolidOrLiquidBlock", World.class, "func_175672_r");
addMapping("getEntitiesInAABBexcluding", World.class, "func_175674_a");
addMapping("canBlockFreezeWater", World.class, "func_175675_v");
addMapping("getStrongPower", World.class, "func_175676_y");
addMapping("isBlockNormalCube", World.class, "func_175677_d");
addMapping("canSeeSky", World.class, "func_175678_i");
addMapping("notifyLightSet", World.class, "func_175679_n");
addMapping("isChunkLoaded", World.class, "func_175680_a");
addMapping("unloadEntities", World.class, "func_175681_c");
addMapping("spawnParticle", World.class, "func_175682_a");
addMapping("scheduleUpdate", World.class, "func_175684_a");
addMapping("notifyNeighborsOfStateChange", World.class, "func_175685_c");
addMapping("isBlockIndirectlyGettingPowered", World.class, "func_175687_A");
addMapping("spawnParticle", World.class, "func_175688_a");
addMapping("setTileEntity", World.class, "func_175690_a");
addMapping("isBlockTickPending", World.class, "func_175691_a");
addMapping("setSkylightSubtracted", World.class, "func_175692_b");
addMapping("getMapStorage", World.class, "func_175693_T");
addMapping("getSpawnPoint", World.class, "func_175694_M");
addMapping("notifyNeighborsOfStateExcept", World.class, "func_175695_a");
addMapping("isWater", World.class, "func_175696_F");
addMapping("isAreaLoaded", World.class, "func_175697_a");
addMapping("setBlockToAir", World.class, "func_175698_g");
addMapping("getLight", World.class, "func_175699_k");
addMapping("addTileEntity", World.class, "func_175700_a");
addMapping("isValid", World.class, "func_175701_a");
addMapping("setLastLightningBolt", World.class, "func_175702_c");
addMapping("markBlockRangeForRenderUpdate", World.class, "func_175704_b");
addMapping("getLightFromNeighborsFor", World.class, "func_175705_a");
addMapping("isAreaLoaded", World.class, "func_175706_a");
addMapping("isAreaLoaded", World.class, "func_175707_a");
addMapping("canSnowAt", World.class, "func_175708_f");
addMapping("isSidePowered", World.class, "func_175709_b");
addMapping("canBlockSeeSky", World.class, "func_175710_j");
addMapping("isAreaLoaded", World.class, "func_175711_a");
addMapping("getPendingBlockUpdates", World.class, "func_175712_a");
addMapping("removeTileEntity", World.class, "func_175713_t");
addMapping("getVillageCollection", World.class, "func_175714_ae");
addMapping("sendBlockBreakProgress", World.class, "func_175715_c");
addMapping("playEvent", World.class, "func_175718_b");
addMapping("extinguishFire", World.class, "func_175719_a");
addMapping("spawnParticle", World.class, "func_175720_a");
addMapping("getLight", World.class, "func_175721_c");
addMapping("notifyNeighborsRespectDebug", World.class, "func_175722_b");
addMapping("getWorldBorder", World.class, "func_175723_af");
addMapping("getLightBrightness", World.class, "func_175724_o");
addMapping("getPrecipitationHeight", World.class, "func_175725_q");
addMapping("getChunkFromBlockCoords", World.class, "func_175726_f");
addMapping("isRainingAt", World.class, "func_175727_C");
addMapping("getBiome", World.class, "func_180494_b");
addMapping("getBlockState", World.class, "func_180495_p");
addMapping("scheduleBlockUpdate", World.class, "func_180497_b");
addMapping("playEvent", World.class, "func_180498_a");
addMapping("checkLightFor", World.class, "func_180500_c");
addMapping("setBlockState", World.class, "func_180501_a");
addMapping("isBlockinHighHumidity", World.class, "func_180502_D");
addMapping("setSeaLevel", World.class, "func_181544_b");
addMapping("getSeaLevel", World.class, "func_181545_F");
addMapping("playSound", World.class, "func_184133_a");
addMapping("playSound", World.class, "func_184134_a");
addMapping("sendPacketToServer", World.class, "func_184135_a");
addMapping("getNearestPlayerNotCreative", World.class, "func_184136_b");
addMapping("getClosestPlayer", World.class, "func_184137_a");
addMapping("notifyBlockUpdate", World.class, "func_184138_a");
addMapping("getNearestAttackablePlayer", World.class, "func_184139_a");
addMapping("getGroundAboveSeaLevel", World.class, "func_184141_c");
addMapping("getNearestAttackablePlayer", World.class, "func_184142_a");
addMapping("collidesWithAnyBlock", World.class, "func_184143_b");
addMapping("getCollisionBoxes", World.class, "func_184144_a");
addMapping("isUpdateScheduled", World.class, "func_184145_b");
addMapping("getLootTableManager", World.class, "func_184146_ak");
addMapping("tickPlayers", World.class, "func_184147_l");
addMapping("playSound", World.class, "func_184148_a");
addMapping("playRecord", World.class, "func_184149_a");
addMapping("getNearestAttackablePlayer", World.class, "func_184150_a");
addMapping("immediateBlockTick", World.class, "func_189507_a");
addMapping("getPendingTileEntityAt", World.class, "func_189508_F");
addMapping("isOutsideBuildHeight", World.class, "func_189509_E");
addMapping("getHeight", World.class, "func_189649_b");
addMapping("updateObservingBlocksAt", World.class, "func_190522_c");
addMapping("spawnAlwaysVisibleParticle", World.class, "func_190523_a");
addMapping("neighborChanged", World.class, "func_190524_a");
addMapping("getClosestPlayer", World.class, "func_190525_a");
addMapping("isChunkGeneratedAt", World.class, "func_190526_b");
addMapping("mayPlace", World.class, "func_190527_a");
addMapping("findNearestStructure", World.class, "func_190528_a");
addMapping("observedNeighborChanged", World.class, "func_190529_b");
addMapping("isInsideWorldBorder", World.class, "func_191503_g");
addMapping("getCollisionBoxes", World.class, "func_191504_a");
addMapping("getHeight", World.class, "func_72800_K");
addMapping("getThunderStrength", World.class, "func_72819_i");
addMapping("getWorldTime", World.class, "func_72820_D");
addMapping("setData", World.class, "func_72823_a");
addMapping("getCloudColour", World.class, "func_72824_f");
addMapping("getCelestialAngle", World.class, "func_72826_c");
addMapping("getProviderName", World.class, "func_72827_u");
addMapping("checkBlockCollision", World.class, "func_72829_c");
addMapping("getSkyColor", World.class, "func_72833_a");
addMapping("tick", World.class, "func_72835_b");
addMapping("spawnEntity", World.class, "func_72838_d");
addMapping("getEntitiesWithinAABBExcludingEntity", World.class, "func_72839_b");
addMapping("getUniqueDataId", World.class, "func_72841_b");
addMapping("getBlockDensity", World.class, "func_72842_a");
addMapping("setRandomSeed", World.class, "func_72843_D");
addMapping("onEntityRemoved", World.class, "func_72847_b");
addMapping("removeEventListener", World.class, "func_72848_b");
addMapping("getMoonPhase", World.class, "func_72853_d");
addMapping("updateAllPlayersSleepingFlag", World.class, "func_72854_c");
addMapping("checkNoEntityCollision", World.class, "func_72855_b");
addMapping("findNearestEntityWithinAABB", World.class, "func_72857_a");
addMapping("getSaveHandler", World.class, "func_72860_G");
addMapping("getChunkProvider", World.class, "func_72863_F");
addMapping("updateEntityWithOptionalForce", World.class, "func_72866_a");
addMapping("getRainStrength", World.class, "func_72867_j");
addMapping("updateEntity", World.class, "func_72870_g");
addMapping("getEntitiesWithinAABB", World.class, "func_72872_a");
addMapping("isMaterialInBB", World.class, "func_72875_a");
addMapping("createExplosion", World.class, "func_72876_a");
addMapping("setWorldTime", World.class, "func_72877_b");
addMapping("getStarBrightness", World.class, "func_72880_h");
addMapping("sendQuittingDisconnectingPacket", World.class, "func_72882_A");
addMapping("newExplosion", World.class, "func_72885_a");
addMapping("getClosestPlayerToEntity", World.class, "func_72890_a");
addMapping("setAllowedSpawnTypes", World.class, "func_72891_a");
addMapping("setRainStrength", World.class, "func_72894_k");
addMapping("isRaining", World.class, "func_72896_J");
addMapping("joinEntityInSurroundings", World.class, "func_72897_h");
addMapping("removeEntity", World.class, "func_72900_e");
addMapping("rayTraceBlocks", World.class, "func_72901_a");
addMapping("getSeed", World.class, "func_72905_C");
addMapping("checkSessionLock", World.class, "func_72906_B");
addMapping("countEntities", World.class, "func_72907_a");
addMapping("getLoadedEntityList", World.class, "func_72910_y");
addMapping("isThundering", World.class, "func_72911_I");
addMapping("getWorldInfo", World.class, "func_72912_H");
addMapping("addWorldInfoToCrashReport", World.class, "func_72914_a");
addMapping("isSpawnChunk", World.class, "func_72916_c");
addMapping("checkNoEntityCollision", World.class, "func_72917_a");
addMapping("handleMaterialAcceleration", World.class, "func_72918_a");
addMapping("getHorizon", World.class, "func_72919_O");
addMapping("getPendingBlockUpdates", World.class, "func_72920_a");
addMapping("onEntityAdded", World.class, "func_72923_a");
addMapping("getPlayerEntityByName", World.class, "func_72924_a");
addMapping("getCelestialAngleRadians", World.class, "func_72929_e");
addMapping("rayTraceBlocks", World.class, "func_72933_a");
addMapping("isDaytime", World.class, "func_72935_r");
addMapping("updateEntities", World.class, "func_72939_s");
addMapping("getActualHeight", World.class, "func_72940_L");
addMapping("addWeatherEffect", World.class, "func_72942_c");
addMapping("loadData", World.class, "func_72943_a");
addMapping("calculateInitialWeather", World.class, "func_72947_a");
addMapping("getFogColor", World.class, "func_72948_g");
addMapping("containsAnyLiquid", World.class, "func_72953_d");
addMapping("addEventListener", World.class, "func_72954_a");
addMapping("tickUpdates", World.class, "func_72955_a");
addMapping("getBiomeProvider", World.class, "func_72959_q");
addMapping("setEntityState", World.class, "func_72960_a");
addMapping("initialize", World.class, "func_72963_a");
addMapping("getChunkFromChunkCoords", World.class, "func_72964_e");
addMapping("calculateInitialSkylight", World.class, "func_72966_v");
addMapping("calculateSkylightSubtracted", World.class, "func_72967_a");
addMapping("createChunkProvider", World.class, "func_72970_h");
addMapping("getSunBrightness", World.class, "func_72971_b");
addMapping("removeEntityDangerously", World.class, "func_72973_f");
addMapping("setInitialSpawnLocation", World.class, "func_72974_f");
addMapping("markBlocksDirtyVertical", World.class, "func_72975_g");
addMapping("updateWeather", World.class, "func_72979_l");
addMapping("getDebugLoadedEntities", World.class, "func_72981_t");
addMapping("getEntityByID", World.class, "func_73045_a");
addMapping("getMinecraftServer", World.class, "func_73046_m");
addMapping("getChunksLowestHorizon", World.class, "func_82734_g");
addMapping("getGameRules", World.class, "func_82736_K");
addMapping("getTotalWorldTime", World.class, "func_82737_E");
addMapping("setTotalWorldTime", World.class, "func_82738_a");
addMapping("getCurrentDate", World.class, "func_83015_S");
addMapping("makeFireworks", World.class, "func_92088_a");
addMapping("getScoreboard", World.class, "func_96441_U");
addMapping("canCreatureTypeSpawnAtLocation", WorldEntitySpawner.class, "func_180267_a");
addMapping("getRandomChunkPosition", WorldEntitySpawner.class, "func_180621_a");
addMapping("isValidEmptySpawnBlock", WorldEntitySpawner.class, "func_185331_a");
addMapping("performWorldGenSpawning", WorldEntitySpawner.class, "func_77191_a");
addMapping("findChunksForSpawning", WorldEntitySpawner.class, "func_77192_a");
addMapping("isNether", WorldProvider.class, "func_177495_o");
addMapping("getSpawnCoordinate", WorldProvider.class, "func_177496_h");
addMapping("getLightBrightnessTable", WorldProvider.class, "func_177497_p");
addMapping("getBiomeProvider", WorldProvider.class, "func_177499_m");
addMapping("doesWaterVaporize", WorldProvider.class, "func_177500_n");
addMapping("createWorldBorder", WorldProvider.class, "func_177501_r");
addMapping("canDropChunk", WorldProvider.class, "func_186056_c");
addMapping("onWorldSave", WorldProvider.class, "func_186057_q");
addMapping("getDimensionType", WorldProvider.class, "func_186058_p");
addMapping("onWorldUpdateEntities", WorldProvider.class, "func_186059_r");
addMapping("createChunkGenerator", WorldProvider.class, "func_186060_c");
addMapping("onPlayerAdded", WorldProvider.class, "func_186061_a");
addMapping("onPlayerRemoved", WorldProvider.class, "func_186062_b");
addMapping("hasSkyLight", WorldProvider.class, "func_191066_m");
addMapping("generateLightBrightnessTable", WorldProvider.class, "func_76556_a");
addMapping("getAverageGroundLevel", WorldProvider.class, "func_76557_i");
addMapping("setWorld", WorldProvider.class, "func_76558_a");
addMapping("getMoonPhase", WorldProvider.class, "func_76559_b");
addMapping("calcSunriseSunsetColors", WorldProvider.class, "func_76560_a");
addMapping("isSkyColored", WorldProvider.class, "func_76561_g");
addMapping("getFogColor", WorldProvider.class, "func_76562_b");
addMapping("calculateCelestialAngle", WorldProvider.class, "func_76563_a");
addMapping("getVoidFogYFactor", WorldProvider.class, "func_76565_k");
addMapping("canCoordinateBeSpawn", WorldProvider.class, "func_76566_a");
addMapping("canRespawnHere", WorldProvider.class, "func_76567_e");
addMapping("doesXZShowFog", WorldProvider.class, "func_76568_b");
addMapping("isSurfaceWorld", WorldProvider.class, "func_76569_d");
addMapping("getCloudHeight", WorldProvider.class, "func_76571_f");
addMapping("init", WorldProvider.class, "func_76572_b");
addMapping("getSpawnCoordinate", WorldProviderEnd.class, "func_177496_h");
addMapping("onWorldSave", WorldProviderEnd.class, "func_186057_q");
addMapping("getDimensionType", WorldProviderEnd.class, "func_186058_p");
addMapping("onWorldUpdateEntities", WorldProviderEnd.class, "func_186059_r");
addMapping("createChunkGenerator", WorldProviderEnd.class, "func_186060_c");
addMapping("getDragonFightManager", WorldProviderEnd.class, "func_186063_s");
addMapping("getAverageGroundLevel", WorldProviderEnd.class, "func_76557_i");
addMapping("calcSunriseSunsetColors", WorldProviderEnd.class, "func_76560_a");
addMapping("isSkyColored", WorldProviderEnd.class, "func_76561_g");
addMapping("getFogColor", WorldProviderEnd.class, "func_76562_b");
addMapping("calculateCelestialAngle", WorldProviderEnd.class, "func_76563_a");
addMapping("canCoordinateBeSpawn", WorldProviderEnd.class, "func_76566_a");
addMapping("canRespawnHere", WorldProviderEnd.class, "func_76567_e");
addMapping("doesXZShowFog", WorldProviderEnd.class, "func_76568_b");
addMapping("isSurfaceWorld", WorldProviderEnd.class, "func_76569_d");
addMapping("getCloudHeight", WorldProviderEnd.class, "func_76571_f");
addMapping("init", WorldProviderEnd.class, "func_76572_b");
addMapping("createWorldBorder", WorldProviderHell.class, "func_177501_r");
addMapping("getDimensionType", WorldProviderHell.class, "func_186058_p");
addMapping("createChunkGenerator", WorldProviderHell.class, "func_186060_c");
addMapping("generateLightBrightnessTable", WorldProviderHell.class, "func_76556_a");
addMapping("getFogColor", WorldProviderHell.class, "func_76562_b");
addMapping("calculateCelestialAngle", WorldProviderHell.class, "func_76563_a");
addMapping("canCoordinateBeSpawn", WorldProviderHell.class, "func_76566_a");
addMapping("canRespawnHere", WorldProviderHell.class, "func_76567_e");
addMapping("doesXZShowFog", WorldProviderHell.class, "func_76568_b");
addMapping("isSurfaceWorld", WorldProviderHell.class, "func_76569_d");
addMapping("init", WorldProviderHell.class, "func_76572_b");
addMapping("canDropChunk", WorldProviderSurface.class, "func_186056_c");
addMapping("getDimensionType", WorldProviderSurface.class, "func_186058_p");
addMapping("flushToDisk", WorldServer.class, "func_104140_m");
addMapping("updateBlocks", WorldServer.class, "func_147456_g");
addMapping("fireBlockEvent", WorldServer.class, "func_147485_a");
addMapping("sendQueuedBlockEvents", WorldServer.class, "func_147488_Z");
addMapping("addScheduledTask", WorldServer.class, "func_152344_a");
addMapping("isCallingFromMinecraftThread", WorldServer.class, "func_152345_ab");
addMapping("addBlockEvent", WorldServer.class, "func_175641_c");
addMapping("init", WorldServer.class, "func_175643_b");
addMapping("loadEntities", WorldServer.class, "func_175650_b");
addMapping("updateBlockTick", WorldServer.class, "func_175654_a");
addMapping("isBlockModifiable", WorldServer.class, "func_175660_a");
addMapping("isChunkLoaded", WorldServer.class, "func_175680_a");
addMapping("scheduleUpdate", WorldServer.class, "func_175684_a");
addMapping("isBlockTickPending", WorldServer.class, "func_175691_a");
addMapping("getPendingBlockUpdates", WorldServer.class, "func_175712_a");
addMapping("canCreatureTypeSpawnHere", WorldServer.class, "func_175732_a");
addMapping("getEntityFromUuid", WorldServer.class, "func_175733_a");
addMapping("getSpawnListEntryForTypeAt", WorldServer.class, "func_175734_a");
addMapping("canSpawnAnimals", WorldServer.class, "func_175735_ai");
addMapping("adjustPosToNearbyEntity", WorldServer.class, "func_175736_a");
addMapping("setDebugWorldSettings", WorldServer.class, "func_175737_aj");
addMapping("canSpawnNPCs", WorldServer.class, "func_175738_ah");
addMapping("spawnParticle", WorldServer.class, "func_175739_a");
addMapping("scheduleBlockUpdate", WorldServer.class, "func_180497_b");
addMapping("getSpawnCoordinate", WorldServer.class, "func_180504_m");
addMapping("spawnParticle", WorldServer.class, "func_180505_a");
addMapping("isUpdateScheduled", WorldServer.class, "func_184145_b");
addMapping("tickPlayers", WorldServer.class, "func_184147_l");
addMapping("sendPacketWithinDistance", WorldServer.class, "func_184159_a");
addMapping("spawnParticle", WorldServer.class, "func_184161_a");
addMapping("playerCheckLight", WorldServer.class, "func_184162_i");
addMapping("getStructureTemplateManager", WorldServer.class, "func_184163_y");
addMapping("getPlayerChunkMap", WorldServer.class, "func_184164_w");
addMapping("canAddEntity", WorldServer.class, "func_184165_i");
addMapping("findNearestStructure", WorldServer.class, "func_190528_a");
addMapping("getAdvancementManager", WorldServer.class, "func_191952_z");
addMapping("getFunctionManager", WorldServer.class, "func_193037_A");
addMapping("tick", WorldServer.class, "func_72835_b");
addMapping("spawnEntity", WorldServer.class, "func_72838_d");
addMapping("onEntityRemoved", WorldServer.class, "func_72847_b");
addMapping("updateAllPlayersSleepingFlag", WorldServer.class, "func_72854_c");
addMapping("getChunkProvider", WorldServer.class, "func_72863_F");
addMapping("updateEntityWithOptionalForce", WorldServer.class, "func_72866_a");
addMapping("newExplosion", WorldServer.class, "func_72885_a");
addMapping("getPendingBlockUpdates", WorldServer.class, "func_72920_a");
addMapping("onEntityAdded", WorldServer.class, "func_72923_a");
addMapping("updateEntities", WorldServer.class, "func_72939_s");
addMapping("addWeatherEffect", WorldServer.class, "func_72942_c");
addMapping("tickUpdates", WorldServer.class, "func_72955_a");
addMapping("setEntityState", WorldServer.class, "func_72960_a");
addMapping("initialize", WorldServer.class, "func_72963_a");
addMapping("createChunkProvider", WorldServer.class, "func_72970_h");
addMapping("setInitialSpawnLocation", WorldServer.class, "func_72974_f");
addMapping("updateWeather", WorldServer.class, "func_72979_l");
addMapping("getEntityTracker", WorldServer.class, "func_73039_n");
addMapping("flush", WorldServer.class, "func_73041_k");
addMapping("saveLevel", WorldServer.class, "func_73042_a");
addMapping("saveAllChunks", WorldServer.class, "func_73044_a");
addMapping("getMinecraftServer", WorldServer.class, "func_73046_m");
addMapping("createBonusChest", WorldServer.class, "func_73047_i");
addMapping("resetRainAndThunder", WorldServer.class, "func_73051_P");
addMapping("createSpawnPosition", WorldServer.class, "func_73052_b");
addMapping("wakeAllPlayers", WorldServer.class, "func_73053_d");
addMapping("areAllPlayersAsleep", WorldServer.class, "func_73056_e");
addMapping("resetUpdateEntityTick", WorldServer.class, "func_82742_i");
addMapping("getDefaultTeleporter", WorldServer.class, "func_85176_s");
addMapping("init", WorldServerMulti.class, "func_175643_b");
addMapping("saveAdditionalData", WorldServerMulti.class, "func_184166_c");
addMapping("saveLevel", WorldServerMulti.class, "func_73042_a");
addMapping("getHardcoreEnabled", WorldSettings.class, "func_77158_f");
addMapping("enableBonusChest", WorldSettings.class, "func_77159_a");
addMapping("getSeed", WorldSettings.class, "func_77160_d");
addMapping("getGameTypeById", WorldSettings.class, "func_77161_a");
addMapping("getGameType", WorldSettings.class, "func_77162_e");
addMapping("areCommandsAllowed", WorldSettings.class, "func_77163_i");
addMapping("isMapFeaturesEnabled", WorldSettings.class, "func_77164_g");
addMapping("getTerrainType", WorldSettings.class, "func_77165_h");
addMapping("enableCommands", WorldSettings.class, "func_77166_b");
addMapping("isBonusChestEnabled", WorldSettings.class, "func_77167_c");
addMapping("getGeneratorOptions", WorldSettings.class, "func_82749_j");
addMapping("setGeneratorOptions", WorldSettings.class, "func_82750_a");
addMapping("hasInfoNotice", WorldType.class, "func_151357_h");
addMapping("enableInfoNotice", WorldType.class, "func_151358_j");
addMapping("getInfoTranslationKey", WorldType.class, "func_151359_c");
addMapping("setCanBeCreated", WorldType.class, "func_77124_a");
addMapping("isVersioned", WorldType.class, "func_77125_e");
addMapping("canBeCreated", WorldType.class, "func_77126_d");
addMapping("getName", WorldType.class, "func_77127_a");
addMapping("getTranslationKey", WorldType.class, "func_77128_b");
addMapping("setVersioned", WorldType.class, "func_77129_f");
addMapping("parseWorldType", WorldType.class, "func_77130_a");
addMapping("getVersion", WorldType.class, "func_77131_c");
addMapping("getWorldTypeForGeneratorVersion", WorldType.class, "func_77132_a");
addMapping("getId", WorldType.class, "func_82747_f");
addMapping("isSnowyBiome", Biome.class, "func_150559_j");
addMapping("getTempCategory", Biome.class, "func_150561_m");
addMapping("getBiomeClass", Biome.class, "func_150562_l");
addMapping("getRandomTreeFeature", Biome.class, "func_150567_a");
addMapping("getBiome", Biome.class, "func_150568_d");
addMapping("getBiome", Biome.class, "func_180276_a");
addMapping("genTerrainBlocks", Biome.class, "func_180622_a");
addMapping("pickRandomFlower", Biome.class, "func_180623_a");
addMapping("decorate", Biome.class, "func_180624_a");
addMapping("getFoliageColorAtPos", Biome.class, "func_180625_c");
addMapping("getTemperature", Biome.class, "func_180626_a");
addMapping("getGrassColorAtPos", Biome.class, "func_180627_b");
addMapping("generateBiomeTerrain", Biome.class, "func_180628_b");
addMapping("ignorePlayerSpawnSuitability", Biome.class, "func_185352_i");
addMapping("getDefaultTemperature", Biome.class, "func_185353_n");
addMapping("registerBiome", Biome.class, "func_185354_a");
addMapping("getBaseHeight", Biome.class, "func_185355_j");
addMapping("getMutationForBiome", Biome.class, "func_185356_b");
addMapping("getBiomeForId", Biome.class, "func_185357_a");
addMapping("registerBiomes", Biome.class, "func_185358_q");
addMapping("getBiomeName", Biome.class, "func_185359_l");
addMapping("getHeightVariation", Biome.class, "func_185360_m");
addMapping("getWaterColor", Biome.class, "func_185361_o");
addMapping("getIdForBiome", Biome.class, "func_185362_a");
addMapping("isMutation", Biome.class, "func_185363_b");
addMapping("getRainfall", Biome.class, "func_76727_i");
addMapping("createBiomeDecorator", Biome.class, "func_76729_a");
addMapping("getRandomWorldGenForGrass", Biome.class, "func_76730_b");
addMapping("getSkyColorByTemp", Biome.class, "func_76731_a");
addMapping("isHighHumidity", Biome.class, "func_76736_e");
addMapping("canRain", Biome.class, "func_76738_d");
addMapping("getSpawningChance", Biome.class, "func_76741_f");
addMapping("getEnableSnow", Biome.class, "func_76746_c");
addMapping("getSpawnableList", Biome.class, "func_76747_a");
addMapping("getBiome", BiomeCache.class, "func_180284_a");
addMapping("cleanupCache", BiomeCache.class, "func_76838_a");
addMapping("getCachedBiomes", BiomeCache.class, "func_76839_e");
addMapping("getEntry", BiomeCache.class, "func_76840_a");
addMapping("getColorAtPos", BiomeColorHelper.class, "func_180285_a");
addMapping("getGrassColorAtPos", BiomeColorHelper.class, "func_180286_a");
addMapping("getFoliageColorAtPos", BiomeColorHelper.class, "func_180287_b");
addMapping("getWaterColorAtPos", BiomeColorHelper.class, "func_180288_c");
addMapping("genDecorations", BiomeDecorator.class, "func_150513_a");
addMapping("decorate", BiomeDecorator.class, "func_180292_a");
addMapping("genStandardOre2", BiomeDecorator.class, "func_76793_b");
addMapping("genStandardOre1", BiomeDecorator.class, "func_76795_a");
addMapping("generateOres", BiomeDecorator.class, "func_76797_b");
addMapping("decorate", BiomeDesert.class, "func_180624_a");
addMapping("getSkyColorByTemp", BiomeEnd.class, "func_76731_a");
addMapping("genDecorations", BiomeEndDecorator.class, "func_150513_a");
addMapping("getSpikesForWorld", BiomeEndDecorator.class, "func_185426_a");
addMapping("getBiomeClass", BiomeForest.class, "func_150562_l");
addMapping("getRandomTreeFeature", BiomeForest.class, "func_150567_a");
addMapping("pickRandomFlower", BiomeForest.class, "func_180623_a");
addMapping("decorate", BiomeForest.class, "func_180624_a");
addMapping("getGrassColorAtPos", BiomeForest.class, "func_180627_b");
addMapping("addDoublePlants", BiomeForest.class, "func_185378_a");
addMapping("addMushrooms", BiomeForest.class, "func_185379_b");
addMapping("getRandomTreeFeature", BiomeForestMutated.class, "func_150567_a");
addMapping("decorate", BiomeHellDecorator.class, "func_180292_a");
addMapping("getRandomTreeFeature", BiomeHills.class, "func_150567_a");
addMapping("genTerrainBlocks", BiomeHills.class, "func_180622_a");
addMapping("decorate", BiomeHills.class, "func_180624_a");
addMapping("getRandomTreeFeature", BiomeJungle.class, "func_150567_a");
addMapping("decorate", BiomeJungle.class, "func_180624_a");
addMapping("getRandomWorldGenForGrass", BiomeJungle.class, "func_76730_b");
addMapping("getRandomTreeFeature", BiomeMesa.class, "func_150567_a");
addMapping("generateBands", BiomeMesa.class, "func_150619_a");
addMapping("genTerrainBlocks", BiomeMesa.class, "func_180622_a");
addMapping("getFoliageColorAtPos", BiomeMesa.class, "func_180625_c");
addMapping("getGrassColorAtPos", BiomeMesa.class, "func_180627_b");
addMapping("getBand", BiomeMesa.class, "func_180629_a");
addMapping("createBiomeDecorator", BiomeMesa.class, "func_76729_a");
addMapping("getTempCategory", BiomeOcean.class, "func_150561_m");
addMapping("getRandomTreeFeature", BiomePlains.class, "func_150567_a");
addMapping("pickRandomFlower", BiomePlains.class, "func_180623_a");
addMapping("decorate", BiomePlains.class, "func_180624_a");
addMapping("getBiome", BiomeProvider.class, "func_180300_a");
addMapping("findBiomePosition", BiomeProvider.class, "func_180630_a");
addMapping("getBiome", BiomeProvider.class, "func_180631_a");
addMapping("getFixedBiome", BiomeProvider.class, "func_190943_d");
addMapping("isFixedBiome", BiomeProvider.class, "func_190944_c");
addMapping("getBiomes", BiomeProvider.class, "func_76931_a");
addMapping("getBiomesToSpawnIn", BiomeProvider.class, "func_76932_a");
addMapping("getBiomes", BiomeProvider.class, "func_76933_b");
addMapping("getBiomesForGeneration", BiomeProvider.class, "func_76937_a");
addMapping("cleanupCache", BiomeProvider.class, "func_76938_b");
addMapping("getTemperatureAtHeight", BiomeProvider.class, "func_76939_a");
addMapping("areBiomesViable", BiomeProvider.class, "func_76940_a");
addMapping("findBiomePosition", BiomeProviderSingle.class, "func_180630_a");
addMapping("getBiome", BiomeProviderSingle.class, "func_180631_a");
addMapping("getFixedBiome", BiomeProviderSingle.class, "func_190943_d");
addMapping("isFixedBiome", BiomeProviderSingle.class, "func_190944_c");
addMapping("getBiomes", BiomeProviderSingle.class, "func_76931_a");
addMapping("getBiomes", BiomeProviderSingle.class, "func_76933_b");
addMapping("getBiomesForGeneration", BiomeProviderSingle.class, "func_76937_a");
addMapping("areBiomesViable", BiomeProviderSingle.class, "func_76940_a");
addMapping("getBiomeClass", BiomeSavanna.class, "func_150562_l");
addMapping("getRandomTreeFeature", BiomeSavanna.class, "func_150567_a");
addMapping("decorate", BiomeSavanna.class, "func_180624_a");
addMapping("genTerrainBlocks", BiomeSavannaMutated.class, "func_180622_a");
addMapping("decorate", BiomeSavannaMutated.class, "func_180624_a");
addMapping("getRandomTreeFeature", BiomeSnow.class, "func_150567_a");
addMapping("decorate", BiomeSnow.class, "func_180624_a");
addMapping("getSpawningChance", BiomeSnow.class, "func_76741_f");
addMapping("getRandomTreeFeature", BiomeSwamp.class, "func_150567_a");
addMapping("genTerrainBlocks", BiomeSwamp.class, "func_180622_a");
addMapping("pickRandomFlower", BiomeSwamp.class, "func_180623_a");
addMapping("decorate", BiomeSwamp.class, "func_180624_a");
addMapping("getFoliageColorAtPos", BiomeSwamp.class, "func_180625_c");
addMapping("getGrassColorAtPos", BiomeSwamp.class, "func_180627_b");
addMapping("getRandomTreeFeature", BiomeTaiga.class, "func_150567_a");
addMapping("genTerrainBlocks", BiomeTaiga.class, "func_180622_a");
addMapping("decorate", BiomeTaiga.class, "func_180624_a");
addMapping("getRandomWorldGenForGrass", BiomeTaiga.class, "func_76730_b");
addMapping("ignorePlayerSpawnSuitability", BiomeVoid.class, "func_185352_i");
addMapping("decorate", BiomeVoidDecorator.class, "func_180292_a");
addMapping("getColor", EnumBorderStatus.class, "func_177766_a");
addMapping("onWarningDistanceChanged", IBorderListener.class, "func_177690_b");
addMapping("onWarningTimeChanged", IBorderListener.class, "func_177691_a");
addMapping("onTransitionStarted", IBorderListener.class, "func_177692_a");
addMapping("onCenterChanged", IBorderListener.class, "func_177693_a");
addMapping("onSizeChanged", IBorderListener.class, "func_177694_a");
addMapping("onDamageBufferChanged", IBorderListener.class, "func_177695_c");
addMapping("onDamageAmountChanged", IBorderListener.class, "func_177696_b");
addMapping("getCenterZ", WorldBorder.class, "func_177721_g");
addMapping("getSize", WorldBorder.class, "func_177722_l");
addMapping("setWarningTime", WorldBorder.class, "func_177723_b");
addMapping("setDamageBuffer", WorldBorder.class, "func_177724_b");
addMapping("setSize", WorldBorder.class, "func_177725_a");
addMapping("minX", WorldBorder.class, "func_177726_b");
addMapping("getDamageAmount", WorldBorder.class, "func_177727_n");
addMapping("maxX", WorldBorder.class, "func_177728_d");
addMapping("getClosestDistance", WorldBorder.class, "func_177729_b");
addMapping("contains", WorldBorder.class, "func_177730_a");
addMapping("getCenterX", WorldBorder.class, "func_177731_f");
addMapping("getTimeUntilTarget", WorldBorder.class, "func_177732_i");
addMapping("maxZ", WorldBorder.class, "func_177733_e");
addMapping("getStatus", WorldBorder.class, "func_177734_a");
addMapping("getListeners", WorldBorder.class, "func_177735_k");
addMapping("minZ", WorldBorder.class, "func_177736_c");
addMapping("addListener", WorldBorder.class, "func_177737_a");
addMapping("setTransition", WorldBorder.class, "func_177738_a");
addMapping("setCenter", WorldBorder.class, "func_177739_c");
addMapping("getWarningTime", WorldBorder.class, "func_177740_p");
addMapping("getDiameter", WorldBorder.class, "func_177741_h");
addMapping("getDamageBuffer", WorldBorder.class, "func_177742_m");
addMapping("contains", WorldBorder.class, "func_177743_a");
addMapping("setDamageAmount", WorldBorder.class, "func_177744_c");
addMapping("getClosestDistance", WorldBorder.class, "func_177745_a");
addMapping("contains", WorldBorder.class, "func_177746_a");
addMapping("setWarningDistance", WorldBorder.class, "func_177747_c");
addMapping("getWarningDistance", WorldBorder.class, "func_177748_q");
addMapping("getResizeSpeed", WorldBorder.class, "func_177749_o");
addMapping("setTransition", WorldBorder.class, "func_177750_a");
addMapping("getTargetSize", WorldBorder.class, "func_177751_j");
addMapping("onResize", BlockStateContainer.class, "func_186008_a");
addMapping("write", BlockStateContainer.class, "func_186009_b");
addMapping("read", BlockStateContainer.class, "func_186010_a");
addMapping("getIndex", BlockStateContainer.class, "func_186011_b");
addMapping("setBits", BlockStateContainer.class, "func_186012_b");
addMapping("set", BlockStateContainer.class, "func_186013_a");
addMapping("set", BlockStateContainer.class, "func_186014_b");
addMapping("get", BlockStateContainer.class, "func_186015_a");
addMapping("get", BlockStateContainer.class, "func_186016_a");
addMapping("getDataForNBT", BlockStateContainer.class, "func_186017_a");
addMapping("getSerializedSize", BlockStateContainer.class, "func_186018_a");
addMapping("setDataFromNBT", BlockStateContainer.class, "func_186019_a");
addMapping("write", BlockStatePaletteHashMap.class, "func_186037_b");
addMapping("read", BlockStatePaletteHashMap.class, "func_186038_a");
addMapping("getBlockState", BlockStatePaletteHashMap.class, "func_186039_a");
addMapping("getSerializedSize", BlockStatePaletteHashMap.class, "func_186040_a");
addMapping("idFor", BlockStatePaletteHashMap.class, "func_186041_a");
addMapping("write", BlockStatePaletteLinear.class, "func_186037_b");
addMapping("read", BlockStatePaletteLinear.class, "func_186038_a");
addMapping("getBlockState", BlockStatePaletteLinear.class, "func_186039_a");
addMapping("getSerializedSize", BlockStatePaletteLinear.class, "func_186040_a");
addMapping("idFor", BlockStatePaletteLinear.class, "func_186041_a");
addMapping("write", BlockStatePaletteRegistry.class, "func_186037_b");
addMapping("read", BlockStatePaletteRegistry.class, "func_186038_a");
addMapping("getBlockState", BlockStatePaletteRegistry.class, "func_186039_a");
addMapping("getSerializedSize", BlockStatePaletteRegistry.class, "func_186040_a");
addMapping("idFor", BlockStatePaletteRegistry.class, "func_186041_a");
addMapping("isPopulated", Chunk.class, "func_150802_k");
addMapping("recheckGaps", Chunk.class, "func_150803_c");
addMapping("onTick", Chunk.class, "func_150804_b");
addMapping("getBlockLightOpacity", Chunk.class, "func_150808_b");
addMapping("checkLight", Chunk.class, "func_150809_p");
addMapping("checkLight", Chunk.class, "func_150811_f");
addMapping("addTileEntity", Chunk.class, "func_150813_a");
addMapping("setHasEntities", Chunk.class, "func_177409_g");
addMapping("isLoaded", Chunk.class, "func_177410_o");
addMapping("getBiome", Chunk.class, "func_177411_a");
addMapping("getWorld", Chunk.class, "func_177412_p");
addMapping("getLightFor", Chunk.class, "func_177413_a");
addMapping("getEntitiesWithinAABBForEntity", Chunk.class, "func_177414_a");
addMapping("setInhabitedTime", Chunk.class, "func_177415_c");
addMapping("getInhabitedTime", Chunk.class, "func_177416_w");
addMapping("markLoaded", Chunk.class, "func_177417_c");
addMapping("isTerrainPopulated", Chunk.class, "func_177419_t");
addMapping("setHeightMap", Chunk.class, "func_177420_a");
addMapping("setLightPopulated", Chunk.class, "func_177421_e");
addMapping("createNewTileEntity", Chunk.class, "func_177422_i");
addMapping("isLightPopulated", Chunk.class, "func_177423_u");
addMapping("getTileEntity", Chunk.class, "func_177424_a");
addMapping("removeTileEntity", Chunk.class, "func_177425_e");
addMapping("addTileEntity", Chunk.class, "func_177426_a");
addMapping("setModified", Chunk.class, "func_177427_f");
addMapping("getEntityLists", Chunk.class, "func_177429_s");
addMapping("getEntitiesOfTypeWithinAABB", Chunk.class, "func_177430_a");
addMapping("setLightFor", Chunk.class, "func_177431_a");
addMapping("setLastSaveTime", Chunk.class, "func_177432_b");
addMapping("getHeight", Chunk.class, "func_177433_f");
addMapping("getTileEntityMap", Chunk.class, "func_177434_r");
addMapping("getBlockState", Chunk.class, "func_177435_g");
addMapping("setBlockState", Chunk.class, "func_177436_a");
addMapping("getBlockLightOpacity", Chunk.class, "func_177437_b");
addMapping("getPrecipitationHeight", Chunk.class, "func_177440_h");
addMapping("setSkylightUpdated", Chunk.class, "func_177441_y");
addMapping("getLowestHeight", Chunk.class, "func_177442_v");
addMapping("getLightSubtracted", Chunk.class, "func_177443_a");
addMapping("canSeeSky", Chunk.class, "func_177444_d");
addMapping("getHeightMap", Chunk.class, "func_177445_q");
addMapping("setTerrainPopulated", Chunk.class, "func_177446_d");
addMapping("checkLightSide", Chunk.class, "func_180700_a");
addMapping("populate", Chunk.class, "func_186030_a");
addMapping("getLastExtendedBlockStorage", Chunk.class, "func_186031_y");
addMapping("getBlockState", Chunk.class, "func_186032_a");
addMapping("read", Chunk.class, "func_186033_a");
addMapping("populate", Chunk.class, "func_186034_a");
addMapping("wasTicked", Chunk.class, "func_186035_j");
addMapping("getBlockStorageArray", Chunk.class, "func_76587_i");
addMapping("generateHeightMap", Chunk.class, "func_76590_a");
addMapping("enqueueRelightChecks", Chunk.class, "func_76594_o");
addMapping("propagateSkylightOcclusion", Chunk.class, "func_76595_e");
addMapping("checkSkylightNeighborHeight", Chunk.class, "func_76599_g");
addMapping("isAtLocation", Chunk.class, "func_76600_a");
addMapping("needsSaving", Chunk.class, "func_76601_a");
addMapping("setStorageArrays", Chunk.class, "func_76602_a");
addMapping("generateSkylightMap", Chunk.class, "func_76603_b");
addMapping("getBiomeArray", Chunk.class, "func_76605_m");
addMapping("isEmptyBetween", Chunk.class, "func_76606_c");
addMapping("removeEntityAtIndex", Chunk.class, "func_76608_a");
addMapping("updateSkylightNeighborHeight", Chunk.class, "func_76609_d");
addMapping("getHeightValue", Chunk.class, "func_76611_b");
addMapping("addEntity", Chunk.class, "func_76612_a");
addMapping("resetRelightChecks", Chunk.class, "func_76613_n");
addMapping("relightBlock", Chunk.class, "func_76615_h");
addMapping("setBiomeArray", Chunk.class, "func_76616_a");
addMapping("getRandomWithSeed", Chunk.class, "func_76617_a");
addMapping("isEmpty", Chunk.class, "func_76621_g");
addMapping("removeEntity", Chunk.class, "func_76622_b");
addMapping("onUnload", Chunk.class, "func_76623_d");
addMapping("getTopFilledSegment", Chunk.class, "func_76625_h");
addMapping("markDirty", Chunk.class, "func_76630_e");
addMapping("onLoad", Chunk.class, "func_76631_c");
addMapping("getPos", Chunk.class, "func_76632_l");
addMapping("setBlockState", ChunkPrimer.class, "func_177855_a");
addMapping("getBlockState", ChunkPrimer.class, "func_177856_a");
addMapping("getBlockIndex", ChunkPrimer.class, "func_186137_b");
addMapping("findGroundBlockIdx", ChunkPrimer.class, "func_186138_a");
addMapping("addTileEntity", EmptyChunk.class, "func_150813_a");
addMapping("getLightFor", EmptyChunk.class, "func_177413_a");
addMapping("getEntitiesWithinAABBForEntity", EmptyChunk.class, "func_177414_a");
addMapping("getTileEntity", EmptyChunk.class, "func_177424_a");
addMapping("removeTileEntity", EmptyChunk.class, "func_177425_e");
addMapping("addTileEntity", EmptyChunk.class, "func_177426_a");
addMapping("getEntitiesOfTypeWithinAABB", EmptyChunk.class, "func_177430_a");
addMapping("setLightFor", EmptyChunk.class, "func_177431_a");
addMapping("getBlockState", EmptyChunk.class, "func_177435_g");
addMapping("getBlockLightOpacity", EmptyChunk.class, "func_177437_b");
addMapping("getLightSubtracted", EmptyChunk.class, "func_177443_a");
addMapping("canSeeSky", EmptyChunk.class, "func_177444_d");
addMapping("generateHeightMap", EmptyChunk.class, "func_76590_a");
addMapping("isAtLocation", EmptyChunk.class, "func_76600_a");
addMapping("needsSaving", EmptyChunk.class, "func_76601_a");
addMapping("generateSkylightMap", EmptyChunk.class, "func_76603_b");
addMapping("isEmptyBetween", EmptyChunk.class, "func_76606_c");
addMapping("removeEntityAtIndex", EmptyChunk.class, "func_76608_a");
addMapping("getHeightValue", EmptyChunk.class, "func_76611_b");
addMapping("addEntity", EmptyChunk.class, "func_76612_a");
addMapping("getRandomWithSeed", EmptyChunk.class, "func_76617_a");
addMapping("isEmpty", EmptyChunk.class, "func_76621_g");
addMapping("removeEntity", EmptyChunk.class, "func_76622_b");
addMapping("onUnload", EmptyChunk.class, "func_76623_d");
addMapping("markDirty", EmptyChunk.class, "func_76630_e");
addMapping("onLoad", EmptyChunk.class, "func_76631_c");
addMapping("write", IBlockStatePalette.class, "func_186037_b");
addMapping("read", IBlockStatePalette.class, "func_186038_a");
addMapping("getBlockState", IBlockStatePalette.class, "func_186039_a");
addMapping("getSerializedSize", IBlockStatePalette.class, "func_186040_a");
addMapping("idFor", IBlockStatePalette.class, "func_186041_a");
addMapping("onResize", IBlockStatePaletteResizer.class, "func_186008_a");
addMapping("provideChunk", IChunkProvider.class, "func_186025_d");
addMapping("getLoadedChunk", IChunkProvider.class, "func_186026_b");
addMapping("isChunkGeneratedAt", IChunkProvider.class, "func_191062_e");
addMapping("makeString", IChunkProvider.class, "func_73148_d");
addMapping("tick", IChunkProvider.class, "func_73156_b");
addMapping("getNibbleIndex", NibbleArray.class, "func_177478_c");
addMapping("isLowerNibble", NibbleArray.class, "func_177479_b");
addMapping("getFromIndex", NibbleArray.class, "func_177480_a");
addMapping("getData", NibbleArray.class, "func_177481_a");
addMapping("setIndex", NibbleArray.class, "func_177482_a");
addMapping("getCoordinateIndex", NibbleArray.class, "func_177483_b");
addMapping("set", NibbleArray.class, "func_76581_a");
addMapping("get", NibbleArray.class, "func_76582_a");
addMapping("writeChunkData", AnvilChunkLoader.class, "func_183013_b");
addMapping("readChunkEntity", AnvilChunkLoader.class, "func_186050_a");
addMapping("readWorldEntity", AnvilChunkLoader.class, "func_186051_a");
addMapping("spawnEntity", AnvilChunkLoader.class, "func_186052_a");
addMapping("createEntityFromNBT", AnvilChunkLoader.class, "func_186053_a");
addMapping("readWorldEntityPos", AnvilChunkLoader.class, "func_186054_a");
addMapping("registerFixes", AnvilChunkLoader.class, "func_189889_a");
addMapping("isChunkGeneratedAt", AnvilChunkLoader.class, "func_191063_a");
addMapping("writeNextIO", AnvilChunkLoader.class, "func_75814_c");
addMapping("loadChunk", AnvilChunkLoader.class, "func_75815_a");
addMapping("saveChunk", AnvilChunkLoader.class, "func_75816_a");
addMapping("chunkTick", AnvilChunkLoader.class, "func_75817_a");
addMapping("flush", AnvilChunkLoader.class, "func_75818_b");
addMapping("saveExtraChunkData", AnvilChunkLoader.class, "func_75819_b");
addMapping("writeChunkToNBT", AnvilChunkLoader.class, "func_75820_a");
addMapping("checkedReadChunkFromNBT", AnvilChunkLoader.class, "func_75822_a");
addMapping("readChunkFromNBT", AnvilChunkLoader.class, "func_75823_a");
addMapping("addChunkToPending", AnvilChunkLoader.class, "func_75824_a");
addMapping("getName", AnvilSaveConverter.class, "func_154333_a");
addMapping("isConvertible", AnvilSaveConverter.class, "func_154334_a");
addMapping("getSaveList", AnvilSaveConverter.class, "func_75799_b");
addMapping("flushCache", AnvilSaveConverter.class, "func_75800_d");
addMapping("isOldMapFormat", AnvilSaveConverter.class, "func_75801_b");
addMapping("getSaveLoader", AnvilSaveConverter.class, "func_75804_a");
addMapping("convertMapFormat", AnvilSaveConverter.class, "func_75805_a");
addMapping("createFile", AnvilSaveConverter.class, "func_75809_f");
addMapping("addRegionFilesToCollection", AnvilSaveConverter.class, "func_75810_a");
addMapping("convertChunks", AnvilSaveConverter.class, "func_75811_a");
addMapping("getSaveVersion", AnvilSaveConverter.class, "func_75812_c");
addMapping("convertFile", AnvilSaveConverter.class, "func_75813_a");
addMapping("saveWorldInfoWithPlayer", AnvilSaveHandler.class, "func_75755_a");
addMapping("flush", AnvilSaveHandler.class, "func_75759_a");
addMapping("getChunkLoader", AnvilSaveHandler.class, "func_75763_a");
addMapping("convertToAnvilFormat", ChunkLoader.class, "func_76690_a");
addMapping("load", ChunkLoader.class, "func_76691_a");
addMapping("set", ExtendedBlockStorage.class, "func_177484_a");
addMapping("get", ExtendedBlockStorage.class, "func_177485_a");
addMapping("getData", ExtendedBlockStorage.class, "func_186049_g");
addMapping("setSkyLight", ExtendedBlockStorage.class, "func_76657_c");
addMapping("setBlockLight", ExtendedBlockStorage.class, "func_76659_c");
addMapping("getBlockLight", ExtendedBlockStorage.class, "func_76661_k");
addMapping("getYLocation", ExtendedBlockStorage.class, "func_76662_d");
addMapping("isEmpty", ExtendedBlockStorage.class, "func_76663_a");
addMapping("setSkyLight", ExtendedBlockStorage.class, "func_76666_d");
addMapping("getSkyLight", ExtendedBlockStorage.class, "func_76670_c");
addMapping("getSkyLight", ExtendedBlockStorage.class, "func_76671_l");
addMapping("recalculateRefCounts", ExtendedBlockStorage.class, "func_76672_e");
addMapping("getBlockLight", ExtendedBlockStorage.class, "func_76674_d");
addMapping("needsRandomTick", ExtendedBlockStorage.class, "func_76675_b");
addMapping("setBlockLight", ExtendedBlockStorage.class, "func_76677_d");
addMapping("isChunkGeneratedAt", IChunkLoader.class, "func_191063_a");
addMapping("loadChunk", IChunkLoader.class, "func_75815_a");
addMapping("saveChunk", IChunkLoader.class, "func_75816_a");
addMapping("chunkTick", IChunkLoader.class, "func_75817_a");
addMapping("flush", IChunkLoader.class, "func_75818_b");
addMapping("saveExtraChunkData", IChunkLoader.class, "func_75819_b");
addMapping("get", NibbleArrayReader.class, "func_76686_a");
addMapping("getChunkDataInputStream", RegionFile.class, "func_76704_a");
addMapping("outOfBounds", RegionFile.class, "func_76705_d");
addMapping("write", RegionFile.class, "func_76706_a");
addMapping("getOffset", RegionFile.class, "func_76707_e");
addMapping("close", RegionFile.class, "func_76708_c");
addMapping("isChunkSaved", RegionFile.class, "func_76709_c");
addMapping("getChunkDataOutputStream", RegionFile.class, "func_76710_b");
addMapping("setOffset", RegionFile.class, "func_76711_a");
addMapping("write", RegionFile.class, "func_76712_a");
addMapping("setChunkTimestamp", RegionFile.class, "func_76713_b");
addMapping("chunkExists", RegionFileCache.class, "func_191064_f");
addMapping("getRegionFileIfExists", RegionFileCache.class, "func_191065_b");
addMapping("getChunkInputStream", RegionFileCache.class, "func_76549_c");
addMapping("createOrLoadRegionFile", RegionFileCache.class, "func_76550_a");
addMapping("clearRegionFileReferences", RegionFileCache.class, "func_76551_a");
addMapping("getChunkOutputStream", RegionFileCache.class, "func_76552_d");
addMapping("resetSpikeCrystals", DragonFightManager.class, "func_186087_f");
addMapping("getCompound", DragonFightManager.class, "func_186088_a");
addMapping("generateGateway", DragonFightManager.class, "func_186089_a");
addMapping("onCrystalDestroyed", DragonFightManager.class, "func_186090_a");
addMapping("findExitPortal", DragonFightManager.class, "func_186091_h");
addMapping("getNumAliveCrystals", DragonFightManager.class, "func_186092_c");
addMapping("respawnDragon", DragonFightManager.class, "func_186093_a");
addMapping("generatePortal", DragonFightManager.class, "func_186094_a");
addMapping("setRespawnState", DragonFightManager.class, "func_186095_a");
addMapping("processDragonDeath", DragonFightManager.class, "func_186096_a");
addMapping("spawnNewGateway", DragonFightManager.class, "func_186097_l");
addMapping("dragonUpdate", DragonFightManager.class, "func_186099_b");
addMapping("updateplayers", DragonFightManager.class, "func_186100_j");
addMapping("findAliveCrystals", DragonFightManager.class, "func_186101_k");
addMapping("hasPreviouslyKilledDragon", DragonFightManager.class, "func_186102_d");
addMapping("loadChunks", DragonFightManager.class, "func_186103_i");
addMapping("hasDragonBeenKilled", DragonFightManager.class, "func_186104_g");
addMapping("tick", DragonFightManager.class, "func_186105_b");
addMapping("respawnDragon", DragonFightManager.class, "func_186106_e");
addMapping("createNewDragon", DragonFightManager.class, "func_192445_m");
addMapping("process", DragonSpawnManager.class, "func_186079_a");
addMapping("getPossibleCreatures", ChunkGeneratorDebug.class, "func_177458_a");
addMapping("getBlockStateFor", ChunkGeneratorDebug.class, "func_177461_b");
addMapping("getNearestStructurePos", ChunkGeneratorDebug.class, "func_180513_a");
addMapping("recreateStructures", ChunkGeneratorDebug.class, "func_180514_a");
addMapping("populate", ChunkGeneratorDebug.class, "func_185931_b");
addMapping("generateChunk", ChunkGeneratorDebug.class, "func_185932_a");
addMapping("generateStructures", ChunkGeneratorDebug.class, "func_185933_a");
addMapping("isInsideStructure", ChunkGeneratorDebug.class, "func_193414_a");
addMapping("getPossibleCreatures", ChunkGeneratorEnd.class, "func_177458_a");
addMapping("getNearestStructurePos", ChunkGeneratorEnd.class, "func_180513_a");
addMapping("recreateStructures", ChunkGeneratorEnd.class, "func_180514_a");
addMapping("setBlocksInChunk", ChunkGeneratorEnd.class, "func_180518_a");
addMapping("populate", ChunkGeneratorEnd.class, "func_185931_b");
addMapping("generateChunk", ChunkGeneratorEnd.class, "func_185932_a");
addMapping("generateStructures", ChunkGeneratorEnd.class, "func_185933_a");
addMapping("getIslandHeightValue", ChunkGeneratorEnd.class, "func_185960_a");
addMapping("isIslandChunk", ChunkGeneratorEnd.class, "func_185961_c");
addMapping("buildSurfaces", ChunkGeneratorEnd.class, "func_185962_a");
addMapping("getHeights", ChunkGeneratorEnd.class, "func_185963_a");
addMapping("isInsideStructure", ChunkGeneratorEnd.class, "func_193414_a");
addMapping("getPossibleCreatures", ChunkGeneratorFlat.class, "func_177458_a");
addMapping("getNearestStructurePos", ChunkGeneratorFlat.class, "func_180513_a");
addMapping("recreateStructures", ChunkGeneratorFlat.class, "func_180514_a");
addMapping("populate", ChunkGeneratorFlat.class, "func_185931_b");
addMapping("generateChunk", ChunkGeneratorFlat.class, "func_185932_a");
addMapping("generateStructures", ChunkGeneratorFlat.class, "func_185933_a");
addMapping("isInsideStructure", ChunkGeneratorFlat.class, "func_193414_a");
addMapping("getPossibleCreatures", ChunkGeneratorHell.class, "func_177458_a");
addMapping("getNearestStructurePos", ChunkGeneratorHell.class, "func_180513_a");
addMapping("recreateStructures", ChunkGeneratorHell.class, "func_180514_a");
addMapping("populate", ChunkGeneratorHell.class, "func_185931_b");
addMapping("generateChunk", ChunkGeneratorHell.class, "func_185932_a");
addMapping("generateStructures", ChunkGeneratorHell.class, "func_185933_a");
addMapping("prepareHeights", ChunkGeneratorHell.class, "func_185936_a");
addMapping("buildSurfaces", ChunkGeneratorHell.class, "func_185937_b");
addMapping("getHeights", ChunkGeneratorHell.class, "func_185938_a");
addMapping("isInsideStructure", ChunkGeneratorHell.class, "func_193414_a");
addMapping("getPossibleCreatures", ChunkGeneratorOverworld.class, "func_177458_a");
addMapping("getNearestStructurePos", ChunkGeneratorOverworld.class, "func_180513_a");
addMapping("recreateStructures", ChunkGeneratorOverworld.class, "func_180514_a");
addMapping("populate", ChunkGeneratorOverworld.class, "func_185931_b");
addMapping("generateChunk", ChunkGeneratorOverworld.class, "func_185932_a");
addMapping("generateStructures", ChunkGeneratorOverworld.class, "func_185933_a");
addMapping("setBlocksInChunk", ChunkGeneratorOverworld.class, "func_185976_a");
addMapping("replaceBiomeBlocks", ChunkGeneratorOverworld.class, "func_185977_a");
addMapping("generateHeightmap", ChunkGeneratorOverworld.class, "func_185978_a");
addMapping("isInsideStructure", ChunkGeneratorOverworld.class, "func_193414_a");
addMapping("flushToDisk", ChunkProviderServer.class, "func_104112_b");
addMapping("getPossibleCreatures", ChunkProviderServer.class, "func_177458_a");
addMapping("getNearestStructurePos", ChunkProviderServer.class, "func_180513_a");
addMapping("provideChunk", ChunkProviderServer.class, "func_186025_d");
addMapping("getLoadedChunk", ChunkProviderServer.class, "func_186026_b");
addMapping("saveChunks", ChunkProviderServer.class, "func_186027_a");
addMapping("loadChunk", ChunkProviderServer.class, "func_186028_c");
addMapping("getLoadedChunks", ChunkProviderServer.class, "func_189548_a");
addMapping("queueUnload", ChunkProviderServer.class, "func_189549_a");
addMapping("isChunkGeneratedAt", ChunkProviderServer.class, "func_191062_e");
addMapping("isInsideStructure", ChunkProviderServer.class, "func_193413_a");
addMapping("makeString", ChunkProviderServer.class, "func_73148_d");
addMapping("chunkExists", ChunkProviderServer.class, "func_73149_a");
addMapping("getLoadedChunkCount", ChunkProviderServer.class, "func_73152_e");
addMapping("tick", ChunkProviderServer.class, "func_73156_b");
addMapping("canSave", ChunkProviderServer.class, "func_73157_c");
addMapping("loadChunkFromFile", ChunkProviderServer.class, "func_73239_e");
addMapping("queueUnloadAll", ChunkProviderServer.class, "func_73240_a");
addMapping("saveChunkData", ChunkProviderServer.class, "func_73242_b");
addMapping("saveChunkExtraData", ChunkProviderServer.class, "func_73243_a");
addMapping("getLayerFromString", FlatGeneratorInfo.class, "func_180715_a");
addMapping("getLayersFromString", FlatGeneratorInfo.class, "func_180716_a");
addMapping("getWorldFeatures", FlatGeneratorInfo.class, "func_82644_b");
addMapping("updateLayers", FlatGeneratorInfo.class, "func_82645_d");
addMapping("setBiome", FlatGeneratorInfo.class, "func_82647_a");
addMapping("getBiome", FlatGeneratorInfo.class, "func_82648_a");
addMapping("getDefaultFlatGenerator", FlatGeneratorInfo.class, "func_82649_e");
addMapping("getFlatLayers", FlatGeneratorInfo.class, "func_82650_c");
addMapping("createFlatGeneratorFromString", FlatGeneratorInfo.class, "func_82651_a");
addMapping("getLayerMaterialBlock", FlatLayerInfo.class, "func_151536_b");
addMapping("getLayerMaterial", FlatLayerInfo.class, "func_175900_c");
addMapping("getMinY", FlatLayerInfo.class, "func_82656_d");
addMapping("getLayerCount", FlatLayerInfo.class, "func_82657_a");
addMapping("getFillBlockMeta", FlatLayerInfo.class, "func_82658_c");
addMapping("setMinY", FlatLayerInfo.class, "func_82660_d");
addMapping("getPossibleCreatures", IChunkGenerator.class, "func_177458_a");
addMapping("getNearestStructurePos", IChunkGenerator.class, "func_180513_a");
addMapping("recreateStructures", IChunkGenerator.class, "func_180514_a");
addMapping("populate", IChunkGenerator.class, "func_185931_b");
addMapping("generateChunk", IChunkGenerator.class, "func_185932_a");
addMapping("generateStructures", IChunkGenerator.class, "func_185933_a");
addMapping("isInsideStructure", IChunkGenerator.class, "func_193414_a");
addMapping("recursiveGenerate", MapGenBase.class, "func_180701_a");
addMapping("generate", MapGenBase.class, "func_186125_a");
addMapping("setupChunkSeed", MapGenBase.class, "func_191068_a");
addMapping("canReplaceBlock", MapGenCaves.class, "func_175793_a");
addMapping("recursiveGenerate", MapGenCaves.class, "func_180701_a");
addMapping("addTunnel", MapGenCaves.class, "func_180702_a");
addMapping("addRoom", MapGenCaves.class, "func_180703_a");
addMapping("recursiveGenerate", MapGenCavesHell.class, "func_180701_a");
addMapping("addTunnel", MapGenCavesHell.class, "func_180704_a");
addMapping("addRoom", MapGenCavesHell.class, "func_180705_a");
addMapping("recursiveGenerate", MapGenRavine.class, "func_180701_a");
addMapping("addTunnel", MapGenRavine.class, "func_180707_a");
addMapping("populateNoiseArray", NoiseGeneratorImproved.class, "func_76308_a");
addMapping("grad2", NoiseGeneratorImproved.class, "func_76309_a");
addMapping("grad", NoiseGeneratorImproved.class, "func_76310_a");
addMapping("lerp", NoiseGeneratorImproved.class, "func_76311_b");
addMapping("generateNoiseOctaves", NoiseGeneratorOctaves.class, "func_76304_a");
addMapping("generateNoiseOctaves", NoiseGeneratorOctaves.class, "func_76305_a");
addMapping("getRegion", NoiseGeneratorPerlin.class, "func_151599_a");
addMapping("getRegion", NoiseGeneratorPerlin.class, "func_151600_a");
addMapping("getValue", NoiseGeneratorPerlin.class, "func_151601_a");
addMapping("dot", NoiseGeneratorSimplex.class, "func_151604_a");
addMapping("getValue", NoiseGeneratorSimplex.class, "func_151605_a");
addMapping("add", NoiseGeneratorSimplex.class, "func_151606_a");
addMapping("fastFloor", NoiseGeneratorSimplex.class, "func_151607_a");
addMapping("canGrowInto", WorldGenAbstractTree.class, "func_150523_a");
addMapping("setDirtAt", WorldGenAbstractTree.class, "func_175921_a");
addMapping("generateSaplings", WorldGenAbstractTree.class, "func_180711_a");
addMapping("generate", WorldGenBigMushroom.class, "func_180709_b");
addMapping("setDecorationDefaults", WorldGenBigTree.class, "func_175904_e");
addMapping("getGreatestDistance", WorldGenBigTree.class, "func_175935_b");
addMapping("checkBlockLine", WorldGenBigTree.class, "func_175936_a");
addMapping("limb", WorldGenBigTree.class, "func_175937_a");
addMapping("getLogAxis", WorldGenBigTree.class, "func_175938_b");
addMapping("generateLeafNodeBases", WorldGenBigTree.class, "func_175939_d");
addMapping("generateLeafNode", WorldGenBigTree.class, "func_175940_a");
addMapping("generateLeaves", WorldGenBigTree.class, "func_175941_b");
addMapping("generateTrunk", WorldGenBigTree.class, "func_175942_c");
addMapping("generate", WorldGenBigTree.class, "func_180709_b");
addMapping("crosSection", WorldGenBigTree.class, "func_181631_a");
addMapping("generateLeafNodeList", WorldGenBigTree.class, "func_76489_a");
addMapping("layerSize", WorldGenBigTree.class, "func_76490_a");
addMapping("leafNodeNeedsBase", WorldGenBigTree.class, "func_76493_c");
addMapping("leafSize", WorldGenBigTree.class, "func_76495_b");
addMapping("validTreeLocation", WorldGenBigTree.class, "func_76497_e");
addMapping("generate", WorldGenBirchTree.class, "func_180709_b");
addMapping("generate", WorldGenBlockBlob.class, "func_180709_b");
addMapping("generate", WorldGenBush.class, "func_180709_b");
addMapping("generate", WorldGenCactus.class, "func_180709_b");
addMapping("placeLeafAt", WorldGenCanopyTree.class, "func_150526_a");
addMapping("generate", WorldGenCanopyTree.class, "func_180709_b");
addMapping("placeTreeOfHeight", WorldGenCanopyTree.class, "func_181638_a");
addMapping("placeLogAt", WorldGenCanopyTree.class, "func_181639_b");
addMapping("generate", WorldGenClay.class, "func_180709_b");
addMapping("generate", WorldGenDeadBush.class, "func_180709_b");
addMapping("generate", WorldGenDesertWells.class, "func_180709_b");
addMapping("generate", WorldGenDoublePlant.class, "func_180709_b");
addMapping("setPlantType", WorldGenDoublePlant.class, "func_180710_a");
addMapping("generate", WorldGenDungeons.class, "func_180709_b");
addMapping("pickMobSpawner", WorldGenDungeons.class, "func_76543_b");
addMapping("generate", WorldGenEndGateway.class, "func_180709_b");
addMapping("generate", WorldGenEndIsland.class, "func_180709_b");
addMapping("generate", WorldGenEndPodium.class, "func_180709_b");
addMapping("generate", WorldGenFire.class, "func_180709_b");
addMapping("setGeneratedBlock", WorldGenFlowers.class, "func_175914_a");
addMapping("generate", WorldGenFlowers.class, "func_180709_b");
addMapping("generate", WorldGenFossils.class, "func_180709_b");
addMapping("generate", WorldGenGlowStone1.class, "func_180709_b");
addMapping("generate", WorldGenGlowStone2.class, "func_180709_b");
addMapping("generate", WorldGenHellLava.class, "func_180709_b");
addMapping("getHeight", WorldGenHugeTrees.class, "func_150533_a");
addMapping("growLeavesLayerStrict", WorldGenHugeTrees.class, "func_175925_a");
addMapping("isSpaceAt", WorldGenHugeTrees.class, "func_175926_c");
addMapping("ensureDirtsUnderneath", WorldGenHugeTrees.class, "func_175927_a");
addMapping("growLeavesLayer", WorldGenHugeTrees.class, "func_175928_b");
addMapping("ensureGrowable", WorldGenHugeTrees.class, "func_175929_a");
addMapping("generate", WorldGenIcePath.class, "func_180709_b");
addMapping("generate", WorldGenIceSpike.class, "func_180709_b");
addMapping("generate", WorldGenLakes.class, "func_180709_b");
addMapping("generate", WorldGenLiquids.class, "func_180709_b");
addMapping("createCrown", WorldGenMegaJungle.class, "func_175930_c");
addMapping("generate", WorldGenMegaJungle.class, "func_180709_b");
addMapping("placeVine", WorldGenMegaJungle.class, "func_181632_a");
addMapping("createCrown", WorldGenMegaPineTree.class, "func_150541_c");
addMapping("placePodzolCircle", WorldGenMegaPineTree.class, "func_175933_b");
addMapping("placePodzolAt", WorldGenMegaPineTree.class, "func_175934_c");
addMapping("generate", WorldGenMegaPineTree.class, "func_180709_b");
addMapping("generateSaplings", WorldGenMegaPineTree.class, "func_180711_a");
addMapping("generate", WorldGenMelon.class, "func_180709_b");
addMapping("generate", WorldGenMinable.class, "func_180709_b");
addMapping("generate", WorldGenPumpkin.class, "func_180709_b");
addMapping("generate", WorldGenReed.class, "func_180709_b");
addMapping("generate", WorldGenSand.class, "func_180709_b");
addMapping("placeLeafAt", WorldGenSavannaTree.class, "func_175924_b");
addMapping("generate", WorldGenSavannaTree.class, "func_180709_b");
addMapping("placeLogAt", WorldGenSavannaTree.class, "func_181642_b");
addMapping("generate", WorldGenShrub.class, "func_180709_b");
addMapping("generate", WorldGenSpikes.class, "func_180709_b");
addMapping("setBeamTarget", WorldGenSpikes.class, "func_186142_a");
addMapping("setSpike", WorldGenSpikes.class, "func_186143_a");
addMapping("setCrystalInvulnerable", WorldGenSpikes.class, "func_186144_a");
addMapping("generate", WorldGenSwamp.class, "func_180709_b");
addMapping("addVine", WorldGenSwamp.class, "func_181647_a");
addMapping("generate", WorldGenTaiga1.class, "func_180709_b");
addMapping("generate", WorldGenTaiga2.class, "func_180709_b");
addMapping("generate", WorldGenTallGrass.class, "func_180709_b");
addMapping("generate", WorldGenTrees.class, "func_180709_b");
addMapping("addHangingVine", WorldGenTrees.class, "func_181650_b");
addMapping("addVine", WorldGenTrees.class, "func_181651_a");
addMapping("placeCocoa", WorldGenTrees.class, "func_181652_a");
addMapping("generate", WorldGenVines.class, "func_180709_b");
addMapping("generate", WorldGenWaterlily.class, "func_180709_b");
addMapping("setBlockAndNotifyAdequately", WorldGenerator.class, "func_175903_a");
addMapping("setDecorationDefaults", WorldGenerator.class, "func_175904_e");
addMapping("generate", WorldGenerator.class, "func_180709_b");
addMapping("generate", WorldGeneratorBonusChest.class, "func_180709_b");
addMapping("biomesEqualOrMesaPlateau", GenLayer.class, "func_151616_a");
addMapping("selectModeOrRandom", GenLayer.class, "func_151617_b");
addMapping("isBiomeOceanic", GenLayer.class, "func_151618_b");
addMapping("selectRandom", GenLayer.class, "func_151619_a");
addMapping("initializeAllBiomeGenerators", GenLayer.class, "func_180781_a");
addMapping("nextInt", GenLayer.class, "func_75902_a");
addMapping("initChunkSeed", GenLayer.class, "func_75903_a");
addMapping("getInts", GenLayer.class, "func_75904_a");
addMapping("initWorldGenSeed", GenLayer.class, "func_75905_a");
addMapping("getInts", GenLayerAddIsland.class, "func_75904_a");
addMapping("getInts", GenLayerAddMushroomIsland.class, "func_75904_a");
addMapping("getInts", GenLayerAddSnow.class, "func_75904_a");
addMapping("getInts", GenLayerBiome.class, "func_75904_a");
addMapping("canBiomesBeNeighbors", GenLayerBiomeEdge.class, "func_151634_b");
addMapping("replaceBiomeEdge", GenLayerBiomeEdge.class, "func_151635_b");
addMapping("replaceBiomeEdgeIfNecessary", GenLayerBiomeEdge.class, "func_151636_a");
addMapping("getInts", GenLayerBiomeEdge.class, "func_75904_a");
addMapping("getInts", GenLayerDeepOcean.class, "func_75904_a");
addMapping("getIntsHeatIce", GenLayerEdge.class, "func_151624_d");
addMapping("getIntsSpecial", GenLayerEdge.class, "func_151625_e");
addMapping("getIntsCoolWarm", GenLayerEdge.class, "func_151626_c");
addMapping("getInts", GenLayerEdge.class, "func_75904_a");
addMapping("selectModeOrRandom", GenLayerFuzzyZoom.class, "func_151617_b");
addMapping("getInts", GenLayerHills.class, "func_75904_a");
addMapping("getInts", GenLayerIsland.class, "func_75904_a");
addMapping("getInts", GenLayerRareBiome.class, "func_75904_a");
addMapping("getInts", GenLayerRemoveTooMuchOcean.class, "func_75904_a");
addMapping("riverFilter", GenLayerRiver.class, "func_151630_c");
addMapping("getInts", GenLayerRiver.class, "func_75904_a");
addMapping("getInts", GenLayerRiverInit.class, "func_75904_a");
addMapping("getInts", GenLayerRiverMix.class, "func_75904_a");
addMapping("initWorldGenSeed", GenLayerRiverMix.class, "func_75905_a");
addMapping("isJungleCompatible", GenLayerShore.class, "func_151631_c");
addMapping("replaceIfNeighborOcean", GenLayerShore.class, "func_151632_a");
addMapping("isMesa", GenLayerShore.class, "func_151633_d");
addMapping("getInts", GenLayerShore.class, "func_75904_a");
addMapping("getInts", GenLayerSmooth.class, "func_75904_a");
addMapping("getInts", GenLayerVoronoiZoom.class, "func_75904_a");
addMapping("getInts", GenLayerZoom.class, "func_75904_a");
addMapping("magnify", GenLayerZoom.class, "func_75915_a");
addMapping("getIntCache", IntCache.class, "func_76445_a");
addMapping("resetIntCache", IntCache.class, "func_76446_a");
addMapping("getCacheSizes", IntCache.class, "func_85144_b");
addMapping("registerScatteredFeaturePieces", ComponentScatteredFeaturePieces.class, "func_143045_a");
addMapping("getStructureName", MapGenEndCity.class, "func_143025_a");
addMapping("getNearestStructurePos", MapGenEndCity.class, "func_180706_b");
addMapping("getYPosForStructure", MapGenEndCity.class, "func_191070_b");
addMapping("canSpawnStructureAtCoords", MapGenEndCity.class, "func_75047_a");
addMapping("getStructureStart", MapGenEndCity.class, "func_75049_b");
addMapping("getStructureName", MapGenMineshaft.class, "func_143025_a");
addMapping("getNearestStructurePos", MapGenMineshaft.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", MapGenMineshaft.class, "func_75047_a");
addMapping("getStructureStart", MapGenMineshaft.class, "func_75049_b");
addMapping("getStructureName", MapGenNetherBridge.class, "func_143025_a");
addMapping("getNearestStructurePos", MapGenNetherBridge.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", MapGenNetherBridge.class, "func_75047_a");
addMapping("getStructureStart", MapGenNetherBridge.class, "func_75049_b");
addMapping("getSpawnList", MapGenNetherBridge.class, "func_75059_a");
addMapping("getStructureName", MapGenScatteredFeature.class, "func_143025_a");
addMapping("isSwampHut", MapGenScatteredFeature.class, "func_175798_a");
addMapping("getNearestStructurePos", MapGenScatteredFeature.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", MapGenScatteredFeature.class, "func_75047_a");
addMapping("getStructureStart", MapGenScatteredFeature.class, "func_75049_b");
addMapping("getMonsters", MapGenScatteredFeature.class, "func_82667_a");
addMapping("getStructureName", MapGenStronghold.class, "func_143025_a");
addMapping("getNearestStructurePos", MapGenStronghold.class, "func_180706_b");
addMapping("generatePositions", MapGenStronghold.class, "func_189104_c");
addMapping("canSpawnStructureAtCoords", MapGenStronghold.class, "func_75047_a");
addMapping("getStructureStart", MapGenStronghold.class, "func_75049_b");
addMapping("getStructureName", MapGenStructure.class, "func_143025_a");
addMapping("setStructureStart", MapGenStructure.class, "func_143026_a");
addMapping("initializeStructureData", MapGenStructure.class, "func_143027_a");
addMapping("generateStructure", MapGenStructure.class, "func_175794_a");
addMapping("isInsideStructure", MapGenStructure.class, "func_175795_b");
addMapping("isPositionInStructure", MapGenStructure.class, "func_175796_a");
addMapping("getStructureAt", MapGenStructure.class, "func_175797_c");
addMapping("recursiveGenerate", MapGenStructure.class, "func_180701_a");
addMapping("getNearestStructurePos", MapGenStructure.class, "func_180706_b");
addMapping("findNearestStructurePosBySpacing", MapGenStructure.class, "func_191069_a");
addMapping("canSpawnStructureAtCoords", MapGenStructure.class, "func_75047_a");
addMapping("getStructureStart", MapGenStructure.class, "func_75049_b");
addMapping("getTagCompound", MapGenStructureData.class, "func_143041_a");
addMapping("formatChunkCoords", MapGenStructureData.class, "func_143042_b");
addMapping("writeInstance", MapGenStructureData.class, "func_143043_a");
addMapping("writeToNBT", MapGenStructureData.class, "func_189551_b");
addMapping("readFromNBT", MapGenStructureData.class, "func_76184_a");
addMapping("registerStructureComponent", MapGenStructureIO.class, "func_143031_a");
addMapping("getStructureComponent", MapGenStructureIO.class, "func_143032_b");
addMapping("getStructureStartName", MapGenStructureIO.class, "func_143033_a");
addMapping("registerStructure", MapGenStructureIO.class, "func_143034_b");
addMapping("getStructureStart", MapGenStructureIO.class, "func_143035_a");
addMapping("getStructureComponentName", MapGenStructureIO.class, "func_143036_a");
addMapping("getStructureName", MapGenVillage.class, "func_143025_a");
addMapping("getNearestStructurePos", MapGenVillage.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", MapGenVillage.class, "func_75047_a");
addMapping("getStructureStart", MapGenVillage.class, "func_75049_b");
addMapping("toNBTTagIntArray", StructureBoundingBox.class, "func_151535_h");
addMapping("getLength", StructureBoundingBox.class, "func_175896_b");
addMapping("getComponentToAddBoundingBox", StructureBoundingBox.class, "func_175897_a");
addMapping("isVecInside", StructureBoundingBox.class, "func_175898_b");
addMapping("createProper", StructureBoundingBox.class, "func_175899_a");
addMapping("getZSize", StructureBoundingBox.class, "func_78880_d");
addMapping("getYSize", StructureBoundingBox.class, "func_78882_c");
addMapping("getXSize", StructureBoundingBox.class, "func_78883_b");
addMapping("intersectsWith", StructureBoundingBox.class, "func_78884_a");
addMapping("intersectsWith", StructureBoundingBox.class, "func_78885_a");
addMapping("offset", StructureBoundingBox.class, "func_78886_a");
addMapping("getNewBoundingBox", StructureBoundingBox.class, "func_78887_a");
addMapping("expandTo", StructureBoundingBox.class, "func_78888_b");
addMapping("readStructureBaseNBT", StructureComponent.class, "func_143009_a");
addMapping("createStructureBaseNBT", StructureComponent.class, "func_143010_b");
addMapping("readStructureFromNBT", StructureComponent.class, "func_143011_b");
addMapping("writeStructureToNBT", StructureComponent.class, "func_143012_a");
addMapping("fillWithBlocks", StructureComponent.class, "func_175804_a");
addMapping("getBlockStateFromPos", StructureComponent.class, "func_175807_a");
addMapping("replaceAirAndLiquidDownwards", StructureComponent.class, "func_175808_b");
addMapping("randomlyPlaceBlock", StructureComponent.class, "func_175809_a");
addMapping("setBlockState", StructureComponent.class, "func_175811_a");
addMapping("randomlyRareFillWithBlocks", StructureComponent.class, "func_180777_a");
addMapping("offset", StructureComponent.class, "func_181138_a");
addMapping("setCoordBaseMode", StructureComponent.class, "func_186164_a");
addMapping("getCoordBaseMode", StructureComponent.class, "func_186165_e");
addMapping("generateChest", StructureComponent.class, "func_186167_a");
addMapping("createDispenser", StructureComponent.class, "func_189419_a");
addMapping("generateMaybeBox", StructureComponent.class, "func_189914_a");
addMapping("generateDoor", StructureComponent.class, "func_189915_a");
addMapping("getSkyBrightness", StructureComponent.class, "func_189916_b");
addMapping("generateChest", StructureComponent.class, "func_191080_a");
addMapping("isLiquidInStructureBoundingBox", StructureComponent.class, "func_74860_a");
addMapping("buildComponent", StructureComponent.class, "func_74861_a");
addMapping("getYWithOffset", StructureComponent.class, "func_74862_a");
addMapping("getXWithOffset", StructureComponent.class, "func_74865_a");
addMapping("clearCurrentPositionBlocksUpwards", StructureComponent.class, "func_74871_b");
addMapping("getZWithOffset", StructureComponent.class, "func_74873_b");
addMapping("getBoundingBox", StructureComponent.class, "func_74874_b");
addMapping("addComponentParts", StructureComponent.class, "func_74875_a");
addMapping("getComponentType", StructureComponent.class, "func_74877_c");
addMapping("fillWithAir", StructureComponent.class, "func_74878_a");
addMapping("fillWithRandomizedBlocks", StructureComponent.class, "func_74882_a");
addMapping("findIntersecting", StructureComponent.class, "func_74883_a");
addMapping("readStructureFromNBT", StructureComponentTemplate.class, "func_143011_b");
addMapping("writeStructureToNBT", StructureComponentTemplate.class, "func_143012_a");
addMapping("offset", StructureComponentTemplate.class, "func_181138_a");
addMapping("setup", StructureComponentTemplate.class, "func_186173_a");
addMapping("setBoundingBoxFromTemplate", StructureComponentTemplate.class, "func_186174_h");
addMapping("handleDataMarker", StructureComponentTemplate.class, "func_186175_a");
addMapping("addComponentParts", StructureComponentTemplate.class, "func_74875_a");
addMapping("registerPieces", StructureEndCityPieces.class, "func_186200_a");
addMapping("addHelper", StructureEndCityPieces.class, "func_189935_b");
addMapping("startHouseTower", StructureEndCityPieces.class, "func_191087_a");
addMapping("recursiveChildren", StructureEndCityPieces.class, "func_191088_b");
addMapping("addPiece", StructureEndCityPieces.class, "func_191090_b");
addMapping("registerStructurePieces", StructureMineshaftPieces.class, "func_143048_a");
addMapping("generateAndAddPiece", StructureMineshaftPieces.class, "func_189938_b");
addMapping("createRandomShaftPiece", StructureMineshaftPieces.class, "func_189940_a");
addMapping("registerNetherFortressPieces", StructureNetherBridgePieces.class, "func_143049_a");
addMapping("findAndCreateBridgePieceFactory", StructureNetherBridgePieces.class, "func_175887_b");
addMapping("getStructureName", StructureOceanMonument.class, "func_143025_a");
addMapping("getMonsters", StructureOceanMonument.class, "func_175799_b");
addMapping("getNearestStructurePos", StructureOceanMonument.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", StructureOceanMonument.class, "func_75047_a");
addMapping("getStructureStart", StructureOceanMonument.class, "func_75049_b");
addMapping("registerOceanMonumentPieces", StructureOceanMonumentPieces.class, "func_175970_a");
addMapping("readFromNBT", StructureStart.class, "func_143017_b");
addMapping("getChunkPosZ", StructureStart.class, "func_143018_f");
addMapping("getChunkPosX", StructureStart.class, "func_143019_e");
addMapping("readStructureComponentsFromNBT", StructureStart.class, "func_143020_a");
addMapping("writeStructureComponentsToNBT", StructureStart.class, "func_143021_a");
addMapping("writeToNBT", StructureStart.class, "func_143022_a");
addMapping("notifyPostProcessAt", StructureStart.class, "func_175787_b");
addMapping("isValidForPostProcess", StructureStart.class, "func_175788_a");
addMapping("getComponents", StructureStart.class, "func_186161_c");
addMapping("markAvailableHeight", StructureStart.class, "func_75067_a");
addMapping("generateStructure", StructureStart.class, "func_75068_a");
addMapping("isSizeableStructure", StructureStart.class, "func_75069_d");
addMapping("setRandomHeight", StructureStart.class, "func_75070_a");
addMapping("getBoundingBox", StructureStart.class, "func_75071_a");
addMapping("updateBoundingBox", StructureStart.class, "func_75072_c");
addMapping("registerStrongholdPieces", StructureStrongholdPieces.class, "func_143046_a");
addMapping("generateAndAddPiece", StructureStrongholdPieces.class, "func_175953_c");
addMapping("findAndCreatePieceFactory", StructureStrongholdPieces.class, "func_175954_a");
addMapping("generatePieceFromSmallDoor", StructureStrongholdPieces.class, "func_175955_b");
addMapping("prepareStructurePieces", StructureStrongholdPieces.class, "func_75198_a");
addMapping("canAddStructurePieces", StructureStrongholdPieces.class, "func_75202_c");
addMapping("registerVillagePieces", StructureVillagePieces.class, "func_143016_a");
addMapping("findAndCreateComponentFactory", StructureVillagePieces.class, "func_176065_a");
addMapping("generateAndAddComponent", StructureVillagePieces.class, "func_176066_d");
addMapping("generateComponent", StructureVillagePieces.class, "func_176067_c");
addMapping("generateAndAddRoadPiece", StructureVillagePieces.class, "func_176069_e");
addMapping("updatePieceWeight", StructureVillagePieces.class, "func_75079_a");
addMapping("getStructureVillageWeightedPieceList", StructureVillagePieces.class, "func_75084_a");
addMapping("getStructureName", WoodlandMansion.class, "func_143025_a");
addMapping("getNearestStructurePos", WoodlandMansion.class, "func_180706_b");
addMapping("canSpawnStructureAtCoords", WoodlandMansion.class, "func_75047_a");
addMapping("getStructureStart", WoodlandMansion.class, "func_75049_b");
addMapping("generateMansion", WoodlandMansionPieces.class, "func_191152_a");
addMapping("registerWoodlandMansionPieces", WoodlandMansionPieces.class, "func_191153_a");
addMapping("processBlock", BlockRotationProcessor.class, "func_189943_a");
addMapping("processBlock", ITemplateProcessor.class, "func_189943_a");
addMapping("getMirror", PlacementSettings.class, "func_186212_b");
addMapping("getBoundingBox", PlacementSettings.class, "func_186213_g");
addMapping("setMirror", PlacementSettings.class, "func_186214_a");
addMapping("getRotation", PlacementSettings.class, "func_186215_c");
addMapping("getBoundingBoxFromChunk", PlacementSettings.class, "func_186216_b");
addMapping("copy", PlacementSettings.class, "func_186217_a");
addMapping("setChunk", PlacementSettings.class, "func_186218_a");
addMapping("getReplacedBlock", PlacementSettings.class, "func_186219_f");
addMapping("setRotation", PlacementSettings.class, "func_186220_a");
addMapping("getIgnoreEntities", PlacementSettings.class, "func_186221_e");
addMapping("setIgnoreEntities", PlacementSettings.class, "func_186222_a");
addMapping("setBoundingBox", PlacementSettings.class, "func_186223_a");
addMapping("setBoundingBoxFromChunk", PlacementSettings.class, "func_186224_i");
addMapping("setReplacedBlock", PlacementSettings.class, "func_186225_a");
addMapping("setIgnoreStructureBlock", PlacementSettings.class, "func_186226_b");
addMapping("getIgnoreStructureBlock", PlacementSettings.class, "func_186227_h");
addMapping("setIntegrity", PlacementSettings.class, "func_189946_a");
addMapping("getRandom", PlacementSettings.class, "func_189947_a");
addMapping("getIntegrity", PlacementSettings.class, "func_189948_f");
addMapping("setSeed", PlacementSettings.class, "func_189949_a");
addMapping("setRandom", PlacementSettings.class, "func_189950_a");
addMapping("setAuthor", Template.class, "func_186252_a");
addMapping("addBlocksToWorld", Template.class, "func_186253_b");
addMapping("takeBlocksFromWorld", Template.class, "func_186254_a");
addMapping("takeEntitiesFromWorld", Template.class, "func_186255_a");
addMapping("read", Template.class, "func_186256_b");
addMapping("transformedSize", Template.class, "func_186257_a");
addMapping("getDataBlocks", Template.class, "func_186258_a");
addMapping("getSize", Template.class, "func_186259_a");
addMapping("addBlocksToWorldChunk", Template.class, "func_186260_a");
addMapping("getAuthor", Template.class, "func_186261_b");
addMapping("calculateConnectedPos", Template.class, "func_186262_a");
addMapping("addEntitiesToWorld", Template.class, "func_186263_a");
addMapping("writeDoubles", Template.class, "func_186264_a");
addMapping("transformedBlockPos", Template.class, "func_186266_a");
addMapping("writeInts", Template.class, "func_186267_a");
addMapping("transformedBlockPos", Template.class, "func_186268_a");
addMapping("transformedVec3d", Template.class, "func_186269_a");
addMapping("writeToNBT", Template.class, "func_189552_a");
addMapping("addBlocksToWorld", Template.class, "func_189960_a");
addMapping("getZeroPositionWithTransform", Template.class, "func_189961_a");
addMapping("addBlocksToWorld", Template.class, "func_189962_a");
addMapping("getZeroPositionWithTransform", Template.class, "func_191157_a");
addMapping("registerFixes", Template.class, "func_191158_a");
addMapping("readTemplate", TemplateManager.class, "func_186235_b");
addMapping("readTemplateFromJar", TemplateManager.class, "func_186236_a");
addMapping("getTemplate", TemplateManager.class, "func_186237_a");
addMapping("writeTemplate", TemplateManager.class, "func_186238_c");
addMapping("readTemplateFromStream", TemplateManager.class, "func_186239_a");
addMapping("remove", TemplateManager.class, "func_189941_a");
addMapping("get", TemplateManager.class, "func_189942_b");
addMapping("setAllowCommands", DerivedWorldInfo.class, "func_176121_c");
addMapping("isDifficultyLocked", DerivedWorldInfo.class, "func_176123_z");
addMapping("getDifficulty", DerivedWorldInfo.class, "func_176130_y");
addMapping("setSpawn", DerivedWorldInfo.class, "func_176143_a");
addMapping("setDifficulty", DerivedWorldInfo.class, "func_176144_a");
addMapping("setDifficultyLocked", DerivedWorldInfo.class, "func_180783_e");
addMapping("setDimensionData", DerivedWorldInfo.class, "func_186345_a");
addMapping("getDimensionData", DerivedWorldInfo.class, "func_186347_a");
addMapping("setSpawnY", DerivedWorldInfo.class, "func_76056_b");
addMapping("getLastTimePlayed", DerivedWorldInfo.class, "func_76057_l");
addMapping("setSpawnX", DerivedWorldInfo.class, "func_76058_a");
addMapping("isRaining", DerivedWorldInfo.class, "func_76059_o");
addMapping("isThundering", DerivedWorldInfo.class, "func_76061_m");
addMapping("setWorldName", DerivedWorldInfo.class, "func_76062_a");
addMapping("getSeed", DerivedWorldInfo.class, "func_76063_b");
addMapping("getWorldName", DerivedWorldInfo.class, "func_76065_j");
addMapping("getTerrainType", DerivedWorldInfo.class, "func_76067_t");
addMapping("setWorldTime", DerivedWorldInfo.class, "func_76068_b");
addMapping("setThundering", DerivedWorldInfo.class, "func_76069_a");
addMapping("isInitialized", DerivedWorldInfo.class, "func_76070_v");
addMapping("getThunderTime", DerivedWorldInfo.class, "func_76071_n");
addMapping("getPlayerNBTTagCompound", DerivedWorldInfo.class, "func_76072_h");
addMapping("getWorldTime", DerivedWorldInfo.class, "func_76073_f");
addMapping("getSpawnZ", DerivedWorldInfo.class, "func_76074_e");
addMapping("getSpawnY", DerivedWorldInfo.class, "func_76075_d");
addMapping("getGameType", DerivedWorldInfo.class, "func_76077_q");
addMapping("setSaveVersion", DerivedWorldInfo.class, "func_76078_e");
addMapping("getSpawnX", DerivedWorldInfo.class, "func_76079_c");
addMapping("setRainTime", DerivedWorldInfo.class, "func_76080_g");
addMapping("cloneNBTCompound", DerivedWorldInfo.class, "func_76082_a");
addMapping("getRainTime", DerivedWorldInfo.class, "func_76083_p");
addMapping("setRaining", DerivedWorldInfo.class, "func_76084_b");
addMapping("setTerrainType", DerivedWorldInfo.class, "func_76085_a");
addMapping("areCommandsAllowed", DerivedWorldInfo.class, "func_76086_u");
addMapping("setSpawnZ", DerivedWorldInfo.class, "func_76087_c");
addMapping("getSaveVersion", DerivedWorldInfo.class, "func_76088_k");
addMapping("isMapFeaturesEnabled", DerivedWorldInfo.class, "func_76089_r");
addMapping("setThunderTime", DerivedWorldInfo.class, "func_76090_f");
addMapping("setServerInitialized", DerivedWorldInfo.class, "func_76091_d");
addMapping("getSizeOnDisk", DerivedWorldInfo.class, "func_76092_g");
addMapping("isHardcoreModeEnabled", DerivedWorldInfo.class, "func_76093_s");
addMapping("setWorldTotalTime", DerivedWorldInfo.class, "func_82572_b");
addMapping("getWorldTotalTime", DerivedWorldInfo.class, "func_82573_f");
addMapping("getGameRulesInstance", DerivedWorldInfo.class, "func_82574_x");
addMapping("readPlayerData", IPlayerFileData.class, "func_75752_b");
addMapping("writePlayerData", IPlayerFileData.class, "func_75753_a");
addMapping("getAvailablePlayerDat", IPlayerFileData.class, "func_75754_f");
addMapping("getName", ISaveFormat.class, "func_154333_a");
addMapping("isConvertible", ISaveFormat.class, "func_154334_a");
addMapping("isNewLevelIdAcceptable", ISaveFormat.class, "func_154335_d");
addMapping("getFile", ISaveFormat.class, "func_186352_b");
addMapping("getSaveList", ISaveFormat.class, "func_75799_b");
addMapping("flushCache", ISaveFormat.class, "func_75800_d");
addMapping("isOldMapFormat", ISaveFormat.class, "func_75801_b");
addMapping("deleteWorldDirectory", ISaveFormat.class, "func_75802_e");
addMapping("getWorldInfo", ISaveFormat.class, "func_75803_c");
addMapping("getSaveLoader", ISaveFormat.class, "func_75804_a");
addMapping("convertMapFormat", ISaveFormat.class, "func_75805_a");
addMapping("renameWorld", ISaveFormat.class, "func_75806_a");
addMapping("canLoadWorld", ISaveFormat.class, "func_90033_f");
addMapping("getStructureTemplateManager", ISaveHandler.class, "func_186340_h");
addMapping("saveWorldInfoWithPlayer", ISaveHandler.class, "func_75755_a");
addMapping("getPlayerNBTManager", ISaveHandler.class, "func_75756_e");
addMapping("loadWorldInfo", ISaveHandler.class, "func_75757_d");
addMapping("getMapFileFromName", ISaveHandler.class, "func_75758_b");
addMapping("flush", ISaveHandler.class, "func_75759_a");
addMapping("saveWorldInfo", ISaveHandler.class, "func_75761_a");
addMapping("checkSessionLock", ISaveHandler.class, "func_75762_c");
addMapping("getChunkLoader", ISaveHandler.class, "func_75763_a");
addMapping("getWorldDirectory", ISaveHandler.class, "func_75765_b");
addMapping("writeNextIO", IThreadedFileIO.class, "func_75814_c");
addMapping("getMapPacket", MapData.class, "func_176052_a");
addMapping("updateMapData", MapData.class, "func_176053_a");
addMapping("calculateMapCenter", MapData.class, "func_176054_a");
addMapping("writeToNBT", MapData.class, "func_189551_b");
addMapping("addTargetDecoration", MapData.class, "func_191094_a");
addMapping("updateDecorations", MapData.class, "func_191095_a");
addMapping("readFromNBT", MapData.class, "func_76184_a");
addMapping("updateVisiblePlayers", MapData.class, "func_76191_a");
addMapping("getMapInfo", MapData.class, "func_82568_a");
addMapping("getImage", MapDecoration.class, "func_176110_a");
addMapping("getRotation", MapDecoration.class, "func_176111_d");
addMapping("getX", MapDecoration.class, "func_176112_b");
addMapping("getY", MapDecoration.class, "func_176113_c");
addMapping("getType", MapDecoration.class, "func_191179_b");
addMapping("renderOnFrame", MapDecoration.class, "func_191180_f");
addMapping("getOrLoadData", MapStorage.class, "func_75742_a");
addMapping("getUniqueDataId", MapStorage.class, "func_75743_a");
addMapping("saveAllData", MapStorage.class, "func_75744_a");
addMapping("setData", MapStorage.class, "func_75745_a");
addMapping("loadIdCounts", MapStorage.class, "func_75746_b");
addMapping("saveData", MapStorage.class, "func_75747_a");
addMapping("getOrLoadData", SaveDataMemoryStorage.class, "func_75742_a");
addMapping("getUniqueDataId", SaveDataMemoryStorage.class, "func_75743_a");
addMapping("saveAllData", SaveDataMemoryStorage.class, "func_75744_a");
addMapping("setData", SaveDataMemoryStorage.class, "func_75745_a");
addMapping("getName", SaveFormatOld.class, "func_154333_a");
addMapping("isConvertible", SaveFormatOld.class, "func_154334_a");
addMapping("isNewLevelIdAcceptable", SaveFormatOld.class, "func_154335_d");
addMapping("getFile", SaveFormatOld.class, "func_186352_b");
addMapping("getWorldData", SaveFormatOld.class, "func_186353_a");
addMapping("getSaveList", SaveFormatOld.class, "func_75799_b");
addMapping("flushCache", SaveFormatOld.class, "func_75800_d");
addMapping("isOldMapFormat", SaveFormatOld.class, "func_75801_b");
addMapping("deleteWorldDirectory", SaveFormatOld.class, "func_75802_e");
addMapping("getWorldInfo", SaveFormatOld.class, "func_75803_c");
addMapping("getSaveLoader", SaveFormatOld.class, "func_75804_a");
addMapping("convertMapFormat", SaveFormatOld.class, "func_75805_a");
addMapping("renameWorld", SaveFormatOld.class, "func_75806_a");
addMapping("deleteFiles", SaveFormatOld.class, "func_75807_a");
addMapping("canLoadWorld", SaveFormatOld.class, "func_90033_f");
addMapping("getStructureTemplateManager", SaveHandler.class, "func_186340_h");
addMapping("readPlayerData", SaveHandler.class, "func_75752_b");
addMapping("writePlayerData", SaveHandler.class, "func_75753_a");
addMapping("getAvailablePlayerDat", SaveHandler.class, "func_75754_f");
addMapping("saveWorldInfoWithPlayer", SaveHandler.class, "func_75755_a");
addMapping("getPlayerNBTManager", SaveHandler.class, "func_75756_e");
addMapping("loadWorldInfo", SaveHandler.class, "func_75757_d");
addMapping("getMapFileFromName", SaveHandler.class, "func_75758_b");
addMapping("flush", SaveHandler.class, "func_75759_a");
addMapping("saveWorldInfo", SaveHandler.class, "func_75761_a");
addMapping("checkSessionLock", SaveHandler.class, "func_75762_c");
addMapping("getChunkLoader", SaveHandler.class, "func_75763_a");
addMapping("getWorldDirectory", SaveHandler.class, "func_75765_b");
addMapping("setSessionLock", SaveHandler.class, "func_75766_h");
addMapping("getStructureTemplateManager", SaveHandlerMP.class, "func_186340_h");
addMapping("saveWorldInfoWithPlayer", SaveHandlerMP.class, "func_75755_a");
addMapping("getPlayerNBTManager", SaveHandlerMP.class, "func_75756_e");
addMapping("loadWorldInfo", SaveHandlerMP.class, "func_75757_d");
addMapping("getMapFileFromName", SaveHandlerMP.class, "func_75758_b");
addMapping("flush", SaveHandlerMP.class, "func_75759_a");
addMapping("saveWorldInfo", SaveHandlerMP.class, "func_75761_a");
addMapping("checkSessionLock", SaveHandlerMP.class, "func_75762_c");
addMapping("getChunkLoader", SaveHandlerMP.class, "func_75763_a");
addMapping("getWorldDirectory", SaveHandlerMP.class, "func_75765_b");
addMapping("getThreadedIOInstance", ThreadedFileIOBase.class, "func_178779_a");
addMapping("waitForFinish", ThreadedFileIOBase.class, "func_75734_a");
addMapping("queueIO", ThreadedFileIOBase.class, "func_75735_a");
addMapping("processQueue", ThreadedFileIOBase.class, "func_75736_b");
addMapping("setBorderLerpTarget", WorldInfo.class, "func_176118_b");
addMapping("setHardcore", WorldInfo.class, "func_176119_g");
addMapping("getBorderCenterX", WorldInfo.class, "func_176120_C");
addMapping("setAllowCommands", WorldInfo.class, "func_176121_c");
addMapping("setBorderWarningDistance", WorldInfo.class, "func_176122_j");
addMapping("isDifficultyLocked", WorldInfo.class, "func_176123_z");
addMapping("getBorderCenterX", WorldInfo.class, "func_176124_d");
addMapping("setBorderDamagePerBlock", WorldInfo.class, "func_176125_f");
addMapping("getBorderCenterZ", WorldInfo.class, "func_176126_D");
addMapping("populateFromWorldSettings", WorldInfo.class, "func_176127_a");
addMapping("setMapFeaturesEnabled", WorldInfo.class, "func_176128_f");
addMapping("setBorderSafeZone", WorldInfo.class, "func_176129_e");
addMapping("getDifficulty", WorldInfo.class, "func_176130_y");
addMapping("getBorderWarningDistance", WorldInfo.class, "func_176131_J");
addMapping("getBorderLerpTarget", WorldInfo.class, "func_176132_G");
addMapping("getCleanWeatherTime", WorldInfo.class, "func_176133_A");
addMapping("getBorderLerpTime", WorldInfo.class, "func_176134_F");
addMapping("setBorderLerpTime", WorldInfo.class, "func_176135_e");
addMapping("setBorderWarningTime", WorldInfo.class, "func_176136_k");
addMapping("getBorderSize", WorldInfo.class, "func_176137_E");
addMapping("getBorderSafeZone", WorldInfo.class, "func_176138_H");
addMapping("getBorderWarningTime", WorldInfo.class, "func_176139_K");
addMapping("getBorderDamagePerBlock", WorldInfo.class, "func_176140_I");
addMapping("getBorderCenterZ", WorldInfo.class, "func_176141_c");
addMapping("setCleanWeatherTime", WorldInfo.class, "func_176142_i");
addMapping("setSpawn", WorldInfo.class, "func_176143_a");
addMapping("setDifficulty", WorldInfo.class, "func_176144_a");
addMapping("setBorderSize", WorldInfo.class, "func_176145_a");
addMapping("setDifficultyLocked", WorldInfo.class, "func_180783_e");
addMapping("isVersionSnapshot", WorldInfo.class, "func_186343_L");
addMapping("getVersionId", WorldInfo.class, "func_186344_K");
addMapping("setDimensionData", WorldInfo.class, "func_186345_a");
addMapping("getVersionName", WorldInfo.class, "func_186346_M");
addMapping("getDimensionData", WorldInfo.class, "func_186347_a");
addMapping("registerFixes", WorldInfo.class, "func_189967_a");
addMapping("setSpawnY", WorldInfo.class, "func_76056_b");
addMapping("getLastTimePlayed", WorldInfo.class, "func_76057_l");
addMapping("setSpawnX", WorldInfo.class, "func_76058_a");
addMapping("isRaining", WorldInfo.class, "func_76059_o");
addMapping("setGameType", WorldInfo.class, "func_76060_a");
addMapping("isThundering", WorldInfo.class, "func_76061_m");
addMapping("setWorldName", WorldInfo.class, "func_76062_a");
addMapping("getSeed", WorldInfo.class, "func_76063_b");
addMapping("updateTagCompound", WorldInfo.class, "func_76064_a");
addMapping("getWorldName", WorldInfo.class, "func_76065_j");
addMapping("getTerrainType", WorldInfo.class, "func_76067_t");
addMapping("setWorldTime", WorldInfo.class, "func_76068_b");
addMapping("setThundering", WorldInfo.class, "func_76069_a");
addMapping("isInitialized", WorldInfo.class, "func_76070_v");
addMapping("getThunderTime", WorldInfo.class, "func_76071_n");
addMapping("getPlayerNBTTagCompound", WorldInfo.class, "func_76072_h");
addMapping("getWorldTime", WorldInfo.class, "func_76073_f");
addMapping("getSpawnZ", WorldInfo.class, "func_76074_e");
addMapping("getSpawnY", WorldInfo.class, "func_76075_d");
addMapping("getGameType", WorldInfo.class, "func_76077_q");
addMapping("setSaveVersion", WorldInfo.class, "func_76078_e");
addMapping("getSpawnX", WorldInfo.class, "func_76079_c");
addMapping("setRainTime", WorldInfo.class, "func_76080_g");
addMapping("cloneNBTCompound", WorldInfo.class, "func_76082_a");
addMapping("getRainTime", WorldInfo.class, "func_76083_p");
addMapping("setRaining", WorldInfo.class, "func_76084_b");
addMapping("setTerrainType", WorldInfo.class, "func_76085_a");
addMapping("areCommandsAllowed", WorldInfo.class, "func_76086_u");
addMapping("setSpawnZ", WorldInfo.class, "func_76087_c");
addMapping("getSaveVersion", WorldInfo.class, "func_76088_k");
addMapping("isMapFeaturesEnabled", WorldInfo.class, "func_76089_r");
addMapping("setThunderTime", WorldInfo.class, "func_76090_f");
addMapping("setServerInitialized", WorldInfo.class, "func_76091_d");
addMapping("getSizeOnDisk", WorldInfo.class, "func_76092_g");
addMapping("isHardcoreModeEnabled", WorldInfo.class, "func_76093_s");
addMapping("getGeneratorOptions", WorldInfo.class, "func_82571_y");
addMapping("setWorldTotalTime", WorldInfo.class, "func_82572_b");
addMapping("getWorldTotalTime", WorldInfo.class, "func_82573_f");
addMapping("getGameRulesInstance", WorldInfo.class, "func_82574_x");
addMapping("addToCrashReport", WorldInfo.class, "func_85118_a");
addMapping("writeToNBT", WorldSavedData.class, "func_189551_b");
addMapping("readFromNBT", WorldSavedData.class, "func_76184_a");
addMapping("markDirty", WorldSavedData.class, "func_76185_a");
addMapping("setDirty", WorldSavedData.class, "func_76186_a");
addMapping("isDirty", WorldSavedData.class, "func_76188_b");
addMapping("getSizeOnDisk", WorldSummary.class, "func_154336_c");
addMapping("markVersionInList", WorldSummary.class, "func_186355_l");
addMapping("askToOpenWorld", WorldSummary.class, "func_186356_m");
addMapping("getVersionName", WorldSummary.class, "func_186357_i");
addMapping("getCheatsEnabled", WorldSummary.class, "func_75783_h");
addMapping("getLastTimePlayed", WorldSummary.class, "func_75784_e");
addMapping("requiresConversion", WorldSummary.class, "func_75785_d");
addMapping("getFileName", WorldSummary.class, "func_75786_a");
addMapping("getDisplayName", WorldSummary.class, "func_75788_b");
addMapping("isHardcoreModeEnabled", WorldSummary.class, "func_75789_g");
addMapping("getEnumGameType", WorldSummary.class, "func_75790_f");
addMapping("getLootTable", ILootContainer.class, "func_184276_b");
addMapping("removeLootTable", LootContext.class, "func_186490_b");
addMapping("getLuck", LootContext.class, "func_186491_f");
addMapping("getKiller", LootContext.class, "func_186492_c");
addMapping("getLootedEntity", LootContext.class, "func_186493_a");
addMapping("getEntity", LootContext.class, "func_186494_a");
addMapping("getKillerPlayer", LootContext.class, "func_186495_b");
addMapping("addLootTable", LootContext.class, "func_186496_a");
addMapping("getLootTableManager", LootContext.class, "func_186497_e");
addMapping("getEffectiveWeight", LootEntry.class, "func_186361_a");
addMapping("serialize", LootEntry.class, "func_186362_a");
addMapping("addLoot", LootEntry.class, "func_186363_a");
addMapping("serialize", LootEntryEmpty.class, "func_186362_a");
addMapping("addLoot", LootEntryEmpty.class, "func_186363_a");
addMapping("deserialize", LootEntryEmpty.class, "func_186372_a");
addMapping("serialize", LootEntryItem.class, "func_186362_a");
addMapping("addLoot", LootEntryItem.class, "func_186363_a");
addMapping("deserialize", LootEntryItem.class, "func_186367_a");
addMapping("serialize", LootEntryTable.class, "func_186362_a");
addMapping("addLoot", LootEntryTable.class, "func_186363_a");
addMapping("deserialize", LootEntryTable.class, "func_186370_a");
addMapping("generateLoot", LootPool.class, "func_186449_b");
addMapping("createLootRoll", LootPool.class, "func_186452_a");
addMapping("getEmptySlotsRandomized", LootTable.class, "func_186459_a");
addMapping("fillInventory", LootTable.class, "func_186460_a");
addMapping("generateLootForPools", LootTable.class, "func_186462_a");
addMapping("shuffleItems", LootTable.class, "func_186463_a");
addMapping("register", LootTableList.class, "func_186373_a");
addMapping("getAll", LootTableList.class, "func_186374_a");
addMapping("register", LootTableList.class, "func_186375_a");
addMapping("test", LootTableList.class, "func_193579_b");
addMapping("getLootTableFromLocation", LootTableManager.class, "func_186521_a");
addMapping("reloadLootTables", LootTableManager.class, "func_186522_a");
addMapping("generateFloat", RandomValueRange.class, "func_186507_b");
addMapping("getMin", RandomValueRange.class, "func_186509_a");
addMapping("isInRange", RandomValueRange.class, "func_186510_a");
addMapping("generateInt", RandomValueRange.class, "func_186511_a");
addMapping("getMax", RandomValueRange.class, "func_186512_b");
addMapping("testCondition", EntityHasProperty.class, "func_186618_a");
addMapping("testCondition", EntityHasScore.class, "func_186618_a");
addMapping("entityScoreMatch", EntityHasScore.class, "func_186631_a");
addMapping("testCondition", KilledByPlayer.class, "func_186618_a");
addMapping("testCondition", LootCondition.class, "func_186618_a");
addMapping("testAllConditions", LootConditionManager.class, "func_186638_a");
addMapping("registerCondition", LootConditionManager.class, "func_186639_a");
addMapping("getSerializerFor", LootConditionManager.class, "func_186640_a");
addMapping("getSerializerForName", LootConditionManager.class, "func_186641_a");
addMapping("testCondition", RandomChance.class, "func_186618_a");
addMapping("testCondition", RandomChanceWithLooting.class, "func_186618_a");
addMapping("apply", EnchantRandomly.class, "func_186553_a");
addMapping("apply", EnchantWithLevels.class, "func_186553_a");
addMapping("apply", LootFunction.class, "func_186553_a");
addMapping("getConditions", LootFunction.class, "func_186554_a");
addMapping("getSerializerFor", LootFunctionManager.class, "func_186581_a");
addMapping("registerFunction", LootFunctionManager.class, "func_186582_a");
addMapping("getSerializerForName", LootFunctionManager.class, "func_186583_a");
addMapping("apply", LootingEnchantBonus.class, "func_186553_a");
addMapping("apply", SetAttributes.class, "func_186553_a");
addMapping("apply", SetCount.class, "func_186553_a");
addMapping("apply", SetDamage.class, "func_186553_a");
addMapping("apply", SetMetadata.class, "func_186553_a");
addMapping("apply", SetNBT.class, "func_186553_a");
addMapping("apply", Smelt.class, "func_186553_a");
addMapping("testProperty", EntityOnFire.class, "func_186657_a");
addMapping("testProperty", EntityProperty.class, "func_186657_a");
addMapping("registerProperty", EntityPropertyManager.class, "func_186644_a");
addMapping("getSerializerFor", EntityPropertyManager.class, "func_186645_a");
addMapping("getSerializerForName", EntityPropertyManager.class, "func_186646_a");
addMapping("parent", Advancement.class, "field_192076_a");
addMapping("display", Advancement.class, "field_192077_b");
addMapping("rewards", Advancement.class, "field_192078_c");
addMapping("id", Advancement.class, "field_192079_d");
addMapping("criteria", Advancement.class, "field_192080_e");
addMapping("requirements", Advancement.class, "field_192081_f");
addMapping("children", Advancement.class, "field_192082_g");
addMapping("displayText", Advancement.class, "field_193125_h");
addMapping("LOGGER", AdvancementList.class, "field_192091_a");
addMapping("advancements", AdvancementList.class, "field_192092_b");
addMapping("roots", AdvancementList.class, "field_192093_c");
addMapping("nonRoots", AdvancementList.class, "field_192094_d");
addMapping("listener", AdvancementList.class, "field_192095_e");
addMapping("LOGGER", AdvancementManager.class, "field_192782_a");
addMapping("GSON", AdvancementManager.class, "field_192783_b");
addMapping("ADVANCEMENT_LIST", AdvancementManager.class, "field_192784_c");
addMapping("advancementsDir", AdvancementManager.class, "field_192785_d");
addMapping("hasErrored", AdvancementManager.class, "field_193768_e");
addMapping("criteria", AdvancementProgress.class, "field_192110_a");
addMapping("requirements", AdvancementProgress.class, "field_192111_b");
addMapping("EMPTY", AdvancementRewards.class, "field_192114_a");
addMapping("experience", AdvancementRewards.class, "field_192115_b");
addMapping("loot", AdvancementRewards.class, "field_192116_c");
addMapping("recipes", AdvancementRewards.class, "field_192117_d");
addMapping("function", AdvancementRewards.class, "field_193129_e");
addMapping("advancement", AdvancementTreeNode.class, "field_192328_a");
addMapping("parent", AdvancementTreeNode.class, "field_192329_b");
addMapping("sibling", AdvancementTreeNode.class, "field_192330_c");
addMapping("index", AdvancementTreeNode.class, "field_192331_d");
addMapping("children", AdvancementTreeNode.class, "field_192332_e");
addMapping("ancestor", AdvancementTreeNode.class, "field_192333_f");
addMapping("thread", AdvancementTreeNode.class, "field_192334_g");
addMapping("x", AdvancementTreeNode.class, "field_192335_h");
addMapping("y", AdvancementTreeNode.class, "field_192336_i");
addMapping("mod", AdvancementTreeNode.class, "field_192337_j");
addMapping("change", AdvancementTreeNode.class, "field_192338_k");
addMapping("shift", AdvancementTreeNode.class, "field_192339_l");
addMapping("IMPOSSIBLE", CriteriaTriggers.class, "field_192121_a");
addMapping("PLAYER_KILLED_ENTITY", CriteriaTriggers.class, "field_192122_b");
addMapping("ENTITY_KILLED_PLAYER", CriteriaTriggers.class, "field_192123_c");
addMapping("ENTER_BLOCK", CriteriaTriggers.class, "field_192124_d");
addMapping("INVENTORY_CHANGED", CriteriaTriggers.class, "field_192125_e");
addMapping("RECIPE_UNLOCKED", CriteriaTriggers.class, "field_192126_f");
addMapping("PLAYER_HURT_ENTITY", CriteriaTriggers.class, "field_192127_g");
addMapping("ENTITY_HURT_PLAYER", CriteriaTriggers.class, "field_192128_h");
addMapping("ENCHANTED_ITEM", CriteriaTriggers.class, "field_192129_i");
addMapping("BREWED_POTION", CriteriaTriggers.class, "field_192130_j");
addMapping("CONSTRUCT_BEACON", CriteriaTriggers.class, "field_192131_k");
addMapping("USED_ENDER_EYE", CriteriaTriggers.class, "field_192132_l");
addMapping("SUMMONED_ENTITY", CriteriaTriggers.class, "field_192133_m");
addMapping("BRED_ANIMALS", CriteriaTriggers.class, "field_192134_n");
addMapping("LOCATION", CriteriaTriggers.class, "field_192135_o");
addMapping("SLEPT_IN_BED", CriteriaTriggers.class, "field_192136_p");
addMapping("CURED_ZOMBIE_VILLAGER", CriteriaTriggers.class, "field_192137_q");
addMapping("VILLAGER_TRADE", CriteriaTriggers.class, "field_192138_r");
addMapping("REGISTRY", CriteriaTriggers.class, "field_192139_s");
addMapping("USED_TOTEM", CriteriaTriggers.class, "field_193130_A");
addMapping("NETHER_TRAVEL", CriteriaTriggers.class, "field_193131_B");
addMapping("ITEM_DURABILITY_CHANGED", CriteriaTriggers.class, "field_193132_s");
addMapping("LEVITATION", CriteriaTriggers.class, "field_193133_t");
addMapping("CHANGED_DIMENSION", CriteriaTriggers.class, "field_193134_u");
addMapping("TICK", CriteriaTriggers.class, "field_193135_v");
addMapping("TAME_ANIMAL", CriteriaTriggers.class, "field_193136_w");
addMapping("PLACED_BLOCK", CriteriaTriggers.class, "field_193137_x");
addMapping("CONSUME_ITEM", CriteriaTriggers.class, "field_193138_y");
addMapping("EFFECTS_CHANGED", CriteriaTriggers.class, "field_193139_z");
addMapping("criterionInstance", Criterion.class, "field_192147_a");
addMapping("DATE_TIME_FORMATTER", CriterionProgress.class, "field_192155_a");
addMapping("advancementProgress", CriterionProgress.class, "field_192156_b");
addMapping("obtained", CriterionProgress.class, "field_192157_c");
addMapping("title", DisplayInfo.class, "field_192300_a");
addMapping("icon", DisplayInfo.class, "field_192301_b");
addMapping("background", DisplayInfo.class, "field_192302_c");
addMapping("frame", DisplayInfo.class, "field_192303_d");
addMapping("x", DisplayInfo.class, "field_192304_e");
addMapping("y", DisplayInfo.class, "field_192305_f");
addMapping("description", DisplayInfo.class, "field_193225_b");
addMapping("showToast", DisplayInfo.class, "field_193226_f");
addMapping("announceToChat", DisplayInfo.class, "field_193227_g");
addMapping("hidden", DisplayInfo.class, "field_193228_h");
addMapping("name", FrameType.class, "field_192313_d");
addMapping("icon", FrameType.class, "field_192314_e");
addMapping("format", FrameType.class, "field_193230_f");
addMapping("LOGGER", FunctionManager.class, "field_193067_a");
addMapping("functionDir", FunctionManager.class, "field_193068_b");
addMapping("server", FunctionManager.class, "field_193069_c");
addMapping("functions", FunctionManager.class, "field_193070_d");
addMapping("currentGameLoopFunctionId", FunctionManager.class, "field_193071_e");
addMapping("gameLoopFunction", FunctionManager.class, "field_193072_f");
addMapping("gameLoopFunctionSender", FunctionManager.class, "field_193073_g");
addMapping("commandQueue", FunctionManager.class, "field_194020_g");
addMapping("isExecuting", FunctionManager.class, "field_194021_h");
addMapping("LOGGER", PlayerAdvancements.class, "field_192753_a");
addMapping("GSON", PlayerAdvancements.class, "field_192754_b");
addMapping("MAP_TOKEN", PlayerAdvancements.class, "field_192755_c");
addMapping("server", PlayerAdvancements.class, "field_192756_d");
addMapping("progressFile", PlayerAdvancements.class, "field_192757_e");
addMapping("progress", PlayerAdvancements.class, "field_192758_f");
addMapping("visible", PlayerAdvancements.class, "field_192759_g");
addMapping("visibilityChanged", PlayerAdvancements.class, "field_192760_h");
addMapping("progressChanged", PlayerAdvancements.class, "field_192761_i");
addMapping("player", PlayerAdvancements.class, "field_192762_j");
addMapping("isFirstPacket", PlayerAdvancements.class, "field_192763_k");
addMapping("lastSelectedTab", PlayerAdvancements.class, "field_194221_k");
addMapping("criterion", AbstractCriterionInstance.class, "field_192245_a");
addMapping("ID", BredAnimalsTrigger.class, "field_192171_a");
addMapping("listeners", BredAnimalsTrigger.class, "field_192172_b");
addMapping("ID", BrewedPotionTrigger.class, "field_192176_a");
addMapping("listeners", BrewedPotionTrigger.class, "field_192177_b");
addMapping("ID", ChangeDimensionTrigger.class, "field_193144_a");
addMapping("listeners", ChangeDimensionTrigger.class, "field_193145_b");
addMapping("ID", ConstructBeaconTrigger.class, "field_192181_a");
addMapping("listeners", ConstructBeaconTrigger.class, "field_192182_b");
addMapping("ID", ConsumeItemTrigger.class, "field_193149_a");
addMapping("listeners", ConsumeItemTrigger.class, "field_193150_b");
addMapping("ID", CuredZombieVillagerTrigger.class, "field_192186_a");
addMapping("listeners", CuredZombieVillagerTrigger.class, "field_192187_b");
addMapping("ANY", DamagePredicate.class, "field_192366_a");
addMapping("dealt", DamagePredicate.class, "field_192367_b");
addMapping("taken", DamagePredicate.class, "field_192368_c");
addMapping("sourceEntity", DamagePredicate.class, "field_192369_d");
addMapping("blocked", DamagePredicate.class, "field_192370_e");
addMapping("type", DamagePredicate.class, "field_192371_f");
addMapping("ANY", DamageSourcePredicate.class, "field_192449_a");
addMapping("isProjectile", DamageSourcePredicate.class, "field_192450_b");
addMapping("isExplosion", DamageSourcePredicate.class, "field_192451_c");
addMapping("bypassesArmor", DamageSourcePredicate.class, "field_192452_d");
addMapping("bypassesInvulnerability", DamageSourcePredicate.class, "field_192453_e");
addMapping("bypassesMagic", DamageSourcePredicate.class, "field_192454_f");
addMapping("isFire", DamageSourcePredicate.class, "field_192455_g");
addMapping("isMagic", DamageSourcePredicate.class, "field_192456_h");
addMapping("directEntity", DamageSourcePredicate.class, "field_193419_i");
addMapping("sourceEntity", DamageSourcePredicate.class, "field_193420_j");
addMapping("ANY", DistancePredicate.class, "field_193423_a");
addMapping("x", DistancePredicate.class, "field_193424_b");
addMapping("y", DistancePredicate.class, "field_193425_c");
addMapping("z", DistancePredicate.class, "field_193426_d");
addMapping("horizontal", DistancePredicate.class, "field_193427_e");
addMapping("absolute", DistancePredicate.class, "field_193428_f");
addMapping("ID", EffectsChangedTrigger.class, "field_193154_a");
addMapping("listeners", EffectsChangedTrigger.class, "field_193155_b");
addMapping("ID", EnchantedItemTrigger.class, "field_192191_a");
addMapping("listeners", EnchantedItemTrigger.class, "field_192192_b");
addMapping("ANY", EnchantmentPredicate.class, "field_192466_a");
addMapping("enchantment", EnchantmentPredicate.class, "field_192467_b");
addMapping("levels", EnchantmentPredicate.class, "field_192468_c");
addMapping("ID", EnterBlockTrigger.class, "field_192196_a");
addMapping("listeners", EnterBlockTrigger.class, "field_192197_b");
addMapping("ID", EntityHurtPlayerTrigger.class, "field_192201_a");
addMapping("listeners", EntityHurtPlayerTrigger.class, "field_192202_b");
addMapping("ANY", EntityPredicate.class, "field_192483_a");
addMapping("type", EntityPredicate.class, "field_192484_b");
addMapping("distance", EntityPredicate.class, "field_192485_c");
addMapping("location", EntityPredicate.class, "field_193435_d");
addMapping("effects", EntityPredicate.class, "field_193436_e");
addMapping("nbt", EntityPredicate.class, "field_193437_f");
addMapping("ID", ImpossibleTrigger.class, "field_192205_a");
addMapping("ID", InventoryChangeTrigger.class, "field_192209_a");
addMapping("listeners", InventoryChangeTrigger.class, "field_192210_b");
addMapping("ID", ItemDurabilityTrigger.class, "field_193159_a");
addMapping("listeners", ItemDurabilityTrigger.class, "field_193160_b");
addMapping("ANY", ItemPredicate.class, "field_192495_a");
addMapping("item", ItemPredicate.class, "field_192496_b");
addMapping("data", ItemPredicate.class, "field_192497_c");
addMapping("count", ItemPredicate.class, "field_192498_d");
addMapping("enchantments", ItemPredicate.class, "field_192499_e");
addMapping("potion", ItemPredicate.class, "field_192500_f");
addMapping("durability", ItemPredicate.class, "field_193444_e");
addMapping("nbt", ItemPredicate.class, "field_193445_h");
addMapping("listeners", KilledTrigger.class, "field_192213_a");
addMapping("id", KilledTrigger.class, "field_192214_b");
addMapping("ID", LevitationTrigger.class, "field_193164_a");
addMapping("listeners", LevitationTrigger.class, "field_193165_b");
addMapping("ANY", LocationPredicate.class, "field_193455_a");
addMapping("biome", LocationPredicate.class, "field_193456_b");
addMapping("x", LocationPredicate.class, "field_193457_c");
addMapping("y", LocationPredicate.class, "field_193458_d");
addMapping("z", LocationPredicate.class, "field_193459_e");
addMapping("feature", LocationPredicate.class, "field_193460_f");
addMapping("dimension", LocationPredicate.class, "field_193461_g");
addMapping("UNBOUNDED", MinMaxBounds.class, "field_192516_a");
addMapping("min", MinMaxBounds.class, "field_192517_b");
addMapping("max", MinMaxBounds.class, "field_192518_c");
addMapping("ANY", MobEffectsPredicate.class, "field_193473_a");
addMapping("effects", MobEffectsPredicate.class, "field_193474_b");
addMapping("ANY", NBTPredicate.class, "field_193479_a");
addMapping("tag", NBTPredicate.class, "field_193480_b");
addMapping("ID", NetherTravelTrigger.class, "field_193169_a");
addMapping("listeners", NetherTravelTrigger.class, "field_193170_b");
addMapping("ID", PlacedBlockTrigger.class, "field_193174_a");
addMapping("listeners", PlacedBlockTrigger.class, "field_193175_b");
addMapping("ID", PlayerHurtEntityTrigger.class, "field_192222_a");
addMapping("listeners", PlayerHurtEntityTrigger.class, "field_192223_b");
addMapping("id", PositionTrigger.class, "field_192217_a");
addMapping("listeners", PositionTrigger.class, "field_192218_b");
addMapping("ID", RecipeUnlockedTrigger.class, "field_192227_a");
addMapping("listeners", RecipeUnlockedTrigger.class, "field_192228_b");
addMapping("ID", SummonedEntityTrigger.class, "field_192232_a");
addMapping("listeners", SummonedEntityTrigger.class, "field_192233_b");
addMapping("ID", TameAnimalTrigger.class, "field_193179_a");
addMapping("listeners", TameAnimalTrigger.class, "field_193180_b");
addMapping("ID", TickTrigger.class, "field_193183_a");
addMapping("listeners", TickTrigger.class, "field_193184_b");
addMapping("ID", UsedEnderEyeTrigger.class, "field_192242_a");
addMapping("listeners", UsedEnderEyeTrigger.class, "field_192243_b");
addMapping("ID", UsedTotemTrigger.class, "field_193188_a");
addMapping("listeners", UsedTotemTrigger.class, "field_193189_b");
addMapping("ID", VillagerTradeTrigger.class, "field_192237_a");
addMapping("listeners", VillagerTradeTrigger.class, "field_192238_b");
addMapping("hasTileEntity", Block.class, "field_149758_A");
addMapping("blockSoundType", Block.class, "field_149762_H");
addMapping("blockParticleGravity", Block.class, "field_149763_I");
addMapping("blockMaterial", Block.class, "field_149764_J");
addMapping("slipperiness", Block.class, "field_149765_K");
addMapping("unlocalizedName", Block.class, "field_149770_b");
addMapping("REGISTRY", Block.class, "field_149771_c");
addMapping("displayOnCreativeTab", Block.class, "field_149772_a");
addMapping("blockResistance", Block.class, "field_149781_w");
addMapping("blockHardness", Block.class, "field_149782_v");
addMapping("useNeighborBrightness", Block.class, "field_149783_u");
addMapping("lightValue", Block.class, "field_149784_t");
addMapping("translucent", Block.class, "field_149785_s");
addMapping("lightOpacity", Block.class, "field_149786_r");
addMapping("fullBlock", Block.class, "field_149787_q");
addMapping("needsRandomTick", Block.class, "field_149789_z");
addMapping("enableStats", Block.class, "field_149790_y");
addMapping("blockState", Block.class, "field_176227_L");
addMapping("defaultBlockState", Block.class, "field_176228_M");
addMapping("BLOCK_STATE_IDS", Block.class, "field_176229_d");
addMapping("AIR_ID", Block.class, "field_176230_a");
addMapping("blockMapColor", Block.class, "field_181083_K");
addMapping("FULL_BLOCK_AABB", Block.class, "field_185505_j");
addMapping("NULL_AABB", Block.class, "field_185506_k");
addMapping("DAMAGE", BlockAnvil.class, "field_176505_b");
addMapping("FACING", BlockAnvil.class, "field_176506_a");
addMapping("X_AXIS_AABB", BlockAnvil.class, "field_185760_c");
addMapping("Z_AXIS_AABB", BlockAnvil.class, "field_185761_d");
addMapping("LOGGER", BlockAnvil.class, "field_185762_e");
addMapping("ROTATION", BlockBanner.class, "field_176448_b");
addMapping("FACING", BlockBanner.class, "field_176449_a");
addMapping("STANDING_AABB", BlockBanner.class, "field_185550_c");
addMapping("PRESSED_AABB", BlockBasePressurePlate.class, "field_185509_a");
addMapping("UNPRESSED_AABB", BlockBasePressurePlate.class, "field_185510_b");
addMapping("PRESSURE_AABB", BlockBasePressurePlate.class, "field_185511_c");
addMapping("OCCUPIED", BlockBed.class, "field_176471_b");
addMapping("PART", BlockBed.class, "field_176472_a");
addMapping("BED_AABB", BlockBed.class, "field_185513_c");
addMapping("BEETROOT_AGE", BlockBeetroot.class, "field_185531_a");
addMapping("BEETROOT_AABB", BlockBeetroot.class, "field_185532_d");
addMapping("ignoreSimilarity", BlockBreakable.class, "field_149996_a");
addMapping("HAS_BOTTLE", BlockBrewingStand.class, "field_176451_a");
addMapping("BASE_AABB", BlockBrewingStand.class, "field_185555_b");
addMapping("STICK_AABB", BlockBrewingStand.class, "field_185556_c");
addMapping("BUSH_AABB", BlockBush.class, "field_185515_b");
addMapping("wooden", BlockButton.class, "field_150047_a");
addMapping("POWERED", BlockButton.class, "field_176584_b");
addMapping("AABB_DOWN_OFF", BlockButton.class, "field_185618_b");
addMapping("AABB_DOWN_ON", BlockButton.class, "field_185619_B");
addMapping("AABB_UP_OFF", BlockButton.class, "field_185620_c");
addMapping("AABB_UP_ON", BlockButton.class, "field_185621_C");
addMapping("AABB_NORTH_OFF", BlockButton.class, "field_185622_d");
addMapping("AABB_NORTH_ON", BlockButton.class, "field_185623_D");
addMapping("AABB_SOUTH_OFF", BlockButton.class, "field_185624_e");
addMapping("AABB_SOUTH_ON", BlockButton.class, "field_185625_E");
addMapping("AABB_WEST_OFF", BlockButton.class, "field_185626_f");
addMapping("AABB_WEST_ON", BlockButton.class, "field_185627_F");
addMapping("AABB_EAST_OFF", BlockButton.class, "field_185628_g");
addMapping("AABB_EAST_ON", BlockButton.class, "field_185629_G");
addMapping("AGE", BlockCactus.class, "field_176587_a");
addMapping("CACTUS_COLLISION_AABB", BlockCactus.class, "field_185593_b");
addMapping("CACTUS_AABB", BlockCactus.class, "field_185594_c");
addMapping("BITES", BlockCake.class, "field_176589_a");
addMapping("CAKE_AABB", BlockCake.class, "field_185595_b");
addMapping("COLOR", BlockCarpet.class, "field_176330_a");
addMapping("CARPET_AABB", BlockCarpet.class, "field_185758_b");
addMapping("CARROT_AABB", BlockCarrot.class, "field_185533_a");
addMapping("LEVEL", BlockCauldron.class, "field_176591_a");
addMapping("AABB_LEGS", BlockCauldron.class, "field_185596_b");
addMapping("AABB_WALL_NORTH", BlockCauldron.class, "field_185597_c");
addMapping("AABB_WALL_SOUTH", BlockCauldron.class, "field_185598_d");
addMapping("AABB_WALL_EAST", BlockCauldron.class, "field_185599_e");
addMapping("AABB_WALL_WEST", BlockCauldron.class, "field_185600_f");
addMapping("chestType", BlockChest.class, "field_149956_a");
addMapping("FACING", BlockChest.class, "field_176459_a");
addMapping("NORTH_CHEST_AABB", BlockChest.class, "field_185557_b");
addMapping("SOUTH_CHEST_AABB", BlockChest.class, "field_185558_c");
addMapping("WEST_CHEST_AABB", BlockChest.class, "field_185559_d");
addMapping("EAST_CHEST_AABB", BlockChest.class, "field_185560_e");
addMapping("NOT_CONNECTED_AABB", BlockChest.class, "field_185561_f");
addMapping("AGE", BlockChorusFlower.class, "field_185607_a");
addMapping("NORTH", BlockChorusPlant.class, "field_185609_a");
addMapping("EAST", BlockChorusPlant.class, "field_185610_b");
addMapping("SOUTH", BlockChorusPlant.class, "field_185611_c");
addMapping("WEST", BlockChorusPlant.class, "field_185612_d");
addMapping("UP", BlockChorusPlant.class, "field_185613_e");
addMapping("DOWN", BlockChorusPlant.class, "field_185614_f");
addMapping("AGE", BlockCocoa.class, "field_176501_a");
addMapping("COCOA_EAST_AABB", BlockCocoa.class, "field_185535_b");
addMapping("COCOA_WEST_AABB", BlockCocoa.class, "field_185536_c");
addMapping("COCOA_NORTH_AABB", BlockCocoa.class, "field_185537_d");
addMapping("COCOA_SOUTH_AABB", BlockCocoa.class, "field_185538_e");
addMapping("COLOR", BlockColored.class, "field_176581_a");
addMapping("FACING", BlockCommandBlock.class, "field_185564_a");
addMapping("CONDITIONAL", BlockCommandBlock.class, "field_185565_b");
addMapping("LOGGER", BlockCommandBlock.class, "field_193388_c");
addMapping("COLOR", BlockConcretePowder.class, "field_192426_a");
addMapping("AGE", BlockCrops.class, "field_176488_a");
addMapping("CROPS_AABB", BlockCrops.class, "field_185530_a");
addMapping("inverted", BlockDaylightDetector.class, "field_176435_b");
addMapping("POWER", BlockDaylightDetector.class, "field_176436_a");
addMapping("DAYLIGHT_DETECTOR_AABB", BlockDaylightDetector.class, "field_185566_b");
addMapping("DEAD_BUSH_AABB", BlockDeadBush.class, "field_185516_a");
addMapping("FACING", BlockDirectional.class, "field_176387_N");
addMapping("SNOWY", BlockDirt.class, "field_176385_b");
addMapping("VARIANT", BlockDirt.class, "field_176386_a");
addMapping("rand", BlockDispenser.class, "field_149942_b");
addMapping("DISPENSE_BEHAVIOR_REGISTRY", BlockDispenser.class, "field_149943_a");
addMapping("TRIGGERED", BlockDispenser.class, "field_176440_b");
addMapping("FACING", BlockDispenser.class, "field_176441_a");
addMapping("OPEN", BlockDoor.class, "field_176519_b");
addMapping("FACING", BlockDoor.class, "field_176520_a");
addMapping("HINGE", BlockDoor.class, "field_176521_M");
addMapping("POWERED", BlockDoor.class, "field_176522_N");
addMapping("HALF", BlockDoor.class, "field_176523_O");
addMapping("WEST_AABB", BlockDoor.class, "field_185656_B");
addMapping("EAST_AABB", BlockDoor.class, "field_185657_C");
addMapping("SOUTH_AABB", BlockDoor.class, "field_185658_f");
addMapping("NORTH_AABB", BlockDoor.class, "field_185659_g");
addMapping("HALF", BlockDoublePlant.class, "field_176492_b");
addMapping("VARIANT", BlockDoublePlant.class, "field_176493_a");
addMapping("FACING", BlockDoublePlant.class, "field_181084_N");
addMapping("DRAGON_EGG_AABB", BlockDragonEgg.class, "field_185660_a");
addMapping("dropBehavior", BlockDropper.class, "field_149947_P");
addMapping("adjacentSourceBlocks", BlockDynamicLiquid.class, "field_149815_a");
addMapping("AABB", BlockEnchantmentTable.class, "field_185567_a");
addMapping("END_PORTAL_AABB", BlockEndPortal.class, "field_185568_a");
addMapping("EYE", BlockEndPortalFrame.class, "field_176507_b");
addMapping("FACING", BlockEndPortalFrame.class, "field_176508_a");
addMapping("AABB_BLOCK", BlockEndPortalFrame.class, "field_185662_c");
addMapping("AABB_EYE", BlockEndPortalFrame.class, "field_185663_d");
addMapping("portalShape", BlockEndPortalFrame.class, "field_185664_e");
addMapping("END_ROD_VERTICAL_AABB", BlockEndRod.class, "field_185630_a");
addMapping("END_ROD_NS_AABB", BlockEndRod.class, "field_185631_b");
addMapping("END_ROD_EW_AABB", BlockEndRod.class, "field_185632_c");
addMapping("FACING", BlockEnderChest.class, "field_176437_a");
addMapping("ENDER_CHEST_AABB", BlockEnderChest.class, "field_185569_b");
addMapping("eventParameter", BlockEventData.class, "field_151343_f");
addMapping("blockType", BlockEventData.class, "field_151344_d");
addMapping("eventID", BlockEventData.class, "field_151345_e");
addMapping("position", BlockEventData.class, "field_180329_a");
addMapping("fallInstantly", BlockFalling.class, "field_149832_M");
addMapping("MOISTURE", BlockFarmland.class, "field_176531_a");
addMapping("FARMLAND_AABB", BlockFarmland.class, "field_185665_b");
addMapping("EAST", BlockFence.class, "field_176525_b");
addMapping("NORTH", BlockFence.class, "field_176526_a");
addMapping("SOUTH", BlockFence.class, "field_176527_M");
addMapping("WEST", BlockFence.class, "field_176528_N");
addMapping("WEST_AABB", BlockFence.class, "field_185667_B");
addMapping("NORTH_AABB", BlockFence.class, "field_185668_C");
addMapping("EAST_AABB", BlockFence.class, "field_185669_D");
addMapping("BOUNDING_BOXES", BlockFence.class, "field_185670_e");
addMapping("PILLAR_AABB", BlockFence.class, "field_185671_f");
addMapping("SOUTH_AABB", BlockFence.class, "field_185672_g");
addMapping("POWERED", BlockFenceGate.class, "field_176465_b");
addMapping("OPEN", BlockFenceGate.class, "field_176466_a");
addMapping("IN_WALL", BlockFenceGate.class, "field_176467_M");
addMapping("AABB_COLLISION_BOX_ZAXIS", BlockFenceGate.class, "field_185539_B");
addMapping("AABB_COLLISION_BOX_XAXIS", BlockFenceGate.class, "field_185540_C");
addMapping("AABB_HITBOX_ZAXIS", BlockFenceGate.class, "field_185541_d");
addMapping("AABB_HITBOX_XAXIS", BlockFenceGate.class, "field_185542_e");
addMapping("AABB_HITBOX_ZAXIS_INWALL", BlockFenceGate.class, "field_185543_f");
addMapping("AABB_HITBOX_XAXIS_INWALL", BlockFenceGate.class, "field_185544_g");
addMapping("flammabilities", BlockFire.class, "field_149848_b");
addMapping("encouragements", BlockFire.class, "field_149849_a");
addMapping("WEST", BlockFire.class, "field_176539_Q");
addMapping("SOUTH", BlockFire.class, "field_176541_P");
addMapping("UPPER", BlockFire.class, "field_176542_R");
addMapping("AGE", BlockFire.class, "field_176543_a");
addMapping("NORTH", BlockFire.class, "field_176545_N");
addMapping("EAST", BlockFire.class, "field_176546_O");
addMapping("type", BlockFlower.class, "field_176496_a");
addMapping("CONTENTS", BlockFlowerPot.class, "field_176443_b");
addMapping("LEGACY_DATA", BlockFlowerPot.class, "field_176444_a");
addMapping("FLOWER_POT_AABB", BlockFlowerPot.class, "field_185570_c");
addMapping("AGE", BlockFrostedIce.class, "field_185682_a");
addMapping("isBurning", BlockFurnace.class, "field_149932_b");
addMapping("keepInventory", BlockFurnace.class, "field_149934_M");
addMapping("FACING", BlockFurnace.class, "field_176447_a");
addMapping("SNOWY", BlockGrass.class, "field_176498_a");
addMapping("GRASS_PATH_AABB", BlockGrassPath.class, "field_185673_a");
addMapping("ENABLED", BlockHopper.class, "field_176429_b");
addMapping("FACING", BlockHopper.class, "field_176430_a");
addMapping("BASE_AABB", BlockHopper.class, "field_185571_c");
addMapping("SOUTH_AABB", BlockHopper.class, "field_185572_d");
addMapping("NORTH_AABB", BlockHopper.class, "field_185573_e");
addMapping("WEST_AABB", BlockHopper.class, "field_185574_f");
addMapping("EAST_AABB", BlockHopper.class, "field_185575_g");
addMapping("FACING", BlockHorizontal.class, "field_185512_D");
addMapping("smallBlock", BlockHugeMushroom.class, "field_176379_b");
addMapping("VARIANT", BlockHugeMushroom.class, "field_176380_a");
addMapping("HAS_RECORD", BlockJukebox.class, "field_176432_a");
addMapping("FACING", BlockLadder.class, "field_176382_a");
addMapping("LADDER_EAST_AABB", BlockLadder.class, "field_185687_b");
addMapping("LADDER_WEST_AABB", BlockLadder.class, "field_185688_c");
addMapping("LADDER_SOUTH_AABB", BlockLadder.class, "field_185689_d");
addMapping("LADDER_NORTH_AABB", BlockLadder.class, "field_185690_e");
addMapping("surroundings", BlockLeaves.class, "field_150128_a");
addMapping("CHECK_DECAY", BlockLeaves.class, "field_176236_b");
addMapping("DECAYABLE", BlockLeaves.class, "field_176237_a");
addMapping("leavesFancy", BlockLeaves.class, "field_185686_c");
addMapping("POWERED", BlockLever.class, "field_176359_b");
addMapping("FACING", BlockLever.class, "field_176360_a");
addMapping("LEVER_DOWN_AABB", BlockLever.class, "field_185691_B");
addMapping("LEVER_NORTH_AABB", BlockLever.class, "field_185692_c");
addMapping("LEVER_SOUTH_AABB", BlockLever.class, "field_185693_d");
addMapping("LEVER_WEST_AABB", BlockLever.class, "field_185694_e");
addMapping("LEVER_EAST_AABB", BlockLever.class, "field_185695_f");
addMapping("LEVER_UP_AABB", BlockLever.class, "field_185696_g");
addMapping("LILY_PAD_AABB", BlockLilyPad.class, "field_185523_a");
addMapping("LEVEL", BlockLiquid.class, "field_176367_b");
addMapping("LOG_AXIS", BlockLog.class, "field_176299_a");
addMapping("MUSHROOM_AABB", BlockMushroom.class, "field_185518_a");
addMapping("SNOWY", BlockMycelium.class, "field_176384_a");
addMapping("AGE", BlockNetherWart.class, "field_176486_a");
addMapping("NETHER_WART_AABB", BlockNetherWart.class, "field_185519_c");
addMapping("VARIANT", BlockNewLeaf.class, "field_176240_P");
addMapping("VARIANT", BlockNewLog.class, "field_176300_b");
addMapping("INSTRUMENTS", BlockNote.class, "field_176434_a");
addMapping("POWERED", BlockObserver.class, "field_190963_a");
addMapping("VARIANT", BlockOldLeaf.class, "field_176239_P");
addMapping("VARIANT", BlockOldLog.class, "field_176301_b");
addMapping("canDrop", BlockPane.class, "field_150099_b");
addMapping("NORTH", BlockPane.class, "field_176241_b");
addMapping("EAST", BlockPane.class, "field_176242_M");
addMapping("SOUTH", BlockPane.class, "field_176243_N");
addMapping("WEST", BlockPane.class, "field_176244_O");
addMapping("AABB_BY_INDEX", BlockPane.class, "field_185730_f");
addMapping("isSticky", BlockPistonBase.class, "field_150082_a");
addMapping("EXTENDED", BlockPistonBase.class, "field_176320_b");
addMapping("PISTON_BASE_EAST_AABB", BlockPistonBase.class, "field_185648_b");
addMapping("PISTON_BASE_WEST_AABB", BlockPistonBase.class, "field_185649_c");
addMapping("PISTON_BASE_SOUTH_AABB", BlockPistonBase.class, "field_185650_d");
addMapping("PISTON_BASE_NORTH_AABB", BlockPistonBase.class, "field_185651_e");
addMapping("PISTON_BASE_UP_AABB", BlockPistonBase.class, "field_185652_f");
addMapping("PISTON_BASE_DOWN_AABB", BlockPistonBase.class, "field_185653_g");
addMapping("TYPE", BlockPistonExtension.class, "field_176325_b");
addMapping("SHORT", BlockPistonExtension.class, "field_176327_M");
addMapping("PISTON_EXTENSION_DOWN_AABB", BlockPistonExtension.class, "field_185634_B");
addMapping("PISTON_EXTENSION_EAST_AABB", BlockPistonExtension.class, "field_185635_c");
addMapping("UP_ARM_AABB", BlockPistonExtension.class, "field_185636_C");
addMapping("PISTON_EXTENSION_WEST_AABB", BlockPistonExtension.class, "field_185637_d");
addMapping("DOWN_ARM_AABB", BlockPistonExtension.class, "field_185638_D");
addMapping("PISTON_EXTENSION_SOUTH_AABB", BlockPistonExtension.class, "field_185639_e");
addMapping("SOUTH_ARM_AABB", BlockPistonExtension.class, "field_185640_E");
addMapping("PISTON_EXTENSION_NORTH_AABB", BlockPistonExtension.class, "field_185641_f");
addMapping("NORTH_ARM_AABB", BlockPistonExtension.class, "field_185642_F");
addMapping("PISTON_EXTENSION_UP_AABB", BlockPistonExtension.class, "field_185643_g");
addMapping("EAST_ARM_AABB", BlockPistonExtension.class, "field_185644_G");
addMapping("WEST_ARM_AABB", BlockPistonExtension.class, "field_185645_I");
addMapping("SHORT_UP_ARM_AABB", BlockPistonExtension.class, "field_190964_J");
addMapping("SHORT_DOWN_ARM_AABB", BlockPistonExtension.class, "field_190965_K");
addMapping("SHORT_SOUTH_ARM_AABB", BlockPistonExtension.class, "field_190966_L");
addMapping("SHORT_NORTH_ARM_AABB", BlockPistonExtension.class, "field_190967_M");
addMapping("SHORT_EAST_ARM_AABB", BlockPistonExtension.class, "field_190968_N");
addMapping("SHORT_WEST_ARM_AABB", BlockPistonExtension.class, "field_190969_O");
addMapping("TYPE", BlockPistonMoving.class, "field_176425_b");
addMapping("FACING", BlockPistonMoving.class, "field_176426_a");
addMapping("VARIANT", BlockPlanks.class, "field_176383_a");
addMapping("AXIS", BlockPortal.class, "field_176550_a");
addMapping("X_AABB", BlockPortal.class, "field_185683_b");
addMapping("Z_AABB", BlockPortal.class, "field_185684_c");
addMapping("Y_AABB", BlockPortal.class, "field_185685_d");
addMapping("POTATO_AABB", BlockPotato.class, "field_185534_a");
addMapping("sensitivity", BlockPressurePlate.class, "field_150069_a");
addMapping("POWERED", BlockPressurePlate.class, "field_176580_a");
addMapping("maxWeight", BlockPressurePlateWeighted.class, "field_150068_a");
addMapping("POWER", BlockPressurePlateWeighted.class, "field_176579_a");
addMapping("ROUGH_META", BlockPrismarine.class, "field_176331_b");
addMapping("VARIANT", BlockPrismarine.class, "field_176332_a");
addMapping("BRICKS_META", BlockPrismarine.class, "field_176333_M");
addMapping("DARK_META", BlockPrismarine.class, "field_176334_N");
addMapping("snowmanPattern", BlockPumpkin.class, "field_176393_b");
addMapping("snowmanBasePattern", BlockPumpkin.class, "field_176394_a");
addMapping("golemBasePattern", BlockPumpkin.class, "field_176395_M");
addMapping("golemPattern", BlockPumpkin.class, "field_176396_O");
addMapping("IS_PUMPKIN", BlockPumpkin.class, "field_181085_Q");
addMapping("VARIANT", BlockPurpurSlab.class, "field_185678_d");
addMapping("VARIANT", BlockQuartz.class, "field_176335_a");
addMapping("SHAPE", BlockRail.class, "field_176565_b");
addMapping("isPowered", BlockRailBase.class, "field_150053_a");
addMapping("FLAT_AABB", BlockRailBase.class, "field_185590_a");
addMapping("ASCENDING_AABB", BlockRailBase.class, "field_190959_b");
addMapping("SHAPE", BlockRailDetector.class, "field_176573_b");
addMapping("POWERED", BlockRailDetector.class, "field_176574_M");
addMapping("SHAPE", BlockRailPowered.class, "field_176568_b");
addMapping("POWERED", BlockRailPowered.class, "field_176569_M");
addMapping("TYPE", BlockRedSandstone.class, "field_176336_a");
addMapping("MODE", BlockRedstoneComparator.class, "field_176463_b");
addMapping("POWERED", BlockRedstoneComparator.class, "field_176464_a");
addMapping("isRepeaterPowered", BlockRedstoneDiode.class, "field_149914_a");
addMapping("REDSTONE_DIODE_AABB", BlockRedstoneDiode.class, "field_185548_c");
addMapping("isOn", BlockRedstoneLight.class, "field_150171_a");
addMapping("isOn", BlockRedstoneOre.class, "field_150187_a");
addMapping("DELAY", BlockRedstoneRepeater.class, "field_176410_b");
addMapping("LOCKED", BlockRedstoneRepeater.class, "field_176411_a");
addMapping("toggles", BlockRedstoneTorch.class, "field_150112_b");
addMapping("isOn", BlockRedstoneTorch.class, "field_150113_a");
addMapping("blocksNeedingUpdate", BlockRedstoneWire.class, "field_150179_b");
addMapping("canProvidePower", BlockRedstoneWire.class, "field_150181_a");
addMapping("EAST", BlockRedstoneWire.class, "field_176347_b");
addMapping("NORTH", BlockRedstoneWire.class, "field_176348_a");
addMapping("SOUTH", BlockRedstoneWire.class, "field_176349_M");
addMapping("WEST", BlockRedstoneWire.class, "field_176350_N");
addMapping("POWER", BlockRedstoneWire.class, "field_176351_O");
addMapping("REDSTONE_WIRE_AABB", BlockRedstoneWire.class, "field_185700_f");
addMapping("AGE", BlockReed.class, "field_176355_a");
addMapping("REED_AABB", BlockReed.class, "field_185701_b");
addMapping("AXIS", BlockRotatedPillar.class, "field_176298_M");
addMapping("VARIANT", BlockSand.class, "field_176504_a");
addMapping("TYPE", BlockSandStone.class, "field_176297_a");
addMapping("STAGE", BlockSapling.class, "field_176479_b");
addMapping("TYPE", BlockSapling.class, "field_176480_a");
addMapping("SAPLING_AABB", BlockSapling.class, "field_185520_d");
addMapping("FACING", BlockShulkerBox.class, "field_190957_a");
addMapping("color", BlockShulkerBox.class, "field_190958_b");
addMapping("SIGN_AABB", BlockSign.class, "field_185577_a");
addMapping("VARIANT", BlockSilverfish.class, "field_176378_a");
addMapping("NODROP", BlockSkull.class, "field_176417_b");
addMapping("FACING", BlockSkull.class, "field_176418_a");
addMapping("IS_WITHER_SKELETON", BlockSkull.class, "field_176419_M");
addMapping("witherBasePattern", BlockSkull.class, "field_176420_N");
addMapping("witherPattern", BlockSkull.class, "field_176421_O");
addMapping("DEFAULT_AABB", BlockSkull.class, "field_185582_c");
addMapping("NORTH_AABB", BlockSkull.class, "field_185583_d");
addMapping("SOUTH_AABB", BlockSkull.class, "field_185584_e");
addMapping("WEST_AABB", BlockSkull.class, "field_185585_f");
addMapping("EAST_AABB", BlockSkull.class, "field_185586_g");
addMapping("HALF", BlockSlab.class, "field_176554_a");
addMapping("AABB_BOTTOM_HALF", BlockSlab.class, "field_185676_b");
addMapping("AABB_TOP_HALF", BlockSlab.class, "field_185677_c");
addMapping("LAYERS", BlockSnow.class, "field_176315_a");
addMapping("SNOW_AABB", BlockSnow.class, "field_185702_b");
addMapping("SOUL_SAND_AABB", BlockSoulSand.class, "field_185703_a");
addMapping("pos", BlockSourceImpl.class, "field_179317_b");
addMapping("world", BlockSourceImpl.class, "field_82627_a");
addMapping("WET", BlockSponge.class, "field_176313_a");
addMapping("COLOR", BlockStainedGlass.class, "field_176547_a");
addMapping("COLOR", BlockStainedGlassPane.class, "field_176245_a");
addMapping("MAP_COLORS", BlockStainedHardenedClay.class, "field_193389_b");
addMapping("modelBlock", BlockStairs.class, "field_150149_b");
addMapping("modelState", BlockStairs.class, "field_150151_M");
addMapping("HALF", BlockStairs.class, "field_176308_b");
addMapping("FACING", BlockStairs.class, "field_176309_a");
addMapping("SHAPE", BlockStairs.class, "field_176310_M");
addMapping("AABB_QTR_TOP_SOUTH", BlockStairs.class, "field_185710_B");
addMapping("AABB_OCT_TOP_NW", BlockStairs.class, "field_185711_C");
addMapping("AABB_SLAB_TOP", BlockStairs.class, "field_185712_d");
addMapping("AABB_OCT_TOP_NE", BlockStairs.class, "field_185713_D");
addMapping("AABB_QTR_TOP_WEST", BlockStairs.class, "field_185714_e");
addMapping("AABB_OCT_TOP_SW", BlockStairs.class, "field_185715_E");
addMapping("AABB_QTR_TOP_EAST", BlockStairs.class, "field_185716_f");
addMapping("AABB_OCT_TOP_SE", BlockStairs.class, "field_185717_F");
addMapping("AABB_QTR_TOP_NORTH", BlockStairs.class, "field_185718_g");
addMapping("AABB_SLAB_BOTTOM", BlockStairs.class, "field_185719_G");
addMapping("AABB_QTR_BOT_WEST", BlockStairs.class, "field_185720_H");
addMapping("AABB_QTR_BOT_EAST", BlockStairs.class, "field_185721_I");
addMapping("AABB_QTR_BOT_NORTH", BlockStairs.class, "field_185722_J");
addMapping("AABB_QTR_BOT_SOUTH", BlockStairs.class, "field_185723_K");
addMapping("AABB_OCT_BOT_NW", BlockStairs.class, "field_185724_L");
addMapping("AABB_OCT_BOT_NE", BlockStairs.class, "field_185725_M");
addMapping("AABB_OCT_BOT_SW", BlockStairs.class, "field_185726_N");
addMapping("AABB_OCT_BOT_SE", BlockStairs.class, "field_185727_O");
addMapping("ROTATION", BlockStandingSign.class, "field_176413_a");
addMapping("crop", BlockStem.class, "field_149877_a");
addMapping("FACING", BlockStem.class, "field_176483_b");
addMapping("AGE", BlockStem.class, "field_176484_a");
addMapping("STEM_AABB", BlockStem.class, "field_185521_d");
addMapping("VARIANT", BlockStone.class, "field_176247_a");
addMapping("DEFAULT_META", BlockStoneBrick.class, "field_176248_b");
addMapping("VARIANT", BlockStoneBrick.class, "field_176249_a");
addMapping("MOSSY_META", BlockStoneBrick.class, "field_176250_M");
addMapping("CRACKED_META", BlockStoneBrick.class, "field_176251_N");
addMapping("CHISELED_META", BlockStoneBrick.class, "field_176252_O");
addMapping("SEAMLESS", BlockStoneSlab.class, "field_176555_b");
addMapping("VARIANT", BlockStoneSlab.class, "field_176556_M");
addMapping("SEAMLESS", BlockStoneSlabNew.class, "field_176558_b");
addMapping("VARIANT", BlockStoneSlabNew.class, "field_176559_M");
addMapping("MODE", BlockStructure.class, "field_185587_a");
addMapping("STRUCTURE_VOID_AABB", BlockStructureVoid.class, "field_189875_a");
addMapping("EXPLODE", BlockTNT.class, "field_176246_a");
addMapping("TYPE", BlockTallGrass.class, "field_176497_a");
addMapping("TALL_GRASS_AABB", BlockTallGrass.class, "field_185522_c");
addMapping("FACING", BlockTorch.class, "field_176596_a");
addMapping("STANDING_AABB", BlockTorch.class, "field_185738_b");
addMapping("TORCH_NORTH_AABB", BlockTorch.class, "field_185739_c");
addMapping("TORCH_SOUTH_AABB", BlockTorch.class, "field_185740_d");
addMapping("TORCH_WEST_AABB", BlockTorch.class, "field_185741_e");
addMapping("TORCH_EAST_AABB", BlockTorch.class, "field_185742_f");
addMapping("OPEN", BlockTrapDoor.class, "field_176283_b");
addMapping("FACING", BlockTrapDoor.class, "field_176284_a");
addMapping("HALF", BlockTrapDoor.class, "field_176285_M");
addMapping("BOTTOM_AABB", BlockTrapDoor.class, "field_185732_B");
addMapping("TOP_AABB", BlockTrapDoor.class, "field_185733_C");
addMapping("EAST_OPEN_AABB", BlockTrapDoor.class, "field_185734_d");
addMapping("WEST_OPEN_AABB", BlockTrapDoor.class, "field_185735_e");
addMapping("SOUTH_OPEN_AABB", BlockTrapDoor.class, "field_185736_f");
addMapping("NORTH_OPEN_AABB", BlockTrapDoor.class, "field_185737_g");
addMapping("SOUTH", BlockTripWire.class, "field_176289_Q");
addMapping("EAST", BlockTripWire.class, "field_176291_P");
addMapping("WEST", BlockTripWire.class, "field_176292_R");
addMapping("POWERED", BlockTripWire.class, "field_176293_a");
addMapping("ATTACHED", BlockTripWire.class, "field_176294_M");
addMapping("DISARMED", BlockTripWire.class, "field_176295_N");
addMapping("NORTH", BlockTripWire.class, "field_176296_O");
addMapping("AABB", BlockTripWire.class, "field_185747_B");
addMapping("TRIP_WRITE_ATTACHED_AABB", BlockTripWire.class, "field_185748_C");
addMapping("POWERED", BlockTripWireHook.class, "field_176263_b");
addMapping("FACING", BlockTripWireHook.class, "field_176264_a");
addMapping("ATTACHED", BlockTripWireHook.class, "field_176265_M");
addMapping("HOOK_NORTH_AABB", BlockTripWireHook.class, "field_185743_d");
addMapping("HOOK_SOUTH_AABB", BlockTripWireHook.class, "field_185744_e");
addMapping("HOOK_WEST_AABB", BlockTripWireHook.class, "field_185745_f");
addMapping("HOOK_EAST_AABB", BlockTripWireHook.class, "field_185746_g");
addMapping("NORTH", BlockVine.class, "field_176273_b");
addMapping("ALL_FACES", BlockVine.class, "field_176274_P");
addMapping("UP", BlockVine.class, "field_176277_a");
addMapping("EAST", BlockVine.class, "field_176278_M");
addMapping("SOUTH", BlockVine.class, "field_176279_N");
addMapping("WEST", BlockVine.class, "field_176280_O");
addMapping("WEST_AABB", BlockVine.class, "field_185753_B");
addMapping("EAST_AABB", BlockVine.class, "field_185754_C");
addMapping("NORTH_AABB", BlockVine.class, "field_185755_D");
addMapping("SOUTH_AABB", BlockVine.class, "field_185756_E");
addMapping("UP_AABB", BlockVine.class, "field_185757_g");
addMapping("NORTH", BlockWall.class, "field_176254_b");
addMapping("VARIANT", BlockWall.class, "field_176255_P");
addMapping("UP", BlockWall.class, "field_176256_a");
addMapping("EAST", BlockWall.class, "field_176257_M");
addMapping("SOUTH", BlockWall.class, "field_176258_N");
addMapping("WEST", BlockWall.class, "field_176259_O");
addMapping("CLIP_AABB_BY_INDEX", BlockWall.class, "field_185750_B");
addMapping("AABB_BY_INDEX", BlockWall.class, "field_185751_g");
addMapping("FACING", BlockWallSign.class, "field_176412_a");
addMapping("SIGN_EAST_AABB", BlockWallSign.class, "field_185578_c");
addMapping("SIGN_WEST_AABB", BlockWallSign.class, "field_185579_d");
addMapping("SIGN_SOUTH_AABB", BlockWallSign.class, "field_185580_e");
addMapping("SIGN_NORTH_AABB", BlockWallSign.class, "field_185581_f");
addMapping("VARIANT", BlockWoodSlab.class, "field_176557_b");
addMapping("WOOD", SoundType.class, "field_185848_a");
addMapping("GROUND", SoundType.class, "field_185849_b");
addMapping("PLANT", SoundType.class, "field_185850_c");
addMapping("STONE", SoundType.class, "field_185851_d");
addMapping("METAL", SoundType.class, "field_185852_e");
addMapping("GLASS", SoundType.class, "field_185853_f");
addMapping("CLOTH", SoundType.class, "field_185854_g");
addMapping("SAND", SoundType.class, "field_185855_h");
addMapping("SNOW", SoundType.class, "field_185856_i");
addMapping("LADDER", SoundType.class, "field_185857_j");
addMapping("ANVIL", SoundType.class, "field_185858_k");
addMapping("SLIME", SoundType.class, "field_185859_l");
addMapping("volume", SoundType.class, "field_185860_m");
addMapping("pitch", SoundType.class, "field_185861_n");
addMapping("breakSound", SoundType.class, "field_185862_o");
addMapping("stepSound", SoundType.class, "field_185863_p");
addMapping("placeSound", SoundType.class, "field_185864_q");
addMapping("hitSound", SoundType.class, "field_185865_r");
addMapping("fallSound", SoundType.class, "field_185866_s");
addMapping("RED", MapColor.class, "field_151645_D");
addMapping("BLACK", MapColor.class, "field_151646_E");
addMapping("GOLD", MapColor.class, "field_151647_F");
addMapping("DIAMOND", MapColor.class, "field_151648_G");
addMapping("BLUE", MapColor.class, "field_151649_A");
addMapping("BROWN", MapColor.class, "field_151650_B");
addMapping("GREEN", MapColor.class, "field_151651_C");
addMapping("LAPIS", MapColor.class, "field_151652_H");
addMapping("EMERALD", MapColor.class, "field_151653_I");
addMapping("OBSIDIAN", MapColor.class, "field_151654_J");
addMapping("NETHERRACK", MapColor.class, "field_151655_K");
addMapping("TNT", MapColor.class, "field_151656_f");
addMapping("ICE", MapColor.class, "field_151657_g");
addMapping("SAND", MapColor.class, "field_151658_d");
addMapping("CLOTH", MapColor.class, "field_151659_e");
addMapping("AIR", MapColor.class, "field_151660_b");
addMapping("GRASS", MapColor.class, "field_151661_c");
addMapping("WATER", MapColor.class, "field_151662_n");
addMapping("WOOD", MapColor.class, "field_151663_o");
addMapping("DIRT", MapColor.class, "field_151664_l");
addMapping("STONE", MapColor.class, "field_151665_m");
addMapping("SNOW", MapColor.class, "field_151666_j");
addMapping("CLAY", MapColor.class, "field_151667_k");
addMapping("IRON", MapColor.class, "field_151668_h");
addMapping("FOLIAGE", MapColor.class, "field_151669_i");
addMapping("GRAY", MapColor.class, "field_151670_w");
addMapping("PINK", MapColor.class, "field_151671_v");
addMapping("LIME", MapColor.class, "field_151672_u");
addMapping("YELLOW", MapColor.class, "field_151673_t");
addMapping("LIGHT_BLUE", MapColor.class, "field_151674_s");
addMapping("MAGENTA", MapColor.class, "field_151675_r");
addMapping("ADOBE", MapColor.class, "field_151676_q");
addMapping("QUARTZ", MapColor.class, "field_151677_p");
addMapping("PURPLE", MapColor.class, "field_151678_z");
addMapping("CYAN", MapColor.class, "field_151679_y");
addMapping("SILVER", MapColor.class, "field_151680_x");
addMapping("RED_STAINED_HARDENED_CLAY", MapColor.class, "field_193559_aa");
addMapping("BLACK_STAINED_HARDENED_CLAY", MapColor.class, "field_193560_ab");
addMapping("WHITE_STAINED_HARDENED_CLAY", MapColor.class, "field_193561_M");
addMapping("ORANGE_STAINED_HARDENED_CLAY", MapColor.class, "field_193562_N");
addMapping("MAGENTA_STAINED_HARDENED_CLAY", MapColor.class, "field_193563_O");
addMapping("LIGHT_BLUE_STAINED_HARDENED_CLAY", MapColor.class, "field_193564_P");
addMapping("YELLOW_STAINED_HARDENED_CLAY", MapColor.class, "field_193565_Q");
addMapping("LIME_STAINED_HARDENED_CLAY", MapColor.class, "field_193566_R");
addMapping("PINK_STAINED_HARDENED_CLAY", MapColor.class, "field_193567_S");
addMapping("GRAY_STAINED_HARDENED_CLAY", MapColor.class, "field_193568_T");
addMapping("SILVER_STAINED_HARDENED_CLAY", MapColor.class, "field_193569_U");
addMapping("CYAN_STAINED_HARDENED_CLAY", MapColor.class, "field_193570_V");
addMapping("PURPLE_STAINED_HARDENED_CLAY", MapColor.class, "field_193571_W");
addMapping("BLUE_STAINED_HARDENED_CLAY", MapColor.class, "field_193572_X");
addMapping("BROWN_STAINED_HARDENED_CLAY", MapColor.class, "field_193573_Y");
addMapping("GREEN_STAINED_HARDENED_CLAY", MapColor.class, "field_193574_Z");
addMapping("BLOCK_COLORS", MapColor.class, "field_193575_b");
addMapping("COLORS", MapColor.class, "field_76281_a");
addMapping("colorIndex", MapColor.class, "field_76290_q");
addMapping("colorValue", MapColor.class, "field_76291_p");
addMapping("DRAGON_EGG", Material.class, "field_151566_D");
addMapping("PORTAL", Material.class, "field_151567_E");
addMapping("CAKE", Material.class, "field_151568_F");
addMapping("WEB", Material.class, "field_151569_G");
addMapping("CACTUS", Material.class, "field_151570_A");
addMapping("CLAY", Material.class, "field_151571_B");
addMapping("GOURD", Material.class, "field_151572_C");
addMapping("IRON", Material.class, "field_151573_f");
addMapping("ANVIL", Material.class, "field_151574_g");
addMapping("WOOD", Material.class, "field_151575_d");
addMapping("ROCK", Material.class, "field_151576_e");
addMapping("GRASS", Material.class, "field_151577_b");
addMapping("GROUND", Material.class, "field_151578_c");
addMapping("AIR", Material.class, "field_151579_a");
addMapping("CLOTH", Material.class, "field_151580_n");
addMapping("FIRE", Material.class, "field_151581_o");
addMapping("VINE", Material.class, "field_151582_l");
addMapping("SPONGE", Material.class, "field_151583_m");
addMapping("LEAVES", Material.class, "field_151584_j");
addMapping("PLANTS", Material.class, "field_151585_k");
addMapping("WATER", Material.class, "field_151586_h");
addMapping("LAVA", Material.class, "field_151587_i");
addMapping("ICE", Material.class, "field_151588_w");
addMapping("CORAL", Material.class, "field_151589_v");
addMapping("TNT", Material.class, "field_151590_u");
addMapping("REDSTONE_LIGHT", Material.class, "field_151591_t");
addMapping("GLASS", Material.class, "field_151592_s");
addMapping("CARPET", Material.class, "field_151593_r");
addMapping("CIRCUITS", Material.class, "field_151594_q");
addMapping("SAND", Material.class, "field_151595_p");
addMapping("CRAFTED_SNOW", Material.class, "field_151596_z");
addMapping("SNOW", Material.class, "field_151597_y");
addMapping("PACKED_ICE", Material.class, "field_151598_x");
addMapping("BARRIER", Material.class, "field_175972_I");
addMapping("STRUCTURE_VOID", Material.class, "field_189963_J");
addMapping("PISTON", Material.class, "field_76233_E");
addMapping("materialMapColor", Material.class, "field_76234_F");
addMapping("canBurn", Material.class, "field_76235_G");
addMapping("replaceable", Material.class, "field_76239_H");
addMapping("isTranslucent", Material.class, "field_76240_I");
addMapping("requiresNoTool", Material.class, "field_76241_J");
addMapping("mobilityFlag", Material.class, "field_76242_K");
addMapping("isAdventureModeExempt", Material.class, "field_85159_M");
addMapping("allowedValues", PropertyBool.class, "field_177717_a");
addMapping("nameToValue", PropertyEnum.class, "field_177710_b");
addMapping("allowedValues", PropertyEnum.class, "field_177711_a");
addMapping("name", PropertyHelper.class, "field_177703_b");
addMapping("valueClass", PropertyHelper.class, "field_177704_a");
addMapping("allowedValues", PropertyInteger.class, "field_177720_a");
addMapping("toDestroy", BlockPistonStructureHelper.class, "field_177256_f");
addMapping("moveDirection", BlockPistonStructureHelper.class, "field_177257_d");
addMapping("toMove", BlockPistonStructureHelper.class, "field_177258_e");
addMapping("pistonPos", BlockPistonStructureHelper.class, "field_177259_b");
addMapping("blockToMove", BlockPistonStructureHelper.class, "field_177260_c");
addMapping("world", BlockPistonStructureHelper.class, "field_177261_a");
addMapping("MAP_ENTRY_TO_STRING", BlockStateBase.class, "field_177233_b");
addMapping("COMMA_JOINER", BlockStateBase.class, "field_177234_a");
addMapping("properties", BlockStateContainer.class, "field_177624_d");
addMapping("validStates", BlockStateContainer.class, "field_177625_e");
addMapping("GET_NAME_FUNC", BlockStateContainer.class, "field_177626_b");
addMapping("block", BlockStateContainer.class, "field_177627_c");
addMapping("NAME_PATTERN", BlockStateContainer.class, "field_185921_a");
addMapping("tileEntity", BlockWorldState.class, "field_177511_d");
addMapping("tileEntityInitialized", BlockWorldState.class, "field_177512_e");
addMapping("pos", BlockWorldState.class, "field_177513_b");
addMapping("state", BlockWorldState.class, "field_177514_c");
addMapping("world", BlockWorldState.class, "field_177515_a");
addMapping("forceLoad", BlockWorldState.class, "field_181628_c");
addMapping("block", BlockMatcher.class, "field_177644_a");
addMapping("material", BlockMaterialMatcher.class, "field_189887_a");
addMapping("palmLength", BlockPattern.class, "field_177686_d");
addMapping("fingerLength", BlockPattern.class, "field_177687_b");
addMapping("thumbLength", BlockPattern.class, "field_177688_c");
addMapping("blockMatches", BlockPattern.class, "field_177689_a");
addMapping("propertyPredicates", BlockStateMatcher.class, "field_177640_b");
addMapping("blockstate", BlockStateMatcher.class, "field_177641_a");
addMapping("ANY", BlockStateMatcher.class, "field_185928_a");
addMapping("aisleHeight", FactoryBlockPattern.class, "field_177663_d");
addMapping("rowWidth", FactoryBlockPattern.class, "field_177664_e");
addMapping("depth", FactoryBlockPattern.class, "field_177665_b");
addMapping("symbolMap", FactoryBlockPattern.class, "field_177666_c");
addMapping("COMMA_JOIN", FactoryBlockPattern.class, "field_177667_a");
addMapping("scaledResolution", LoadingScreenRenderer.class, "field_146587_f");
addMapping("framebuffer", LoadingScreenRenderer.class, "field_146588_g");
addMapping("systemTime", LoadingScreenRenderer.class, "field_73723_d");
addMapping("loadingSuccess", LoadingScreenRenderer.class, "field_73724_e");
addMapping("mc", LoadingScreenRenderer.class, "field_73725_b");
addMapping("currentlyDisplayedText", LoadingScreenRenderer.class, "field_73726_c");
addMapping("message", LoadingScreenRenderer.class, "field_73727_a");
addMapping("LOCATION_MOJANG_PNG", Minecraft.class, "field_110444_H");
addMapping("MAC_DISPLAY_MODES", Minecraft.class, "field_110445_I");
addMapping("fileAssets", Minecraft.class, "field_110446_Y");
addMapping("launchedVersion", Minecraft.class, "field_110447_Z");
addMapping("mcResourcePackRepository", Minecraft.class, "field_110448_aq");
addMapping("defaultResourcePacks", Minecraft.class, "field_110449_ao");
addMapping("mcDefaultResourcePack", Minecraft.class, "field_110450_ap");
addMapping("mcResourceManager", Minecraft.class, "field_110451_am");
addMapping("metadataSerializer_", Minecraft.class, "field_110452_an");
addMapping("proxy", Minecraft.class, "field_110453_aa");
addMapping("fileResourcepacks", Minecraft.class, "field_130070_K");
addMapping("mcLanguageManager", Minecraft.class, "field_135017_as");
addMapping("IS_RUNNING_ON_MAC", Minecraft.class, "field_142025_a");
addMapping("LOGGER", Minecraft.class, "field_147123_G");
addMapping("framebufferMc", Minecraft.class, "field_147124_at");
addMapping("pointedEntity", Minecraft.class, "field_147125_j");
addMapping("mcMusicTicker", Minecraft.class, "field_147126_aw");
addMapping("mcSoundHandler", Minecraft.class, "field_147127_av");
addMapping("textureMapBlocks", Minecraft.class, "field_147128_au");
addMapping("jvm64bit", Minecraft.class, "field_147129_ai");
addMapping("skinManager", Minecraft.class, "field_152350_aA");
addMapping("scheduledTasks", Minecraft.class, "field_152351_aB");
addMapping("mcThread", Minecraft.class, "field_152352_aC");
addMapping("mojangLogo", Minecraft.class, "field_152354_ay");
addMapping("sessionService", Minecraft.class, "field_152355_az");
addMapping("twitchDetails", Minecraft.class, "field_152356_J");
addMapping("renderChunksMany", Minecraft.class, "field_175612_E");
addMapping("renderManager", Minecraft.class, "field_175616_W");
addMapping("modelManager", Minecraft.class, "field_175617_aL");
addMapping("blockRenderDispatcher", Minecraft.class, "field_175618_aM");
addMapping("enableGLErrorChecking", Minecraft.class, "field_175619_R");
addMapping("itemRenderer", Minecraft.class, "field_175620_Y");
addMapping("renderItem", Minecraft.class, "field_175621_X");
addMapping("renderViewEntity", Minecraft.class, "field_175622_Z");
addMapping("profileProperties", Minecraft.class, "field_181038_N");
addMapping("connectedToRealms", Minecraft.class, "field_181541_X");
addMapping("frameTimer", Minecraft.class, "field_181542_y");
addMapping("startNanoTime", Minecraft.class, "field_181543_z");
addMapping("blockColors", Minecraft.class, "field_184127_aH");
addMapping("itemColors", Minecraft.class, "field_184128_aI");
addMapping("actionKeyF3", Minecraft.class, "field_184129_aV");
addMapping("versionType", Minecraft.class, "field_184130_ao");
addMapping("dataFixer", Minecraft.class, "field_184131_U");
addMapping("debugRenderer", Minecraft.class, "field_184132_p");
addMapping("creativeSettings", Minecraft.class, "field_191950_u");
addMapping("toastGui", Minecraft.class, "field_193034_aS");
addMapping("tutorial", Minecraft.class, "field_193035_aW");
addMapping("searchTreeManager", Minecraft.class, "field_193995_ae");
addMapping("renderPartialTicksPaused", Minecraft.class, "field_193996_ah");
addMapping("mcDataDir", Minecraft.class, "field_71412_D");
addMapping("inGameHasFocus", Minecraft.class, "field_71415_G");
addMapping("mouseHelper", Minecraft.class, "field_71417_B");
addMapping("debugUpdateTime", Minecraft.class, "field_71419_L");
addMapping("fpsCounter", Minecraft.class, "field_71420_M");
addMapping("prevFrameTime", Minecraft.class, "field_71421_N");
addMapping("currentServerData", Minecraft.class, "field_71422_O");
addMapping("systemTime", Minecraft.class, "field_71423_H");
addMapping("mcProfiler", Minecraft.class, "field_71424_I");
addMapping("running", Minecraft.class, "field_71425_J");
addMapping("debug", Minecraft.class, "field_71426_K");
addMapping("usageSnooper", Minecraft.class, "field_71427_U");
addMapping("timer", Minecraft.class, "field_71428_T");
addMapping("leftClickCounter", Minecraft.class, "field_71429_W");
addMapping("fullscreen", Minecraft.class, "field_71431_Q");
addMapping("instance", Minecraft.class, "field_71432_P");
addMapping("crashReporter", Minecraft.class, "field_71433_S");
addMapping("hasCrashed", Minecraft.class, "field_71434_R");
addMapping("tempDisplayHeight", Minecraft.class, "field_71435_Y");
addMapping("tempDisplayWidth", Minecraft.class, "field_71436_X");
addMapping("integratedServer", Minecraft.class, "field_71437_Z");
addMapping("renderGlobal", Minecraft.class, "field_71438_f");
addMapping("player", Minecraft.class, "field_71439_g");
addMapping("displayHeight", Minecraft.class, "field_71440_d");
addMapping("world", Minecraft.class, "field_71441_e");
addMapping("playerController", Minecraft.class, "field_71442_b");
addMapping("displayWidth", Minecraft.class, "field_71443_c");
addMapping("memoryReserve", Minecraft.class, "field_71444_a");
addMapping("isGamePaused", Minecraft.class, "field_71445_n");
addMapping("renderEngine", Minecraft.class, "field_71446_o");
addMapping("session", Minecraft.class, "field_71449_j");
addMapping("effectRenderer", Minecraft.class, "field_71452_i");
addMapping("myNetworkManager", Minecraft.class, "field_71453_ak");
addMapping("skipRenderWorld", Minecraft.class, "field_71454_w");
addMapping("integratedServerIsRunning", Minecraft.class, "field_71455_al");
addMapping("ingameGUI", Minecraft.class, "field_71456_v");
addMapping("joinPlayerCounter", Minecraft.class, "field_71457_ai");
addMapping("isDemo", Minecraft.class, "field_71459_aj");
addMapping("entityRenderer", Minecraft.class, "field_71460_t");
addMapping("loadingScreen", Minecraft.class, "field_71461_s");
addMapping("currentScreen", Minecraft.class, "field_71462_r");
addMapping("standardGalacticFontRenderer", Minecraft.class, "field_71464_q");
addMapping("debugProfilerName", Minecraft.class, "field_71465_an");
addMapping("fontRenderer", Minecraft.class, "field_71466_p");
addMapping("rightClickDelayTimer", Minecraft.class, "field_71467_ac");
addMapping("saveLoader", Minecraft.class, "field_71469_aa");
addMapping("debugFPS", Minecraft.class, "field_71470_ab");
addMapping("gameSettings", Minecraft.class, "field_71474_y");
addMapping("serverName", Minecraft.class, "field_71475_ae");
addMapping("objectMouseOver", Minecraft.class, "field_71476_x");
addMapping("serverPort", Minecraft.class, "field_71477_af");
addMapping("debugCrashKeyPressTime", Minecraft.class, "field_83002_am");
addMapping("player", ElytraSound.class, "field_189405_m");
addMapping("time", ElytraSound.class, "field_189406_n");
addMapping("guardian", GuardianSound.class, "field_174934_k");
addMapping("donePlaying", MovingSound.class, "field_147668_j");
addMapping("distance", MovingSoundMinecart.class, "field_147669_l");
addMapping("minecart", MovingSoundMinecart.class, "field_147670_k");
addMapping("minecart", MovingSoundMinecartRiding.class, "field_147671_l");
addMapping("player", MovingSoundMinecartRiding.class, "field_147672_k");
addMapping("timeUntilNextMusic", MusicTicker.class, "field_147676_d");
addMapping("mc", MusicTicker.class, "field_147677_b");
addMapping("currentMusic", MusicTicker.class, "field_147678_c");
addMapping("rand", MusicTicker.class, "field_147679_a");
addMapping("zPosF", PositionedSound.class, "field_147658_f");
addMapping("repeat", PositionedSound.class, "field_147659_g");
addMapping("xPosF", PositionedSound.class, "field_147660_d");
addMapping("yPosF", PositionedSound.class, "field_147661_e");
addMapping("volume", PositionedSound.class, "field_147662_b");
addMapping("pitch", PositionedSound.class, "field_147663_c");
addMapping("positionedSoundLocation", PositionedSound.class, "field_147664_a");
addMapping("repeatDelay", PositionedSound.class, "field_147665_h");
addMapping("attenuationType", PositionedSound.class, "field_147666_i");
addMapping("sound", PositionedSound.class, "field_184367_a");
addMapping("category", PositionedSound.class, "field_184368_b");
addMapping("soundEvent", PositionedSound.class, "field_184369_l");
addMapping("name", Sound.class, "field_188726_a");
addMapping("volume", Sound.class, "field_188727_b");
addMapping("pitch", Sound.class, "field_188728_c");
addMapping("weight", Sound.class, "field_188729_d");
addMapping("type", Sound.class, "field_188730_e");
addMapping("streaming", Sound.class, "field_188731_f");
addMapping("rnd", SoundEventAccessor.class, "field_148734_b");
addMapping("accessorList", SoundEventAccessor.class, "field_188716_a");
addMapping("location", SoundEventAccessor.class, "field_188717_c");
addMapping("subtitle", SoundEventAccessor.class, "field_188718_d");
addMapping("sndManager", SoundHandler.class, "field_147694_f");
addMapping("mcResourceManager", SoundHandler.class, "field_147695_g");
addMapping("TYPE", SoundHandler.class, "field_147696_d");
addMapping("soundRegistry", SoundHandler.class, "field_147697_e");
addMapping("LOGGER", SoundHandler.class, "field_147698_b");
addMapping("GSON", SoundHandler.class, "field_147699_c");
addMapping("MISSING_SOUND", SoundHandler.class, "field_147700_a");
addMapping("replaceExisting", SoundList.class, "field_148575_b");
addMapping("sounds", SoundList.class, "field_188702_a");
addMapping("subtitle", SoundList.class, "field_188703_c");
addMapping("loaded", SoundManager.class, "field_148617_f");
addMapping("playTime", SoundManager.class, "field_148618_g");
addMapping("options", SoundManager.class, "field_148619_d");
addMapping("sndSystem", SoundManager.class, "field_148620_e");
addMapping("LOGGER", SoundManager.class, "field_148621_b");
addMapping("sndHandler", SoundManager.class, "field_148622_c");
addMapping("LOG_MARKER", SoundManager.class, "field_148623_a");
addMapping("playingSoundsStopTime", SoundManager.class, "field_148624_n");
addMapping("tickableSounds", SoundManager.class, "field_148625_l");
addMapping("delayedSounds", SoundManager.class, "field_148626_m");
addMapping("playingSounds", SoundManager.class, "field_148629_h");
addMapping("invPlayingSounds", SoundManager.class, "field_148630_i");
addMapping("UNABLE_TO_PLAY", SoundManager.class, "field_188775_c");
addMapping("categorySounds", SoundManager.class, "field_188776_k");
addMapping("listeners", SoundManager.class, "field_188777_o");
addMapping("pausedChannels", SoundManager.class, "field_189000_p");
addMapping("soundRegistry", SoundRegistry.class, "field_148764_a");
addMapping("playerInfo", AbstractClientPlayer.class, "field_175157_a");
addMapping("rotateElytraX", AbstractClientPlayer.class, "field_184835_a");
addMapping("rotateElytraY", AbstractClientPlayer.class, "field_184836_b");
addMapping("rotateElytraZ", AbstractClientPlayer.class, "field_184837_c");
addMapping("otherPlayerMPYaw", EntityOtherPlayerMP.class, "field_71180_f");
addMapping("otherPlayerMPPitch", EntityOtherPlayerMP.class, "field_71181_g");
addMapping("otherPlayerMPY", EntityOtherPlayerMP.class, "field_71182_d");
addMapping("otherPlayerMPZ", EntityOtherPlayerMP.class, "field_71183_e");
addMapping("otherPlayerMPPosRotationIncrements", EntityOtherPlayerMP.class, "field_71184_b");
addMapping("otherPlayerMPX", EntityOtherPlayerMP.class, "field_71185_c");
addMapping("horseJumpPowerCounter", EntityPlayerSP.class, "field_110320_a");
addMapping("horseJumpPower", EntityPlayerSP.class, "field_110321_bQ");
addMapping("serverBrand", EntityPlayerSP.class, "field_142022_ce");
addMapping("statWriter", EntityPlayerSP.class, "field_146108_bO");
addMapping("lastReportedYaw", EntityPlayerSP.class, "field_175164_bL");
addMapping("lastReportedPitch", EntityPlayerSP.class, "field_175165_bM");
addMapping("lastReportedPosY", EntityPlayerSP.class, "field_175166_bJ");
addMapping("lastReportedPosZ", EntityPlayerSP.class, "field_175167_bK");
addMapping("positionUpdateTicks", EntityPlayerSP.class, "field_175168_bP");
addMapping("hasValidHealth", EntityPlayerSP.class, "field_175169_bQ");
addMapping("serverSneakState", EntityPlayerSP.class, "field_175170_bN");
addMapping("serverSprintState", EntityPlayerSP.class, "field_175171_bO");
addMapping("lastReportedPosX", EntityPlayerSP.class, "field_175172_bI");
addMapping("prevOnGround", EntityPlayerSP.class, "field_184841_cd");
addMapping("handActive", EntityPlayerSP.class, "field_184842_cm");
addMapping("activeHand", EntityPlayerSP.class, "field_184843_cn");
addMapping("rowingBoat", EntityPlayerSP.class, "field_184844_co");
addMapping("permissionLevel", EntityPlayerSP.class, "field_184845_bX");
addMapping("autoJumpEnabled", EntityPlayerSP.class, "field_189811_cr");
addMapping("autoJumpTime", EntityPlayerSP.class, "field_189812_cs");
addMapping("wasFallFlying", EntityPlayerSP.class, "field_189813_ct");
addMapping("recipeBook", EntityPlayerSP.class, "field_192036_cb");
addMapping("prevTimeInPortal", EntityPlayerSP.class, "field_71080_cy");
addMapping("timeInPortal", EntityPlayerSP.class, "field_71086_bY");
addMapping("renderArmYaw", EntityPlayerSP.class, "field_71154_f");
addMapping("renderArmPitch", EntityPlayerSP.class, "field_71155_g");
addMapping("sprintToggleTimer", EntityPlayerSP.class, "field_71156_d");
addMapping("sprintingTicksLeft", EntityPlayerSP.class, "field_71157_e");
addMapping("movementInput", EntityPlayerSP.class, "field_71158_b");
addMapping("mc", EntityPlayerSP.class, "field_71159_c");
addMapping("prevRenderArmYaw", EntityPlayerSP.class, "field_71163_h");
addMapping("prevRenderArmPitch", EntityPlayerSP.class, "field_71164_i");
addMapping("connection", EntityPlayerSP.class, "field_71174_a");
addMapping("rawPercent", BossInfoClient.class, "field_186766_h");
addMapping("percentSetTime", BossInfoClient.class, "field_186767_i");
addMapping("lineString", ChatLine.class, "field_74541_b");
addMapping("chatLineID", ChatLine.class, "field_74542_c");
addMapping("updateCounterCreated", ChatLine.class, "field_74543_a");
addMapping("locationFontTexture", FontRenderer.class, "field_111273_g");
addMapping("UNICODE_PAGE_LOCATIONS", FontRenderer.class, "field_111274_c");
addMapping("colorCode", FontRenderer.class, "field_78285_g");
addMapping("charWidth", FontRenderer.class, "field_78286_d");
addMapping("glyphWidth", FontRenderer.class, "field_78287_e");
addMapping("FONT_HEIGHT", FontRenderer.class, "field_78288_b");
addMapping("fontRandom", FontRenderer.class, "field_78289_c");
addMapping("red", FontRenderer.class, "field_78291_n");
addMapping("blue", FontRenderer.class, "field_78292_o");
addMapping("unicodeFlag", FontRenderer.class, "field_78293_l");
addMapping("bidiFlag", FontRenderer.class, "field_78294_m");
addMapping("posX", FontRenderer.class, "field_78295_j");
addMapping("posY", FontRenderer.class, "field_78296_k");
addMapping("renderEngine", FontRenderer.class, "field_78298_i");
addMapping("strikethroughStyle", FontRenderer.class, "field_78299_w");
addMapping("underlineStyle", FontRenderer.class, "field_78300_v");
addMapping("italicStyle", FontRenderer.class, "field_78301_u");
addMapping("boldStyle", FontRenderer.class, "field_78302_t");
addMapping("randomStyle", FontRenderer.class, "field_78303_s");
addMapping("textColor", FontRenderer.class, "field_78304_r");
addMapping("alpha", FontRenderer.class, "field_78305_q");
addMapping("green", FontRenderer.class, "field_78306_p");
addMapping("STAT_ICONS", Gui.class, "field_110323_l");
addMapping("ICONS", Gui.class, "field_110324_m");
addMapping("OPTIONS_BACKGROUND", Gui.class, "field_110325_k");
addMapping("zLevel", Gui.class, "field_73735_i");
addMapping("GUI_BARS_TEXTURES", GuiBossOverlay.class, "field_184058_a");
addMapping("client", GuiBossOverlay.class, "field_184059_f");
addMapping("mapBossInfos", GuiBossOverlay.class, "field_184060_g");
addMapping("width", GuiButton.class, "field_146120_f");
addMapping("height", GuiButton.class, "field_146121_g");
addMapping("BUTTON_TEXTURES", GuiButton.class, "field_146122_a");
addMapping("hovered", GuiButton.class, "field_146123_n");
addMapping("enabled", GuiButton.class, "field_146124_l");
addMapping("visible", GuiButton.class, "field_146125_m");
addMapping("displayString", GuiButton.class, "field_146126_j");
addMapping("id", GuiButton.class, "field_146127_k");
addMapping("x", GuiButton.class, "field_146128_h");
addMapping("y", GuiButton.class, "field_146129_i");
addMapping("xTexStart", GuiButtonImage.class, "field_191747_p");
addMapping("yTexStart", GuiButtonImage.class, "field_191748_q");
addMapping("yDiffText", GuiButtonImage.class, "field_191749_r");
addMapping("resourceLocation", GuiButtonImage.class, "field_191750_o");
addMapping("realmsButton", GuiButtonRealmsProxy.class, "field_154318_o");
addMapping("stateTriggered", GuiButtonToggle.class, "field_191755_p");
addMapping("xTexStart", GuiButtonToggle.class, "field_191756_q");
addMapping("yTexStart", GuiButtonToggle.class, "field_191757_r");
addMapping("xDiffTex", GuiButtonToggle.class, "field_191758_s");
addMapping("yDiffTex", GuiButtonToggle.class, "field_191759_t");
addMapping("resourceLocation", GuiButtonToggle.class, "field_191760_o");
addMapping("LOGGER", GuiChat.class, "field_146408_f");
addMapping("defaultInputFieldText", GuiChat.class, "field_146409_v");
addMapping("historyBuffer", GuiChat.class, "field_146410_g");
addMapping("inputField", GuiChat.class, "field_146415_a");
addMapping("sentHistoryCursor", GuiChat.class, "field_146416_h");
addMapping("tabCompleter", GuiChat.class, "field_184096_i");
addMapping("proxy", GuiClickableScrolledSelectionListProxy.class, "field_178046_u");
addMapping("commandTextField", GuiCommandBlock.class, "field_146485_f");
addMapping("previousOutputTextField", GuiCommandBlock.class, "field_146486_g");
addMapping("cancelBtn", GuiCommandBlock.class, "field_146487_r");
addMapping("doneBtn", GuiCommandBlock.class, "field_146490_i");
addMapping("trackOutput", GuiCommandBlock.class, "field_175389_t");
addMapping("outputBtn", GuiCommandBlock.class, "field_175390_s");
addMapping("commandBlock", GuiCommandBlock.class, "field_184078_g");
addMapping("modeBtn", GuiCommandBlock.class, "field_184079_s");
addMapping("conditionalBtn", GuiCommandBlock.class, "field_184080_t");
addMapping("autoExecBtn", GuiCommandBlock.class, "field_184081_u");
addMapping("commandBlockMode", GuiCommandBlock.class, "field_184082_w");
addMapping("tabCompleter", GuiCommandBlock.class, "field_184083_x");
addMapping("conditional", GuiCommandBlock.class, "field_184084_y");
addMapping("automatic", GuiCommandBlock.class, "field_184085_z");
addMapping("showSecurityWarning", GuiConfirmOpenLink.class, "field_146360_u");
addMapping("linkText", GuiConfirmOpenLink.class, "field_146361_t");
addMapping("copyLinkButtonText", GuiConfirmOpenLink.class, "field_146362_s");
addMapping("openLinkWarning", GuiConfirmOpenLink.class, "field_146363_r");
addMapping("buttonId", GuiControls.class, "field_146491_f");
addMapping("OPTIONS_ARR", GuiControls.class, "field_146492_g");
addMapping("buttonReset", GuiControls.class, "field_146493_s");
addMapping("keyBindingList", GuiControls.class, "field_146494_r");
addMapping("screenTitle", GuiControls.class, "field_146495_a");
addMapping("parentScreen", GuiControls.class, "field_146496_h");
addMapping("options", GuiControls.class, "field_146497_i");
addMapping("time", GuiControls.class, "field_152177_g");
addMapping("createWorldGui", GuiCreateFlatWorld.class, "field_146385_f");
addMapping("removeLayerButton", GuiCreateFlatWorld.class, "field_146386_v");
addMapping("generatorInfo", GuiCreateFlatWorld.class, "field_146387_g");
addMapping("editLayerButton", GuiCreateFlatWorld.class, "field_146388_u");
addMapping("addLayerButton", GuiCreateFlatWorld.class, "field_146389_t");
addMapping("createFlatWorldListSlotGui", GuiCreateFlatWorld.class, "field_146390_s");
addMapping("heightText", GuiCreateFlatWorld.class, "field_146391_r");
addMapping("flatWorldTitle", GuiCreateFlatWorld.class, "field_146393_h");
addMapping("materialText", GuiCreateFlatWorld.class, "field_146394_i");
addMapping("btnMapType", GuiCreateWorld.class, "field_146320_D");
addMapping("btnAllowCommands", GuiCreateWorld.class, "field_146321_E");
addMapping("btnCustomizeType", GuiCreateWorld.class, "field_146322_F");
addMapping("gameModeDesc1", GuiCreateWorld.class, "field_146323_G");
addMapping("btnMoreOptions", GuiCreateWorld.class, "field_146324_A");
addMapping("btnMapFeatures", GuiCreateWorld.class, "field_146325_B");
addMapping("btnBonusItems", GuiCreateWorld.class, "field_146326_C");
addMapping("DISALLOWED_FILENAMES", GuiCreateWorld.class, "field_146327_L");
addMapping("gameModeDesc2", GuiCreateWorld.class, "field_146328_H");
addMapping("worldSeed", GuiCreateWorld.class, "field_146329_I");
addMapping("worldName", GuiCreateWorld.class, "field_146330_J");
addMapping("selectedIndex", GuiCreateWorld.class, "field_146331_K");
addMapping("parentScreen", GuiCreateWorld.class, "field_146332_f");
addMapping("worldNameField", GuiCreateWorld.class, "field_146333_g");
addMapping("chunkProviderSettingsJson", GuiCreateWorld.class, "field_146334_a");
addMapping("worldSeedField", GuiCreateWorld.class, "field_146335_h");
addMapping("saveDirName", GuiCreateWorld.class, "field_146336_i");
addMapping("hardCoreMode", GuiCreateWorld.class, "field_146337_w");
addMapping("bonusChestEnabled", GuiCreateWorld.class, "field_146338_v");
addMapping("allowCheatsWasSetByUser", GuiCreateWorld.class, "field_146339_u");
addMapping("allowCheats", GuiCreateWorld.class, "field_146340_t");
addMapping("generateStructuresEnabled", GuiCreateWorld.class, "field_146341_s");
addMapping("gameMode", GuiCreateWorld.class, "field_146342_r");
addMapping("btnGameMode", GuiCreateWorld.class, "field_146343_z");
addMapping("inMoreWorldOptionsDisplay", GuiCreateWorld.class, "field_146344_y");
addMapping("alreadyGenerated", GuiCreateWorld.class, "field_146345_x");
addMapping("savedGameMode", GuiCreateWorld.class, "field_175300_s");
addMapping("title", GuiCustomizeSkin.class, "field_175360_f");
addMapping("parentScreen", GuiCustomizeSkin.class, "field_175361_a");
addMapping("numberFilter", GuiCustomizeWorldScreen.class, "field_175332_D");
addMapping("subtitle", GuiCustomizeWorldScreen.class, "field_175333_f");
addMapping("defaultSettings", GuiCustomizeWorldScreen.class, "field_175334_E");
addMapping("pageTitle", GuiCustomizeWorldScreen.class, "field_175335_g");
addMapping("settings", GuiCustomizeWorldScreen.class, "field_175336_F");
addMapping("random", GuiCustomizeWorldScreen.class, "field_175337_G");
addMapping("settingsModified", GuiCustomizeWorldScreen.class, "field_175338_A");
addMapping("confirmMode", GuiCustomizeWorldScreen.class, "field_175339_B");
addMapping("confirmDismissed", GuiCustomizeWorldScreen.class, "field_175340_C");
addMapping("title", GuiCustomizeWorldScreen.class, "field_175341_a");
addMapping("pageNames", GuiCustomizeWorldScreen.class, "field_175342_h");
addMapping("parent", GuiCustomizeWorldScreen.class, "field_175343_i");
addMapping("nextPage", GuiCustomizeWorldScreen.class, "field_175344_w");
addMapping("previousPage", GuiCustomizeWorldScreen.class, "field_175345_v");
addMapping("defaults", GuiCustomizeWorldScreen.class, "field_175346_u");
addMapping("randomize", GuiCustomizeWorldScreen.class, "field_175347_t");
addMapping("done", GuiCustomizeWorldScreen.class, "field_175348_s");
addMapping("list", GuiCustomizeWorldScreen.class, "field_175349_r");
addMapping("presets", GuiCustomizeWorldScreen.class, "field_175350_z");
addMapping("cancel", GuiCustomizeWorldScreen.class, "field_175351_y");
addMapping("confirm", GuiCustomizeWorldScreen.class, "field_175352_x");
addMapping("message", GuiDisconnected.class, "field_146304_f");
addMapping("multilineMessage", GuiDisconnected.class, "field_146305_g");
addMapping("reason", GuiDisconnected.class, "field_146306_a");
addMapping("parentScreen", GuiDisconnected.class, "field_146307_h");
addMapping("textHeight", GuiDisconnected.class, "field_175353_i");
addMapping("progress", GuiDownloadTerrain.class, "field_146593_f");
addMapping("connection", GuiDownloadTerrain.class, "field_146594_a");
addMapping("oFlip", GuiEnchantment.class, "field_147069_w");
addMapping("ENCHANTMENT_TABLE_BOOK_TEXTURE", GuiEnchantment.class, "field_147070_D");
addMapping("flip", GuiEnchantment.class, "field_147071_v");
addMapping("MODEL_BOOK", GuiEnchantment.class, "field_147072_E");
addMapping("ticks", GuiEnchantment.class, "field_147073_u");
addMapping("random", GuiEnchantment.class, "field_147074_F");
addMapping("container", GuiEnchantment.class, "field_147075_G");
addMapping("oOpen", GuiEnchantment.class, "field_147076_A");
addMapping("last", GuiEnchantment.class, "field_147077_B");
addMapping("ENCHANTMENT_TABLE_GUI_TEXTURE", GuiEnchantment.class, "field_147078_C");
addMapping("open", GuiEnchantment.class, "field_147080_z");
addMapping("flipA", GuiEnchantment.class, "field_147081_y");
addMapping("flipT", GuiEnchantment.class, "field_147082_x");
addMapping("playerInventory", GuiEnchantment.class, "field_175379_F");
addMapping("nameable", GuiEnchantment.class, "field_175380_I");
addMapping("message", GuiErrorScreen.class, "field_146312_f");
addMapping("title", GuiErrorScreen.class, "field_146313_a");
addMapping("FLAT_WORLD_PRESETS", GuiFlatPresets.class, "field_146431_f");
addMapping("parentScreen", GuiFlatPresets.class, "field_146432_g");
addMapping("export", GuiFlatPresets.class, "field_146433_u");
addMapping("btnSelect", GuiFlatPresets.class, "field_146434_t");
addMapping("list", GuiFlatPresets.class, "field_146435_s");
addMapping("listText", GuiFlatPresets.class, "field_146436_r");
addMapping("presetsTitle", GuiFlatPresets.class, "field_146438_h");
addMapping("presetsShare", GuiFlatPresets.class, "field_146439_i");
addMapping("enableButtonsTimer", GuiGameOver.class, "field_146347_a");
addMapping("causeOfDeath", GuiGameOver.class, "field_184871_f");
addMapping("hopperInventory", GuiHopper.class, "field_147083_w");
addMapping("playerInventory", GuiHopper.class, "field_147084_v");
addMapping("HOPPER_GUI_TEXTURE", GuiHopper.class, "field_147085_u");
addMapping("PUMPKIN_BLUR_TEX_PATH", GuiIngame.class, "field_110328_d");
addMapping("VIGNETTE_TEX_PATH", GuiIngame.class, "field_110329_b");
addMapping("WIDGETS_TEX_PATH", GuiIngame.class, "field_110330_c");
addMapping("lastPlayerHealth", GuiIngame.class, "field_175189_D");
addMapping("lastSystemTime", GuiIngame.class, "field_175190_E");
addMapping("healthUpdateCounter", GuiIngame.class, "field_175191_F");
addMapping("titleDisplayTime", GuiIngame.class, "field_175192_A");
addMapping("titleFadeOut", GuiIngame.class, "field_175193_B");
addMapping("playerHealth", GuiIngame.class, "field_175194_C");
addMapping("titlesTimer", GuiIngame.class, "field_175195_w");
addMapping("overlayPlayerList", GuiIngame.class, "field_175196_v");
addMapping("spectatorGui", GuiIngame.class, "field_175197_u");
addMapping("overlayDebug", GuiIngame.class, "field_175198_t");
addMapping("titleFadeIn", GuiIngame.class, "field_175199_z");
addMapping("displayedSubTitle", GuiIngame.class, "field_175200_y");
addMapping("displayedTitle", GuiIngame.class, "field_175201_x");
addMapping("overlaySubtitle", GuiIngame.class, "field_184049_t");
addMapping("overlayBoss", GuiIngame.class, "field_184050_w");
addMapping("chatListeners", GuiIngame.class, "field_191743_I");
addMapping("updateCounter", GuiIngame.class, "field_73837_f");
addMapping("overlayMessage", GuiIngame.class, "field_73838_g");
addMapping("mc", GuiIngame.class, "field_73839_d");
addMapping("persistantChatGUI", GuiIngame.class, "field_73840_e");
addMapping("itemRenderer", GuiIngame.class, "field_73841_b");
addMapping("rand", GuiIngame.class, "field_73842_c");
addMapping("prevVignetteBrightness", GuiIngame.class, "field_73843_a");
addMapping("animateOverlayMessageColor", GuiIngame.class, "field_73844_j");
addMapping("overlayMessageTime", GuiIngame.class, "field_73845_h");
addMapping("highlightingItemStack", GuiIngame.class, "field_92016_l");
addMapping("remainingHighlightTicks", GuiIngame.class, "field_92017_k");
addMapping("visibleTime", GuiIngameMenu.class, "field_146444_f");
addMapping("saveStep", GuiIngameMenu.class, "field_146445_a");
addMapping("maxListLabelWidth", GuiKeyBindingList.class, "field_148188_n");
addMapping("mc", GuiKeyBindingList.class, "field_148189_l");
addMapping("listEntries", GuiKeyBindingList.class, "field_148190_m");
addMapping("controlsScreen", GuiKeyBindingList.class, "field_148191_k");
addMapping("height", GuiLabel.class, "field_146161_f");
addMapping("x", GuiLabel.class, "field_146162_g");
addMapping("border", GuiLabel.class, "field_146163_s");
addMapping("fontRenderer", GuiLabel.class, "field_146164_r");
addMapping("brColor", GuiLabel.class, "field_146165_q");
addMapping("ulColor", GuiLabel.class, "field_146166_p");
addMapping("width", GuiLabel.class, "field_146167_a");
addMapping("textColor", GuiLabel.class, "field_146168_n");
addMapping("backColor", GuiLabel.class, "field_146169_o");
addMapping("centered", GuiLabel.class, "field_146170_l");
addMapping("labelBgEnabled", GuiLabel.class, "field_146171_m");
addMapping("visible", GuiLabel.class, "field_146172_j");
addMapping("labels", GuiLabel.class, "field_146173_k");
addMapping("y", GuiLabel.class, "field_146174_h");
addMapping("id", GuiLabel.class, "field_175204_i");
addMapping("list", GuiLanguage.class, "field_146450_f");
addMapping("game_settings_3", GuiLanguage.class, "field_146451_g");
addMapping("confirmSettingsBtn", GuiLanguage.class, "field_146452_r");
addMapping("parentScreen", GuiLanguage.class, "field_146453_a");
addMapping("languageManager", GuiLanguage.class, "field_146454_h");
addMapping("forceUnicodeFontBtn", GuiLanguage.class, "field_146455_i");
addMapping("guiResponder", GuiListButton.class, "field_175214_q");
addMapping("localizationStr", GuiListButton.class, "field_175215_p");
addMapping("value", GuiListButton.class, "field_175216_o");
addMapping("LOGGER", GuiListWorldSelection.class, "field_186797_u");
addMapping("worldSelection", GuiListWorldSelection.class, "field_186798_v");
addMapping("entries", GuiListWorldSelection.class, "field_186799_w");
addMapping("selectedIdx", GuiListWorldSelection.class, "field_186800_x");
addMapping("LOGGER", GuiListWorldSelectionEntry.class, "field_186780_a");
addMapping("DATE_FORMAT", GuiListWorldSelectionEntry.class, "field_186781_b");
addMapping("ICON_MISSING", GuiListWorldSelectionEntry.class, "field_186782_c");
addMapping("ICON_OVERLAY_LOCATION", GuiListWorldSelectionEntry.class, "field_186783_d");
addMapping("client", GuiListWorldSelectionEntry.class, "field_186784_e");
addMapping("worldSelScreen", GuiListWorldSelectionEntry.class, "field_186785_f");
addMapping("worldSummary", GuiListWorldSelectionEntry.class, "field_186786_g");
addMapping("iconLocation", GuiListWorldSelectionEntry.class, "field_186787_h");
addMapping("containingListSel", GuiListWorldSelectionEntry.class, "field_186788_i");
addMapping("iconFile", GuiListWorldSelectionEntry.class, "field_186789_j");
addMapping("icon", GuiListWorldSelectionEntry.class, "field_186790_k");
addMapping("lastClickTime", GuiListWorldSelectionEntry.class, "field_186791_l");
addMapping("locked", GuiLockIconButton.class, "field_175231_o");
addMapping("openGLWarningLink", GuiMainMenu.class, "field_104024_v");
addMapping("threadLock", GuiMainMenu.class, "field_104025_t");
addMapping("backgroundTexture", GuiMainMenu.class, "field_110351_G");
addMapping("MINECRAFT_TITLE_TEXTURES", GuiMainMenu.class, "field_110352_y");
addMapping("SPLASH_TEXTS", GuiMainMenu.class, "field_110353_x");
addMapping("openGLWarning2", GuiMainMenu.class, "field_146972_A");
addMapping("LOGGER", GuiMainMenu.class, "field_146974_g");
addMapping("realmsButton", GuiMainMenu.class, "field_175372_K");
addMapping("RANDOM", GuiMainMenu.class, "field_175374_h");
addMapping("hasCheckedForRealmsNotification", GuiMainMenu.class, "field_183502_L");
addMapping("realmsNotification", GuiMainMenu.class, "field_183503_M");
addMapping("widthCopyright", GuiMainMenu.class, "field_193978_M");
addMapping("widthCopyrightRest", GuiMainMenu.class, "field_193979_N");
addMapping("buttonResetDemo", GuiMainMenu.class, "field_73973_d");
addMapping("minceraftRoll", GuiMainMenu.class, "field_73974_b");
addMapping("splashText", GuiMainMenu.class, "field_73975_c");
addMapping("viewportTexture", GuiMainMenu.class, "field_73977_n");
addMapping("TITLE_PANORAMA_PATHS", GuiMainMenu.class, "field_73978_o");
addMapping("panoramaTimer", GuiMainMenu.class, "field_73979_m");
addMapping("openGLWarningY2", GuiMainMenu.class, "field_92019_w");
addMapping("openGLWarningX2", GuiMainMenu.class, "field_92020_v");
addMapping("openGLWarningY1", GuiMainMenu.class, "field_92021_u");
addMapping("openGLWarningX1", GuiMainMenu.class, "field_92022_t");
addMapping("openGLWarning1Width", GuiMainMenu.class, "field_92023_s");
addMapping("openGLWarning2Width", GuiMainMenu.class, "field_92024_r");
addMapping("openGLWarning1", GuiMainMenu.class, "field_92025_p");
addMapping("MORE_INFO_TEXT", GuiMainMenu.class, "field_96138_a");
addMapping("merchant", GuiMerchant.class, "field_147037_w");
addMapping("MERCHANT_GUI_TEXTURE", GuiMerchant.class, "field_147038_v");
addMapping("LOGGER", GuiMerchant.class, "field_147039_u");
addMapping("chatComponent", GuiMerchant.class, "field_147040_A");
addMapping("selectedMerchantRecipe", GuiMerchant.class, "field_147041_z");
addMapping("previousButton", GuiMerchant.class, "field_147042_y");
addMapping("nextButton", GuiMerchant.class, "field_147043_x");
addMapping("oldServerPinger", GuiMultiplayer.class, "field_146797_f");
addMapping("parentScreen", GuiMultiplayer.class, "field_146798_g");
addMapping("lanServerList", GuiMultiplayer.class, "field_146799_A");
addMapping("lanServerDetector", GuiMultiplayer.class, "field_146800_B");
addMapping("initialized", GuiMultiplayer.class, "field_146801_C");
addMapping("LOGGER", GuiMultiplayer.class, "field_146802_a");
addMapping("serverListSelector", GuiMultiplayer.class, "field_146803_h");
addMapping("savedServerList", GuiMultiplayer.class, "field_146804_i");
addMapping("editingServer", GuiMultiplayer.class, "field_146805_w");
addMapping("addingServer", GuiMultiplayer.class, "field_146806_v");
addMapping("deletingServer", GuiMultiplayer.class, "field_146807_u");
addMapping("btnDeleteServer", GuiMultiplayer.class, "field_146808_t");
addMapping("btnSelectServer", GuiMultiplayer.class, "field_146809_s");
addMapping("btnEditServer", GuiMultiplayer.class, "field_146810_r");
addMapping("selectedServer", GuiMultiplayer.class, "field_146811_z");
addMapping("hoveringText", GuiMultiplayer.class, "field_146812_y");
addMapping("directConnect", GuiMultiplayer.class, "field_146813_x");
addMapping("mc", GuiNewChat.class, "field_146247_f");
addMapping("sentMessages", GuiNewChat.class, "field_146248_g");
addMapping("LOGGER", GuiNewChat.class, "field_146249_a");
addMapping("scrollPos", GuiNewChat.class, "field_146250_j");
addMapping("isScrolled", GuiNewChat.class, "field_146251_k");
addMapping("chatLines", GuiNewChat.class, "field_146252_h");
addMapping("drawnChatLines", GuiNewChat.class, "field_146253_i");
addMapping("enumOptions", GuiOptionButton.class, "field_146137_o");
addMapping("maxValue", GuiOptionSlider.class, "field_146131_s");
addMapping("minValue", GuiOptionSlider.class, "field_146132_r");
addMapping("options", GuiOptionSlider.class, "field_146133_q");
addMapping("sliderValue", GuiOptionSlider.class, "field_146134_p");
addMapping("dragging", GuiOptionSlider.class, "field_146135_o");
addMapping("SCREEN_OPTIONS", GuiOptions.class, "field_146440_f");
addMapping("lastScreen", GuiOptions.class, "field_146441_g");
addMapping("title", GuiOptions.class, "field_146442_a");
addMapping("settings", GuiOptions.class, "field_146443_h");
addMapping("lockButton", GuiOptions.class, "field_175356_r");
addMapping("difficultyButton", GuiOptions.class, "field_175357_i");
addMapping("options", GuiOptionsRowList.class, "field_148184_k");
addMapping("fontRenderer", GuiOverlayDebug.class, "field_175241_f");
addMapping("mc", GuiOverlayDebug.class, "field_175242_a");
addMapping("editBoxes", GuiPageButtonList.class, "field_178072_w");
addMapping("componentMap", GuiPageButtonList.class, "field_178073_v");
addMapping("entries", GuiPageButtonList.class, "field_178074_u");
addMapping("focusedControl", GuiPageButtonList.class, "field_178075_A");
addMapping("responder", GuiPageButtonList.class, "field_178076_z");
addMapping("page", GuiPageButtonList.class, "field_178077_y");
addMapping("pages", GuiPageButtonList.class, "field_178078_x");
addMapping("mc", GuiPlayerTabOverlay.class, "field_175250_f");
addMapping("guiIngame", GuiPlayerTabOverlay.class, "field_175251_g");
addMapping("ENTRY_ORDERING", GuiPlayerTabOverlay.class, "field_175252_a");
addMapping("lastTimeOpened", GuiPlayerTabOverlay.class, "field_175253_j");
addMapping("isBeingRendered", GuiPlayerTabOverlay.class, "field_175254_k");
addMapping("footer", GuiPlayerTabOverlay.class, "field_175255_h");
addMapping("header", GuiPlayerTabOverlay.class, "field_175256_i");
addMapping("nameField", GuiRepair.class, "field_147091_w");
addMapping("anvil", GuiRepair.class, "field_147092_v");
addMapping("ANVIL_RESOURCE", GuiRepair.class, "field_147093_u");
addMapping("playerInventory", GuiRepair.class, "field_147094_x");
addMapping("resourcePackEntries", GuiResourcePackList.class, "field_148204_l");
addMapping("mc", GuiResourcePackList.class, "field_148205_k");
addMapping("eventButton", GuiScreen.class, "field_146287_f");
addMapping("lastMouseEvent", GuiScreen.class, "field_146288_g");
addMapping("fontRenderer", GuiScreen.class, "field_146289_q");
addMapping("selectedButton", GuiScreen.class, "field_146290_a");
addMapping("allowUserInput", GuiScreen.class, "field_146291_p");
addMapping("buttonList", GuiScreen.class, "field_146292_n");
addMapping("labelList", GuiScreen.class, "field_146293_o");
addMapping("width", GuiScreen.class, "field_146294_l");
addMapping("height", GuiScreen.class, "field_146295_m");
addMapping("itemRender", GuiScreen.class, "field_146296_j");
addMapping("mc", GuiScreen.class, "field_146297_k");
addMapping("touchValue", GuiScreen.class, "field_146298_h");
addMapping("PROTOCOLS", GuiScreen.class, "field_175284_f");
addMapping("NEWLINE_SPLITTER", GuiScreen.class, "field_175285_g");
addMapping("clickedLinkURI", GuiScreen.class, "field_175286_t");
addMapping("LOGGER", GuiScreen.class, "field_175287_a");
addMapping("focused", GuiScreen.class, "field_193977_u");
addMapping("serverIPField", GuiScreenAddServer.class, "field_146308_f");
addMapping("serverNameField", GuiScreenAddServer.class, "field_146309_g");
addMapping("parentScreen", GuiScreenAddServer.class, "field_146310_a");
addMapping("serverData", GuiScreenAddServer.class, "field_146311_h");
addMapping("serverResourcePacks", GuiScreenAddServer.class, "field_152176_i");
addMapping("addressFilter", GuiScreenAddServer.class, "field_181032_r");
addMapping("buttonSign", GuiScreenBook.class, "field_146465_D");
addMapping("BOOK_GUI_TEXTURES", GuiScreenBook.class, "field_146466_f");
addMapping("buttonFinalize", GuiScreenBook.class, "field_146467_E");
addMapping("editingPlayer", GuiScreenBook.class, "field_146468_g");
addMapping("buttonCancel", GuiScreenBook.class, "field_146469_F");
addMapping("buttonNextPage", GuiScreenBook.class, "field_146470_A");
addMapping("buttonPreviousPage", GuiScreenBook.class, "field_146471_B");
addMapping("buttonDone", GuiScreenBook.class, "field_146472_C");
addMapping("LOGGER", GuiScreenBook.class, "field_146473_a");
addMapping("book", GuiScreenBook.class, "field_146474_h");
addMapping("bookIsUnsigned", GuiScreenBook.class, "field_146475_i");
addMapping("bookTotalPages", GuiScreenBook.class, "field_146476_w");
addMapping("bookImageHeight", GuiScreenBook.class, "field_146477_v");
addMapping("bookImageWidth", GuiScreenBook.class, "field_146478_u");
addMapping("updateCount", GuiScreenBook.class, "field_146479_t");
addMapping("bookGettingSigned", GuiScreenBook.class, "field_146480_s");
addMapping("bookIsModified", GuiScreenBook.class, "field_146481_r");
addMapping("bookTitle", GuiScreenBook.class, "field_146482_z");
addMapping("bookPages", GuiScreenBook.class, "field_146483_y");
addMapping("currPage", GuiScreenBook.class, "field_146484_x");
addMapping("cachedComponents", GuiScreenBook.class, "field_175386_A");
addMapping("cachedPage", GuiScreenBook.class, "field_175387_B");
addMapping("PRESETS", GuiScreenCustomizePresets.class, "field_175310_f");
addMapping("list", GuiScreenCustomizePresets.class, "field_175311_g");
addMapping("listText", GuiScreenCustomizePresets.class, "field_175312_t");
addMapping("shareText", GuiScreenCustomizePresets.class, "field_175313_s");
addMapping("parent", GuiScreenCustomizePresets.class, "field_175314_r");
addMapping("title", GuiScreenCustomizePresets.class, "field_175315_a");
addMapping("select", GuiScreenCustomizePresets.class, "field_175316_h");
addMapping("export", GuiScreenCustomizePresets.class, "field_175317_i");
addMapping("DEMO_BACKGROUND_LOCATION", GuiScreenDemo.class, "field_146348_f");
addMapping("LOGGER", GuiScreenDemo.class, "field_146349_a");
addMapping("parent", GuiScreenOptionsSounds.class, "field_146505_f");
addMapping("game_settings_4", GuiScreenOptionsSounds.class, "field_146506_g");
addMapping("title", GuiScreenOptionsSounds.class, "field_146507_a");
addMapping("offDisplayString", GuiScreenOptionsSounds.class, "field_146508_h");
addMapping("proxy", GuiScreenRealmsProxy.class, "field_154330_a");
addMapping("parentScreen", GuiScreenResourcePacks.class, "field_146965_f");
addMapping("availableResourcePacks", GuiScreenResourcePacks.class, "field_146966_g");
addMapping("selectedResourcePacksList", GuiScreenResourcePacks.class, "field_146967_r");
addMapping("selectedResourcePacks", GuiScreenResourcePacks.class, "field_146969_h");
addMapping("availableResourcePacksList", GuiScreenResourcePacks.class, "field_146970_i");
addMapping("changed", GuiScreenResourcePacks.class, "field_175289_s");
addMapping("serverData", GuiScreenServerList.class, "field_146301_f");
addMapping("ipEdit", GuiScreenServerList.class, "field_146302_g");
addMapping("lastScreen", GuiScreenServerList.class, "field_146303_a");
addMapping("stage", GuiScreenWorking.class, "field_146589_f");
addMapping("progress", GuiScreenWorking.class, "field_146590_g");
addMapping("title", GuiScreenWorking.class, "field_146591_a");
addMapping("doneWorking", GuiScreenWorking.class, "field_146592_h");
addMapping("allowCheatsButton", GuiShareToLan.class, "field_146596_f");
addMapping("gameModeButton", GuiShareToLan.class, "field_146597_g");
addMapping("lastScreen", GuiShareToLan.class, "field_146598_a");
addMapping("gameMode", GuiShareToLan.class, "field_146599_h");
addMapping("allowCheats", GuiShareToLan.class, "field_146600_i");
addMapping("realmsScrolledSelectionList", GuiSimpleScrolledSelectionListProxy.class, "field_178050_u");
addMapping("formatHelper", GuiSlider.class, "field_175222_u");
addMapping("responder", GuiSlider.class, "field_175223_t");
addMapping("max", GuiSlider.class, "field_175224_s");
addMapping("min", GuiSlider.class, "field_175225_r");
addMapping("name", GuiSlider.class, "field_175226_q");
addMapping("sliderPosition", GuiSlider.class, "field_175227_p");
addMapping("isMouseDown", GuiSlider.class, "field_175228_o");
addMapping("slotHeight", GuiSlot.class, "field_148149_f");
addMapping("mouseX", GuiSlot.class, "field_148150_g");
addMapping("right", GuiSlot.class, "field_148151_d");
addMapping("left", GuiSlot.class, "field_148152_e");
addMapping("top", GuiSlot.class, "field_148153_b");
addMapping("bottom", GuiSlot.class, "field_148154_c");
addMapping("width", GuiSlot.class, "field_148155_a");
addMapping("scrollDownButtonID", GuiSlot.class, "field_148156_n");
addMapping("initialClickY", GuiSlot.class, "field_148157_o");
addMapping("height", GuiSlot.class, "field_148158_l");
addMapping("scrollUpButtonID", GuiSlot.class, "field_148159_m");
addMapping("headerPadding", GuiSlot.class, "field_148160_j");
addMapping("mc", GuiSlot.class, "field_148161_k");
addMapping("mouseY", GuiSlot.class, "field_148162_h");
addMapping("centerListVertically", GuiSlot.class, "field_148163_i");
addMapping("enabled", GuiSlot.class, "field_148164_v");
addMapping("hasListHeader", GuiSlot.class, "field_148165_u");
addMapping("showSelectionBox", GuiSlot.class, "field_148166_t");
addMapping("lastClicked", GuiSlot.class, "field_148167_s");
addMapping("selectedElement", GuiSlot.class, "field_148168_r");
addMapping("amountScrolled", GuiSlot.class, "field_148169_q");
addMapping("scrollMultiplier", GuiSlot.class, "field_148170_p");
addMapping("visible", GuiSlot.class, "field_178041_q");
addMapping("selectionList", GuiSlotRealmsProxy.class, "field_154340_k");
addMapping("game_settings_2", GuiSnooper.class, "field_146603_f");
addMapping("keys", GuiSnooper.class, "field_146604_g");
addMapping("toggleButton", GuiSnooper.class, "field_146605_t");
addMapping("list", GuiSnooper.class, "field_146606_s");
addMapping("desc", GuiSnooper.class, "field_146607_r");
addMapping("lastScreen", GuiSnooper.class, "field_146608_a");
addMapping("values", GuiSnooper.class, "field_146609_h");
addMapping("title", GuiSnooper.class, "field_146610_i");
addMapping("WIDGETS", GuiSpectator.class, "field_175267_f");
addMapping("mc", GuiSpectator.class, "field_175268_g");
addMapping("SPECTATOR_WIDGETS", GuiSpectator.class, "field_175269_a");
addMapping("lastSelectionTime", GuiSpectator.class, "field_175270_h");
addMapping("menu", GuiSpectator.class, "field_175271_i");
addMapping("client", GuiSubtitleOverlay.class, "field_184069_a");
addMapping("subtitles", GuiSubtitleOverlay.class, "field_184070_f");
addMapping("enabled", GuiSubtitleOverlay.class, "field_184071_g");
addMapping("x", GuiTextField.class, "field_146209_f");
addMapping("y", GuiTextField.class, "field_146210_g");
addMapping("fontRenderer", GuiTextField.class, "field_146211_a");
addMapping("canLoseFocus", GuiTextField.class, "field_146212_n");
addMapping("isFocused", GuiTextField.class, "field_146213_o");
addMapping("cursorCounter", GuiTextField.class, "field_146214_l");
addMapping("enableBackgroundDrawing", GuiTextField.class, "field_146215_m");
addMapping("text", GuiTextField.class, "field_146216_j");
addMapping("maxStringLength", GuiTextField.class, "field_146217_k");
addMapping("width", GuiTextField.class, "field_146218_h");
addMapping("height", GuiTextField.class, "field_146219_i");
addMapping("visible", GuiTextField.class, "field_146220_v");
addMapping("disabledColor", GuiTextField.class, "field_146221_u");
addMapping("enabledColor", GuiTextField.class, "field_146222_t");
addMapping("selectionEnd", GuiTextField.class, "field_146223_s");
addMapping("cursorPosition", GuiTextField.class, "field_146224_r");
addMapping("lineScrollOffset", GuiTextField.class, "field_146225_q");
addMapping("isEnabled", GuiTextField.class, "field_146226_p");
addMapping("id", GuiTextField.class, "field_175208_g");
addMapping("validator", GuiTextField.class, "field_175209_y");
addMapping("guiResponder", GuiTextField.class, "field_175210_x");
addMapping("parentGuiScreen", GuiVideoSettings.class, "field_146498_f");
addMapping("guiGameSettings", GuiVideoSettings.class, "field_146499_g");
addMapping("screenTitle", GuiVideoSettings.class, "field_146500_a");
addMapping("optionsRowList", GuiVideoSettings.class, "field_146501_h");
addMapping("VIDEO_OPTIONS", GuiVideoSettings.class, "field_146502_i");
addMapping("MINECRAFT_LOGO", GuiWinGame.class, "field_146576_f");
addMapping("VIGNETTE_TEXTURE", GuiWinGame.class, "field_146577_g");
addMapping("scrollSpeed", GuiWinGame.class, "field_146578_s");
addMapping("totalScrollLength", GuiWinGame.class, "field_146579_r");
addMapping("LOGGER", GuiWinGame.class, "field_146580_a");
addMapping("time", GuiWinGame.class, "field_146581_h");
addMapping("lines", GuiWinGame.class, "field_146582_i");
addMapping("poem", GuiWinGame.class, "field_193980_h");
addMapping("onFinished", GuiWinGame.class, "field_193981_i");
addMapping("lastScreen", GuiWorldEdit.class, "field_184858_a");
addMapping("nameEdit", GuiWorldEdit.class, "field_184859_f");
addMapping("worldId", GuiWorldEdit.class, "field_184860_g");
addMapping("renameButton", GuiWorldSelection.class, "field_146630_A");
addMapping("selectButton", GuiWorldSelection.class, "field_146641_z");
addMapping("deleteButton", GuiWorldSelection.class, "field_146642_y");
addMapping("prevScreen", GuiWorldSelection.class, "field_184864_a");
addMapping("copyButton", GuiWorldSelection.class, "field_184865_t");
addMapping("selectionList", GuiWorldSelection.class, "field_184866_u");
addMapping("title", GuiWorldSelection.class, "field_184867_f");
addMapping("LOGGER", GuiWorldSelection.class, "field_184868_g");
addMapping("worldVersTooltip", GuiWorldSelection.class, "field_184869_h");
addMapping("messageLine1", GuiYesNo.class, "field_146351_f");
addMapping("confirmButtonText", GuiYesNo.class, "field_146352_g");
addMapping("ticksUntilEnable", GuiYesNo.class, "field_146353_s");
addMapping("messageLine2", GuiYesNo.class, "field_146354_r");
addMapping("parentScreen", GuiYesNo.class, "field_146355_a");
addMapping("cancelButtonText", GuiYesNo.class, "field_146356_h");
addMapping("parentButtonClickedId", GuiYesNo.class, "field_146357_i");
addMapping("listLines", GuiYesNo.class, "field_175298_s");
addMapping("LOADING_STRINGS", IProgressMeter.class, "field_146510_b_");
addMapping("textureManager", MapItemRenderer.class, "field_148251_b");
addMapping("loadedMaps", MapItemRenderer.class, "field_148252_c");
addMapping("TEXTURE_MAP_ICONS", MapItemRenderer.class, "field_148253_a");
addMapping("scaledHeightD", ScaledResolution.class, "field_78329_d");
addMapping("scaleFactor", ScaledResolution.class, "field_78330_e");
addMapping("scaledHeight", ScaledResolution.class, "field_78331_b");
addMapping("scaledWidthD", ScaledResolution.class, "field_78332_c");
addMapping("scaledWidth", ScaledResolution.class, "field_78333_a");
addMapping("parentScreen", ScreenChatOptions.class, "field_146396_g");
addMapping("CHAT_OPTIONS", ScreenChatOptions.class, "field_146399_a");
addMapping("game_settings", ScreenChatOptions.class, "field_146400_h");
addMapping("chatTitle", ScreenChatOptions.class, "field_146401_i");
addMapping("narratorButton", ScreenChatOptions.class, "field_193025_i");
addMapping("lastClickTime", ServerListEntryLanDetected.class, "field_148290_d");
addMapping("serverData", ServerListEntryLanDetected.class, "field_148291_b");
addMapping("screen", ServerListEntryLanDetected.class, "field_148292_c");
addMapping("mc", ServerListEntryLanDetected.class, "field_148293_a");
addMapping("mc", ServerListEntryLanScan.class, "field_148288_a");
addMapping("lastClickTime", ServerListEntryNormal.class, "field_148298_f");
addMapping("lastIconB64", ServerListEntryNormal.class, "field_148299_g");
addMapping("mc", ServerListEntryNormal.class, "field_148300_d");
addMapping("server", ServerListEntryNormal.class, "field_148301_e");
addMapping("EXECUTOR", ServerListEntryNormal.class, "field_148302_b");
addMapping("owner", ServerListEntryNormal.class, "field_148303_c");
addMapping("LOGGER", ServerListEntryNormal.class, "field_148304_a");
addMapping("icon", ServerListEntryNormal.class, "field_148305_h");
addMapping("serverIcon", ServerListEntryNormal.class, "field_148306_i");
addMapping("SERVER_SELECTION_BUTTONS", ServerListEntryNormal.class, "field_178014_d");
addMapping("UNKNOWN_SERVER", ServerListEntryNormal.class, "field_178015_c");
addMapping("lanScanEntry", ServerSelectionList.class, "field_148196_n");
addMapping("selectedSlotIndex", ServerSelectionList.class, "field_148197_o");
addMapping("serverListInternet", ServerSelectionList.class, "field_148198_l");
addMapping("serverListLan", ServerSelectionList.class, "field_148199_m");
addMapping("owner", ServerSelectionList.class, "field_148200_k");
addMapping("screenTitle", GuiStats.class, "field_146542_f");
addMapping("doesGuiPauseGame", GuiStats.class, "field_146543_v");
addMapping("displaySlot", GuiStats.class, "field_146545_u");
addMapping("stats", GuiStats.class, "field_146546_t");
addMapping("mobStats", GuiStats.class, "field_146547_s");
addMapping("blockStats", GuiStats.class, "field_146548_r");
addMapping("parentScreen", GuiStats.class, "field_146549_a");
addMapping("generalStats", GuiStats.class, "field_146550_h");
addMapping("itemStats", GuiStats.class, "field_146551_i");
addMapping("id", AdvancementState.class, "field_192671_d");
addMapping("MAX_TABS", AdvancementTabType.class, "field_192659_e");
addMapping("textureX", AdvancementTabType.class, "field_192660_f");
addMapping("textureY", AdvancementTabType.class, "field_192661_g");
addMapping("width", AdvancementTabType.class, "field_192662_h");
addMapping("height", AdvancementTabType.class, "field_192663_i");
addMapping("max", AdvancementTabType.class, "field_192664_j");
addMapping("y", GuiAdvancement.class, "field_191826_p");
addMapping("WIDGETS", GuiAdvancement.class, "field_191827_a");
addMapping("guiAdvancementTab", GuiAdvancement.class, "field_191828_f");
addMapping("advancement", GuiAdvancement.class, "field_191829_g");
addMapping("displayInfo", GuiAdvancement.class, "field_191830_h");
addMapping("title", GuiAdvancement.class, "field_191831_i");
addMapping("width", GuiAdvancement.class, "field_191832_j");
addMapping("minecraft", GuiAdvancement.class, "field_191833_k");
addMapping("parent", GuiAdvancement.class, "field_191834_l");
addMapping("children", GuiAdvancement.class, "field_191835_m");
addMapping("advancementProgress", GuiAdvancement.class, "field_191836_n");
addMapping("x", GuiAdvancement.class, "field_191837_o");
addMapping("PATTERN", GuiAdvancement.class, "field_192996_f");
addMapping("description", GuiAdvancement.class, "field_192997_l");
addMapping("minecraft", GuiAdvancementTab.class, "field_191802_a");
addMapping("type", GuiAdvancementTab.class, "field_191803_f");
addMapping("index", GuiAdvancementTab.class, "field_191804_g");
addMapping("advancement", GuiAdvancementTab.class, "field_191805_h");
addMapping("display", GuiAdvancementTab.class, "field_191806_i");
addMapping("icon", GuiAdvancementTab.class, "field_191807_j");
addMapping("title", GuiAdvancementTab.class, "field_191808_k");
addMapping("root", GuiAdvancementTab.class, "field_191809_l");
addMapping("guis", GuiAdvancementTab.class, "field_191810_m");
addMapping("scrollX", GuiAdvancementTab.class, "field_191811_n");
addMapping("scrollY", GuiAdvancementTab.class, "field_191812_o");
addMapping("maxX", GuiAdvancementTab.class, "field_191813_p");
addMapping("maxY", GuiAdvancementTab.class, "field_191814_q");
addMapping("fade", GuiAdvancementTab.class, "field_191815_r");
addMapping("centered", GuiAdvancementTab.class, "field_192992_s");
addMapping("screen", GuiAdvancementTab.class, "field_193938_f");
addMapping("minX", GuiAdvancementTab.class, "field_193939_q");
addMapping("minY", GuiAdvancementTab.class, "field_193940_r");
addMapping("selectedTab", GuiScreenAdvancements.class, "field_191940_s");
addMapping("scrollMouseX", GuiScreenAdvancements.class, "field_191941_t");
addMapping("scrollMouseY", GuiScreenAdvancements.class, "field_191942_u");
addMapping("WINDOW", GuiScreenAdvancements.class, "field_191943_f");
addMapping("isScrolling", GuiScreenAdvancements.class, "field_191944_v");
addMapping("TABS", GuiScreenAdvancements.class, "field_191945_g");
addMapping("clientAdvancementManager", GuiScreenAdvancements.class, "field_191946_h");
addMapping("tabs", GuiScreenAdvancements.class, "field_191947_i");
addMapping("narrator", NarratorChatListener.class, "field_192580_a");
addMapping("INSTANCE", NarratorChatListener.class, "field_193643_a");
addMapping("mc", NormalChatListener.class, "field_192581_a");
addMapping("mc", OverlayChatListener.class, "field_192577_a");
addMapping("mc", CreativeCrafting.class, "field_146109_a");
addMapping("tileBeacon", GuiBeacon.class, "field_147024_w");
addMapping("BEACON_GUI_TEXTURES", GuiBeacon.class, "field_147025_v");
addMapping("LOGGER", GuiBeacon.class, "field_147026_u");
addMapping("buttonsNotDrawn", GuiBeacon.class, "field_147027_y");
addMapping("beaconConfirmButton", GuiBeacon.class, "field_147028_x");
addMapping("tileBrewingStand", GuiBrewingStand.class, "field_147013_v");
addMapping("BREWING_STAND_GUI_TEXTURES", GuiBrewingStand.class, "field_147014_u");
addMapping("playerInventory", GuiBrewingStand.class, "field_175384_v");
addMapping("BUBBLELENGTHS", GuiBrewingStand.class, "field_184857_v");
addMapping("lowerChestInventory", GuiChest.class, "field_147015_w");
addMapping("upperChestInventory", GuiChest.class, "field_147016_v");
addMapping("CHEST_GUI_TEXTURE", GuiChest.class, "field_147017_u");
addMapping("inventoryRows", GuiChest.class, "field_147018_x");
addMapping("currentDragTargetSlot", GuiContainer.class, "field_146985_D");
addMapping("dragItemDropDelay", GuiContainer.class, "field_146986_E");
addMapping("dragSplittingLimit", GuiContainer.class, "field_146987_F");
addMapping("dragSplittingButton", GuiContainer.class, "field_146988_G");
addMapping("returningStackDestSlot", GuiContainer.class, "field_146989_A");
addMapping("returningStackTime", GuiContainer.class, "field_146990_B");
addMapping("returningStack", GuiContainer.class, "field_146991_C");
addMapping("lastClickButton", GuiContainer.class, "field_146992_L");
addMapping("doubleClick", GuiContainer.class, "field_146993_M");
addMapping("shiftClickedSlot", GuiContainer.class, "field_146994_N");
addMapping("ignoreMouseUp", GuiContainer.class, "field_146995_H");
addMapping("dragSplittingRemnant", GuiContainer.class, "field_146996_I");
addMapping("lastClickTime", GuiContainer.class, "field_146997_J");
addMapping("lastClickSlot", GuiContainer.class, "field_146998_K");
addMapping("xSize", GuiContainer.class, "field_146999_f");
addMapping("ySize", GuiContainer.class, "field_147000_g");
addMapping("INVENTORY_BACKGROUND", GuiContainer.class, "field_147001_a");
addMapping("inventorySlots", GuiContainer.class, "field_147002_h");
addMapping("guiLeft", GuiContainer.class, "field_147003_i");
addMapping("isRightMouseClick", GuiContainer.class, "field_147004_w");
addMapping("clickedSlot", GuiContainer.class, "field_147005_v");
addMapping("hoveredSlot", GuiContainer.class, "field_147006_u");
addMapping("dragSplitting", GuiContainer.class, "field_147007_t");
addMapping("dragSplittingSlots", GuiContainer.class, "field_147008_s");
addMapping("guiTop", GuiContainer.class, "field_147009_r");
addMapping("touchUpY", GuiContainer.class, "field_147010_z");
addMapping("touchUpX", GuiContainer.class, "field_147011_y");
addMapping("draggedStack", GuiContainer.class, "field_147012_x");
addMapping("clearSearch", GuiContainerCreative.class, "field_147057_D");
addMapping("selectedTabIndex", GuiContainerCreative.class, "field_147058_w");
addMapping("listener", GuiContainerCreative.class, "field_147059_E");
addMapping("basicInventory", GuiContainerCreative.class, "field_147060_v");
addMapping("CREATIVE_INVENTORY_TABS", GuiContainerCreative.class, "field_147061_u");
addMapping("searchField", GuiContainerCreative.class, "field_147062_A");
addMapping("originalSlots", GuiContainerCreative.class, "field_147063_B");
addMapping("destroyItemSlot", GuiContainerCreative.class, "field_147064_C");
addMapping("wasClicking", GuiContainerCreative.class, "field_147065_z");
addMapping("isScrolling", GuiContainerCreative.class, "field_147066_y");
addMapping("currentScroll", GuiContainerCreative.class, "field_147067_x");
addMapping("CRAFTING_TABLE_GUI_TEXTURES", GuiCrafting.class, "field_147019_u");
addMapping("recipeButton", GuiCrafting.class, "field_192049_w");
addMapping("recipeBookGui", GuiCrafting.class, "field_192050_x");
addMapping("widthTooNarrow", GuiCrafting.class, "field_193112_y");
addMapping("DISPENSER_GUI_TEXTURES", GuiDispenser.class, "field_147088_v");
addMapping("playerInventory", GuiDispenser.class, "field_175376_w");
addMapping("dispenserInventory", GuiDispenser.class, "field_175377_u");
addMapping("commandField", GuiEditCommandBlockMinecart.class, "field_184088_a");
addMapping("outputButton", GuiEditCommandBlockMinecart.class, "field_184089_r");
addMapping("trackOutput", GuiEditCommandBlockMinecart.class, "field_184090_s");
addMapping("tabCompleter", GuiEditCommandBlockMinecart.class, "field_184091_t");
addMapping("previousEdit", GuiEditCommandBlockMinecart.class, "field_184092_f");
addMapping("commandBlockLogic", GuiEditCommandBlockMinecart.class, "field_184093_g");
addMapping("doneButton", GuiEditCommandBlockMinecart.class, "field_184094_h");
addMapping("cancelButton", GuiEditCommandBlockMinecart.class, "field_184095_i");
addMapping("tileSign", GuiEditSign.class, "field_146848_f");
addMapping("updateCounter", GuiEditSign.class, "field_146849_g");
addMapping("editLine", GuiEditSign.class, "field_146851_h");
addMapping("doneBtn", GuiEditSign.class, "field_146852_i");
addMapping("sizeZEdit", GuiEditStructure.class, "field_189825_A");
addMapping("integrityEdit", GuiEditStructure.class, "field_189826_B");
addMapping("seedEdit", GuiEditStructure.class, "field_189827_C");
addMapping("dataEdit", GuiEditStructure.class, "field_189828_D");
addMapping("doneButton", GuiEditStructure.class, "field_189829_E");
addMapping("cancelButton", GuiEditStructure.class, "field_189830_F");
addMapping("saveButton", GuiEditStructure.class, "field_189831_G");
addMapping("loadButton", GuiEditStructure.class, "field_189832_H");
addMapping("rotateZeroDegreesButton", GuiEditStructure.class, "field_189833_I");
addMapping("rotateNinetyDegreesButton", GuiEditStructure.class, "field_189834_J");
addMapping("rotate180DegreesButton", GuiEditStructure.class, "field_189835_K");
addMapping("rotate270DegressButton", GuiEditStructure.class, "field_189836_L");
addMapping("modeButton", GuiEditStructure.class, "field_189837_M");
addMapping("detectSizeButton", GuiEditStructure.class, "field_189838_N");
addMapping("showEntitiesButton", GuiEditStructure.class, "field_189839_O");
addMapping("mirrorButton", GuiEditStructure.class, "field_189840_P");
addMapping("showAirButton", GuiEditStructure.class, "field_189841_Q");
addMapping("showBoundingBoxButton", GuiEditStructure.class, "field_189842_R");
addMapping("tabOrder", GuiEditStructure.class, "field_189843_S");
addMapping("decimalFormat", GuiEditStructure.class, "field_189844_T");
addMapping("LOGGER", GuiEditStructure.class, "field_189845_a");
addMapping("tileStructure", GuiEditStructure.class, "field_189846_f");
addMapping("mirror", GuiEditStructure.class, "field_189847_g");
addMapping("rotation", GuiEditStructure.class, "field_189848_h");
addMapping("mode", GuiEditStructure.class, "field_189849_i");
addMapping("ignoreEntities", GuiEditStructure.class, "field_189850_r");
addMapping("showAir", GuiEditStructure.class, "field_189851_s");
addMapping("showBoundingBox", GuiEditStructure.class, "field_189852_t");
addMapping("nameEdit", GuiEditStructure.class, "field_189853_u");
addMapping("posXEdit", GuiEditStructure.class, "field_189854_v");
addMapping("posYEdit", GuiEditStructure.class, "field_189855_w");
addMapping("posZEdit", GuiEditStructure.class, "field_189856_x");
addMapping("sizeXEdit", GuiEditStructure.class, "field_189857_y");
addMapping("sizeYEdit", GuiEditStructure.class, "field_189858_z");
addMapping("LEGAL_KEY_CODES", GuiEditStructure.class, "field_190302_a");
addMapping("tileFurnace", GuiFurnace.class, "field_147086_v");
addMapping("FURNACE_GUI_TEXTURES", GuiFurnace.class, "field_147087_u");
addMapping("playerInventory", GuiFurnace.class, "field_175383_v");
addMapping("oldMouseY", GuiInventory.class, "field_147047_v");
addMapping("oldMouseX", GuiInventory.class, "field_147048_u");
addMapping("recipeBookGui", GuiInventory.class, "field_192045_A");
addMapping("widthTooNarrow", GuiInventory.class, "field_192046_B");
addMapping("recipeButton", GuiInventory.class, "field_192048_z");
addMapping("buttonClicked", GuiInventory.class, "field_194031_B");
addMapping("horseInventory", GuiScreenHorseInventory.class, "field_147029_w");
addMapping("playerInventory", GuiScreenHorseInventory.class, "field_147030_v");
addMapping("HORSE_GUI_TEXTURES", GuiScreenHorseInventory.class, "field_147031_u");
addMapping("mousePosY", GuiScreenHorseInventory.class, "field_147032_z");
addMapping("mousePosx", GuiScreenHorseInventory.class, "field_147033_y");
addMapping("horseEntity", GuiScreenHorseInventory.class, "field_147034_x");
addMapping("GUI_TEXTURE", GuiShulkerBox.class, "field_190778_u");
addMapping("inventory", GuiShulkerBox.class, "field_190779_v");
addMapping("playerInventory", GuiShulkerBox.class, "field_190780_w");
addMapping("recipe", GhostRecipe.class, "field_192687_a");
addMapping("ingredients", GhostRecipe.class, "field_192688_b");
addMapping("time", GhostRecipe.class, "field_194190_c");
addMapping("list", GuiButtonRecipe.class, "field_191774_p");
addMapping("animationTime", GuiButtonRecipe.class, "field_191778_t");
addMapping("RECIPE_BOOK", GuiButtonRecipe.class, "field_191780_o");
addMapping("book", GuiButtonRecipe.class, "field_193930_p");
addMapping("time", GuiButtonRecipe.class, "field_193931_r");
addMapping("currentIndex", GuiButtonRecipe.class, "field_193932_t");
addMapping("category", GuiButtonRecipeTab.class, "field_193921_u");
addMapping("animationTime", GuiButtonRecipeTab.class, "field_193922_v");
addMapping("mc", GuiRecipeBook.class, "field_191888_F");
addMapping("RECIPE_BOOK", GuiRecipeBook.class, "field_191894_a");
addMapping("xOffset", GuiRecipeBook.class, "field_191903_n");
addMapping("width", GuiRecipeBook.class, "field_191904_o");
addMapping("height", GuiRecipeBook.class, "field_191905_p");
addMapping("container", GuiRecipeBook.class, "field_191908_s");
addMapping("currentTab", GuiRecipeBook.class, "field_191913_x");
addMapping("ghostRecipe", GuiRecipeBook.class, "field_191915_z");
addMapping("recipeTabs", GuiRecipeBook.class, "field_193018_j");
addMapping("recipeBookPage", GuiRecipeBook.class, "field_193022_s");
addMapping("LOGGER", GuiRecipeBook.class, "field_193959_i");
addMapping("toggleRecipesBtn", GuiRecipeBook.class, "field_193960_m");
addMapping("craftingSlots", GuiRecipeBook.class, "field_193961_o");
addMapping("searchBar", GuiRecipeBook.class, "field_193962_q");
addMapping("lastSearch", GuiRecipeBook.class, "field_193963_r");
addMapping("recipeBook", GuiRecipeBook.class, "field_193964_s");
addMapping("stackedContents", GuiRecipeBook.class, "field_193965_u");
addMapping("timesInventoryChanged", GuiRecipeBook.class, "field_193966_v");
addMapping("RECIPE_BOOK_TEXTURE", GuiRecipeOverlay.class, "field_191847_a");
addMapping("recipeList", GuiRecipeOverlay.class, "field_191848_f");
addMapping("visible", GuiRecipeOverlay.class, "field_191850_h");
addMapping("x", GuiRecipeOverlay.class, "field_191851_i");
addMapping("y", GuiRecipeOverlay.class, "field_191852_j");
addMapping("mc", GuiRecipeOverlay.class, "field_191853_k");
addMapping("buttonList", GuiRecipeOverlay.class, "field_193972_f");
addMapping("lastRecipeClicked", GuiRecipeOverlay.class, "field_193973_l");
addMapping("time", GuiRecipeOverlay.class, "field_193974_m");
addMapping("totalPages", RecipeBookPage.class, "field_193737_b");
addMapping("currentPage", RecipeBookPage.class, "field_193738_c");
addMapping("forwardButton", RecipeBookPage.class, "field_193740_e");
addMapping("backButton", RecipeBookPage.class, "field_193741_f");
addMapping("buttons", RecipeBookPage.class, "field_193743_h");
addMapping("minecraft", RecipeBookPage.class, "field_193754_s");
addMapping("listeners", RecipeBookPage.class, "field_193757_v");
addMapping("hoveredButton", RecipeBookPage.class, "field_194201_b");
addMapping("overlay", RecipeBookPage.class, "field_194202_c");
addMapping("recipeLists", RecipeBookPage.class, "field_194203_f");
addMapping("recipeBook", RecipeBookPage.class, "field_194204_k");
addMapping("lastClickedRecipe", RecipeBookPage.class, "field_194205_l");
addMapping("lastClickedRecipeList", RecipeBookPage.class, "field_194206_m");
addMapping("recipes", RecipeList.class, "field_192713_b");
addMapping("craftable", RecipeList.class, "field_194215_b");
addMapping("canFit", RecipeList.class, "field_194216_c");
addMapping("inBook", RecipeList.class, "field_194217_d");
addMapping("singleResultItem", RecipeList.class, "field_194218_e");
addMapping("items", BaseSpectatorGroup.class, "field_178671_a");
addMapping("resourceLocation", PlayerMenuObject.class, "field_178667_b");
addMapping("profile", PlayerMenuObject.class, "field_178668_a");
addMapping("listener", SpectatorMenu.class, "field_178651_f");
addMapping("previousCategories", SpectatorMenu.class, "field_178652_g");
addMapping("SCROLL_RIGHT_ENABLED", SpectatorMenu.class, "field_178653_d");
addMapping("SCROLL_RIGHT_DISABLED", SpectatorMenu.class, "field_178654_e");
addMapping("CLOSE_ITEM", SpectatorMenu.class, "field_178655_b");
addMapping("SCROLL_LEFT", SpectatorMenu.class, "field_178656_c");
addMapping("EMPTY_SLOT", SpectatorMenu.class, "field_178657_a");
addMapping("page", SpectatorMenu.class, "field_178658_j");
addMapping("category", SpectatorMenu.class, "field_178659_h");
addMapping("selectedSlot", SpectatorMenu.class, "field_178660_i");
addMapping("items", SpectatorDetails.class, "field_178682_b");
addMapping("selectedSlot", SpectatorDetails.class, "field_178683_c");
addMapping("category", SpectatorDetails.class, "field_178684_a");
addMapping("items", TeleportToPlayer.class, "field_178673_b");
addMapping("PROFILE_ORDER", TeleportToPlayer.class, "field_178674_a");
addMapping("items", TeleportToTeam.class, "field_178672_a");
addMapping("advancement", AdvancementToast.class, "field_193679_c");
addMapping("hasPlayedSound", AdvancementToast.class, "field_194168_d");
addMapping("mc", GuiToast.class, "field_191790_f");
addMapping("visible", GuiToast.class, "field_191791_g");
addMapping("toastsQueue", GuiToast.class, "field_191792_h");
addMapping("TEXTURE_TOASTS", IToast.class, "field_193654_a");
addMapping("NO_TOKEN", IToast.class, "field_193655_b");
addMapping("recipesOutputs", RecipeToast.class, "field_193666_c");
addMapping("firstDrawTime", RecipeToast.class, "field_193667_d");
addMapping("hasNewOutputs", RecipeToast.class, "field_193668_e");
addMapping("type", SystemToast.class, "field_193659_c");
addMapping("title", SystemToast.class, "field_193660_d");
addMapping("subtitle", SystemToast.class, "field_193661_e");
addMapping("firstDrawTime", SystemToast.class, "field_193662_f");
addMapping("newDisplay", SystemToast.class, "field_193663_g");
addMapping("icon", TutorialToast.class, "field_193671_c");
addMapping("title", TutorialToast.class, "field_193672_d");
addMapping("subtitle", TutorialToast.class, "field_193673_e");
addMapping("visibility", TutorialToast.class, "field_193674_f");
addMapping("lastDelta", TutorialToast.class, "field_193675_g");
addMapping("displayedProgress", TutorialToast.class, "field_193676_h");
addMapping("currentProgress", TutorialToast.class, "field_193677_i");
addMapping("hasProgressBar", TutorialToast.class, "field_193678_j");
addMapping("gameInfo", GameConfiguration.class, "field_178741_d");
addMapping("serverInfo", GameConfiguration.class, "field_178742_e");
addMapping("displayInfo", GameConfiguration.class, "field_178743_b");
addMapping("folderInfo", GameConfiguration.class, "field_178744_c");
addMapping("userInfo", GameConfiguration.class, "field_178745_a");
addMapping("standBase", ModelArmorStand.class, "field_178737_d");
addMapping("standLeftSide", ModelArmorStand.class, "field_178738_b");
addMapping("standWaist", ModelArmorStand.class, "field_178739_c");
addMapping("standRightSide", ModelArmorStand.class, "field_178740_a");
addMapping("bannerStand", ModelBanner.class, "field_178688_b");
addMapping("bannerTop", ModelBanner.class, "field_178689_c");
addMapping("bannerSlate", ModelBanner.class, "field_178690_a");
addMapping("textureHeight", ModelBase.class, "field_78089_u");
addMapping("textureWidth", ModelBase.class, "field_78090_t");
addMapping("isChild", ModelBase.class, "field_78091_s");
addMapping("boxList", ModelBase.class, "field_78092_r");
addMapping("isRiding", ModelBase.class, "field_78093_q");
addMapping("modelTextureMap", ModelBase.class, "field_78094_a");
addMapping("swingProgress", ModelBase.class, "field_78095_p");
addMapping("batOuterLeftWing", ModelBat.class, "field_82890_f");
addMapping("batLeftWing", ModelBat.class, "field_82891_d");
addMapping("batOuterRightWing", ModelBat.class, "field_82892_e");
addMapping("batBody", ModelBat.class, "field_82893_b");
addMapping("batRightWing", ModelBat.class, "field_82894_c");
addMapping("batHead", ModelBat.class, "field_82895_a");
addMapping("headPiece", ModelBed.class, "field_193772_a");
addMapping("footPiece", ModelBed.class, "field_193773_b");
addMapping("legs", ModelBed.class, "field_193774_c");
addMapping("bipedHeadwear", ModelBiped.class, "field_178720_f");
addMapping("bipedRightLeg", ModelBiped.class, "field_178721_j");
addMapping("bipedLeftLeg", ModelBiped.class, "field_178722_k");
addMapping("bipedRightArm", ModelBiped.class, "field_178723_h");
addMapping("bipedLeftArm", ModelBiped.class, "field_178724_i");
addMapping("leftArmPose", ModelBiped.class, "field_187075_l");
addMapping("rightArmPose", ModelBiped.class, "field_187076_m");
addMapping("bipedBody", ModelBiped.class, "field_78115_e");
addMapping("bipedHead", ModelBiped.class, "field_78116_c");
addMapping("isSneak", ModelBiped.class, "field_78117_n");
addMapping("blazeHead", ModelBlaze.class, "field_78105_b");
addMapping("blazeSticks", ModelBlaze.class, "field_78106_a");
addMapping("paddles", ModelBoat.class, "field_187057_b");
addMapping("noWater", ModelBoat.class, "field_187058_c");
addMapping("patchList", ModelBoat.class, "field_187059_d");
addMapping("boatSides", ModelBoat.class, "field_78103_a");
addMapping("flippingPageLeft", ModelBook.class, "field_78096_f");
addMapping("bookSpine", ModelBook.class, "field_78097_g");
addMapping("pagesLeft", ModelBook.class, "field_78098_d");
addMapping("flippingPageRight", ModelBook.class, "field_78099_e");
addMapping("coverLeft", ModelBook.class, "field_78100_b");
addMapping("pagesRight", ModelBook.class, "field_78101_c");
addMapping("coverRight", ModelBook.class, "field_78102_a");
addMapping("posZ2", ModelBox.class, "field_78246_f");
addMapping("boxName", ModelBox.class, "field_78247_g");
addMapping("posX2", ModelBox.class, "field_78248_d");
addMapping("posY2", ModelBox.class, "field_78249_e");
addMapping("posY1", ModelBox.class, "field_78250_b");
addMapping("posZ1", ModelBox.class, "field_78251_c");
addMapping("posX1", ModelBox.class, "field_78252_a");
addMapping("vertexPositions", ModelBox.class, "field_78253_h");
addMapping("quadList", ModelBox.class, "field_78254_i");
addMapping("chestBelow", ModelChest.class, "field_78232_b");
addMapping("chestKnob", ModelChest.class, "field_78233_c");
addMapping("chestLid", ModelChest.class, "field_78234_a");
addMapping("leftWing", ModelChicken.class, "field_78136_f");
addMapping("bill", ModelChicken.class, "field_78137_g");
addMapping("leftLeg", ModelChicken.class, "field_78138_d");
addMapping("rightWing", ModelChicken.class, "field_78139_e");
addMapping("body", ModelChicken.class, "field_78140_b");
addMapping("rightLeg", ModelChicken.class, "field_78141_c");
addMapping("head", ModelChicken.class, "field_78142_a");
addMapping("chin", ModelChicken.class, "field_78143_h");
addMapping("leg3", ModelCreeper.class, "field_78129_f");
addMapping("leg4", ModelCreeper.class, "field_78130_g");
addMapping("leg1", ModelCreeper.class, "field_78131_d");
addMapping("leg2", ModelCreeper.class, "field_78132_e");
addMapping("creeperArmor", ModelCreeper.class, "field_78133_b");
addMapping("body", ModelCreeper.class, "field_78134_c");
addMapping("head", ModelCreeper.class, "field_78135_a");
addMapping("frontLeg", ModelDragon.class, "field_78215_f");
addMapping("rearLegTip", ModelDragon.class, "field_78216_g");
addMapping("body", ModelDragon.class, "field_78217_d");
addMapping("rearLeg", ModelDragon.class, "field_78218_e");
addMapping("spine", ModelDragon.class, "field_78219_b");
addMapping("jaw", ModelDragon.class, "field_78220_c");
addMapping("head", ModelDragon.class, "field_78221_a");
addMapping("wingTip", ModelDragon.class, "field_78222_l");
addMapping("partialTicks", ModelDragon.class, "field_78223_m");
addMapping("frontFoot", ModelDragon.class, "field_78224_j");
addMapping("wing", ModelDragon.class, "field_78225_k");
addMapping("frontLegTip", ModelDragon.class, "field_78226_h");
addMapping("rearFoot", ModelDragon.class, "field_78227_i");
addMapping("head", ModelDragonHead.class, "field_187070_a");
addMapping("jaw", ModelDragonHead.class, "field_187071_b");
addMapping("rightWing", ModelElytra.class, "field_187060_a");
addMapping("leftWing", ModelElytra.class, "field_187061_b");
addMapping("glass", ModelEnderCrystal.class, "field_78228_b");
addMapping("base", ModelEnderCrystal.class, "field_78229_c");
addMapping("cube", ModelEnderCrystal.class, "field_78230_a");
addMapping("bodyParts", ModelEnderMite.class, "field_178713_d");
addMapping("BODY_TEXS", ModelEnderMite.class, "field_178714_b");
addMapping("BODY_COUNT", ModelEnderMite.class, "field_178715_c");
addMapping("BODY_SIZES", ModelEnderMite.class, "field_178716_a");
addMapping("isAttacking", ModelEnderman.class, "field_78125_b");
addMapping("isCarrying", ModelEnderman.class, "field_78126_a");
addMapping("base", ModelEvokerFangs.class, "field_191213_a");
addMapping("upperJaw", ModelEvokerFangs.class, "field_191214_b");
addMapping("lowerJaw", ModelEvokerFangs.class, "field_191215_c");
addMapping("tentacles", ModelGhast.class, "field_78127_b");
addMapping("body", ModelGhast.class, "field_78128_a");
addMapping("guardianTail", ModelGuardian.class, "field_178707_d");
addMapping("guardianEye", ModelGuardian.class, "field_178708_b");
addMapping("guardianSpines", ModelGuardian.class, "field_178709_c");
addMapping("guardianBody", ModelGuardian.class, "field_178710_a");
addMapping("frontRightLeg", ModelHorse.class, "field_110684_D");
addMapping("frontRightShin", ModelHorse.class, "field_110685_E");
addMapping("frontRightHoof", ModelHorse.class, "field_110686_F");
addMapping("muleLeftChest", ModelHorse.class, "field_110687_G");
addMapping("frontLeftLeg", ModelHorse.class, "field_110688_A");
addMapping("frontLeftShin", ModelHorse.class, "field_110689_B");
addMapping("frontLeftHoof", ModelHorse.class, "field_110690_C");
addMapping("horseLeftSaddleRope", ModelHorse.class, "field_110691_L");
addMapping("horseLeftSaddleMetal", ModelHorse.class, "field_110692_M");
addMapping("horseRightSaddleRope", ModelHorse.class, "field_110693_N");
addMapping("horseRightSaddleMetal", ModelHorse.class, "field_110694_O");
addMapping("muleRightChest", ModelHorse.class, "field_110695_H");
addMapping("horseSaddleBottom", ModelHorse.class, "field_110696_I");
addMapping("horseSaddleFront", ModelHorse.class, "field_110697_J");
addMapping("horseSaddleBack", ModelHorse.class, "field_110698_K");
addMapping("horseRightFaceMetal", ModelHorse.class, "field_110699_Q");
addMapping("horseLeftFaceMetal", ModelHorse.class, "field_110700_P");
addMapping("horseRightRein", ModelHorse.class, "field_110701_S");
addMapping("horseLeftRein", ModelHorse.class, "field_110702_R");
addMapping("muleLeftEar", ModelHorse.class, "field_110703_f");
addMapping("muleRightEar", ModelHorse.class, "field_110704_g");
addMapping("horseLeftEar", ModelHorse.class, "field_110705_d");
addMapping("horseRightEar", ModelHorse.class, "field_110706_e");
addMapping("head", ModelHorse.class, "field_110709_a");
addMapping("tailTip", ModelHorse.class, "field_110710_n");
addMapping("backLeftLeg", ModelHorse.class, "field_110711_o");
addMapping("tailBase", ModelHorse.class, "field_110712_l");
addMapping("tailMiddle", ModelHorse.class, "field_110713_m");
addMapping("mane", ModelHorse.class, "field_110714_j");
addMapping("body", ModelHorse.class, "field_110715_k");
addMapping("neck", ModelHorse.class, "field_110716_h");
addMapping("horseFaceRopes", ModelHorse.class, "field_110717_i");
addMapping("backLeftHoof", ModelHorse.class, "field_110718_w");
addMapping("backLeftShin", ModelHorse.class, "field_110719_v");
addMapping("backRightHoof", ModelHorse.class, "field_110720_z");
addMapping("backRightShin", ModelHorse.class, "field_110721_y");
addMapping("backRightLeg", ModelHorse.class, "field_110722_x");
addMapping("upperMouth", ModelHorse.class, "field_178711_b");
addMapping("lowerMouth", ModelHorse.class, "field_178712_c");
addMapping("head", ModelHumanoidHead.class, "field_178717_b");
addMapping("head", ModelIllager.class, "field_191217_a");
addMapping("body", ModelIllager.class, "field_191218_b");
addMapping("arms", ModelIllager.class, "field_191219_c");
addMapping("leg0", ModelIllager.class, "field_191220_d");
addMapping("leg1", ModelIllager.class, "field_191221_e");
addMapping("nose", ModelIllager.class, "field_191222_f");
addMapping("rightArm", ModelIllager.class, "field_191223_g");
addMapping("leftArm", ModelIllager.class, "field_191224_h");
addMapping("hat", ModelIllager.class, "field_193775_b");
addMapping("ironGolemRightLeg", ModelIronGolem.class, "field_78173_f");
addMapping("ironGolemLeftArm", ModelIronGolem.class, "field_78174_d");
addMapping("ironGolemLeftLeg", ModelIronGolem.class, "field_78175_e");
addMapping("ironGolemBody", ModelIronGolem.class, "field_78176_b");
addMapping("ironGolemRightArm", ModelIronGolem.class, "field_78177_c");
addMapping("ironGolemHead", ModelIronGolem.class, "field_78178_a");
addMapping("knotRenderer", ModelLeashKnot.class, "field_110723_a");
addMapping("chest1", ModelLlama.class, "field_191226_i");
addMapping("chest2", ModelLlama.class, "field_191227_j");
addMapping("main", ModelLlamaSpit.class, "field_191225_a");
addMapping("core", ModelMagmaCube.class, "field_78108_b");
addMapping("segments", ModelMagmaCube.class, "field_78109_a");
addMapping("sideModels", ModelMinecart.class, "field_78154_a");
addMapping("ocelotTail2", ModelOcelot.class, "field_78155_f");
addMapping("ocelotHead", ModelOcelot.class, "field_78156_g");
addMapping("ocelotFrontRightLeg", ModelOcelot.class, "field_78157_d");
addMapping("ocelotTail", ModelOcelot.class, "field_78158_e");
addMapping("ocelotBackRightLeg", ModelOcelot.class, "field_78159_b");
addMapping("ocelotFrontLeftLeg", ModelOcelot.class, "field_78160_c");
addMapping("ocelotBackLeftLeg", ModelOcelot.class, "field_78161_a");
addMapping("ocelotBody", ModelOcelot.class, "field_78162_h");
addMapping("state", ModelOcelot.class, "field_78163_i");
addMapping("body", ModelParrot.class, "field_192764_a");
addMapping("tail", ModelParrot.class, "field_192765_b");
addMapping("wingLeft", ModelParrot.class, "field_192766_c");
addMapping("wingRight", ModelParrot.class, "field_192767_d");
addMapping("head", ModelParrot.class, "field_192768_e");
addMapping("head2", ModelParrot.class, "field_192769_f");
addMapping("beak1", ModelParrot.class, "field_192770_g");
addMapping("beak2", ModelParrot.class, "field_192771_h");
addMapping("feather", ModelParrot.class, "field_192772_i");
addMapping("legLeft", ModelParrot.class, "field_192773_j");
addMapping("legRight", ModelParrot.class, "field_192774_k");
addMapping("state", ModelParrot.class, "field_192775_l");
addMapping("bipedCape", ModelPlayer.class, "field_178729_w");
addMapping("bipedBodyWear", ModelPlayer.class, "field_178730_v");
addMapping("bipedRightLegwear", ModelPlayer.class, "field_178731_d");
addMapping("bipedRightArmwear", ModelPlayer.class, "field_178732_b");
addMapping("bipedLeftLegwear", ModelPlayer.class, "field_178733_c");
addMapping("bipedLeftArmwear", ModelPlayer.class, "field_178734_a");
addMapping("smallArms", ModelPlayer.class, "field_178735_y");
addMapping("bipedDeadmau5Head", ModelPlayer.class, "field_178736_x");
addMapping("leg4", ModelQuadruped.class, "field_78144_f");
addMapping("childYOffset", ModelQuadruped.class, "field_78145_g");
addMapping("leg2", ModelQuadruped.class, "field_78146_d");
addMapping("leg3", ModelQuadruped.class, "field_78147_e");
addMapping("body", ModelQuadruped.class, "field_78148_b");
addMapping("leg1", ModelQuadruped.class, "field_78149_c");
addMapping("head", ModelQuadruped.class, "field_78150_a");
addMapping("childZOffset", ModelQuadruped.class, "field_78151_h");
addMapping("rabbitLeftArm", ModelRabbit.class, "field_178692_f");
addMapping("rabbitRightArm", ModelRabbit.class, "field_178693_g");
addMapping("rabbitRightThigh", ModelRabbit.class, "field_178694_d");
addMapping("rabbitBody", ModelRabbit.class, "field_178695_e");
addMapping("rabbitRightFoot", ModelRabbit.class, "field_178696_b");
addMapping("rabbitLeftThigh", ModelRabbit.class, "field_178697_c");
addMapping("rabbitLeftFoot", ModelRabbit.class, "field_178698_a");
addMapping("rabbitNose", ModelRabbit.class, "field_178700_l");
addMapping("jumpRotation", ModelRabbit.class, "field_178701_m");
addMapping("rabbitLeftEar", ModelRabbit.class, "field_178702_j");
addMapping("rabbitTail", ModelRabbit.class, "field_178703_k");
addMapping("rabbitHead", ModelRabbit.class, "field_178704_h");
addMapping("rabbitRightEar", ModelRabbit.class, "field_178705_i");
addMapping("rotateAngleX", ModelRenderer.class, "field_78795_f");
addMapping("rotateAngleY", ModelRenderer.class, "field_78796_g");
addMapping("rotationPointY", ModelRenderer.class, "field_78797_d");
addMapping("rotationPointZ", ModelRenderer.class, "field_78798_e");
addMapping("textureHeight", ModelRenderer.class, "field_78799_b");
addMapping("rotationPointX", ModelRenderer.class, "field_78800_c");
addMapping("textureWidth", ModelRenderer.class, "field_78801_a");
addMapping("boxName", ModelRenderer.class, "field_78802_n");
addMapping("textureOffsetX", ModelRenderer.class, "field_78803_o");
addMapping("cubeList", ModelRenderer.class, "field_78804_l");
addMapping("childModels", ModelRenderer.class, "field_78805_m");
addMapping("showModel", ModelRenderer.class, "field_78806_j");
addMapping("isHidden", ModelRenderer.class, "field_78807_k");
addMapping("rotateAngleZ", ModelRenderer.class, "field_78808_h");
addMapping("mirror", ModelRenderer.class, "field_78809_i");
addMapping("baseModel", ModelRenderer.class, "field_78810_s");
addMapping("displayList", ModelRenderer.class, "field_78811_r");
addMapping("compiled", ModelRenderer.class, "field_78812_q");
addMapping("textureOffsetY", ModelRenderer.class, "field_78813_p");
addMapping("offsetX", ModelRenderer.class, "field_82906_o");
addMapping("offsetZ", ModelRenderer.class, "field_82907_q");
addMapping("offsetY", ModelRenderer.class, "field_82908_p");
addMapping("headRotationAngleX", ModelSheep1.class, "field_78152_i");
addMapping("headRotationAngleX", ModelSheep2.class, "field_78153_i");
addMapping("plate", ModelShield.class, "field_187063_a");
addMapping("handle", ModelShield.class, "field_187064_b");
addMapping("head", ModelShulker.class, "field_187066_a");
addMapping("base", ModelShulker.class, "field_187067_b");
addMapping("lid", ModelShulker.class, "field_187068_c");
addMapping("renderer", ModelShulkerBullet.class, "field_187069_a");
addMapping("signStick", ModelSign.class, "field_78165_b");
addMapping("signBoard", ModelSign.class, "field_78166_a");
addMapping("SILVERFISH_BOX_LENGTH", ModelSilverfish.class, "field_78167_d");
addMapping("SILVERFISH_TEXTURE_POSITIONS", ModelSilverfish.class, "field_78168_e");
addMapping("silverfishWings", ModelSilverfish.class, "field_78169_b");
addMapping("zPlacement", ModelSilverfish.class, "field_78170_c");
addMapping("silverfishBodyParts", ModelSilverfish.class, "field_78171_a");
addMapping("skeletonHead", ModelSkeletonHead.class, "field_82896_a");
addMapping("slimeMouth", ModelSlime.class, "field_78197_d");
addMapping("slimeRightEye", ModelSlime.class, "field_78198_b");
addMapping("slimeLeftEye", ModelSlime.class, "field_78199_c");
addMapping("slimeBodies", ModelSlime.class, "field_78200_a");
addMapping("rightHand", ModelSnowMan.class, "field_78192_d");
addMapping("leftHand", ModelSnowMan.class, "field_78193_e");
addMapping("bottomBody", ModelSnowMan.class, "field_78194_b");
addMapping("head", ModelSnowMan.class, "field_78195_c");
addMapping("body", ModelSnowMan.class, "field_78196_a");
addMapping("spiderLeg3", ModelSpider.class, "field_78203_f");
addMapping("spiderLeg4", ModelSpider.class, "field_78204_g");
addMapping("spiderLeg1", ModelSpider.class, "field_78205_d");
addMapping("spiderLeg2", ModelSpider.class, "field_78206_e");
addMapping("spiderNeck", ModelSpider.class, "field_78207_b");
addMapping("spiderBody", ModelSpider.class, "field_78208_c");
addMapping("spiderHead", ModelSpider.class, "field_78209_a");
addMapping("spiderLeg7", ModelSpider.class, "field_78210_j");
addMapping("spiderLeg8", ModelSpider.class, "field_78211_k");
addMapping("spiderLeg5", ModelSpider.class, "field_78212_h");
addMapping("spiderLeg6", ModelSpider.class, "field_78213_i");
addMapping("squidTentacles", ModelSquid.class, "field_78201_b");
addMapping("squidBody", ModelSquid.class, "field_78202_a");
addMapping("leftWing", ModelVex.class, "field_191229_a");
addMapping("rightWing", ModelVex.class, "field_191230_b");
addMapping("rightVillagerLeg", ModelVillager.class, "field_78187_d");
addMapping("leftVillagerLeg", ModelVillager.class, "field_78188_e");
addMapping("villagerBody", ModelVillager.class, "field_78189_b");
addMapping("villagerArms", ModelVillager.class, "field_78190_c");
addMapping("villagerHead", ModelVillager.class, "field_78191_a");
addMapping("villagerNose", ModelVillager.class, "field_82898_f");
addMapping("holdingItem", ModelWitch.class, "field_82900_g");
addMapping("mole", ModelWitch.class, "field_82901_h");
addMapping("witchHat", ModelWitch.class, "field_82902_i");
addMapping("heads", ModelWither.class, "field_82904_b");
addMapping("upperBodyParts", ModelWither.class, "field_82905_a");
addMapping("wolfLeg4", ModelWolf.class, "field_78179_f");
addMapping("wolfTail", ModelWolf.class, "field_78180_g");
addMapping("wolfLeg2", ModelWolf.class, "field_78181_d");
addMapping("wolfLeg3", ModelWolf.class, "field_78182_e");
addMapping("wolfBody", ModelWolf.class, "field_78183_b");
addMapping("wolfLeg1", ModelWolf.class, "field_78184_c");
addMapping("wolfHeadMain", ModelWolf.class, "field_78185_a");
addMapping("wolfMane", ModelWolf.class, "field_78186_h");
addMapping("texturePositionX", PositionTextureVertex.class, "field_78241_b");
addMapping("texturePositionY", PositionTextureVertex.class, "field_78242_c");
addMapping("vector3D", PositionTextureVertex.class, "field_78243_a");
addMapping("textureOffsetY", TextureOffset.class, "field_78782_b");
addMapping("textureOffsetX", TextureOffset.class, "field_78783_a");
addMapping("nVertices", TexturedQuad.class, "field_78237_b");
addMapping("invertNormal", TexturedQuad.class, "field_78238_c");
addMapping("vertexPositions", TexturedQuad.class, "field_78239_a");
addMapping("LOGGER", ChunkProviderClient.class, "field_147436_a");
addMapping("world", ChunkProviderClient.class, "field_73235_d");
addMapping("chunkMapping", ChunkProviderClient.class, "field_73236_b");
addMapping("blankChunk", ChunkProviderClient.class, "field_73238_a");
addMapping("LOGGER", ClientAdvancementManager.class, "field_192800_a");
addMapping("mc", ClientAdvancementManager.class, "field_192801_b");
addMapping("advancementList", ClientAdvancementManager.class, "field_192802_c");
addMapping("advancementToProgress", ClientAdvancementManager.class, "field_192803_d");
addMapping("listener", ClientAdvancementManager.class, "field_192804_e");
addMapping("selectedTab", ClientAdvancementManager.class, "field_194231_f");
addMapping("LOGGER", GuiConnecting.class, "field_146370_f");
addMapping("networkManager", GuiConnecting.class, "field_146371_g");
addMapping("CONNECTION_ID", GuiConnecting.class, "field_146372_a");
addMapping("cancel", GuiConnecting.class, "field_146373_h");
addMapping("previousGuiScreen", GuiConnecting.class, "field_146374_i");
addMapping("currentBlock", PlayerControllerMP.class, "field_178895_c");
addMapping("curBlockDamageMP", PlayerControllerMP.class, "field_78770_f");
addMapping("connection", PlayerControllerMP.class, "field_78774_b");
addMapping("mc", PlayerControllerMP.class, "field_78776_a");
addMapping("currentPlayerItem", PlayerControllerMP.class, "field_78777_l");
addMapping("isHittingBlock", PlayerControllerMP.class, "field_78778_j");
addMapping("currentGameType", PlayerControllerMP.class, "field_78779_k");
addMapping("stepSoundTickCounter", PlayerControllerMP.class, "field_78780_h");
addMapping("blockHitDelay", PlayerControllerMP.class, "field_78781_i");
addMapping("currentItemHittingBlock", PlayerControllerMP.class, "field_85183_f");
addMapping("serverPort", ServerAddress.class, "field_78865_b");
addMapping("ipAddress", ServerAddress.class, "field_78866_a");
addMapping("serverIcon", ServerData.class, "field_147411_m");
addMapping("playerList", ServerData.class, "field_147412_i");
addMapping("resourceMode", ServerData.class, "field_152587_j");
addMapping("lanServer", ServerData.class, "field_181042_l");
addMapping("pinged", ServerData.class, "field_78841_f");
addMapping("serverMOTD", ServerData.class, "field_78843_d");
addMapping("pingToServer", ServerData.class, "field_78844_e");
addMapping("serverIP", ServerData.class, "field_78845_b");
addMapping("populationInfo", ServerData.class, "field_78846_c");
addMapping("serverName", ServerData.class, "field_78847_a");
addMapping("version", ServerData.class, "field_82821_f");
addMapping("gameVersion", ServerData.class, "field_82822_g");
addMapping("LOGGER", ServerList.class, "field_147415_a");
addMapping("servers", ServerList.class, "field_78858_b");
addMapping("mc", ServerList.class, "field_78859_a");
addMapping("LOGGER", ThreadLanServerPing.class, "field_148657_b");
addMapping("UNIQUE_THREAD_ID", ThreadLanServerPing.class, "field_148658_a");
addMapping("isStopping", ThreadLanServerPing.class, "field_77526_d");
addMapping("address", ThreadLanServerPing.class, "field_77527_e");
addMapping("motd", ThreadLanServerPing.class, "field_77528_b");
addMapping("socket", ThreadLanServerPing.class, "field_77529_c");
addMapping("visibleChunks", WorldClient.class, "field_184157_a");
addMapping("ambienceTicks", WorldClient.class, "field_184158_M");
addMapping("entityList", WorldClient.class, "field_73032_d");
addMapping("clientChunkProvider", WorldClient.class, "field_73033_b");
addMapping("connection", WorldClient.class, "field_73035_a");
addMapping("entitySpawnQueue", WorldClient.class, "field_73036_L");
addMapping("mc", WorldClient.class, "field_73037_M");
addMapping("previousActiveChunkSet", WorldClient.class, "field_73038_N");
addMapping("LOGGER", LanServerDetector.class, "field_148550_b");
addMapping("ATOMIC_COUNTER", LanServerDetector.class, "field_148551_a");
addMapping("lanServerIpPort", LanServerInfo.class, "field_77490_b");
addMapping("timeLastSeen", LanServerInfo.class, "field_77491_c");
addMapping("lanServerMotd", LanServerInfo.class, "field_77492_a");
addMapping("networkManager", NetHandlerHandshakeMemory.class, "field_147384_b");
addMapping("mcServer", NetHandlerHandshakeMemory.class, "field_147385_a");
addMapping("networkManager", NetHandlerLoginClient.class, "field_147393_d");
addMapping("mc", NetHandlerLoginClient.class, "field_147394_b");
addMapping("previousGuiScreen", NetHandlerLoginClient.class, "field_147395_c");
addMapping("LOGGER", NetHandlerLoginClient.class, "field_147396_a");
addMapping("gameProfile", NetHandlerLoginClient.class, "field_175091_e");
addMapping("gameController", NetHandlerPlayClient.class, "field_147299_f");
addMapping("clientWorldController", NetHandlerPlayClient.class, "field_147300_g");
addMapping("LOGGER", NetHandlerPlayClient.class, "field_147301_d");
addMapping("netManager", NetHandlerPlayClient.class, "field_147302_e");
addMapping("currentServerMaxPlayers", NetHandlerPlayClient.class, "field_147304_c");
addMapping("avRandomizer", NetHandlerPlayClient.class, "field_147306_l");
addMapping("guiScreenServer", NetHandlerPlayClient.class, "field_147307_j");
addMapping("hasStatistics", NetHandlerPlayClient.class, "field_147308_k");
addMapping("doneLoadingTerrain", NetHandlerPlayClient.class, "field_147309_h");
addMapping("playerInfoMap", NetHandlerPlayClient.class, "field_147310_i");
addMapping("profile", NetHandlerPlayClient.class, "field_175107_d");
addMapping("advancementManager", NetHandlerPlayClient.class, "field_191983_k");
addMapping("skinType", NetworkPlayerInfo.class, "field_178863_g");
addMapping("playerTexturesLoaded", NetworkPlayerInfo.class, "field_178864_d");
addMapping("gameType", NetworkPlayerInfo.class, "field_178866_b");
addMapping("gameProfile", NetworkPlayerInfo.class, "field_178867_a");
addMapping("healthBlinkTime", NetworkPlayerInfo.class, "field_178868_l");
addMapping("renderVisibilityId", NetworkPlayerInfo.class, "field_178869_m");
addMapping("displayHealth", NetworkPlayerInfo.class, "field_178870_j");
addMapping("lastHealthTime", NetworkPlayerInfo.class, "field_178871_k");
addMapping("displayName", NetworkPlayerInfo.class, "field_178872_h");
addMapping("lastHealth", NetworkPlayerInfo.class, "field_178873_i");
addMapping("playerTextures", NetworkPlayerInfo.class, "field_187107_a");
addMapping("responseTime", NetworkPlayerInfo.class, "field_78829_b");
addMapping("LOGGER", ServerPinger.class, "field_147228_b");
addMapping("pingDestinations", ServerPinger.class, "field_147229_c");
addMapping("PING_RESPONSE_SPLITTER", ServerPinger.class, "field_147230_a");
addMapping("particleTexture", Particle.class, "field_187119_C");
addMapping("boundingBox", Particle.class, "field_187120_G");
addMapping("EMPTY_AABB", Particle.class, "field_187121_a");
addMapping("world", Particle.class, "field_187122_b");
addMapping("prevPosX", Particle.class, "field_187123_c");
addMapping("prevPosY", Particle.class, "field_187124_d");
addMapping("prevPosZ", Particle.class, "field_187125_e");
addMapping("posX", Particle.class, "field_187126_f");
addMapping("posY", Particle.class, "field_187127_g");
addMapping("posZ", Particle.class, "field_187128_h");
addMapping("motionX", Particle.class, "field_187129_i");
addMapping("motionY", Particle.class, "field_187130_j");
addMapping("motionZ", Particle.class, "field_187131_k");
addMapping("onGround", Particle.class, "field_187132_l");
addMapping("isExpired", Particle.class, "field_187133_m");
addMapping("width", Particle.class, "field_187134_n");
addMapping("height", Particle.class, "field_187135_o");
addMapping("rand", Particle.class, "field_187136_p");
addMapping("particleAngle", Particle.class, "field_190014_F");
addMapping("prevParticleAngle", Particle.class, "field_190015_G");
addMapping("cameraViewDir", Particle.class, "field_190016_K");
addMapping("canCollide", Particle.class, "field_190017_n");
addMapping("particleScale", Particle.class, "field_70544_f");
addMapping("particleGravity", Particle.class, "field_70545_g");
addMapping("particleAge", Particle.class, "field_70546_d");
addMapping("particleMaxAge", Particle.class, "field_70547_e");
addMapping("particleTextureJitterX", Particle.class, "field_70548_b");
addMapping("particleTextureJitterY", Particle.class, "field_70549_c");
addMapping("particleBlue", Particle.class, "field_70551_j");
addMapping("particleRed", Particle.class, "field_70552_h");
addMapping("particleGreen", Particle.class, "field_70553_i");
addMapping("interpPosY", Particle.class, "field_70554_ao");
addMapping("interpPosZ", Particle.class, "field_70555_ap");
addMapping("interpPosX", Particle.class, "field_70556_an");
addMapping("particleAlpha", Particle.class, "field_82339_as");
addMapping("particleTextureIndexX", Particle.class, "field_94054_b");
addMapping("particleTextureIndexY", Particle.class, "field_94055_c");
addMapping("oSize", ParticleCloud.class, "field_70569_a");
addMapping("oSize", ParticleCrit.class, "field_174839_a");
addMapping("sourceState", ParticleDigging.class, "field_174847_a");
addMapping("sourcePos", ParticleDigging.class, "field_181019_az");
addMapping("oSize", ParticleDragonBreath.class, "field_187143_a");
addMapping("hasHitGround", ParticleDragonBreath.class, "field_187144_G");
addMapping("materialType", ParticleDrip.class, "field_70563_a");
addMapping("bobTimer", ParticleDrip.class, "field_70564_aq");
addMapping("particleTypes", ParticleEmitter.class, "field_174849_az");
addMapping("lifetime", ParticleEmitter.class, "field_174850_ay");
addMapping("attachedEntity", ParticleEmitter.class, "field_174851_a");
addMapping("age", ParticleEmitter.class, "field_174852_ax");
addMapping("oSize", ParticleEnchantmentTable.class, "field_70565_a");
addMapping("coordZ", ParticleEnchantmentTable.class, "field_70566_as");
addMapping("coordY", ParticleEnchantmentTable.class, "field_70567_ar");
addMapping("coordX", ParticleEnchantmentTable.class, "field_70568_aq");
addMapping("timeSinceStart", ParticleExplosionHuge.class, "field_70579_a");
addMapping("maximumTime", ParticleExplosionHuge.class, "field_70580_aq");
addMapping("EXPLOSION_TEXTURE", ParticleExplosionLarge.class, "field_110127_a");
addMapping("VERTEX_FORMAT", ParticleExplosionLarge.class, "field_181549_az");
addMapping("life", ParticleExplosionLarge.class, "field_70581_a");
addMapping("size", ParticleExplosionLarge.class, "field_70582_as");
addMapping("textureManager", ParticleExplosionLarge.class, "field_70583_ar");
addMapping("lifeTime", ParticleExplosionLarge.class, "field_70584_aq");
addMapping("oSize", ParticleFallingDust.class, "field_190018_a");
addMapping("rotSpeed", ParticleFallingDust.class, "field_190019_b");
addMapping("flameScale", ParticleFlame.class, "field_70562_a");
addMapping("FOOTPRINT_TEXTURE", ParticleFootStep.class, "field_110126_a");
addMapping("footstepAge", ParticleFootStep.class, "field_70576_a");
addMapping("currentFootSteps", ParticleFootStep.class, "field_70577_ar");
addMapping("footstepMaxAge", ParticleFootStep.class, "field_70578_aq");
addMapping("particleScaleOverTime", ParticleHeart.class, "field_70575_a");
addMapping("item", ParticleItemPickup.class, "field_174840_a");
addMapping("yOffset", ParticleItemPickup.class, "field_174841_aA");
addMapping("renderManager", ParticleItemPickup.class, "field_174842_aB");
addMapping("target", ParticleItemPickup.class, "field_174843_ax");
addMapping("maxAge", ParticleItemPickup.class, "field_70593_as");
addMapping("age", ParticleItemPickup.class, "field_70594_ar");
addMapping("lavaParticleScale", ParticleLava.class, "field_70586_a");
addMapping("PARTICLE_TEXTURES", ParticleManager.class, "field_110737_b");
addMapping("particleTypes", ParticleManager.class, "field_178932_g");
addMapping("particleEmitters", ParticleManager.class, "field_178933_d");
addMapping("queue", ParticleManager.class, "field_187241_h");
addMapping("rand", ParticleManager.class, "field_78875_d");
addMapping("fxLayers", ParticleManager.class, "field_78876_b");
addMapping("renderer", ParticleManager.class, "field_78877_c");
addMapping("world", ParticleManager.class, "field_78878_a");
addMapping("entity", ParticleMobAppearance.class, "field_174844_a");
addMapping("noteParticleScale", ParticleNote.class, "field_70585_a");
addMapping("portalParticleScale", ParticlePortal.class, "field_70571_a");
addMapping("portalPosZ", ParticlePortal.class, "field_70572_as");
addMapping("portalPosY", ParticlePortal.class, "field_70573_ar");
addMapping("portalPosX", ParticlePortal.class, "field_70574_aq");
addMapping("reddustParticleScale", ParticleRedstone.class, "field_70570_a");
addMapping("textureIdx", ParticleSimpleAnimated.class, "field_187147_a");
addMapping("numAgingFrames", ParticleSimpleAnimated.class, "field_187148_G");
addMapping("yAccel", ParticleSimpleAnimated.class, "field_187149_H");
addMapping("fadeTargetRed", ParticleSimpleAnimated.class, "field_187150_I");
addMapping("fadeTargetGreen", ParticleSimpleAnimated.class, "field_187151_J");
addMapping("fadeTargetBlue", ParticleSimpleAnimated.class, "field_187152_K");
addMapping("fadingColor", ParticleSimpleAnimated.class, "field_187153_L");
addMapping("baseAirFriction", ParticleSimpleAnimated.class, "field_191239_M");
addMapping("smokeParticleScale", ParticleSmokeNormal.class, "field_70587_a");
addMapping("snowDigParticleScale", ParticleSnowShovel.class, "field_70588_a");
addMapping("RANDOM", ParticleSpell.class, "field_174848_a");
addMapping("baseSpellTextureIndex", ParticleSpell.class, "field_70590_a");
addMapping("SWEEP_TEXTURE", ParticleSweepAttack.class, "field_187137_a");
addMapping("VERTEX_FORMAT", ParticleSweepAttack.class, "field_187138_G");
addMapping("life", ParticleSweepAttack.class, "field_187139_H");
addMapping("lifeTime", ParticleSweepAttack.class, "field_187140_I");
addMapping("textureManager", ParticleSweepAttack.class, "field_187141_J");
addMapping("size", ParticleSweepAttack.class, "field_187142_K");
addMapping("dataValues", ContainerLocalMenu.class, "field_174895_b");
addMapping("guiID", ContainerLocalMenu.class, "field_174896_a");
addMapping("displayName", LocalBlockIntercommunication.class, "field_175125_b");
addMapping("guiID", LocalBlockIntercommunication.class, "field_175126_a");
addMapping("OBJECTCOORDS", ActiveRenderInfo.class, "field_178810_d");
addMapping("position", ActiveRenderInfo.class, "field_178811_e");
addMapping("MODELVIEW", ActiveRenderInfo.class, "field_178812_b");
addMapping("PROJECTION", ActiveRenderInfo.class, "field_178813_c");
addMapping("VIEWPORT", ActiveRenderInfo.class, "field_178814_a");
addMapping("rotationZ", ActiveRenderInfo.class, "field_74586_f");
addMapping("rotationYZ", ActiveRenderInfo.class, "field_74587_g");
addMapping("rotationX", ActiveRenderInfo.class, "field_74588_d");
addMapping("rotationXZ", ActiveRenderInfo.class, "field_74589_e");
addMapping("rotationXY", ActiveRenderInfo.class, "field_74596_h");
addMapping("BANNER_DESIGNS", BannerTextures.class, "field_178466_c");
addMapping("SHIELD_DESIGNS", BannerTextures.class, "field_187485_b");
addMapping("SHIELD_BASE_TEXTURE", BannerTextures.class, "field_187486_c");
addMapping("BANNER_BASE_TEXTURE", BannerTextures.class, "field_187487_d");
addMapping("atlasSpritesWater", BlockFluidRenderer.class, "field_178271_b");
addMapping("atlasSpritesLava", BlockFluidRenderer.class, "field_178272_a");
addMapping("blockColors", BlockFluidRenderer.class, "field_187500_a");
addMapping("atlasSpriteWaterOverlay", BlockFluidRenderer.class, "field_187501_d");
addMapping("blockColors", BlockModelRenderer.class, "field_187499_a");
addMapping("blockStateMapper", BlockModelShapes.class, "field_178127_b");
addMapping("modelManager", BlockModelShapes.class, "field_178128_c");
addMapping("bakedModelStore", BlockModelShapes.class, "field_178129_a");
addMapping("chestRenderer", BlockRendererDispatcher.class, "field_175024_d");
addMapping("fluidRenderer", BlockRendererDispatcher.class, "field_175025_e");
addMapping("blockModelRenderer", BlockRendererDispatcher.class, "field_175027_c");
addMapping("blockModelShapes", BlockRendererDispatcher.class, "field_175028_a");
addMapping("vertexCount", BufferBuilder.class, "field_178997_d");
addMapping("rawIntBuffer", BufferBuilder.class, "field_178999_b");
addMapping("rawFloatBuffer", BufferBuilder.class, "field_179000_c");
addMapping("byteBuffer", BufferBuilder.class, "field_179001_a");
addMapping("zOffset", BufferBuilder.class, "field_179002_n");
addMapping("xOffset", BufferBuilder.class, "field_179004_l");
addMapping("yOffset", BufferBuilder.class, "field_179005_m");
addMapping("drawMode", BufferBuilder.class, "field_179006_k");
addMapping("isDrawing", BufferBuilder.class, "field_179010_r");
addMapping("vertexFormat", BufferBuilder.class, "field_179011_q");
addMapping("rawShortBuffer", BufferBuilder.class, "field_181676_c");
addMapping("vertexFormatElement", BufferBuilder.class, "field_181677_f");
addMapping("vertexFormatIndex", BufferBuilder.class, "field_181678_g");
addMapping("LOGGER", BufferBuilder.class, "field_187316_a");
addMapping("noColor", BufferBuilder.class, "field_78939_q");
addMapping("viewEntityY", ChunkRenderContainer.class, "field_178005_d");
addMapping("viewEntityZ", ChunkRenderContainer.class, "field_178006_e");
addMapping("initialized", ChunkRenderContainer.class, "field_178007_b");
addMapping("viewEntityX", ChunkRenderContainer.class, "field_178008_c");
addMapping("renderChunks", ChunkRenderContainer.class, "field_178009_a");
addMapping("position", DestroyBlockProgress.class, "field_180247_b");
addMapping("partialBlockProgress", DestroyBlockProgress.class, "field_73112_e");
addMapping("miningPlayerEntId", DestroyBlockProgress.class, "field_73115_a");
addMapping("createdAtCloudUpdateTick", DestroyBlockProgress.class, "field_82745_f");
addMapping("locationLightMap", EntityRenderer.class, "field_110922_T");
addMapping("SNOW_TEXTURES", EntityRenderer.class, "field_110923_r");
addMapping("RAIN_TEXTURES", EntityRenderer.class, "field_110924_q");
addMapping("shaderGroup", EntityRenderer.class, "field_147707_d");
addMapping("SHADER_COUNT", EntityRenderer.class, "field_147708_e");
addMapping("mapItemRenderer", EntityRenderer.class, "field_147709_v");
addMapping("LOGGER", EntityRenderer.class, "field_147710_q");
addMapping("resourceManager", EntityRenderer.class, "field_147711_ac");
addMapping("SHADERS_TEXTURES", EntityRenderer.class, "field_147712_ad");
addMapping("shaderIndex", EntityRenderer.class, "field_147713_ae");
addMapping("drawBlockOutline", EntityRenderer.class, "field_175073_D");
addMapping("renderHand", EntityRenderer.class, "field_175074_C");
addMapping("torchFlickerDX", EntityRenderer.class, "field_175075_L");
addMapping("rainXCoords", EntityRenderer.class, "field_175076_N");
addMapping("rainYCoords", EntityRenderer.class, "field_175077_O");
addMapping("debugView", EntityRenderer.class, "field_175078_W");
addMapping("debugViewDirection", EntityRenderer.class, "field_175079_V");
addMapping("fogColorRed", EntityRenderer.class, "field_175080_Q");
addMapping("fogColorBlue", EntityRenderer.class, "field_175081_S");
addMapping("fogColorGreen", EntityRenderer.class, "field_175082_R");
addMapping("useShader", EntityRenderer.class, "field_175083_ad");
addMapping("frameCount", EntityRenderer.class, "field_175084_ae");
addMapping("timeWorldIcon", EntityRenderer.class, "field_184374_E");
addMapping("itemActivationItem", EntityRenderer.class, "field_190566_ab");
addMapping("itemActivationTicks", EntityRenderer.class, "field_190567_ac");
addMapping("itemActivationOffX", EntityRenderer.class, "field_190568_ad");
addMapping("itemActivationOffY", EntityRenderer.class, "field_190569_ae");
addMapping("thirdPersonDistance", EntityRenderer.class, "field_78490_B");
addMapping("thirdPersonDistancePrev", EntityRenderer.class, "field_78491_C");
addMapping("smoothCamPartialTicks", EntityRenderer.class, "field_78492_L");
addMapping("smoothCamYaw", EntityRenderer.class, "field_78496_H");
addMapping("smoothCamPitch", EntityRenderer.class, "field_78497_I");
addMapping("smoothCamFilterX", EntityRenderer.class, "field_78498_J");
addMapping("smoothCamFilterY", EntityRenderer.class, "field_78499_K");
addMapping("cloudFog", EntityRenderer.class, "field_78500_U");
addMapping("cameraYaw", EntityRenderer.class, "field_78502_W");
addMapping("cameraZoom", EntityRenderer.class, "field_78503_V");
addMapping("lightmapColors", EntityRenderer.class, "field_78504_Q");
addMapping("fovModifierHandPrev", EntityRenderer.class, "field_78506_S");
addMapping("fovModifierHand", EntityRenderer.class, "field_78507_R");
addMapping("prevFrameTime", EntityRenderer.class, "field_78508_Y");
addMapping("cameraPitch", EntityRenderer.class, "field_78509_X");
addMapping("renderEndNanoTime", EntityRenderer.class, "field_78510_Z");
addMapping("lightmapTexture", EntityRenderer.class, "field_78513_d");
addMapping("torchFlickerX", EntityRenderer.class, "field_78514_e");
addMapping("anaglyphField", EntityRenderer.class, "field_78515_b");
addMapping("itemRenderer", EntityRenderer.class, "field_78516_c");
addMapping("anaglyphEnable", EntityRenderer.class, "field_78517_a");
addMapping("fogColorBuffer", EntityRenderer.class, "field_78521_m");
addMapping("mouseFilterYAxis", EntityRenderer.class, "field_78526_w");
addMapping("mouseFilterXAxis", EntityRenderer.class, "field_78527_v");
addMapping("pointedEntity", EntityRenderer.class, "field_78528_u");
addMapping("rendererUpdateCount", EntityRenderer.class, "field_78529_t");
addMapping("farPlaneDistance", EntityRenderer.class, "field_78530_s");
addMapping("mc", EntityRenderer.class, "field_78531_r");
addMapping("rainSoundCounter", EntityRenderer.class, "field_78534_ac");
addMapping("fogColor2", EntityRenderer.class, "field_78535_ad");
addMapping("lightmapUpdateNeeded", EntityRenderer.class, "field_78536_aa");
addMapping("random", EntityRenderer.class, "field_78537_ab");
addMapping("fogColor1", EntityRenderer.class, "field_78539_ae");
addMapping("bossColorModifier", EntityRenderer.class, "field_82831_U");
addMapping("bossColorModifierPrev", EntityRenderer.class, "field_82832_V");
addMapping("FACINGS", EnumFaceDirection.class, "field_179029_g");
addMapping("vertexInfos", EnumFaceDirection.class, "field_179035_h");
addMapping("depthState", GlStateManager.class, "field_179154_f");
addMapping("fogState", GlStateManager.class, "field_179155_g");
addMapping("colorMaterialState", GlStateManager.class, "field_179156_d");
addMapping("blendState", GlStateManager.class, "field_179157_e");
addMapping("lightingState", GlStateManager.class, "field_179158_b");
addMapping("lightState", GlStateManager.class, "field_179159_c");
addMapping("alphaState", GlStateManager.class, "field_179160_a");
addMapping("normalizeState", GlStateManager.class, "field_179161_n");
addMapping("activeTextureUnit", GlStateManager.class, "field_179162_o");
addMapping("clearState", GlStateManager.class, "field_179163_l");
addMapping("stencilState", GlStateManager.class, "field_179164_m");
addMapping("colorLogicState", GlStateManager.class, "field_179165_j");
addMapping("texGenState", GlStateManager.class, "field_179166_k");
addMapping("cullState", GlStateManager.class, "field_179167_h");
addMapping("polygonOffsetState", GlStateManager.class, "field_179168_i");
addMapping("colorState", GlStateManager.class, "field_179170_t");
addMapping("colorMaskState", GlStateManager.class, "field_179171_s");
addMapping("rescaleNormalState", GlStateManager.class, "field_179172_r");
addMapping("activeShadeModel", GlStateManager.class, "field_179173_q");
addMapping("textureState", GlStateManager.class, "field_179174_p");
addMapping("BUF_FLOAT_16", GlStateManager.class, "field_187450_a");
addMapping("BUF_FLOAT_4", GlStateManager.class, "field_187451_b");
addMapping("imageWidth", ImageBufferDownload.class, "field_78436_b");
addMapping("imageHeight", ImageBufferDownload.class, "field_78437_c");
addMapping("imageData", ImageBufferDownload.class, "field_78438_a");
addMapping("hasActivePotionEffects", InventoryEffectRenderer.class, "field_147045_u");
addMapping("modelManager", ItemModelMesher.class, "field_178090_d");
addMapping("simpleShapesCache", ItemModelMesher.class, "field_178091_b");
addMapping("shapers", ItemModelMesher.class, "field_178092_c");
addMapping("simpleShapes", ItemModelMesher.class, "field_178093_a");
addMapping("RES_UNDERWATER_OVERLAY", ItemRenderer.class, "field_110929_d");
addMapping("RES_MAP_BACKGROUND", ItemRenderer.class, "field_110931_c");
addMapping("renderManager", ItemRenderer.class, "field_178111_g");
addMapping("itemRenderer", ItemRenderer.class, "field_178112_h");
addMapping("itemStackMainHand", ItemRenderer.class, "field_187467_d");
addMapping("itemStackOffHand", ItemRenderer.class, "field_187468_e");
addMapping("equippedProgressMainHand", ItemRenderer.class, "field_187469_f");
addMapping("prevEquippedProgressMainHand", ItemRenderer.class, "field_187470_g");
addMapping("equippedProgressOffHand", ItemRenderer.class, "field_187471_h");
addMapping("prevEquippedProgressOffHand", ItemRenderer.class, "field_187472_i");
addMapping("mc", ItemRenderer.class, "field_78455_a");
addMapping("framebufferSupported", OpenGlHelper.class, "field_148823_f");
addMapping("shadersSupported", OpenGlHelper.class, "field_148824_g");
addMapping("GL_STATIC_DRAW", OpenGlHelper.class, "field_148826_e");
addMapping("openGL21", OpenGlHelper.class, "field_148827_a");
addMapping("openGL14", OpenGlHelper.class, "field_148828_i");
addMapping("logText", OpenGlHelper.class, "field_153196_B");
addMapping("nvidia", OpenGlHelper.class, "field_153197_d");
addMapping("GL_FRAMEBUFFER", OpenGlHelper.class, "field_153198_e");
addMapping("GL_RENDERBUFFER", OpenGlHelper.class, "field_153199_f");
addMapping("GL_COLOR_ATTACHMENT0", OpenGlHelper.class, "field_153200_g");
addMapping("GL_DEPTH_ATTACHMENT", OpenGlHelper.class, "field_153201_h");
addMapping("GL_FRAMEBUFFER_COMPLETE", OpenGlHelper.class, "field_153202_i");
addMapping("GL_FB_INCOMPLETE_ATTACHMENT", OpenGlHelper.class, "field_153203_j");
addMapping("GL_FB_INCOMPLETE_MISS_ATTACH", OpenGlHelper.class, "field_153204_k");
addMapping("GL_FB_INCOMPLETE_DRAW_BUFFER", OpenGlHelper.class, "field_153205_l");
addMapping("GL_FB_INCOMPLETE_READ_BUFFER", OpenGlHelper.class, "field_153206_m");
addMapping("GL_LINK_STATUS", OpenGlHelper.class, "field_153207_o");
addMapping("GL_COMPILE_STATUS", OpenGlHelper.class, "field_153208_p");
addMapping("GL_VERTEX_SHADER", OpenGlHelper.class, "field_153209_q");
addMapping("GL_FRAGMENT_SHADER", OpenGlHelper.class, "field_153210_r");
addMapping("extBlendFuncSeparate", OpenGlHelper.class, "field_153211_u");
addMapping("framebufferType", OpenGlHelper.class, "field_153212_w");
addMapping("shadersAvailable", OpenGlHelper.class, "field_153213_x");
addMapping("arbShaders", OpenGlHelper.class, "field_153214_y");
addMapping("arbMultitexture", OpenGlHelper.class, "field_153215_z");
addMapping("GL_OPERAND2_RGB", OpenGlHelper.class, "field_176076_D");
addMapping("GL_COMBINE_ALPHA", OpenGlHelper.class, "field_176077_E");
addMapping("GL_SOURCE0_ALPHA", OpenGlHelper.class, "field_176078_F");
addMapping("GL_SOURCE1_ALPHA", OpenGlHelper.class, "field_176079_G");
addMapping("GL_SOURCE2_RGB", OpenGlHelper.class, "field_176080_A");
addMapping("GL_OPERAND0_RGB", OpenGlHelper.class, "field_176081_B");
addMapping("GL_OPERAND1_RGB", OpenGlHelper.class, "field_176082_C");
addMapping("vboSupported", OpenGlHelper.class, "field_176083_O");
addMapping("GL_SOURCE2_ALPHA", OpenGlHelper.class, "field_176084_H");
addMapping("GL_OPERAND0_ALPHA", OpenGlHelper.class, "field_176085_I");
addMapping("GL_OPERAND1_ALPHA", OpenGlHelper.class, "field_176086_J");
addMapping("GL_OPERAND2_ALPHA", OpenGlHelper.class, "field_176087_K");
addMapping("arbTextureEnvCombine", OpenGlHelper.class, "field_176088_V");
addMapping("GL_ARRAY_BUFFER", OpenGlHelper.class, "field_176089_P");
addMapping("arbVbo", OpenGlHelper.class, "field_176090_Y");
addMapping("GL_PREVIOUS", OpenGlHelper.class, "field_176091_w");
addMapping("GL_CONSTANT", OpenGlHelper.class, "field_176092_v");
addMapping("GL_PRIMARY_COLOR", OpenGlHelper.class, "field_176093_u");
addMapping("GL_INTERPOLATE", OpenGlHelper.class, "field_176094_t");
addMapping("GL_COMBINE", OpenGlHelper.class, "field_176095_s");
addMapping("GL_TEXTURE2", OpenGlHelper.class, "field_176096_r");
addMapping("GL_SOURCE1_RGB", OpenGlHelper.class, "field_176097_z");
addMapping("GL_SOURCE0_RGB", OpenGlHelper.class, "field_176098_y");
addMapping("GL_COMBINE_RGB", OpenGlHelper.class, "field_176099_x");
addMapping("vboSupportedAti", OpenGlHelper.class, "field_181062_Q");
addMapping("ati", OpenGlHelper.class, "field_181063_b");
addMapping("cpu", OpenGlHelper.class, "field_183030_aa");
addMapping("LOGGER", OpenGlHelper.class, "field_188787_T");
addMapping("lightmapTexUnit", OpenGlHelper.class, "field_77476_b");
addMapping("defaultTexUnit", OpenGlHelper.class, "field_77478_a");
addMapping("worldRenderers", RegionRenderCacheBuilder.class, "field_179040_a");
addMapping("CLOUDS_TEXTURES", RenderGlobal.class, "field_110925_j");
addMapping("END_SKY_TEXTURES", RenderGlobal.class, "field_110926_k");
addMapping("MOON_PHASES_TEXTURES", RenderGlobal.class, "field_110927_h");
addMapping("SUN_TEXTURES", RenderGlobal.class, "field_110928_i");
addMapping("mapSoundPositions", RenderGlobal.class, "field_147593_P");
addMapping("displayListEntitiesDirty", RenderGlobal.class, "field_147595_R");
addMapping("prevRenderSortX", RenderGlobal.class, "field_147596_f");
addMapping("prevRenderSortY", RenderGlobal.class, "field_147597_g");
addMapping("LOGGER", RenderGlobal.class, "field_147599_m");
addMapping("prevRenderSortZ", RenderGlobal.class, "field_147602_h");
addMapping("frustumUpdatePosZ", RenderGlobal.class, "field_174987_D");
addMapping("frustumUpdatePosChunkX", RenderGlobal.class, "field_174988_E");
addMapping("frustumUpdatePosChunkY", RenderGlobal.class, "field_174989_F");
addMapping("frustumUpdatePosChunkZ", RenderGlobal.class, "field_174990_G");
addMapping("entityOutlineShader", RenderGlobal.class, "field_174991_A");
addMapping("frustumUpdatePosX", RenderGlobal.class, "field_174992_B");
addMapping("frustumUpdatePosY", RenderGlobal.class, "field_174993_C");
addMapping("lastViewEntityYaw", RenderGlobal.class, "field_174994_L");
addMapping("renderDispatcher", RenderGlobal.class, "field_174995_M");
addMapping("renderContainer", RenderGlobal.class, "field_174996_N");
addMapping("lastViewEntityX", RenderGlobal.class, "field_174997_H");
addMapping("lastViewEntityY", RenderGlobal.class, "field_174998_I");
addMapping("lastViewEntityZ", RenderGlobal.class, "field_174999_J");
addMapping("lastViewEntityPitch", RenderGlobal.class, "field_175000_K");
addMapping("debugFixedClippingHelper", RenderGlobal.class, "field_175001_U");
addMapping("debugFixTerrainFrustum", RenderGlobal.class, "field_175002_T");
addMapping("debugTerrainFrustumPosition", RenderGlobal.class, "field_175003_W");
addMapping("debugTerrainMatrix", RenderGlobal.class, "field_175004_V");
addMapping("vboEnabled", RenderGlobal.class, "field_175005_X");
addMapping("FORCEFIELD_TEXTURES", RenderGlobal.class, "field_175006_g");
addMapping("renderChunkFactory", RenderGlobal.class, "field_175007_a");
addMapping("viewFrustum", RenderGlobal.class, "field_175008_n");
addMapping("chunksToUpdate", RenderGlobal.class, "field_175009_l");
addMapping("renderManager", RenderGlobal.class, "field_175010_j");
addMapping("sky2VBO", RenderGlobal.class, "field_175011_u");
addMapping("skyVBO", RenderGlobal.class, "field_175012_t");
addMapping("starVBO", RenderGlobal.class, "field_175013_s");
addMapping("vertexBufferFormat", RenderGlobal.class, "field_175014_r");
addMapping("entityOutlineFramebuffer", RenderGlobal.class, "field_175015_z");
addMapping("setTileEntities", RenderGlobal.class, "field_181024_n");
addMapping("entityOutlinesRendered", RenderGlobal.class, "field_184386_ad");
addMapping("setLightUpdates", RenderGlobal.class, "field_184387_ae");
addMapping("damagedBlocks", RenderGlobal.class, "field_72738_E");
addMapping("renderDistanceChunks", RenderGlobal.class, "field_72739_F");
addMapping("renderEntitiesStartupCounter", RenderGlobal.class, "field_72740_G");
addMapping("countEntitiesTotal", RenderGlobal.class, "field_72748_H");
addMapping("countEntitiesRendered", RenderGlobal.class, "field_72749_I");
addMapping("countEntitiesHidden", RenderGlobal.class, "field_72750_J");
addMapping("renderInfos", RenderGlobal.class, "field_72755_R");
addMapping("world", RenderGlobal.class, "field_72769_h");
addMapping("renderEngine", RenderGlobal.class, "field_72770_i");
addMapping("glSkyList", RenderGlobal.class, "field_72771_w");
addMapping("starGLCallList", RenderGlobal.class, "field_72772_v");
addMapping("cloudTickCounter", RenderGlobal.class, "field_72773_u");
addMapping("mc", RenderGlobal.class, "field_72777_q");
addMapping("glSkyList2", RenderGlobal.class, "field_72781_x");
addMapping("destroyBlockIcons", RenderGlobal.class, "field_94141_F");
addMapping("COLOR_BUFFER", RenderHelper.class, "field_74522_a");
addMapping("LIGHT0_POS", RenderHelper.class, "field_82884_b");
addMapping("LIGHT1_POS", RenderHelper.class, "field_82885_c");
addMapping("RES_ITEM_GLINT", RenderItem.class, "field_110798_h");
addMapping("textureManager", RenderItem.class, "field_175057_n");
addMapping("notRenderingEffectsInGUI", RenderItem.class, "field_175058_l");
addMapping("itemModelMesher", RenderItem.class, "field_175059_m");
addMapping("itemColors", RenderItem.class, "field_184395_f");
addMapping("zLevel", RenderItem.class, "field_77023_b");
addMapping("holder", StitcherException.class, "field_98149_a");
addMapping("vboUploader", Tessellator.class, "field_178182_b");
addMapping("buffer", Tessellator.class, "field_178183_a");
addMapping("INSTANCE", Tessellator.class, "field_78398_a");
addMapping("textureUploaded", ThreadDownloadImageData.class, "field_110559_g");
addMapping("bufferedImage", ThreadDownloadImageData.class, "field_110560_d");
addMapping("imageThread", ThreadDownloadImageData.class, "field_110561_e");
addMapping("imageUrl", ThreadDownloadImageData.class, "field_110562_b");
addMapping("imageBuffer", ThreadDownloadImageData.class, "field_110563_c");
addMapping("TEXTURE_DOWNLOADER_THREAD_ID", ThreadDownloadImageData.class, "field_147643_d");
addMapping("LOGGER", ThreadDownloadImageData.class, "field_147644_c");
addMapping("cacheFile", ThreadDownloadImageData.class, "field_152434_e");
addMapping("x", Vector3d.class, "field_181059_a");
addMapping("y", Vector3d.class, "field_181060_b");
addMapping("z", Vector3d.class, "field_181061_c");
addMapping("vertexBuffer", VertexBufferUploader.class, "field_178179_a");
addMapping("renderChunks", ViewFrustum.class, "field_178164_f");
addMapping("countChunksX", ViewFrustum.class, "field_178165_d");
addMapping("countChunksZ", ViewFrustum.class, "field_178166_e");
addMapping("world", ViewFrustum.class, "field_178167_b");
addMapping("countChunksY", ViewFrustum.class, "field_178168_c");
addMapping("renderGlobal", ViewFrustum.class, "field_178169_a");
addMapping("tintIndex", BakedQuad.class, "field_178213_b");
addMapping("face", BakedQuad.class, "field_178214_c");
addMapping("vertexData", BakedQuad.class, "field_178215_a");
addMapping("sprite", BakedQuad.class, "field_187509_d");
addMapping("texture", BakedQuadRetextured.class, "field_178218_d");
addMapping("rotation", BlockFaceUV.class, "field_178350_b");
addMapping("uvs", BlockFaceUV.class, "field_178351_a");
addMapping("partRotation", BlockPart.class, "field_178237_d");
addMapping("shade", BlockPart.class, "field_178238_e");
addMapping("positionTo", BlockPart.class, "field_178239_b");
addMapping("mapFaces", BlockPart.class, "field_178240_c");
addMapping("positionFrom", BlockPart.class, "field_178241_a");
addMapping("texture", BlockPartFace.class, "field_178242_d");
addMapping("blockFaceUV", BlockPartFace.class, "field_178243_e");
addMapping("cullFace", BlockPartFace.class, "field_178244_b");
addMapping("tintIndex", BlockPartFace.class, "field_178245_c");
addMapping("FACING_DEFAULT", BlockPartFace.class, "field_178246_a");
addMapping("rescale", BlockPartRotation.class, "field_178341_d");
addMapping("axis", BlockPartRotation.class, "field_178342_b");
addMapping("angle", BlockPartRotation.class, "field_178343_c");
addMapping("origin", BlockPartRotation.class, "field_178344_a");
addMapping("cameraTransforms", BuiltInModel.class, "field_177557_a");
addMapping("overrideList", BuiltInModel.class, "field_188619_b");
addMapping("SCALE_ROTATION_GENERAL", FaceBakery.class, "field_178417_b");
addMapping("SCALE_ROTATION_22_5", FaceBakery.class, "field_178418_a");
addMapping("UV_ROTATIONS", FaceBakery.class, "field_188016_c");
addMapping("UV_ROTATION_0", FaceBakery.class, "field_188017_d");
addMapping("UV_ROTATION_270", FaceBakery.class, "field_188018_e");
addMapping("UV_ROTATION_INVERSE", FaceBakery.class, "field_188019_f");
addMapping("UV_ROTATION_90", FaceBakery.class, "field_188020_g");
addMapping("head", ItemCameraTransforms.class, "field_178353_d");
addMapping("gui", ItemCameraTransforms.class, "field_178354_e");
addMapping("DEFAULT", ItemCameraTransforms.class, "field_178357_a");
addMapping("offsetTranslateX", ItemCameraTransforms.class, "field_181690_b");
addMapping("offsetTranslateY", ItemCameraTransforms.class, "field_181691_c");
addMapping("offsetTranslateZ", ItemCameraTransforms.class, "field_181692_d");
addMapping("offsetRotationX", ItemCameraTransforms.class, "field_181693_e");
addMapping("offsetRotationY", ItemCameraTransforms.class, "field_181694_f");
addMapping("offsetRotationZ", ItemCameraTransforms.class, "field_181695_g");
addMapping("offsetScaleX", ItemCameraTransforms.class, "field_181696_h");
addMapping("offsetScaleY", ItemCameraTransforms.class, "field_181697_i");
addMapping("offsetScaleZ", ItemCameraTransforms.class, "field_181698_j");
addMapping("ground", ItemCameraTransforms.class, "field_181699_o");
addMapping("fixed", ItemCameraTransforms.class, "field_181700_p");
addMapping("thirdperson_left", ItemCameraTransforms.class, "field_188036_k");
addMapping("thirdperson_right", ItemCameraTransforms.class, "field_188037_l");
addMapping("firstperson_left", ItemCameraTransforms.class, "field_188038_m");
addMapping("firstperson_right", ItemCameraTransforms.class, "field_188039_n");
addMapping("LAYERS", ItemModelGenerator.class, "field_178398_a");
addMapping("location", ItemOverride.class, "field_188028_a");
addMapping("mapResourceValues", ItemOverride.class, "field_188029_b");
addMapping("NONE", ItemOverrideList.class, "field_188022_a");
addMapping("overrides", ItemOverrideList.class, "field_188023_b");
addMapping("scale", ItemTransformVec3f.class, "field_178363_d");
addMapping("rotation", ItemTransformVec3f.class, "field_178364_b");
addMapping("translation", ItemTransformVec3f.class, "field_178365_c");
addMapping("DEFAULT", ItemTransformVec3f.class, "field_178366_a");
addMapping("resourceManager", ModelBakery.class, "field_177598_f");
addMapping("sprites", ModelBakery.class, "field_177599_g");
addMapping("BUILT_IN_MODELS", ModelBakery.class, "field_177600_d");
addMapping("JOINER", ModelBakery.class, "field_177601_e");
addMapping("LOCATIONS_BUILTIN_TEXTURES", ModelBakery.class, "field_177602_b");
addMapping("LOGGER", ModelBakery.class, "field_177603_c");
addMapping("MODEL_MISSING", ModelBakery.class, "field_177604_a");
addMapping("bakedRegistry", ModelBakery.class, "field_177605_n");
addMapping("MODEL_GENERATED", ModelBakery.class, "field_177606_o");
addMapping("faceBakery", ModelBakery.class, "field_177607_l");
addMapping("itemModelGenerator", ModelBakery.class, "field_177608_m");
addMapping("textureMap", ModelBakery.class, "field_177609_j");
addMapping("blockModelShapes", ModelBakery.class, "field_177610_k");
addMapping("models", ModelBakery.class, "field_177611_h");
addMapping("variants", ModelBakery.class, "field_177612_i");
addMapping("variantNames", ModelBakery.class, "field_177613_u");
addMapping("blockDefinitions", ModelBakery.class, "field_177614_t");
addMapping("itemLocations", ModelBakery.class, "field_177615_s");
addMapping("MODEL_ENTITY", ModelBakery.class, "field_177616_r");
addMapping("MISSING_MODEL_MESH", ModelBakery.class, "field_188641_d");
addMapping("multipartVariantMap", ModelBakery.class, "field_188642_k");
addMapping("EMPTY_MODEL_RAW", ModelBakery.class, "field_188643_q");
addMapping("LOGGER", ModelBlock.class, "field_178313_f");
addMapping("elements", ModelBlock.class, "field_178314_g");
addMapping("parent", ModelBlock.class, "field_178315_d");
addMapping("parentLocation", ModelBlock.class, "field_178316_e");
addMapping("name", ModelBlock.class, "field_178317_b");
addMapping("textures", ModelBlock.class, "field_178318_c");
addMapping("SERIALIZER", ModelBlock.class, "field_178319_a");
addMapping("cameraTransforms", ModelBlock.class, "field_178320_j");
addMapping("gui3d", ModelBlock.class, "field_178321_h");
addMapping("ambientOcclusion", ModelBlock.class, "field_178322_i");
addMapping("overrides", ModelBlock.class, "field_187968_k");
addMapping("mapVariants", ModelBlockDefinition.class, "field_178332_b");
addMapping("GSON", ModelBlockDefinition.class, "field_178333_a");
addMapping("multipart", ModelBlockDefinition.class, "field_188005_c");
addMapping("defaultModel", ModelManager.class, "field_174955_d");
addMapping("texMap", ModelManager.class, "field_174956_b");
addMapping("modelProvider", ModelManager.class, "field_174957_c");
addMapping("modelRegistry", ModelManager.class, "field_174958_a");
addMapping("variant", ModelResourceLocation.class, "field_177519_c");
addMapping("quartersY", ModelRotation.class, "field_177542_u");
addMapping("quartersX", ModelRotation.class, "field_177543_t");
addMapping("matrix4d", ModelRotation.class, "field_177544_s");
addMapping("combinedXY", ModelRotation.class, "field_177545_r");
addMapping("MAP_ROTATIONS", ModelRotation.class, "field_177546_q");
addMapping("ambientOcclusion", MultipartBakedModel.class, "field_188621_a");
addMapping("gui3D", MultipartBakedModel.class, "field_188622_b");
addMapping("particleTexture", MultipartBakedModel.class, "field_188623_c");
addMapping("cameraTransforms", MultipartBakedModel.class, "field_188624_d");
addMapping("overrides", MultipartBakedModel.class, "field_188625_e");
addMapping("selectors", MultipartBakedModel.class, "field_188626_f");
addMapping("cameraTransforms", SimpleBakedModel.class, "field_177558_f");
addMapping("gui3d", SimpleBakedModel.class, "field_177559_d");
addMapping("texture", SimpleBakedModel.class, "field_177560_e");
addMapping("faceQuads", SimpleBakedModel.class, "field_177561_b");
addMapping("ambientOcclusion", SimpleBakedModel.class, "field_177562_c");
addMapping("generalQuads", SimpleBakedModel.class, "field_177563_a");
addMapping("itemOverrideList", SimpleBakedModel.class, "field_188620_g");
addMapping("modelLocation", Variant.class, "field_188050_a");
addMapping("rotation", Variant.class, "field_188051_b");
addMapping("uvLock", Variant.class, "field_188052_c");
addMapping("weight", Variant.class, "field_188053_d");
addMapping("variantList", VariantList.class, "field_188115_a");
addMapping("models", WeightedBakedModel.class, "field_177565_b");
addMapping("baseModel", WeightedBakedModel.class, "field_177566_c");
addMapping("totalWeight", WeightedBakedModel.class, "field_177567_a");
addMapping("conditions", ConditionAnd.class, "field_188121_c");
addMapping("conditions", ConditionOr.class, "field_188127_c");
addMapping("SPLITTER", ConditionPropertyValue.class, "field_188124_c");
addMapping("key", ConditionPropertyValue.class, "field_188125_d");
addMapping("value", ConditionPropertyValue.class, "field_188126_e");
addMapping("TRUE", ICondition.class, "field_188119_a");
addMapping("FALSE", ICondition.class, "field_188120_b");
addMapping("selectors", Multipart.class, "field_188139_a");
addMapping("stateContainer", Multipart.class, "field_188140_b");
addMapping("condition", Selector.class, "field_188167_a");
addMapping("variantList", Selector.class, "field_188168_b");
addMapping("setBuiltInBlocks", BlockStateMapper.class, "field_178449_b");
addMapping("blockStateMap", BlockStateMapper.class, "field_178450_a");
addMapping("ignored", StateMap.class, "field_178140_d");
addMapping("suffix", StateMap.class, "field_178141_c");
addMapping("name", StateMap.class, "field_178142_a");
addMapping("mapStateModelLocations", StateMapperBase.class, "field_178133_b");
addMapping("compiledChunk", ChunkCompileTaskGenerator.class, "field_178547_f");
addMapping("status", ChunkCompileTaskGenerator.class, "field_178548_g");
addMapping("type", ChunkCompileTaskGenerator.class, "field_178549_d");
addMapping("regionRenderCacheBuilder", ChunkCompileTaskGenerator.class, "field_178550_e");
addMapping("lock", ChunkCompileTaskGenerator.class, "field_178551_b");
addMapping("listFinishRunnables", ChunkCompileTaskGenerator.class, "field_178552_c");
addMapping("renderChunk", ChunkCompileTaskGenerator.class, "field_178553_a");
addMapping("finished", ChunkCompileTaskGenerator.class, "field_178554_h");
addMapping("distanceSq", ChunkCompileTaskGenerator.class, "field_188229_e");
addMapping("worldVertexUploader", ChunkRenderDispatcher.class, "field_178517_f");
addMapping("vertexUploader", ChunkRenderDispatcher.class, "field_178518_g");
addMapping("queueChunkUpdates", ChunkRenderDispatcher.class, "field_178519_d");
addMapping("queueFreeRenderBuilders", ChunkRenderDispatcher.class, "field_178520_e");
addMapping("THREAD_FACTORY", ChunkRenderDispatcher.class, "field_178521_b");
addMapping("listThreadedWorkers", ChunkRenderDispatcher.class, "field_178522_c");
addMapping("LOGGER", ChunkRenderDispatcher.class, "field_178523_a");
addMapping("queueChunkUploads", ChunkRenderDispatcher.class, "field_178524_h");
addMapping("renderWorker", ChunkRenderDispatcher.class, "field_178525_i");
addMapping("countRenderBuilders", ChunkRenderDispatcher.class, "field_188249_c");
addMapping("listWorkerThreads", ChunkRenderDispatcher.class, "field_188250_d");
addMapping("LOGGER", ChunkRenderWorker.class, "field_152478_a");
addMapping("chunkRenderDispatcher", ChunkRenderWorker.class, "field_178477_b");
addMapping("regionRenderCacheBuilder", ChunkRenderWorker.class, "field_178478_c");
addMapping("shouldRun", ChunkRenderWorker.class, "field_188265_d");
addMapping("setVisibility", CompiledChunk.class, "field_178496_f");
addMapping("state", CompiledChunk.class, "field_178497_g");
addMapping("empty", CompiledChunk.class, "field_178498_d");
addMapping("tileEntities", CompiledChunk.class, "field_178499_e");
addMapping("layersUsed", CompiledChunk.class, "field_178500_b");
addMapping("layersStarted", CompiledChunk.class, "field_178501_c");
addMapping("DUMMY", CompiledChunk.class, "field_178502_a");
addMapping("baseDisplayList", ListedRenderChunk.class, "field_178601_d");
addMapping("position", RenderChunk.class, "field_178586_f");
addMapping("lockCompileTask", RenderChunk.class, "field_178587_g");
addMapping("world", RenderChunk.class, "field_178588_d");
addMapping("renderGlobal", RenderChunk.class, "field_178589_e");
addMapping("compiledChunk", RenderChunk.class, "field_178590_b");
addMapping("boundingBox", RenderChunk.class, "field_178591_c");
addMapping("renderChunksUpdated", RenderChunk.class, "field_178592_a");
addMapping("needsUpdate", RenderChunk.class, "field_178593_n");
addMapping("vertexBuffers", RenderChunk.class, "field_178594_l");
addMapping("frameIndex", RenderChunk.class, "field_178595_m");
addMapping("index", RenderChunk.class, "field_178596_j");
addMapping("modelviewMatrix", RenderChunk.class, "field_178597_k");
addMapping("lockCompiledChunk", RenderChunk.class, "field_178598_h");
addMapping("compileTask", RenderChunk.class, "field_178599_i");
addMapping("setTileEntities", RenderChunk.class, "field_181056_j");
addMapping("mapEnumFacing", RenderChunk.class, "field_181702_p");
addMapping("needsImmediateUpdate", RenderChunk.class, "field_188284_q");
addMapping("worldView", RenderChunk.class, "field_189564_r");
addMapping("bitSet", SetVisibility.class, "field_178622_b");
addMapping("COUNT_FACES", SetVisibility.class, "field_178623_a");
addMapping("empty", VisGraph.class, "field_178611_f");
addMapping("bitSet", VisGraph.class, "field_178612_d");
addMapping("INDEX_OF_EDGES", VisGraph.class, "field_178613_e");
addMapping("DZ", VisGraph.class, "field_178614_b");
addMapping("DY", VisGraph.class, "field_178615_c");
addMapping("DX", VisGraph.class, "field_178616_a");
addMapping("mapBlockColors", BlockColors.class, "field_186725_a");
addMapping("mapItemColors", ItemColors.class, "field_186732_a");
addMapping("projectionMatrix", ClippingHelper.class, "field_178625_b");
addMapping("modelviewMatrix", ClippingHelper.class, "field_178626_c");
addMapping("clippingMatrix", ClippingHelper.class, "field_78554_d");
addMapping("frustum", ClippingHelper.class, "field_78557_a");
addMapping("projectionMatrixBuffer", ClippingHelperImpl.class, "field_78561_f");
addMapping("modelviewMatrixBuffer", ClippingHelperImpl.class, "field_78562_g");
addMapping("instance", ClippingHelperImpl.class, "field_78563_e");
addMapping("floatBuffer16", ClippingHelperImpl.class, "field_78564_h");
addMapping("z", Frustum.class, "field_78549_d");
addMapping("x", Frustum.class, "field_78550_b");
addMapping("y", Frustum.class, "field_78551_c");
addMapping("clippingHelper", Frustum.class, "field_78552_a");
addMapping("pathfinding", DebugRenderer.class, "field_188286_a");
addMapping("water", DebugRenderer.class, "field_188287_b");
addMapping("chunkBorder", DebugRenderer.class, "field_190077_c");
addMapping("heightMap", DebugRenderer.class, "field_190078_d");
addMapping("chunkBorderEnabled", DebugRenderer.class, "field_190079_e");
addMapping("pathfindingEnabled", DebugRenderer.class, "field_190080_f");
addMapping("waterEnabled", DebugRenderer.class, "field_190081_g");
addMapping("heightMapEnabled", DebugRenderer.class, "field_190082_h");
addMapping("collisionBox", DebugRenderer.class, "field_191325_e");
addMapping("collisionBoxEnabled", DebugRenderer.class, "field_191326_j");
addMapping("neighborsUpdate", DebugRenderer.class, "field_191557_f");
addMapping("neighborsUpdateEnabled", DebugRenderer.class, "field_191558_l");
addMapping("solidFace", DebugRenderer.class, "field_193852_g");
addMapping("solidFaceEnabled", DebugRenderer.class, "field_193853_n");
addMapping("minecraft", DebugRendererChunkBorder.class, "field_190072_a");
addMapping("minecraft", DebugRendererCollisionBox.class, "field_191312_a");
addMapping("player", DebugRendererCollisionBox.class, "field_191313_b");
addMapping("renderPosX", DebugRendererCollisionBox.class, "field_191314_c");
addMapping("renderPosY", DebugRendererCollisionBox.class, "field_191315_d");
addMapping("renderPosZ", DebugRendererCollisionBox.class, "field_191316_e");
addMapping("minecraft", DebugRendererHeightMap.class, "field_190061_a");
addMapping("minecraft", DebugRendererNeighborsUpdate.class, "field_191554_a");
addMapping("lastUpdate", DebugRendererNeighborsUpdate.class, "field_191555_b");
addMapping("minecraft", DebugRendererPathfinding.class, "field_188290_a");
addMapping("pathMap", DebugRendererPathfinding.class, "field_188291_b");
addMapping("pathMaxDistance", DebugRendererPathfinding.class, "field_188292_c");
addMapping("creationMap", DebugRendererPathfinding.class, "field_188293_d");
addMapping("player", DebugRendererPathfinding.class, "field_190068_e");
addMapping("xo", DebugRendererPathfinding.class, "field_190069_f");
addMapping("yo", DebugRendererPathfinding.class, "field_190070_g");
addMapping("zo", DebugRendererPathfinding.class, "field_190071_h");
addMapping("minecraft", DebugRendererSolidFace.class, "field_193851_a");
addMapping("minecraft", DebugRendererWater.class, "field_188288_a");
addMapping("player", DebugRendererWater.class, "field_190062_b");
addMapping("xo", DebugRendererWater.class, "field_190063_c");
addMapping("yo", DebugRendererWater.class, "field_190064_d");
addMapping("zo", DebugRendererWater.class, "field_190065_e");
addMapping("SHADOW_TEXTURES", Render.class, "field_110778_a");
addMapping("renderOutlines", Render.class, "field_188301_f");
addMapping("shadowOpaque", Render.class, "field_76987_f");
addMapping("shadowSize", Render.class, "field_76989_e");
addMapping("renderManager", Render.class, "field_76990_c");
addMapping("MAP", RenderAbstractHorse.class, "field_191359_a");
addMapping("scale", RenderAbstractHorse.class, "field_191360_j");
addMapping("TEXTURE_ARMOR_STAND", RenderArmorStand.class, "field_177103_a");
addMapping("BAT_TEXTURES", RenderBat.class, "field_110835_a");
addMapping("DEFAULT_RES_LOC", RenderBiped.class, "field_177118_j");
addMapping("BLAZE_TEXTURES", RenderBlaze.class, "field_110837_a");
addMapping("BOAT_TEXTURES", RenderBoat.class, "field_110782_f");
addMapping("modelBoat", RenderBoat.class, "field_76998_a");
addMapping("CAVE_SPIDER_TEXTURES", RenderCaveSpider.class, "field_110893_a");
addMapping("CHICKEN_TEXTURES", RenderChicken.class, "field_110920_a");
addMapping("COW_TEXTURES", RenderCow.class, "field_110833_a");
addMapping("CREEPER_TEXTURES", RenderCreeper.class, "field_110830_f");
addMapping("DRAGON_EXPLODING_TEXTURES", RenderDragon.class, "field_110842_f");
addMapping("ENDERCRYSTAL_BEAM_TEXTURES", RenderDragon.class, "field_110843_g");
addMapping("DRAGON_TEXTURES", RenderDragon.class, "field_110844_k");
addMapping("DRAGON_FIREBALL_TEXTURE", RenderDragonFireball.class, "field_188314_a");
addMapping("GUARDIAN_ELDER_TEXTURE", RenderElderGuardian.class, "field_177116_j");
addMapping("ENDER_CRYSTAL_TEXTURES", RenderEnderCrystal.class, "field_110787_a");
addMapping("modelEnderCrystalNoBase", RenderEnderCrystal.class, "field_188316_g");
addMapping("modelEnderCrystal", RenderEnderCrystal.class, "field_76995_b");
addMapping("ENDERMAN_TEXTURES", RenderEnderman.class, "field_110839_f");
addMapping("rnd", RenderEnderman.class, "field_77077_b");
addMapping("ENDERMITE_TEXTURES", RenderEndermite.class, "field_177108_a");
addMapping("random", RenderEntityItem.class, "field_177079_e");
addMapping("itemRenderer", RenderEntityItem.class, "field_177080_a");
addMapping("EVOKER_ILLAGER", RenderEvoker.class, "field_191338_a");
addMapping("EVOKER_ILLAGER_FANGS", RenderEvokerFangs.class, "field_191329_a");
addMapping("model", RenderEvokerFangs.class, "field_191330_f");
addMapping("scale", RenderFireball.class, "field_77002_a");
addMapping("FISH_PARTICLES", RenderFish.class, "field_110792_a");
addMapping("GHAST_SHOOTING_TEXTURES", RenderGhast.class, "field_110868_f");
addMapping("GHAST_TEXTURES", RenderGhast.class, "field_110869_a");
addMapping("ZOMBIE_TEXTURES", RenderGiantZombie.class, "field_110871_a");
addMapping("scale", RenderGiantZombie.class, "field_77073_a");
addMapping("GUARDIAN_TEXTURE", RenderGuardian.class, "field_177114_e");
addMapping("GUARDIAN_BEAM_TEXTURE", RenderGuardian.class, "field_177117_k");
addMapping("LAYERED_LOCATION_CACHE", RenderHorse.class, "field_110852_a");
addMapping("HUSK_ZOMBIE_TEXTURES", RenderHusk.class, "field_190086_r");
addMapping("ILLUSIONIST", RenderIllusionIllager.class, "field_193121_a");
addMapping("IRON_GOLEM_TEXTURES", RenderIronGolem.class, "field_110899_a");
addMapping("MAP_BACKGROUND_TEXTURES", RenderItemFrame.class, "field_110789_a");
addMapping("mc", RenderItemFrame.class, "field_147917_g");
addMapping("itemFrameModel", RenderItemFrame.class, "field_177072_f");
addMapping("mapModel", RenderItemFrame.class, "field_177073_g");
addMapping("itemRenderer", RenderItemFrame.class, "field_177074_h");
addMapping("leashKnotModel", RenderLeashKnot.class, "field_110801_f");
addMapping("LEASH_KNOT_TEXTURES", RenderLeashKnot.class, "field_110802_a");
addMapping("LOGGER", RenderLivingBase.class, "field_147923_a");
addMapping("brightnessBuffer", RenderLivingBase.class, "field_177095_g");
addMapping("TEXTURE_BRIGHTNESS", RenderLivingBase.class, "field_177096_e");
addMapping("layerRenderers", RenderLivingBase.class, "field_177097_h");
addMapping("renderMarker", RenderLivingBase.class, "field_188323_j");
addMapping("mainModel", RenderLivingBase.class, "field_77045_g");
addMapping("LLAMA_TEXTURES", RenderLlama.class, "field_191350_a");
addMapping("LLAMA_SPIT_TEXTURE", RenderLlamaSpit.class, "field_191333_a");
addMapping("model", RenderLlamaSpit.class, "field_191334_f");
addMapping("MAGMA_CUBE_TEXTURES", RenderMagmaCube.class, "field_110873_a");
addMapping("pointedEntity", RenderManager.class, "field_147941_i");
addMapping("skinMap", RenderManager.class, "field_178636_l");
addMapping("playerRenderer", RenderManager.class, "field_178637_m");
addMapping("renderShadow", RenderManager.class, "field_178638_s");
addMapping("renderOutlines", RenderManager.class, "field_178639_r");
addMapping("world", RenderManager.class, "field_78722_g");
addMapping("renderPosZ", RenderManager.class, "field_78723_d");
addMapping("renderEngine", RenderManager.class, "field_78724_e");
addMapping("renderPosX", RenderManager.class, "field_78725_b");
addMapping("renderPosY", RenderManager.class, "field_78726_c");
addMapping("viewerPosZ", RenderManager.class, "field_78728_n");
addMapping("entityRenderMap", RenderManager.class, "field_78729_o");
addMapping("viewerPosX", RenderManager.class, "field_78730_l");
addMapping("viewerPosY", RenderManager.class, "field_78731_m");
addMapping("playerViewX", RenderManager.class, "field_78732_j");
addMapping("options", RenderManager.class, "field_78733_k");
addMapping("renderViewEntity", RenderManager.class, "field_78734_h");
addMapping("playerViewY", RenderManager.class, "field_78735_i");
addMapping("textRenderer", RenderManager.class, "field_78736_p");
addMapping("debugBoundingBox", RenderManager.class, "field_85095_o");
addMapping("MINECART_TEXTURES", RenderMinecart.class, "field_110804_g");
addMapping("modelMinecart", RenderMinecart.class, "field_77013_a");
addMapping("MOOSHROOM_TEXTURES", RenderMooshroom.class, "field_110880_a");
addMapping("OCELOT_TEXTURES", RenderOcelot.class, "field_110875_f");
addMapping("RED_OCELOT_TEXTURES", RenderOcelot.class, "field_110876_g");
addMapping("BLACK_OCELOT_TEXTURES", RenderOcelot.class, "field_110877_a");
addMapping("SIAMESE_OCELOT_TEXTURES", RenderOcelot.class, "field_110878_h");
addMapping("KRISTOFFER_PAINTING_TEXTURE", RenderPainting.class, "field_110807_a");
addMapping("PARROT_TEXTURES", RenderParrot.class, "field_192862_a");
addMapping("PIG_TEXTURES", RenderPig.class, "field_110887_f");
addMapping("ZOMBIE_PIGMAN_TEXTURE", RenderPigZombie.class, "field_177120_j");
addMapping("smallArms", RenderPlayer.class, "field_177140_a");
addMapping("POLAR_BEAR_TEXTURE", RenderPolarBear.class, "field_190090_a");
addMapping("WHITE", RenderRabbit.class, "field_177126_e");
addMapping("BROWN", RenderRabbit.class, "field_177127_a");
addMapping("TOAST", RenderRabbit.class, "field_177128_n");
addMapping("CAERBANNOG", RenderRabbit.class, "field_177129_o");
addMapping("SALT", RenderRabbit.class, "field_177130_l");
addMapping("WHITE_SPLOTCHED", RenderRabbit.class, "field_177131_m");
addMapping("BLACK", RenderRabbit.class, "field_177132_j");
addMapping("GOLD", RenderRabbit.class, "field_177133_k");
addMapping("SHEARED_SHEEP_TEXTURES", RenderSheep.class, "field_110884_f");
addMapping("SHULKER_ENDERGOLEM_TEXTURE", RenderShulker.class, "field_188342_a");
addMapping("SHULKER_SPARK_TEXTURE", RenderShulkerBullet.class, "field_188348_a");
addMapping("model", RenderShulkerBullet.class, "field_188349_b");
addMapping("SILVERFISH_TEXTURES", RenderSilverfish.class, "field_110882_a");
addMapping("SKELETON_TEXTURES", RenderSkeleton.class, "field_110862_k");
addMapping("SLIME_TEXTURES", RenderSlime.class, "field_110897_a");
addMapping("SNOW_MAN_TEXTURES", RenderSnowMan.class, "field_110895_a");
addMapping("itemRenderer", RenderSnowball.class, "field_177083_e");
addMapping("item", RenderSnowball.class, "field_177084_a");
addMapping("RES_SPECTRAL_ARROW", RenderSpectralArrow.class, "field_188303_a");
addMapping("SPIDER_TEXTURES", RenderSpider.class, "field_110890_f");
addMapping("SQUID_TEXTURES", RenderSquid.class, "field_110901_a");
addMapping("STRAY_SKELETON_TEXTURES", RenderStray.class, "field_190084_m");
addMapping("RES_ARROW", RenderTippedArrow.class, "field_188305_a");
addMapping("RES_TIPPED_ARROW", RenderTippedArrow.class, "field_188306_b");
addMapping("VEX_TEXTURE", RenderVex.class, "field_191343_a");
addMapping("VEX_CHARGING_TEXTURE", RenderVex.class, "field_191344_j");
addMapping("modelVersion", RenderVex.class, "field_191345_k");
addMapping("VILLAGER_TEXTURES", RenderVillager.class, "field_110903_f");
addMapping("FARMER_VILLAGER_TEXTURES", RenderVillager.class, "field_110904_g");
addMapping("SMITH_VILLAGER_TEXTURES", RenderVillager.class, "field_110905_l");
addMapping("BUTCHER_VILLAGER_TEXTURES", RenderVillager.class, "field_110906_m");
addMapping("PRIEST_VILLAGER_TEXTURES", RenderVillager.class, "field_110907_k");
addMapping("LIBRARIAN_VILLAGER_TEXTURES", RenderVillager.class, "field_110908_h");
addMapping("VINDICATOR_TEXTURE", RenderVindicator.class, "field_191357_a");
addMapping("WITCH_TEXTURES", RenderWitch.class, "field_110910_a");
addMapping("WITHER_TEXTURES", RenderWither.class, "field_110912_f");
addMapping("INVULNERABLE_WITHER_TEXTURES", RenderWither.class, "field_110913_a");
addMapping("WITHER_SKELETON_TEXTURES", RenderWitherSkeleton.class, "field_110861_l");
addMapping("WITHER_TEXTURES", RenderWitherSkull.class, "field_110810_f");
addMapping("INVULNERABLE_WITHER_TEXTURES", RenderWitherSkull.class, "field_110811_a");
addMapping("skeletonHeadModel", RenderWitherSkull.class, "field_82401_a");
addMapping("TAMED_WOLF_TEXTURES", RenderWolf.class, "field_110915_f");
addMapping("ANRGY_WOLF_TEXTURES", RenderWolf.class, "field_110916_g");
addMapping("WOLF_TEXTURES", RenderWolf.class, "field_110917_a");
addMapping("EXPERIENCE_ORB_TEXTURES", RenderXPOrb.class, "field_110785_a");
addMapping("ZOMBIE_TEXTURES", RenderZombie.class, "field_110865_p");
addMapping("ZOMBIE_VILLAGER_TEXTURES", RenderZombieVillager.class, "field_110864_q");
addMapping("ZOMBIE_VILLAGER_BUTCHER_LOCATION", RenderZombieVillager.class, "field_188329_p");
addMapping("ZOMBIE_VILLAGER_FARMER_LOCATION", RenderZombieVillager.class, "field_188330_l");
addMapping("ZOMBIE_VILLAGER_LIBRARIAN_LOC", RenderZombieVillager.class, "field_188331_m");
addMapping("ZOMBIE_VILLAGER_PRIEST_LOCATION", RenderZombieVillager.class, "field_188332_n");
addMapping("ZOMBIE_VILLAGER_SMITH_LOCATION", RenderZombieVillager.class, "field_188333_o");
addMapping("colorR", LayerArmorBase.class, "field_177184_f");
addMapping("colorG", LayerArmorBase.class, "field_177185_g");
addMapping("modelArmor", LayerArmorBase.class, "field_177186_d");
addMapping("alpha", LayerArmorBase.class, "field_177187_e");
addMapping("ENCHANTED_ITEM_GLINT_RES", LayerArmorBase.class, "field_177188_b");
addMapping("modelLeggings", LayerArmorBase.class, "field_177189_c");
addMapping("renderer", LayerArmorBase.class, "field_177190_a");
addMapping("ARMOR_TEXTURE_RES_MAP", LayerArmorBase.class, "field_177191_j");
addMapping("colorB", LayerArmorBase.class, "field_177192_h");
addMapping("skipRenderGlint", LayerArmorBase.class, "field_177193_i");
addMapping("renderer", LayerArrow.class, "field_177168_a");
addMapping("playerRenderer", LayerCape.class, "field_177167_a");
addMapping("creeperRenderer", LayerCreeperCharge.class, "field_177170_b");
addMapping("creeperModel", LayerCreeperCharge.class, "field_177171_c");
addMapping("LIGHTNING_TEXTURE", LayerCreeperCharge.class, "field_177172_a");
addMapping("modelRenderer", LayerCustomHead.class, "field_177209_a");
addMapping("playerRenderer", LayerDeadmau5Head.class, "field_177208_a");
addMapping("TEXTURE_ELYTRA", LayerElytra.class, "field_188355_a");
addMapping("renderPlayer", LayerElytra.class, "field_188356_b");
addMapping("modelElytra", LayerElytra.class, "field_188357_c");
addMapping("dragonRenderer", LayerEnderDragonEyes.class, "field_177211_b");
addMapping("TEXTURE", LayerEnderDragonEyes.class, "field_177212_a");
addMapping("endermanRenderer", LayerEndermanEyes.class, "field_177202_b");
addMapping("RES_ENDERMAN_EYES", LayerEndermanEyes.class, "field_177203_a");
addMapping("leftRenderer", LayerEntityOnShoulder.class, "field_192865_a");
addMapping("rightRenderer", LayerEntityOnShoulder.class, "field_192866_b");
addMapping("renderManager", LayerEntityOnShoulder.class, "field_192867_c");
addMapping("leftModel", LayerEntityOnShoulder.class, "field_192868_d");
addMapping("leftResource", LayerEntityOnShoulder.class, "field_192869_e");
addMapping("leftUniqueId", LayerEntityOnShoulder.class, "field_192870_f");
addMapping("leftEntityClass", LayerEntityOnShoulder.class, "field_192871_g");
addMapping("rightModel", LayerEntityOnShoulder.class, "field_192872_h");
addMapping("rightResource", LayerEntityOnShoulder.class, "field_192873_i");
addMapping("rightUniqueId", LayerEntityOnShoulder.class, "field_192874_j");
addMapping("rightEntityClass", LayerEntityOnShoulder.class, "field_192875_k");
addMapping("endermanRenderer", LayerHeldBlock.class, "field_177174_a");
addMapping("livingEntityRenderer", LayerHeldItem.class, "field_177206_a");
addMapping("witchRenderer", LayerHeldItemWitch.class, "field_177144_a");
addMapping("ironGolemRenderer", LayerIronGolemFlower.class, "field_177154_a");
addMapping("LLAMA_DECOR_TEXTURES", LayerLlamaDecor.class, "field_191364_a");
addMapping("renderer", LayerLlamaDecor.class, "field_191365_b");
addMapping("model", LayerLlamaDecor.class, "field_191366_c");
addMapping("mooshroomRenderer", LayerMooshroomMushroom.class, "field_177205_a");
addMapping("pigRenderer", LayerSaddle.class, "field_177156_b");
addMapping("pigModel", LayerSaddle.class, "field_177157_c");
addMapping("TEXTURE", LayerSaddle.class, "field_177158_a");
addMapping("sheepRenderer", LayerSheepWool.class, "field_177163_b");
addMapping("sheepModel", LayerSheepWool.class, "field_177164_c");
addMapping("TEXTURE", LayerSheepWool.class, "field_177165_a");
addMapping("slimeModel", LayerSlimeGel.class, "field_177160_b");
addMapping("slimeRenderer", LayerSlimeGel.class, "field_177161_a");
addMapping("snowManRenderer", LayerSnowmanHead.class, "field_177152_a");
addMapping("spiderRenderer", LayerSpiderEyes.class, "field_177149_b");
addMapping("SPIDER_EYES", LayerSpiderEyes.class, "field_177150_a");
addMapping("STRAY_CLOTHES_TEXTURES", LayerStrayClothing.class, "field_190092_a");
addMapping("renderer", LayerStrayClothing.class, "field_190093_b");
addMapping("layerModel", LayerStrayClothing.class, "field_190094_c");
addMapping("witherRenderer", LayerWitherAura.class, "field_177215_b");
addMapping("witherModel", LayerWitherAura.class, "field_177216_c");
addMapping("WITHER_ARMOR", LayerWitherAura.class, "field_177217_a");
addMapping("wolfRenderer", LayerWolfCollar.class, "field_177146_b");
addMapping("WOLF_COLLAR", LayerWolfCollar.class, "field_177147_a");
addMapping("glTextureId", AbstractTexture.class, "field_110553_a");
addMapping("blurLast", AbstractTexture.class, "field_174938_d");
addMapping("mipmapLast", AbstractTexture.class, "field_174939_e");
addMapping("blur", AbstractTexture.class, "field_174940_b");
addMapping("mipmap", AbstractTexture.class, "field_174941_c");
addMapping("dynamicTextureData", DynamicTexture.class, "field_110566_b");
addMapping("width", DynamicTexture.class, "field_94233_j");
addMapping("height", DynamicTexture.class, "field_94234_k");
addMapping("LOGGER", LayeredColorMaskTexture.class, "field_174947_f");
addMapping("textureLocation", LayeredColorMaskTexture.class, "field_174948_g");
addMapping("listTextures", LayeredColorMaskTexture.class, "field_174949_h");
addMapping("listDyeColors", LayeredColorMaskTexture.class, "field_174950_i");
addMapping("layeredTextureNames", LayeredTexture.class, "field_110567_b");
addMapping("LOGGER", LayeredTexture.class, "field_147638_c");
addMapping("pngWidth", PngSizeInfo.class, "field_188533_a");
addMapping("pngHeight", PngSizeInfo.class, "field_188534_b");
addMapping("textureLocation", SimpleTexture.class, "field_110568_b");
addMapping("LOGGER", SimpleTexture.class, "field_147639_c");
addMapping("mipmapLevelStitcher", Stitcher.class, "field_147971_a");
addMapping("maxHeight", Stitcher.class, "field_94313_f");
addMapping("currentHeight", Stitcher.class, "field_94315_d");
addMapping("maxWidth", Stitcher.class, "field_94316_e");
addMapping("stitchSlots", Stitcher.class, "field_94317_b");
addMapping("currentWidth", Stitcher.class, "field_94318_c");
addMapping("setStitchHolders", Stitcher.class, "field_94319_a");
addMapping("maxTileDimension", Stitcher.class, "field_94323_h");
addMapping("frameCounter", TextureAtlasSprite.class, "field_110973_g");
addMapping("originY", TextureAtlasSprite.class, "field_110974_d");
addMapping("originX", TextureAtlasSprite.class, "field_110975_c");
addMapping("framesTextureData", TextureAtlasSprite.class, "field_110976_a");
addMapping("minV", TextureAtlasSprite.class, "field_110977_n");
addMapping("maxV", TextureAtlasSprite.class, "field_110978_o");
addMapping("minU", TextureAtlasSprite.class, "field_110979_l");
addMapping("maxU", TextureAtlasSprite.class, "field_110980_m");
addMapping("animationMetadata", TextureAtlasSprite.class, "field_110982_k");
addMapping("tickCounter", TextureAtlasSprite.class, "field_110983_h");
addMapping("iconName", TextureAtlasSprite.class, "field_110984_i");
addMapping("rotated", TextureAtlasSprite.class, "field_130222_e");
addMapping("width", TextureAtlasSprite.class, "field_130223_c");
addMapping("height", TextureAtlasSprite.class, "field_130224_d");
addMapping("interpolatedFrameData", TextureAtlasSprite.class, "field_176605_b");
addMapping("resourceManager", TextureManager.class, "field_110582_d");
addMapping("listTickables", TextureManager.class, "field_110583_b");
addMapping("mapTextureCounters", TextureManager.class, "field_110584_c");
addMapping("mapTextureObjects", TextureManager.class, "field_110585_a");
addMapping("LOGGER", TextureManager.class, "field_147646_a");
addMapping("RESOURCE_LOCATION_EMPTY", TextureManager.class, "field_194008_a");
addMapping("mapRegisteredSprites", TextureMap.class, "field_110574_e");
addMapping("LOCATION_BLOCKS_TEXTURE", TextureMap.class, "field_110575_b");
addMapping("LOGGER", TextureMap.class, "field_147635_d");
addMapping("mipmapLevels", TextureMap.class, "field_147636_j");
addMapping("LOCATION_MISSING_TEXTURE", TextureMap.class, "field_174945_f");
addMapping("iconCreator", TextureMap.class, "field_174946_m");
addMapping("missingImage", TextureMap.class, "field_94249_f");
addMapping("mapUploadedSprites", TextureMap.class, "field_94252_e");
addMapping("basePath", TextureMap.class, "field_94254_c");
addMapping("listAnimatedSprites", TextureMap.class, "field_94258_i");
addMapping("MISSING_TEXTURE_DATA", TextureUtil.class, "field_110999_b");
addMapping("DATA_BUFFER", TextureUtil.class, "field_111000_c");
addMapping("MISSING_TEXTURE", TextureUtil.class, "field_111001_a");
addMapping("MIPMAP_BUFFER", TextureUtil.class, "field_147957_g");
addMapping("LOGGER", TextureUtil.class, "field_147959_c");
addMapping("COLOR_GAMMAS", TextureUtil.class, "field_188544_e");
addMapping("bannerModel", TileEntityBannerRenderer.class, "field_178465_e");
addMapping("TEXTURE_BEACON_BEAM", TileEntityBeaconRenderer.class, "field_147523_b");
addMapping("TEXTURES", TileEntityBedRenderer.class, "field_193848_a");
addMapping("model", TileEntityBedRenderer.class, "field_193849_d");
addMapping("version", TileEntityBedRenderer.class, "field_193850_e");
addMapping("TEXTURE_CHRISTMAS", TileEntityChestRenderer.class, "field_147503_f");
addMapping("TEXTURE_NORMAL", TileEntityChestRenderer.class, "field_147504_g");
addMapping("TEXTURE_NORMAL_DOUBLE", TileEntityChestRenderer.class, "field_147505_d");
addMapping("TEXTURE_TRAPPED", TileEntityChestRenderer.class, "field_147506_e");
addMapping("TEXTURE_TRAPPED_DOUBLE", TileEntityChestRenderer.class, "field_147507_b");
addMapping("TEXTURE_CHRISTMAS_DOUBLE", TileEntityChestRenderer.class, "field_147508_c");
addMapping("isChristmas", TileEntityChestRenderer.class, "field_147509_j");
addMapping("simpleChest", TileEntityChestRenderer.class, "field_147510_h");
addMapping("largeChest", TileEntityChestRenderer.class, "field_147511_i");
addMapping("TEXTURE_BOOK", TileEntityEnchantmentTableRenderer.class, "field_147540_b");
addMapping("modelBook", TileEntityEnchantmentTableRenderer.class, "field_147541_c");
addMapping("END_GATEWAY_BEAM_TEXTURE", TileEntityEndGatewayRenderer.class, "field_188199_f");
addMapping("END_PORTAL_TEXTURE", TileEntityEndPortalRenderer.class, "field_147526_d");
addMapping("RANDOM", TileEntityEndPortalRenderer.class, "field_147527_e");
addMapping("buffer", TileEntityEndPortalRenderer.class, "field_147528_b");
addMapping("END_SKY_TEXTURE", TileEntityEndPortalRenderer.class, "field_147529_c");
addMapping("MODELVIEW", TileEntityEndPortalRenderer.class, "field_188201_h");
addMapping("PROJECTION", TileEntityEndPortalRenderer.class, "field_188202_i");
addMapping("ENDER_CHEST_TEXTURE", TileEntityEnderChestRenderer.class, "field_147520_b");
addMapping("modelChest", TileEntityEnderChestRenderer.class, "field_147521_c");
addMapping("enderChest", TileEntityItemStackRenderer.class, "field_147716_d");
addMapping("chestBasic", TileEntityItemStackRenderer.class, "field_147717_b");
addMapping("chestTrap", TileEntityItemStackRenderer.class, "field_147718_c");
addMapping("instance", TileEntityItemStackRenderer.class, "field_147719_a");
addMapping("skull", TileEntityItemStackRenderer.class, "field_179023_f");
addMapping("banner", TileEntityItemStackRenderer.class, "field_179024_e");
addMapping("modelShield", TileEntityItemStackRenderer.class, "field_187318_g");
addMapping("SHULKER_BOXES", TileEntityItemStackRenderer.class, "field_191274_b");
addMapping("bed", TileEntityItemStackRenderer.class, "field_193843_g");
addMapping("blockRenderer", TileEntityPistonRenderer.class, "field_178462_c");
addMapping("world", TileEntityRendererDispatcher.class, "field_147550_f");
addMapping("entity", TileEntityRendererDispatcher.class, "field_147551_g");
addMapping("staticPlayerZ", TileEntityRendererDispatcher.class, "field_147552_d");
addMapping("renderEngine", TileEntityRendererDispatcher.class, "field_147553_e");
addMapping("staticPlayerX", TileEntityRendererDispatcher.class, "field_147554_b");
addMapping("staticPlayerY", TileEntityRendererDispatcher.class, "field_147555_c");
addMapping("instance", TileEntityRendererDispatcher.class, "field_147556_a");
addMapping("fontRenderer", TileEntityRendererDispatcher.class, "field_147557_n");
addMapping("entityZ", TileEntityRendererDispatcher.class, "field_147558_l");
addMapping("renderers", TileEntityRendererDispatcher.class, "field_147559_m");
addMapping("entityX", TileEntityRendererDispatcher.class, "field_147560_j");
addMapping("entityY", TileEntityRendererDispatcher.class, "field_147561_k");
addMapping("entityYaw", TileEntityRendererDispatcher.class, "field_147562_h");
addMapping("entityPitch", TileEntityRendererDispatcher.class, "field_147563_i");
addMapping("cameraHitResult", TileEntityRendererDispatcher.class, "field_190057_j");
addMapping("model", TileEntityShulkerBoxRenderer.class, "field_191285_a");
addMapping("SIGN_TEXTURE", TileEntitySignRenderer.class, "field_147513_b");
addMapping("model", TileEntitySignRenderer.class, "field_147514_c");
addMapping("CREEPER_TEXTURES", TileEntitySkullRenderer.class, "field_147532_f");
addMapping("WITHER_SKELETON_TEXTURES", TileEntitySkullRenderer.class, "field_147534_d");
addMapping("ZOMBIE_TEXTURES", TileEntitySkullRenderer.class, "field_147535_e");
addMapping("instance", TileEntitySkullRenderer.class, "field_147536_b");
addMapping("SKELETON_TEXTURES", TileEntitySkullRenderer.class, "field_147537_c");
addMapping("skeletonHead", TileEntitySkullRenderer.class, "field_178467_h");
addMapping("humanoidHead", TileEntitySkullRenderer.class, "field_178468_i");
addMapping("DRAGON_TEXTURES", TileEntitySkullRenderer.class, "field_188191_h");
addMapping("dragonHead", TileEntitySkullRenderer.class, "field_188192_i");
addMapping("rendererDispatcher", TileEntitySpecialRenderer.class, "field_147501_a");
addMapping("DESTROY_STAGES", TileEntitySpecialRenderer.class, "field_178460_a");
addMapping("ITEM", DefaultVertexFormats.class, "field_176599_b");
addMapping("BLOCK", DefaultVertexFormats.class, "field_176600_a");
addMapping("OLDMODEL_POSITION_TEX_NORMAL", DefaultVertexFormats.class, "field_181703_c");
addMapping("PARTICLE_POSITION_TEX_COLOR_LMAP", DefaultVertexFormats.class, "field_181704_d");
addMapping("POSITION", DefaultVertexFormats.class, "field_181705_e");
addMapping("POSITION_COLOR", DefaultVertexFormats.class, "field_181706_f");
addMapping("POSITION_TEX", DefaultVertexFormats.class, "field_181707_g");
addMapping("POSITION_NORMAL", DefaultVertexFormats.class, "field_181708_h");
addMapping("POSITION_TEX_COLOR", DefaultVertexFormats.class, "field_181709_i");
addMapping("POSITION_TEX_NORMAL", DefaultVertexFormats.class, "field_181710_j");
addMapping("POSITION_TEX_LMAP_COLOR", DefaultVertexFormats.class, "field_181711_k");
addMapping("POSITION_TEX_COLOR_NORMAL", DefaultVertexFormats.class, "field_181712_l");
addMapping("POSITION_3F", DefaultVertexFormats.class, "field_181713_m");
addMapping("COLOR_4UB", DefaultVertexFormats.class, "field_181714_n");
addMapping("TEX_2F", DefaultVertexFormats.class, "field_181715_o");
addMapping("TEX_2S", DefaultVertexFormats.class, "field_181716_p");
addMapping("NORMAL_3B", DefaultVertexFormats.class, "field_181717_q");
addMapping("PADDING_1B", DefaultVertexFormats.class, "field_181718_r");
addMapping("vertexFormat", VertexBuffer.class, "field_177363_b");
addMapping("count", VertexBuffer.class, "field_177364_c");
addMapping("glBufferId", VertexBuffer.class, "field_177365_a");
addMapping("uvOffsetsById", VertexFormat.class, "field_177351_f");
addMapping("normalElementOffset", VertexFormat.class, "field_177352_g");
addMapping("nextOffset", VertexFormat.class, "field_177353_d");
addMapping("colorElementOffset", VertexFormat.class, "field_177354_e");
addMapping("elements", VertexFormat.class, "field_177355_b");
addMapping("offsets", VertexFormat.class, "field_177356_c");
addMapping("LOGGER", VertexFormat.class, "field_177357_a");
addMapping("index", VertexFormatElement.class, "field_177377_d");
addMapping("elementCount", VertexFormatElement.class, "field_177378_e");
addMapping("type", VertexFormatElement.class, "field_177379_b");
addMapping("usage", VertexFormatElement.class, "field_177380_c");
addMapping("LOGGER", VertexFormatElement.class, "field_177381_a");
addMapping("resourcePackFile", AbstractResourcePack.class, "field_110597_b");
addMapping("LOGGER", AbstractResourcePack.class, "field_110598_a");
addMapping("TEXTURE_ALEX", DefaultPlayerSkin.class, "field_177336_b");
addMapping("TEXTURE_STEVE", DefaultPlayerSkin.class, "field_177337_a");
addMapping("DEFAULT_RESOURCE_DOMAINS", DefaultResourcePack.class, "field_110608_a");
addMapping("resourceIndex", DefaultResourcePack.class, "field_188549_b");
addMapping("frmMetadataSerializer", FallbackResourceManager.class, "field_110539_b");
addMapping("resourcePacks", FallbackResourceManager.class, "field_110540_a");
addMapping("LOGGER", FallbackResourceManager.class, "field_177246_b");
addMapping("resourcePackZipFile", FileResourcePack.class, "field_110600_d");
addMapping("ENTRY_NAME_SPLITTER", FileResourcePack.class, "field_110601_c");
addMapping("ON_WINDOWS", FolderResourcePack.class, "field_191386_b");
addMapping("BACKSLASH_MATCHER", FolderResourcePack.class, "field_191387_c");
addMapping("LOC_FOLIAGE_PNG", FoliageColorReloadListener.class, "field_130079_a");
addMapping("LOC_GRASS_PNG", GrassColorReloadListener.class, "field_130078_a");
addMapping("i18nLocale", I18n.class, "field_135054_a");
addMapping("bidirectional", Language.class, "field_135036_d");
addMapping("region", Language.class, "field_135037_b");
addMapping("name", Language.class, "field_135038_c");
addMapping("languageCode", Language.class, "field_135039_a");
addMapping("languageMap", LanguageManager.class, "field_135046_d");
addMapping("metadataSerializer", LanguageManager.class, "field_135047_b");
addMapping("currentLanguage", LanguageManager.class, "field_135048_c");
addMapping("CURRENT_LOCALE", LanguageManager.class, "field_135049_a");
addMapping("LOGGER", LanguageManager.class, "field_147648_b");
addMapping("pack", LegacyV2Adapter.class, "field_191383_a");
addMapping("unicode", Locale.class, "field_135029_d");
addMapping("SPLITTER", Locale.class, "field_135030_b");
addMapping("PATTERN", Locale.class, "field_135031_c");
addMapping("properties", Locale.class, "field_135032_a");
addMapping("LOGGER", ResourceIndex.class, "field_152783_a");
addMapping("resourceMap", ResourceIndex.class, "field_152784_b");
addMapping("baseDir", ResourceIndexFolder.class, "field_188548_a");
addMapping("resourcePacksGUI", ResourcePackListEntry.class, "field_148315_b");
addMapping("RESOURCE_PACKS_TEXTURE", ResourcePackListEntry.class, "field_148316_c");
addMapping("mc", ResourcePackListEntry.class, "field_148317_a");
addMapping("INCOMPATIBLE", ResourcePackListEntry.class, "field_183020_d");
addMapping("INCOMPATIBLE_OLD", ResourcePackListEntry.class, "field_183021_e");
addMapping("INCOMPATIBLE_NEW", ResourcePackListEntry.class, "field_183022_f");
addMapping("resourcePackEntry", ResourcePackListEntryFound.class, "field_148319_c");
addMapping("resourcePack", ResourcePackListEntryServer.class, "field_148320_d");
addMapping("resourcePackIcon", ResourcePackListEntryServer.class, "field_148321_e");
addMapping("LOGGER", ResourcePackListEntryServer.class, "field_148322_c");
addMapping("repositoryEntries", ResourcePackRepository.class, "field_110617_f");
addMapping("dirResourcepacks", ResourcePackRepository.class, "field_110618_d");
addMapping("repositoryEntriesAll", ResourcePackRepository.class, "field_110619_e");
addMapping("rprDefaultResourcePack", ResourcePackRepository.class, "field_110620_b");
addMapping("rprMetadataSerializer", ResourcePackRepository.class, "field_110621_c");
addMapping("RESOURCE_PACK_FILTER", ResourcePackRepository.class, "field_110622_a");
addMapping("serverResourcePack", ResourcePackRepository.class, "field_148532_f");
addMapping("dirServerResourcepacks", ResourcePackRepository.class, "field_148534_e");
addMapping("LOGGER", ResourcePackRepository.class, "field_177320_c");
addMapping("lock", ResourcePackRepository.class, "field_177321_h");
addMapping("downloadingPacks", ResourcePackRepository.class, "field_177322_i");
addMapping("SHA1", ResourcePackRepository.class, "field_190117_e");
addMapping("UNKNOWN_PACK_TEXTURE", ResourcePackRepository.class, "field_191400_f");
addMapping("reloadListeners", SimpleReloadableResourceManager.class, "field_110546_b");
addMapping("rmMetadataSerializer", SimpleReloadableResourceManager.class, "field_110547_c");
addMapping("domainResourceManagers", SimpleReloadableResourceManager.class, "field_110548_a");
addMapping("JOINER_RESOURCE_PACKS", SimpleReloadableResourceManager.class, "field_130074_a");
addMapping("setResourceDomains", SimpleReloadableResourceManager.class, "field_135057_d");
addMapping("LOGGER", SimpleReloadableResourceManager.class, "field_147967_a");
addMapping("mcmetaJsonChecked", SimpleResource.class, "field_110529_f");
addMapping("mcmetaJson", SimpleResource.class, "field_110530_g");
addMapping("mcmetaInputStream", SimpleResource.class, "field_110531_d");
addMapping("srMetadataSerializer", SimpleResource.class, "field_110532_e");
addMapping("srResourceLocation", SimpleResource.class, "field_110533_b");
addMapping("resourceInputStream", SimpleResource.class, "field_110534_c");
addMapping("mapMetadataSections", SimpleResource.class, "field_110535_a");
addMapping("resourcePackName", SimpleResource.class, "field_177242_b");
addMapping("THREAD_POOL", SkinManager.class, "field_152794_b");
addMapping("textureManager", SkinManager.class, "field_152795_c");
addMapping("skinCacheDir", SkinManager.class, "field_152796_d");
addMapping("sessionService", SkinManager.class, "field_152797_e");
addMapping("skinCacheLoader", SkinManager.class, "field_152798_f");
addMapping("frameTime", AnimationFrame.class, "field_110498_b");
addMapping("frameIndex", AnimationFrame.class, "field_110499_a");
addMapping("frameTime", AnimationMetadataSection.class, "field_110475_d");
addMapping("frameWidth", AnimationMetadataSection.class, "field_110476_b");
addMapping("frameHeight", AnimationMetadataSection.class, "field_110477_c");
addMapping("animationFrames", AnimationMetadataSection.class, "field_110478_a");
addMapping("interpolate", AnimationMetadataSection.class, "field_177220_e");
addMapping("charLefts", FontMetadataSection.class, "field_110465_b");
addMapping("charSpacings", FontMetadataSection.class, "field_110466_c");
addMapping("charWidths", FontMetadataSection.class, "field_110467_a");
addMapping("languages", LanguageMetadataSection.class, "field_135019_a");
addMapping("gsonBuilder", MetadataSerializer.class, "field_110506_b");
addMapping("gson", MetadataSerializer.class, "field_110507_c");
addMapping("metadataSectionSerializerRegistry", MetadataSerializer.class, "field_110508_a");
addMapping("packFormat", PackMetadataSection.class, "field_110463_b");
addMapping("packDescription", PackMetadataSection.class, "field_110464_a");
addMapping("textureClamp", TextureMetadataSection.class, "field_110481_b");
addMapping("textureBlur", TextureMetadataSection.class, "field_110482_a");
addMapping("minecraft", CreativeSettings.class, "field_192565_a");
addMapping("LOGGER", CreativeSettings.class, "field_192566_b");
addMapping("dataFile", CreativeSettings.class, "field_192567_c");
addMapping("hotbarSnapshots", CreativeSettings.class, "field_192568_d");
addMapping("mipmapLevels", GameSettings.class, "field_151442_I");
addMapping("keyBindSprint", GameSettings.class, "field_151444_V");
addMapping("keyBindInventory", GameSettings.class, "field_151445_Q");
addMapping("keyBindScreenshot", GameSettings.class, "field_151447_Z");
addMapping("fboEnable", GameSettings.class, "field_151448_g");
addMapping("TYPE_LIST_STRING", GameSettings.class, "field_151449_az");
addMapping("GSON", GameSettings.class, "field_151450_ay");
addMapping("renderDistanceChunks", GameSettings.class, "field_151451_c");
addMapping("saturation", GameSettings.class, "field_151452_as");
addMapping("resourcePacks", GameSettings.class, "field_151453_l");
addMapping("LOGGER", GameSettings.class, "field_151454_ax");
addMapping("forceUnicodeFont", GameSettings.class, "field_151455_aw");
addMapping("keyBindsHotbar", GameSettings.class, "field_151456_ac");
addMapping("keyBindTogglePerspective", GameSettings.class, "field_151457_aa");
addMapping("keyBindSmoothCamera", GameSettings.class, "field_151458_ab");
addMapping("keyBindFullscreen", GameSettings.class, "field_152395_am");
addMapping("reducedDebugInfo", GameSettings.class, "field_178879_v");
addMapping("useVbo", GameSettings.class, "field_178881_t");
addMapping("setModelParts", GameSettings.class, "field_178882_aU");
addMapping("keyBindSpectatorOutlines", GameSettings.class, "field_178883_an");
addMapping("CLOUDS_TYPES", GameSettings.class, "field_181149_aW");
addMapping("useNativeTransport", GameSettings.class, "field_181150_U");
addMapping("entityShadows", GameSettings.class, "field_181151_V");
addMapping("showLagometer", GameSettings.class, "field_181657_aC");
addMapping("incompatibleResourcePacks", GameSettings.class, "field_183018_l");
addMapping("realmsNotifications", GameSettings.class, "field_183509_X");
addMapping("ATTACK_INDICATORS", GameSettings.class, "field_186713_aK");
addMapping("soundLevels", GameSettings.class, "field_186714_aM");
addMapping("mainHand", GameSettings.class, "field_186715_A");
addMapping("attackIndicator", GameSettings.class, "field_186716_M");
addMapping("showSubtitles", GameSettings.class, "field_186717_N");
addMapping("keyBindSwapHands", GameSettings.class, "field_186718_X");
addMapping("enableWeakAttacks", GameSettings.class, "field_189422_N");
addMapping("autoJump", GameSettings.class, "field_189989_R");
addMapping("COLON_SPLITTER", GameSettings.class, "field_189990_a");
addMapping("narrator", GameSettings.class, "field_192571_R");
addMapping("keyBindSaveToolbar", GameSettings.class, "field_193629_ap");
addMapping("keyBindLoadToolbar", GameSettings.class, "field_193630_aq");
addMapping("tutorialStep", GameSettings.class, "field_193631_S");
addMapping("NARRATOR_MODES", GameSettings.class, "field_193632_b");
addMapping("keyBindAdvancements", GameSettings.class, "field_194146_ao");
addMapping("keyBindChat", GameSettings.class, "field_74310_D");
addMapping("keyBindSneak", GameSettings.class, "field_74311_E");
addMapping("keyBindAttack", GameSettings.class, "field_74312_F");
addMapping("keyBindUseItem", GameSettings.class, "field_74313_G");
addMapping("keyBindJump", GameSettings.class, "field_74314_A");
addMapping("keyBindDrop", GameSettings.class, "field_74316_C");
addMapping("mc", GameSettings.class, "field_74317_L");
addMapping("difficulty", GameSettings.class, "field_74318_M");
addMapping("hideGUI", GameSettings.class, "field_74319_N");
addMapping("thirdPersonView", GameSettings.class, "field_74320_O");
addMapping("keyBindPlayerList", GameSettings.class, "field_74321_H");
addMapping("keyBindPickBlock", GameSettings.class, "field_74322_I");
addMapping("keyBindCommand", GameSettings.class, "field_74323_J");
addMapping("keyBindings", GameSettings.class, "field_74324_K");
addMapping("debugCamEnable", GameSettings.class, "field_74325_U");
addMapping("smoothCamera", GameSettings.class, "field_74326_T");
addMapping("showDebugProfilerChart", GameSettings.class, "field_74329_Q");
addMapping("showDebugInfo", GameSettings.class, "field_74330_P");
addMapping("lastServer", GameSettings.class, "field_74332_R");
addMapping("gammaSetting", GameSettings.class, "field_74333_Y");
addMapping("fovSetting", GameSettings.class, "field_74334_X");
addMapping("guiScale", GameSettings.class, "field_74335_Z");
addMapping("viewBobbing", GameSettings.class, "field_74336_f");
addMapping("anaglyph", GameSettings.class, "field_74337_g");
addMapping("invertMouse", GameSettings.class, "field_74338_d");
addMapping("mouseSensitivity", GameSettings.class, "field_74341_c");
addMapping("chatVisibility", GameSettings.class, "field_74343_n");
addMapping("chatColours", GameSettings.class, "field_74344_o");
addMapping("clouds", GameSettings.class, "field_74345_l");
addMapping("fancyGraphics", GameSettings.class, "field_74347_j");
addMapping("ambientOcclusion", GameSettings.class, "field_74348_k");
addMapping("limitFramerate", GameSettings.class, "field_74350_i");
addMapping("keyBindForward", GameSettings.class, "field_74351_w");
addMapping("enableVsync", GameSettings.class, "field_74352_v");
addMapping("fullScreen", GameSettings.class, "field_74353_u");
addMapping("optionsFile", GameSettings.class, "field_74354_ai");
addMapping("snooperEnabled", GameSettings.class, "field_74355_t");
addMapping("chatOpacity", GameSettings.class, "field_74357_r");
addMapping("chatLinksPrompt", GameSettings.class, "field_74358_q");
addMapping("chatLinks", GameSettings.class, "field_74359_p");
addMapping("particleSetting", GameSettings.class, "field_74362_aa");
addMapping("language", GameSettings.class, "field_74363_ab");
addMapping("PARTICLES", GameSettings.class, "field_74364_ag");
addMapping("keyBindRight", GameSettings.class, "field_74366_z");
addMapping("GUISCALES", GameSettings.class, "field_74367_ae");
addMapping("keyBindBack", GameSettings.class, "field_74368_y");
addMapping("keyBindLeft", GameSettings.class, "field_74370_x");
addMapping("hideServerAddress", GameSettings.class, "field_80005_w");
addMapping("pauseOnLostFocus", GameSettings.class, "field_82881_y");
addMapping("advancedItemTooltips", GameSettings.class, "field_82882_x");
addMapping("touchscreen", GameSettings.class, "field_85185_A");
addMapping("heldItemTooltips", GameSettings.class, "field_92117_D");
addMapping("overrideWidth", GameSettings.class, "field_92118_B");
addMapping("overrideHeight", GameSettings.class, "field_92119_C");
addMapping("chatScale", GameSettings.class, "field_96691_E");
addMapping("chatWidth", GameSettings.class, "field_96692_F");
addMapping("chatHeightUnfocused", GameSettings.class, "field_96693_G");
addMapping("chatHeightFocused", GameSettings.class, "field_96694_H");
addMapping("AMBIENT_OCCLUSIONS", GameSettings.class, "field_98303_au");
addMapping("HOTBAR_SIZE", HotbarSnapshot.class, "field_192835_a");
addMapping("keyCategory", KeyBinding.class, "field_151471_f");
addMapping("keyCodeDefault", KeyBinding.class, "field_151472_e");
addMapping("KEYBIND_SET", KeyBinding.class, "field_151473_c");
addMapping("pressTime", KeyBinding.class, "field_151474_i");
addMapping("CATEGORY_ORDER", KeyBinding.class, "field_193627_d");
addMapping("keyCode", KeyBinding.class, "field_74512_d");
addMapping("pressed", KeyBinding.class, "field_74513_e");
addMapping("HASH", KeyBinding.class, "field_74514_b");
addMapping("keyDescription", KeyBinding.class, "field_74515_c");
addMapping("KEYBIND_ARRAY", KeyBinding.class, "field_74516_a");
addMapping("framebufferObject", Framebuffer.class, "field_147616_f");
addMapping("framebufferTexture", Framebuffer.class, "field_147617_g");
addMapping("framebufferHeight", Framebuffer.class, "field_147618_d");
addMapping("useDepth", Framebuffer.class, "field_147619_e");
addMapping("framebufferTextureHeight", Framebuffer.class, "field_147620_b");
addMapping("framebufferWidth", Framebuffer.class, "field_147621_c");
addMapping("framebufferTextureWidth", Framebuffer.class, "field_147622_a");
addMapping("framebufferFilter", Framebuffer.class, "field_147623_j");
addMapping("depthBuffer", Framebuffer.class, "field_147624_h");
addMapping("framebufferColor", Framebuffer.class, "field_147625_i");
addMapping("listAuxWidths", Shader.class, "field_148046_f");
addMapping("listAuxHeights", Shader.class, "field_148047_g");
addMapping("listAuxFramebuffers", Shader.class, "field_148048_d");
addMapping("listAuxNames", Shader.class, "field_148049_e");
addMapping("framebufferOut", Shader.class, "field_148050_b");
addMapping("manager", Shader.class, "field_148051_c");
addMapping("framebufferIn", Shader.class, "field_148052_a");
addMapping("projectionMatrix", Shader.class, "field_148053_h");
addMapping("listFramebuffers", ShaderGroup.class, "field_148029_f");
addMapping("projectionMatrix", ShaderGroup.class, "field_148030_g");
addMapping("listShaders", ShaderGroup.class, "field_148031_d");
addMapping("mapFramebuffers", ShaderGroup.class, "field_148032_e");
addMapping("resourceManager", ShaderGroup.class, "field_148033_b");
addMapping("shaderGroupName", ShaderGroup.class, "field_148034_c");
addMapping("mainFramebuffer", ShaderGroup.class, "field_148035_a");
addMapping("time", ShaderGroup.class, "field_148036_j");
addMapping("lastStamp", ShaderGroup.class, "field_148037_k");
addMapping("mainFramebufferWidth", ShaderGroup.class, "field_148038_h");
addMapping("mainFramebufferHeight", ShaderGroup.class, "field_148039_i");
addMapping("staticShaderLinkHelper", ShaderLinkHelper.class, "field_148079_b");
addMapping("LOGGER", ShaderLinkHelper.class, "field_148080_a");
addMapping("shaderAttachCount", ShaderLoader.class, "field_148058_d");
addMapping("shaderFilename", ShaderLoader.class, "field_148059_b");
addMapping("shader", ShaderLoader.class, "field_148060_c");
addMapping("shaderType", ShaderLoader.class, "field_148061_a");
addMapping("shaderSamplers", ShaderManager.class, "field_147997_f");
addMapping("samplerNames", ShaderManager.class, "field_147998_g");
addMapping("currentProgram", ShaderManager.class, "field_147999_d");
addMapping("lastCull", ShaderManager.class, "field_148000_e");
addMapping("DEFAULT_SHADER_UNIFORM", ShaderManager.class, "field_148001_b");
addMapping("staticShaderManager", ShaderManager.class, "field_148002_c");
addMapping("LOGGER", ShaderManager.class, "field_148003_a");
addMapping("useFaceCulling", ShaderManager.class, "field_148004_n");
addMapping("isDirty", ShaderManager.class, "field_148005_o");
addMapping("program", ShaderManager.class, "field_148006_l");
addMapping("programFilename", ShaderManager.class, "field_148007_m");
addMapping("shaderUniformLocations", ShaderManager.class, "field_148008_j");
addMapping("mappedShaderUniforms", ShaderManager.class, "field_148009_k");
addMapping("shaderSamplerLocations", ShaderManager.class, "field_148010_h");
addMapping("shaderUniforms", ShaderManager.class, "field_148011_i");
addMapping("fragmentShaderLoader", ShaderManager.class, "field_148012_t");
addMapping("vertexShaderLoader", ShaderManager.class, "field_148013_s");
addMapping("attributes", ShaderManager.class, "field_148014_r");
addMapping("attribLocations", ShaderManager.class, "field_148015_q");
addMapping("blendingMode", ShaderManager.class, "field_148016_p");
addMapping("uniformFloatBuffer", ShaderUniform.class, "field_148098_f");
addMapping("shaderName", ShaderUniform.class, "field_148099_g");
addMapping("uniformType", ShaderUniform.class, "field_148100_d");
addMapping("uniformIntBuffer", ShaderUniform.class, "field_148101_e");
addMapping("uniformLocation", ShaderUniform.class, "field_148102_b");
addMapping("uniformCount", ShaderUniform.class, "field_148103_c");
addMapping("LOGGER", ShaderUniform.class, "field_148104_a");
addMapping("dirty", ShaderUniform.class, "field_148105_h");
addMapping("shaderManager", ShaderUniform.class, "field_148106_i");
addMapping("tutorial", CompletedTutorialStep.class, "field_193253_a");
addMapping("TITLE", CraftPlanksStep.class, "field_193286_a");
addMapping("DESCRIPTION", CraftPlanksStep.class, "field_193287_b");
addMapping("tutorial", CraftPlanksStep.class, "field_193288_c");
addMapping("toast", CraftPlanksStep.class, "field_193289_d");
addMapping("timeWaiting", CraftPlanksStep.class, "field_193290_e");
addMapping("TREE_BLOCKS", FindTreeStep.class, "field_193268_a");
addMapping("TITLE", FindTreeStep.class, "field_193269_b");
addMapping("DESCRIPTION", FindTreeStep.class, "field_193270_c");
addMapping("tutorial", FindTreeStep.class, "field_193271_d");
addMapping("toast", FindTreeStep.class, "field_193272_e");
addMapping("timeWaiting", FindTreeStep.class, "field_193273_f");
addMapping("MOVE_TITLE", MovementStep.class, "field_193254_a");
addMapping("MOVE_DESCRIPTION", MovementStep.class, "field_193255_b");
addMapping("LOOK_TITLE", MovementStep.class, "field_193256_c");
addMapping("LOOK_DESCRIPTION", MovementStep.class, "field_193257_d");
addMapping("tutorial", MovementStep.class, "field_193258_e");
addMapping("moveToast", MovementStep.class, "field_193259_f");
addMapping("lookToast", MovementStep.class, "field_193260_g");
addMapping("timeWaiting", MovementStep.class, "field_193261_h");
addMapping("timeMoved", MovementStep.class, "field_193262_i");
addMapping("timeLooked", MovementStep.class, "field_193263_j");
addMapping("moved", MovementStep.class, "field_193264_k");
addMapping("turned", MovementStep.class, "field_193265_l");
addMapping("moveCompleted", MovementStep.class, "field_193266_m");
addMapping("lookCompleted", MovementStep.class, "field_193267_n");
addMapping("TITLE", OpenInventoryStep.class, "field_193281_a");
addMapping("DESCRIPTION", OpenInventoryStep.class, "field_193282_b");
addMapping("tutorial", OpenInventoryStep.class, "field_193283_c");
addMapping("toast", OpenInventoryStep.class, "field_193284_d");
addMapping("timeWaiting", OpenInventoryStep.class, "field_193285_e");
addMapping("LOG_BLOCKS", PunchTreeStep.class, "field_193274_a");
addMapping("TITLE", PunchTreeStep.class, "field_193275_b");
addMapping("DESCRIPTION", PunchTreeStep.class, "field_193276_c");
addMapping("tutorial", PunchTreeStep.class, "field_193277_d");
addMapping("toast", PunchTreeStep.class, "field_193278_e");
addMapping("timeWaiting", PunchTreeStep.class, "field_193279_f");
addMapping("resetCount", PunchTreeStep.class, "field_193280_g");
addMapping("minecraft", Tutorial.class, "field_193304_a");
addMapping("tutorialStep", Tutorial.class, "field_193305_b");
addMapping("name", TutorialSteps.class, "field_193316_g");
addMapping("tutorial", TutorialSteps.class, "field_193317_h");
addMapping("blendFunction", JsonBlendingMode.class, "field_148112_f");
addMapping("separateBlend", JsonBlendingMode.class, "field_148113_g");
addMapping("destColorFactor", JsonBlendingMode.class, "field_148114_d");
addMapping("destAlphaFactor", JsonBlendingMode.class, "field_148115_e");
addMapping("srcColorFactor", JsonBlendingMode.class, "field_148116_b");
addMapping("srcAlphaFactor", JsonBlendingMode.class, "field_148117_c");
addMapping("lastApplied", JsonBlendingMode.class, "field_148118_a");
addMapping("opaque", JsonBlendingMode.class, "field_148119_h");
addMapping("message", JsonException.class, "field_151382_b");
addMapping("entries", JsonException.class, "field_151383_a");
addMapping("RECIPES_BY_TAB", RecipeBookClient.class, "field_194086_e");
addMapping("ALL_RECIPES", RecipeBookClient.class, "field_194087_f");
addMapping("itemToCount", RecipeItemHelper.class, "field_194124_a");
addMapping("byId", SearchTree.class, "field_194044_a");
addMapping("byName", SearchTree.class, "field_194045_b");
addMapping("nameFunc", SearchTree.class, "field_194046_c");
addMapping("idFunc", SearchTree.class, "field_194047_d");
addMapping("contents", SearchTree.class, "field_194048_e");
addMapping("numericContents", SearchTree.class, "field_194049_f");
addMapping("ITEMS", SearchTreeManager.class, "field_194011_a");
addMapping("RECIPES", SearchTreeManager.class, "field_194012_b");
addMapping("trees", SearchTreeManager.class, "field_194013_c");
addMapping("list", SuffixArray.class, "field_194061_a");
addMapping("DEBUG_PRINT_COMPARISONS", SuffixArray.class, "field_194062_b");
addMapping("DEBUG_PRINT_ARRAY", SuffixArray.class, "field_194063_c");
addMapping("LOGGER", SuffixArray.class, "field_194064_d");
addMapping("chars", SuffixArray.class, "field_194065_e");
addMapping("wordStarts", SuffixArray.class, "field_194066_f");
addMapping("suffixToT", SuffixArray.class, "field_194067_g");
addMapping("offsets", SuffixArray.class, "field_194068_h");
addMapping("maxStringLength", SuffixArray.class, "field_194069_i");
addMapping("COMMA_SPLITTER", CommandBase.class, "field_190796_b");
addMapping("EQUAL_SPLITTER", CommandBase.class, "field_190797_c");
addMapping("commandListener", CommandBase.class, "field_71533_a");
addMapping("profileStartTime", CommandDebug.class, "field_147206_b");
addMapping("profileStartTick", CommandDebug.class, "field_147207_c");
addMapping("LOGGER", CommandDebug.class, "field_147208_a");
addMapping("errorObjects", CommandException.class, "field_74845_a");
addMapping("LOGGER", CommandHandler.class, "field_147175_a");
addMapping("commandSet", CommandHandler.class, "field_71561_b");
addMapping("commandMap", CommandHandler.class, "field_71562_a");
addMapping("SEARGE_SAYS", CommandHelp.class, "field_184901_a");
addMapping("rand", CommandHelp.class, "field_184902_b");
addMapping("SHORTCUTS", CommandReplaceItem.class, "field_175785_a");
addMapping("objectives", CommandResultStats.class, "field_179673_d");
addMapping("STRING_RESULT_TYPES", CommandResultStats.class, "field_179674_b");
addMapping("entitiesID", CommandResultStats.class, "field_179675_c");
addMapping("NUM_RESULT_TYPES", CommandResultStats.class, "field_179676_a");
addMapping("delegate", CommandSenderWrapper.class, "field_193043_a");
addMapping("positionVector", CommandSenderWrapper.class, "field_194002_b");
addMapping("position", CommandSenderWrapper.class, "field_194003_c");
addMapping("permissionLevel", CommandSenderWrapper.class, "field_194004_d");
addMapping("entity", CommandSenderWrapper.class, "field_194005_e");
addMapping("sendCommandFeedback", CommandSenderWrapper.class, "field_194006_f");
addMapping("LOGGER", CommandTitle.class, "field_175774_a");
addMapping("WORLD_BINDING_ARGS", EntitySelector.class, "field_179666_d");
addMapping("COMMA_SPLITTER", EntitySelector.class, "field_190828_b");
addMapping("EQUAL_SPLITTER", EntitySelector.class, "field_190829_c");
addMapping("VALID_ARGUMENTS", EntitySelector.class, "field_190830_d");
addMapping("ARGUMENT_RANGE_MAX", EntitySelector.class, "field_190831_e");
addMapping("ARGUMENT_RANGE_MIN", EntitySelector.class, "field_190832_f");
addMapping("ARGUMENT_LEVEL_MAX", EntitySelector.class, "field_190833_g");
addMapping("ARGUMENT_LEVEL_MIN", EntitySelector.class, "field_190834_h");
addMapping("ARGUMENT_COORDINATE_X", EntitySelector.class, "field_190835_i");
addMapping("ARGUMENT_COORDINATE_Y", EntitySelector.class, "field_190836_j");
addMapping("ARGUMENT_COORDINATE_Z", EntitySelector.class, "field_190837_k");
addMapping("ARGUMENT_DELTA_X", EntitySelector.class, "field_190838_l");
addMapping("ARGUMENT_DELTA_Y", EntitySelector.class, "field_190839_m");
addMapping("ARGUMENT_DELTA_Z", EntitySelector.class, "field_190840_n");
addMapping("ARGUMENT_ROTX_MAX", EntitySelector.class, "field_190841_o");
addMapping("ARGUMENT_ROTX_MIN", EntitySelector.class, "field_190842_p");
addMapping("ARGUMENT_ROTY_MAX", EntitySelector.class, "field_190843_q");
addMapping("ARGUMENT_ROTY_MIN", EntitySelector.class, "field_190844_r");
addMapping("ARGUMENT_COUNT", EntitySelector.class, "field_190845_s");
addMapping("ARGUMENT_MODE", EntitySelector.class, "field_190846_t");
addMapping("ARGUMENT_TEAM_NAME", EntitySelector.class, "field_190847_u");
addMapping("ARGUMENT_PLAYER_NAME", EntitySelector.class, "field_190848_v");
addMapping("ARGUMENT_ENTITY_TYPE", EntitySelector.class, "field_190849_w");
addMapping("ARGUMENT_ENTITY_TAG", EntitySelector.class, "field_190850_x");
addMapping("IS_VALID_ARGUMENT", EntitySelector.class, "field_190851_y");
addMapping("TOKEN_PATTERN", EntitySelector.class, "field_82389_a");
addMapping("entries", FunctionObject.class, "field_193530_b");
addMapping("server", ServerCommandManager.class, "field_184880_a");
addMapping("IP_PATTERN", CommandBanIp.class, "field_147211_a");
addMapping("LOGGER", CrashReport.class, "field_147150_a");
addMapping("crashReportFile", CrashReport.class, "field_71510_d");
addMapping("cause", CrashReport.class, "field_71511_b");
addMapping("crashReportSections", CrashReport.class, "field_71512_c");
addMapping("description", CrashReport.class, "field_71513_a");
addMapping("firstCategoryInCrashReport", CrashReport.class, "field_85059_f");
addMapping("stacktrace", CrashReport.class, "field_85060_g");
addMapping("systemDetailsCategory", CrashReport.class, "field_85061_c");
addMapping("stackTrace", CrashReportCategory.class, "field_85075_d");
addMapping("name", CrashReportCategory.class, "field_85076_b");
addMapping("children", CrashReportCategory.class, "field_85077_c");
addMapping("crashReport", CrashReportCategory.class, "field_85078_a");
addMapping("enchantmentTypes", CreativeTabs.class, "field_111230_s");
addMapping("iconItemStack", CreativeTabs.class, "field_151245_t");
addMapping("HOTBAR", CreativeTabs.class, "field_192395_m");
addMapping("MISC", CreativeTabs.class, "field_78026_f");
addMapping("SEARCH", CreativeTabs.class, "field_78027_g");
addMapping("REDSTONE", CreativeTabs.class, "field_78028_d");
addMapping("TRANSPORTATION", CreativeTabs.class, "field_78029_e");
addMapping("BUILDING_BLOCKS", CreativeTabs.class, "field_78030_b");
addMapping("DECORATIONS", CreativeTabs.class, "field_78031_c");
addMapping("CREATIVE_TAB_ARRAY", CreativeTabs.class, "field_78032_a");
addMapping("tabIndex", CreativeTabs.class, "field_78033_n");
addMapping("tabLabel", CreativeTabs.class, "field_78034_o");
addMapping("MATERIALS", CreativeTabs.class, "field_78035_l");
addMapping("INVENTORY", CreativeTabs.class, "field_78036_m");
addMapping("COMBAT", CreativeTabs.class, "field_78037_j");
addMapping("BREWING", CreativeTabs.class, "field_78038_k");
addMapping("FOOD", CreativeTabs.class, "field_78039_h");
addMapping("TOOLS", CreativeTabs.class, "field_78040_i");
addMapping("drawTitle", CreativeTabs.class, "field_78041_r");
addMapping("hasScrollbar", CreativeTabs.class, "field_78042_q");
addMapping("backgroundTexture", CreativeTabs.class, "field_78043_p");
addMapping("DEFAULT_BEHAVIOR", IBehaviorDispenseItem.class, "field_82483_a");
addMapping("y", PositionImpl.class, "field_82628_b");
addMapping("z", PositionImpl.class, "field_82629_c");
addMapping("x", PositionImpl.class, "field_82630_a");
addMapping("applicableEquipmentTypes", Enchantment.class, "field_185263_a");
addMapping("REGISTRY", Enchantment.class, "field_185264_b");
addMapping("rarity", Enchantment.class, "field_77333_a");
addMapping("name", Enchantment.class, "field_77350_z");
addMapping("type", Enchantment.class, "field_77351_y");
addMapping("LEVEL_COST_SPAN", EnchantmentDamage.class, "field_77358_D");
addMapping("DAMAGE_NAMES", EnchantmentDamage.class, "field_77359_A");
addMapping("MIN_COST", EnchantmentDamage.class, "field_77360_B");
addMapping("damageType", EnchantmentDamage.class, "field_77361_a");
addMapping("LEVEL_COST", EnchantmentDamage.class, "field_77362_C");
addMapping("enchantment", EnchantmentData.class, "field_76302_b");
addMapping("enchantmentLevel", EnchantmentData.class, "field_76303_c");
addMapping("ENCHANTMENT_ITERATOR_HURT", EnchantmentHelper.class, "field_151388_d");
addMapping("ENCHANTMENT_ITERATOR_DAMAGE", EnchantmentHelper.class, "field_151389_e");
addMapping("ENCHANTMENT_MODIFIER_DAMAGE", EnchantmentHelper.class, "field_77520_b");
addMapping("ENCHANTMENT_MODIFIER_LIVING", EnchantmentHelper.class, "field_77521_c");
addMapping("protectionType", EnchantmentProtection.class, "field_77356_a");
addMapping("entityId", Entity.class, "field_145783_c");
addMapping("isOutsideBorder", Entity.class, "field_174835_g");
addMapping("ZERO_AABB", Entity.class, "field_174836_a");
addMapping("cmdResultStats", Entity.class, "field_174837_as");
addMapping("lastPortalPos", Entity.class, "field_181016_an");
addMapping("lastPortalVec", Entity.class, "field_181017_ao");
addMapping("teleportDirection", Entity.class, "field_181018_ap");
addMapping("CUSTOM_NAME_VISIBLE", Entity.class, "field_184233_aA");
addMapping("SILENT", Entity.class, "field_184234_aB");
addMapping("tags", Entity.class, "field_184236_aF");
addMapping("isPositionDirty", Entity.class, "field_184237_aG");
addMapping("glowing", Entity.class, "field_184238_ar");
addMapping("ridingEntity", Entity.class, "field_184239_as");
addMapping("FLAGS", Entity.class, "field_184240_ax");
addMapping("AIR", Entity.class, "field_184241_ay");
addMapping("CUSTOM_NAME", Entity.class, "field_184242_az");
addMapping("LOGGER", Entity.class, "field_184243_a");
addMapping("riddenByEntities", Entity.class, "field_184244_h");
addMapping("rideCooldown", Entity.class, "field_184245_j");
addMapping("cachedUniqueIdString", Entity.class, "field_189513_ar");
addMapping("NO_GRAVITY", Entity.class, "field_189655_aD");
addMapping("fire", Entity.class, "field_190534_ay");
addMapping("EMPTY_EQUIPMENT", Entity.class, "field_190535_b");
addMapping("pistonDeltas", Entity.class, "field_191505_aI");
addMapping("pistonDeltasGameTime", Entity.class, "field_191506_aJ");
addMapping("nextFlap", Entity.class, "field_191959_ay");
addMapping("serverPosZ", Entity.class, "field_70116_cv");
addMapping("serverPosY", Entity.class, "field_70117_cu");
addMapping("serverPosX", Entity.class, "field_70118_ct");
addMapping("boundingBox", Entity.class, "field_70121_D");
addMapping("onGround", Entity.class, "field_70122_E");
addMapping("collidedHorizontally", Entity.class, "field_70123_F");
addMapping("collidedVertically", Entity.class, "field_70124_G");
addMapping("rotationPitch", Entity.class, "field_70125_A");
addMapping("prevRotationYaw", Entity.class, "field_70126_B");
addMapping("prevRotationPitch", Entity.class, "field_70127_C");
addMapping("isDead", Entity.class, "field_70128_L");
addMapping("width", Entity.class, "field_70130_N");
addMapping("height", Entity.class, "field_70131_O");
addMapping("collided", Entity.class, "field_70132_H");
addMapping("velocityChanged", Entity.class, "field_70133_I");
addMapping("isInWeb", Entity.class, "field_70134_J");
addMapping("lastTickPosZ", Entity.class, "field_70136_U");
addMapping("lastTickPosY", Entity.class, "field_70137_T");
addMapping("stepHeight", Entity.class, "field_70138_W");
addMapping("distanceWalkedModified", Entity.class, "field_70140_Q");
addMapping("prevDistanceWalkedModified", Entity.class, "field_70141_P");
addMapping("lastTickPosX", Entity.class, "field_70142_S");
addMapping("fallDistance", Entity.class, "field_70143_R");
addMapping("entityCollisionReduction", Entity.class, "field_70144_Y");
addMapping("noClip", Entity.class, "field_70145_X");
addMapping("rand", Entity.class, "field_70146_Z");
addMapping("firstUpdate", Entity.class, "field_70148_d");
addMapping("nextStepDistance", Entity.class, "field_70150_b");
addMapping("nextEntityID", Entity.class, "field_70152_a");
addMapping("renderDistanceWeight", Entity.class, "field_70155_l");
addMapping("preventEntitySpawning", Entity.class, "field_70156_m");
addMapping("ignoreFrustumCheck", Entity.class, "field_70158_ak");
addMapping("motionX", Entity.class, "field_70159_w");
addMapping("isAirBorne", Entity.class, "field_70160_al");
addMapping("posZ", Entity.class, "field_70161_v");
addMapping("chunkCoordY", Entity.class, "field_70162_ai");
addMapping("posY", Entity.class, "field_70163_u");
addMapping("chunkCoordZ", Entity.class, "field_70164_aj");
addMapping("posX", Entity.class, "field_70165_t");
addMapping("prevPosZ", Entity.class, "field_70166_s");
addMapping("prevPosY", Entity.class, "field_70167_r");
addMapping("prevPosX", Entity.class, "field_70169_q");
addMapping("world", Entity.class, "field_70170_p");
addMapping("inWater", Entity.class, "field_70171_ac");
addMapping("hurtResistantTime", Entity.class, "field_70172_ad");
addMapping("ticksExisted", Entity.class, "field_70173_aa");
addMapping("addedToChunk", Entity.class, "field_70175_ag");
addMapping("chunkCoordX", Entity.class, "field_70176_ah");
addMapping("rotationYaw", Entity.class, "field_70177_z");
addMapping("isImmuneToFire", Entity.class, "field_70178_ae");
addMapping("motionZ", Entity.class, "field_70179_y");
addMapping("dataManager", Entity.class, "field_70180_af");
addMapping("motionY", Entity.class, "field_70181_x");
addMapping("inPortal", Entity.class, "field_71087_bX");
addMapping("timeUntilPortal", Entity.class, "field_71088_bW");
addMapping("dimension", Entity.class, "field_71093_bK");
addMapping("distanceWalkedOnStepModified", Entity.class, "field_82151_R");
addMapping("portalCounter", Entity.class, "field_82153_h");
addMapping("invulnerable", Entity.class, "field_83001_bt");
addMapping("entityUniqueID", Entity.class, "field_96093_i");
addMapping("forceSpawn", Entity.class, "field_98038_p");
addMapping("forcedAge", EntityAgeable.class, "field_175502_b");
addMapping("forcedAgeTimer", EntityAgeable.class, "field_175503_c");
addMapping("growingAge", EntityAgeable.class, "field_175504_a");
addMapping("BABY", EntityAgeable.class, "field_184751_bv");
addMapping("ageWidth", EntityAgeable.class, "field_98056_d");
addMapping("ageHeight", EntityAgeable.class, "field_98057_e");
addMapping("RADIUS", EntityAreaEffectCloud.class, "field_184498_a");
addMapping("COLOR", EntityAreaEffectCloud.class, "field_184499_b");
addMapping("IGNORE_RADIUS", EntityAreaEffectCloud.class, "field_184500_c");
addMapping("PARTICLE", EntityAreaEffectCloud.class, "field_184501_d");
addMapping("potion", EntityAreaEffectCloud.class, "field_184502_e");
addMapping("effects", EntityAreaEffectCloud.class, "field_184503_f");
addMapping("reapplicationDelayMap", EntityAreaEffectCloud.class, "field_184504_g");
addMapping("duration", EntityAreaEffectCloud.class, "field_184505_h");
addMapping("waitTime", EntityAreaEffectCloud.class, "field_184506_as");
addMapping("reapplicationDelay", EntityAreaEffectCloud.class, "field_184507_at");
addMapping("colorSet", EntityAreaEffectCloud.class, "field_184508_au");
addMapping("durationOnUse", EntityAreaEffectCloud.class, "field_184509_av");
addMapping("radiusOnUse", EntityAreaEffectCloud.class, "field_184510_aw");
addMapping("radiusPerTick", EntityAreaEffectCloud.class, "field_184511_ax");
addMapping("owner", EntityAreaEffectCloud.class, "field_184512_ay");
addMapping("ownerUniqueId", EntityAreaEffectCloud.class, "field_184513_az");
addMapping("PARTICLE_PARAM_1", EntityAreaEffectCloud.class, "field_189736_e");
addMapping("PARTICLE_PARAM_2", EntityAreaEffectCloud.class, "field_189737_f");
addMapping("rotationTickCounter", EntityBodyHelper.class, "field_75666_b");
addMapping("prevRenderYawHead", EntityBodyHelper.class, "field_75667_c");
addMapping("living", EntityBodyHelper.class, "field_75668_a");
addMapping("FLEEING_SPEED_MODIFIER_UUID", EntityCreature.class, "field_110179_h");
addMapping("FLEEING_SPEED_MODIFIER", EntityCreature.class, "field_110181_i");
addMapping("restoreWaterCost", EntityCreature.class, "field_184661_bw");
addMapping("maximumHomeDistance", EntityCreature.class, "field_70772_bD");
addMapping("homePosition", EntityCreature.class, "field_70775_bC");
addMapping("facingDirection", EntityHanging.class, "field_174860_b");
addMapping("hangingPosition", EntityHanging.class, "field_174861_a");
addMapping("IS_HANGING_ENTITY", EntityHanging.class, "field_184524_c");
addMapping("tickCounter1", EntityHanging.class, "field_70520_f");
addMapping("LOGGER", EntityList.class, "field_151516_b");
addMapping("LIGHTNING_BOLT", EntityList.class, "field_191307_a");
addMapping("REGISTRY", EntityList.class, "field_191308_b");
addMapping("KNOWN_TYPES", EntityList.class, "field_191309_d");
addMapping("PLAYER", EntityList.class, "field_191310_e");
addMapping("OLD_NAMES", EntityList.class, "field_191311_g");
addMapping("ENTITY_EGGS", EntityList.class, "field_75627_a");
addMapping("leashHolder", EntityLiving.class, "field_110168_bw");
addMapping("isLeashed", EntityLiving.class, "field_110169_bv");
addMapping("leashNBTTag", EntityLiving.class, "field_110170_bx");
addMapping("deathLootTableSeed", EntityLiving.class, "field_184653_bB");
addMapping("AI_FLAGS", EntityLiving.class, "field_184654_a");
addMapping("inventoryArmorDropChances", EntityLiving.class, "field_184655_bs");
addMapping("inventoryHands", EntityLiving.class, "field_184656_bv");
addMapping("inventoryArmor", EntityLiving.class, "field_184657_bw");
addMapping("mapPathPriority", EntityLiving.class, "field_184658_bz");
addMapping("deathLootTable", EntityLiving.class, "field_184659_bA");
addMapping("attackTarget", EntityLiving.class, "field_70696_bz");
addMapping("navigator", EntityLiving.class, "field_70699_by");
addMapping("tasks", EntityLiving.class, "field_70714_bg");
addMapping("targetTasks", EntityLiving.class, "field_70715_bh");
addMapping("senses", EntityLiving.class, "field_70723_bA");
addMapping("experienceValue", EntityLiving.class, "field_70728_aV");
addMapping("lookHelper", EntityLiving.class, "field_70749_g");
addMapping("livingSoundTime", EntityLiving.class, "field_70757_a");
addMapping("bodyHelper", EntityLiving.class, "field_70762_j");
addMapping("moveHelper", EntityLiving.class, "field_70765_h");
addMapping("jumpHelper", EntityLiving.class, "field_70767_i");
addMapping("canPickUpLoot", EntityLiving.class, "field_82172_bs");
addMapping("inventoryHandsDropChances", EntityLiving.class, "field_82174_bp");
addMapping("persistenceRequired", EntityLiving.class, "field_82179_bU");
addMapping("lastAttackedEntity", EntityLivingBase.class, "field_110150_bn");
addMapping("absorptionAmount", EntityLivingBase.class, "field_110151_bq");
addMapping("lastDamage", EntityLivingBase.class, "field_110153_bc");
addMapping("onGroundSpeedFactor", EntityLivingBase.class, "field_110154_aX");
addMapping("attributeMap", EntityLivingBase.class, "field_110155_d");
addMapping("SPRINTING_SPEED_BOOST_ID", EntityLivingBase.class, "field_110156_b");
addMapping("SPRINTING_SPEED_BOOST", EntityLivingBase.class, "field_110157_c");
addMapping("swingProgressInt", EntityLivingBase.class, "field_110158_av");
addMapping("lastAttackedEntityTime", EntityLivingBase.class, "field_142016_bo");
addMapping("ticksSinceLastSwing", EntityLivingBase.class, "field_184617_aD");
addMapping("prevLimbSwingAmount", EntityLivingBase.class, "field_184618_aE");
addMapping("limbSwing", EntityLivingBase.class, "field_184619_aG");
addMapping("prevBlockpos", EntityLivingBase.class, "field_184620_bC");
addMapping("HAND_STATES", EntityLivingBase.class, "field_184621_as");
addMapping("swingingHand", EntityLivingBase.class, "field_184622_au");
addMapping("interpTargetX", EntityLivingBase.class, "field_184623_bh");
addMapping("interpTargetY", EntityLivingBase.class, "field_184624_bi");
addMapping("interpTargetZ", EntityLivingBase.class, "field_184625_bj");
addMapping("interpTargetYaw", EntityLivingBase.class, "field_184626_bk");
addMapping("activeItemStack", EntityLivingBase.class, "field_184627_bm");
addMapping("activeItemStackUseCount", EntityLivingBase.class, "field_184628_bn");
addMapping("ticksElytraFlying", EntityLivingBase.class, "field_184629_bo");
addMapping("handInventory", EntityLivingBase.class, "field_184630_bs");
addMapping("armorArray", EntityLivingBase.class, "field_184631_bt");
addMapping("HEALTH", EntityLivingBase.class, "field_184632_c");
addMapping("POTION_EFFECTS", EntityLivingBase.class, "field_184633_f");
addMapping("HIDE_PARTICLES", EntityLivingBase.class, "field_184634_g");
addMapping("ARROW_COUNT_IN_ENTITY", EntityLivingBase.class, "field_184635_h");
addMapping("lastDamageSource", EntityLivingBase.class, "field_189750_bF");
addMapping("lastDamageStamp", EntityLivingBase.class, "field_189751_bG");
addMapping("LOGGER", EntityLivingBase.class, "field_190632_a");
addMapping("moveForward", EntityLivingBase.class, "field_191988_bg");
addMapping("moveVertical", EntityLivingBase.class, "field_70701_bs");
addMapping("moveStrafing", EntityLivingBase.class, "field_70702_br");
addMapping("isJumping", EntityLivingBase.class, "field_70703_bu");
addMapping("randomYawVelocity", EntityLivingBase.class, "field_70704_bt");
addMapping("idleTime", EntityLivingBase.class, "field_70708_bq");
addMapping("interpTargetPitch", EntityLivingBase.class, "field_70709_bj");
addMapping("activePotionsMap", EntityLivingBase.class, "field_70713_bf");
addMapping("newPosRotationIncrements", EntityLivingBase.class, "field_70716_bi");
addMapping("attackingPlayer", EntityLivingBase.class, "field_70717_bb");
addMapping("recentlyHit", EntityLivingBase.class, "field_70718_bc");
addMapping("arrowHitTimer", EntityLivingBase.class, "field_70720_be");
addMapping("limbSwingAmount", EntityLivingBase.class, "field_70721_aZ");
addMapping("deathTime", EntityLivingBase.class, "field_70725_aQ");
addMapping("cameraPitch", EntityLivingBase.class, "field_70726_aT");
addMapping("prevCameraPitch", EntityLivingBase.class, "field_70727_aS");
addMapping("dead", EntityLivingBase.class, "field_70729_aU");
addMapping("prevSwingProgress", EntityLivingBase.class, "field_70732_aI");
addMapping("swingProgress", EntityLivingBase.class, "field_70733_aJ");
addMapping("hurtTime", EntityLivingBase.class, "field_70737_aN");
addMapping("maxHurtTime", EntityLivingBase.class, "field_70738_aO");
addMapping("attackedAtYaw", EntityLivingBase.class, "field_70739_aP");
addMapping("unused180", EntityLivingBase.class, "field_70741_aB");
addMapping("scoreValue", EntityLivingBase.class, "field_70744_aE");
addMapping("landMovementFactor", EntityLivingBase.class, "field_70746_aG");
addMapping("jumpMovementFactor", EntityLivingBase.class, "field_70747_aH");
addMapping("potionsNeedUpdate", EntityLivingBase.class, "field_70752_e");
addMapping("revengeTarget", EntityLivingBase.class, "field_70755_b");
addMapping("revengeTimer", EntityLivingBase.class, "field_70756_c");
addMapping("prevRotationYawHead", EntityLivingBase.class, "field_70758_at");
addMapping("rotationYawHead", EntityLivingBase.class, "field_70759_as");
addMapping("prevRenderYawOffset", EntityLivingBase.class, "field_70760_ar");
addMapping("renderYawOffset", EntityLivingBase.class, "field_70761_aq");
addMapping("prevMovedDistance", EntityLivingBase.class, "field_70763_ax");
addMapping("movedDistance", EntityLivingBase.class, "field_70764_aw");
addMapping("prevOnGroundSpeedFactor", EntityLivingBase.class, "field_70768_au");
addMapping("randomUnused2", EntityLivingBase.class, "field_70769_ao");
addMapping("randomUnused1", EntityLivingBase.class, "field_70770_ap");
addMapping("maxHurtResistantTime", EntityLivingBase.class, "field_70771_an");
addMapping("jumpTicks", EntityLivingBase.class, "field_70773_bE");
addMapping("isSwingInProgress", EntityLivingBase.class, "field_82175_bq");
addMapping("_combatTracker", EntityLivingBase.class, "field_94063_bt");
addMapping("ENTITY_PLACEMENTS", EntitySpawnPlacementRegistry.class, "field_180110_a");
addMapping("LOGGER", EntityTracker.class, "field_151249_a");
addMapping("maxTrackingDistanceThreshold", EntityTracker.class, "field_72792_d");
addMapping("entries", EntityTracker.class, "field_72793_b");
addMapping("trackedEntityHashTable", EntityTracker.class, "field_72794_c");
addMapping("world", EntityTracker.class, "field_72795_a");
addMapping("LOGGER", EntityTrackerEntry.class, "field_151262_p");
addMapping("onGround", EntityTrackerEntry.class, "field_180234_y");
addMapping("maxRange", EntityTrackerEntry.class, "field_187262_f");
addMapping("passengers", EntityTrackerEntry.class, "field_187263_w");
addMapping("encodedPosZ", EntityTrackerEntry.class, "field_73126_f");
addMapping("encodedRotationYaw", EntityTrackerEntry.class, "field_73127_g");
addMapping("encodedPosX", EntityTrackerEntry.class, "field_73128_d");
addMapping("encodedPosY", EntityTrackerEntry.class, "field_73129_e");
addMapping("range", EntityTrackerEntry.class, "field_73130_b");
addMapping("updateFrequency", EntityTrackerEntry.class, "field_73131_c");
addMapping("trackedEntity", EntityTrackerEntry.class, "field_73132_a");
addMapping("playerEntitiesUpdated", EntityTrackerEntry.class, "field_73133_n");
addMapping("trackingPlayers", EntityTrackerEntry.class, "field_73134_o");
addMapping("motionZ", EntityTrackerEntry.class, "field_73135_l");
addMapping("updateCounter", EntityTrackerEntry.class, "field_73136_m");
addMapping("lastTrackedEntityMotionX", EntityTrackerEntry.class, "field_73137_j");
addMapping("lastTrackedEntityMotionY", EntityTrackerEntry.class, "field_73138_k");
addMapping("encodedRotationPitch", EntityTrackerEntry.class, "field_73139_h");
addMapping("lastHeadMotion", EntityTrackerEntry.class, "field_73140_i");
addMapping("ridingEntity", EntityTrackerEntry.class, "field_73141_v");
addMapping("ticksSinceLastForcedTeleport", EntityTrackerEntry.class, "field_73142_u");
addMapping("sendVelocityUpdates", EntityTrackerEntry.class, "field_73143_t");
addMapping("updatedPlayerVisibility", EntityTrackerEntry.class, "field_73144_s");
addMapping("lastTrackedEntityPosZ", EntityTrackerEntry.class, "field_73145_r");
addMapping("lastTrackedEntityPosY", EntityTrackerEntry.class, "field_73146_q");
addMapping("lastTrackedEntityPosX", EntityTrackerEntry.class, "field_73147_p");
addMapping("creatureMaterial", EnumCreatureType.class, "field_75603_f");
addMapping("isPeacefulCreature", EnumCreatureType.class, "field_75604_g");
addMapping("creatureClass", EnumCreatureType.class, "field_75605_d");
addMapping("maxNumberOfCreature", EnumCreatureType.class, "field_75606_e");
addMapping("isAnimal", EnumCreatureType.class, "field_82707_i");
addMapping("partName", MultiPartEntityPart.class, "field_146032_b");
addMapping("parent", MultiPartEntityPart.class, "field_70259_a");
addMapping("name", NpcMerchant.class, "field_175548_d");
addMapping("customer", NpcMerchant.class, "field_70935_b");
addMapping("recipeList", NpcMerchant.class, "field_70936_c");
addMapping("merchantInventory", NpcMerchant.class, "field_70937_a");
addMapping("MOVEMENT_SPEED", SharedMonsterAttributes.class, "field_111263_d");
addMapping("ATTACK_DAMAGE", SharedMonsterAttributes.class, "field_111264_e");
addMapping("FOLLOW_RANGE", SharedMonsterAttributes.class, "field_111265_b");
addMapping("KNOCKBACK_RESISTANCE", SharedMonsterAttributes.class, "field_111266_c");
addMapping("MAX_HEALTH", SharedMonsterAttributes.class, "field_111267_a");
addMapping("LOGGER", SharedMonsterAttributes.class, "field_151476_f");
addMapping("ATTACK_SPEED", SharedMonsterAttributes.class, "field_188790_f");
addMapping("ARMOR", SharedMonsterAttributes.class, "field_188791_g");
addMapping("LUCK", SharedMonsterAttributes.class, "field_188792_h");
addMapping("ARMOR_TOUGHNESS", SharedMonsterAttributes.class, "field_189429_h");
addMapping("FLYING_SPEED", SharedMonsterAttributes.class, "field_193334_e");
addMapping("targetY", EntityAIAttackMelee.class, "field_151495_j");
addMapping("targetZ", EntityAIAttackMelee.class, "field_151496_k");
addMapping("targetX", EntityAIAttackMelee.class, "field_151497_i");
addMapping("attackInterval", EntityAIAttackMelee.class, "field_188493_g");
addMapping("longMemory", EntityAIAttackMelee.class, "field_75437_f");
addMapping("path", EntityAIAttackMelee.class, "field_75438_g");
addMapping("attackTick", EntityAIAttackMelee.class, "field_75439_d");
addMapping("speedTowardsTarget", EntityAIAttackMelee.class, "field_75440_e");
addMapping("attacker", EntityAIAttackMelee.class, "field_75441_b");
addMapping("world", EntityAIAttackMelee.class, "field_75443_a");
addMapping("delayCounter", EntityAIAttackMelee.class, "field_75445_i");
addMapping("seeTime", EntityAIAttackRanged.class, "field_75318_f");
addMapping("rangedAttackTime", EntityAIAttackRanged.class, "field_75320_d");
addMapping("entityMoveSpeed", EntityAIAttackRanged.class, "field_75321_e");
addMapping("entityHost", EntityAIAttackRanged.class, "field_75322_b");
addMapping("attackTarget", EntityAIAttackRanged.class, "field_75323_c");
addMapping("maxRangedAttackTime", EntityAIAttackRanged.class, "field_75325_h");
addMapping("rangedAttackEntityHost", EntityAIAttackRanged.class, "field_82641_b");
addMapping("maxAttackDistance", EntityAIAttackRanged.class, "field_82642_h");
addMapping("attackIntervalMin", EntityAIAttackRanged.class, "field_96561_g");
addMapping("attackRadius", EntityAIAttackRanged.class, "field_96562_i");
addMapping("entity", EntityAIAttackRangedBow.class, "field_188499_a");
addMapping("moveSpeedAmp", EntityAIAttackRangedBow.class, "field_188500_b");
addMapping("attackCooldown", EntityAIAttackRangedBow.class, "field_188501_c");
addMapping("maxAttackDistance", EntityAIAttackRangedBow.class, "field_188502_d");
addMapping("attackTime", EntityAIAttackRangedBow.class, "field_188503_e");
addMapping("seeTime", EntityAIAttackRangedBow.class, "field_188504_f");
addMapping("strafingClockwise", EntityAIAttackRangedBow.class, "field_188505_g");
addMapping("strafingBackwards", EntityAIAttackRangedBow.class, "field_188506_h");
addMapping("strafingTime", EntityAIAttackRangedBow.class, "field_188507_i");
addMapping("avoidDistance", EntityAIAvoidEntity.class, "field_179508_f");
addMapping("canBeSeenSelector", EntityAIAvoidEntity.class, "field_179509_a");
addMapping("avoidTargetSelector", EntityAIAvoidEntity.class, "field_179510_i");
addMapping("classToAvoid", EntityAIAvoidEntity.class, "field_181064_i");
addMapping("path", EntityAIAvoidEntity.class, "field_75374_f");
addMapping("navigation", EntityAIAvoidEntity.class, "field_75375_g");
addMapping("closestLivingEntity", EntityAIAvoidEntity.class, "field_75376_d");
addMapping("farSpeed", EntityAIAvoidEntity.class, "field_75378_b");
addMapping("nearSpeed", EntityAIAvoidEntity.class, "field_75379_c");
addMapping("entity", EntityAIAvoidEntity.class, "field_75380_a");
addMapping("mutexBits", EntityAIBase.class, "field_75254_a");
addMapping("minPlayerDistance", EntityAIBeg.class, "field_75383_d");
addMapping("timeoutCounter", EntityAIBeg.class, "field_75384_e");
addMapping("player", EntityAIBeg.class, "field_75385_b");
addMapping("world", EntityAIBeg.class, "field_75386_c");
addMapping("wolf", EntityAIBeg.class, "field_75387_a");
addMapping("previousBreakProgress", EntityAIBreakDoor.class, "field_75358_j");
addMapping("breakingTime", EntityAIBreakDoor.class, "field_75359_i");
addMapping("creeperAttackTarget", EntityAICreeperSwell.class, "field_75268_b");
addMapping("swellingCreeper", EntityAICreeperSwell.class, "field_75269_a");
addMapping("villageAgressorTarget", EntityAIDefendVillage.class, "field_75304_b");
addMapping("irongolem", EntityAIDefendVillage.class, "field_75305_a");
addMapping("doorBlock", EntityAIDoorInteract.class, "field_151504_e");
addMapping("doorPosition", EntityAIDoorInteract.class, "field_179507_b");
addMapping("hasStoppedDoorInteraction", EntityAIDoorInteract.class, "field_75350_f");
addMapping("entityPositionX", EntityAIDoorInteract.class, "field_75351_g");
addMapping("entity", EntityAIDoorInteract.class, "field_75356_a");
addMapping("entityPositionZ", EntityAIDoorInteract.class, "field_75357_h");
addMapping("grassEaterEntity", EntityAIEatGrass.class, "field_151500_b");
addMapping("entityWorld", EntityAIEatGrass.class, "field_151501_c");
addMapping("eatingGrassTimer", EntityAIEatGrass.class, "field_151502_a");
addMapping("IS_TALL_GRASS", EntityAIEatGrass.class, "field_179505_b");
addMapping("classToCheck", EntityAIFindEntityNearest.class, "field_179439_f");
addMapping("sorter", EntityAIFindEntityNearest.class, "field_179440_d");
addMapping("target", EntityAIFindEntityNearest.class, "field_179441_e");
addMapping("mob", EntityAIFindEntityNearest.class, "field_179442_b");
addMapping("predicate", EntityAIFindEntityNearest.class, "field_179443_c");
addMapping("LOGGER", EntityAIFindEntityNearest.class, "field_179444_a");
addMapping("sorter", EntityAIFindEntityNearestPlayer.class, "field_179432_d");
addMapping("entityTarget", EntityAIFindEntityNearestPlayer.class, "field_179433_e");
addMapping("entityLiving", EntityAIFindEntityNearestPlayer.class, "field_179434_b");
addMapping("predicate", EntityAIFindEntityNearestPlayer.class, "field_179435_c");
addMapping("LOGGER", EntityAIFindEntityNearestPlayer.class, "field_179436_a");
addMapping("world", EntityAIFleeSun.class, "field_75367_f");
addMapping("shelterZ", EntityAIFleeSun.class, "field_75368_d");
addMapping("movementSpeed", EntityAIFleeSun.class, "field_75369_e");
addMapping("shelterX", EntityAIFleeSun.class, "field_75370_b");
addMapping("shelterY", EntityAIFleeSun.class, "field_75371_c");
addMapping("creature", EntityAIFleeSun.class, "field_75372_a");
addMapping("entity", EntityAIFollow.class, "field_192372_a");
addMapping("followPredicate", EntityAIFollow.class, "field_192373_b");
addMapping("followingEntity", EntityAIFollow.class, "field_192374_c");
addMapping("speedModifier", EntityAIFollow.class, "field_192375_d");
addMapping("navigation", EntityAIFollow.class, "field_192376_e");
addMapping("timeToRecalcPath", EntityAIFollow.class, "field_192377_f");
addMapping("stopDistance", EntityAIFollow.class, "field_192378_g");
addMapping("oldWaterCost", EntityAIFollow.class, "field_192379_h");
addMapping("areaSize", EntityAIFollow.class, "field_192380_i");
addMapping("tookGolemRose", EntityAIFollowGolem.class, "field_75291_d");
addMapping("ironGolem", EntityAIFollowGolem.class, "field_75292_b");
addMapping("takeGolemRoseTick", EntityAIFollowGolem.class, "field_75293_c");
addMapping("villager", EntityAIFollowGolem.class, "field_75294_a");
addMapping("followSpeed", EntityAIFollowOwner.class, "field_75336_f");
addMapping("petPathfinder", EntityAIFollowOwner.class, "field_75337_g");
addMapping("tameable", EntityAIFollowOwner.class, "field_75338_d");
addMapping("owner", EntityAIFollowOwner.class, "field_75339_e");
addMapping("maxDist", EntityAIFollowOwner.class, "field_75340_b");
addMapping("minDist", EntityAIFollowOwner.class, "field_75341_c");
addMapping("world", EntityAIFollowOwner.class, "field_75342_a");
addMapping("timeToRecalcPath", EntityAIFollowOwner.class, "field_75343_h");
addMapping("oldWaterCost", EntityAIFollowOwner.class, "field_75344_i");
addMapping("delayCounter", EntityAIFollowParent.class, "field_75345_d");
addMapping("parentAnimal", EntityAIFollowParent.class, "field_75346_b");
addMapping("moveSpeed", EntityAIFollowParent.class, "field_75347_c");
addMapping("childAnimal", EntityAIFollowParent.class, "field_75348_a");
addMapping("currentTask", EntityAIHarvestFarmland.class, "field_179501_f");
addMapping("hasFarmItem", EntityAIHarvestFarmland.class, "field_179502_d");
addMapping("wantsToReapStuff", EntityAIHarvestFarmland.class, "field_179503_e");
addMapping("villager", EntityAIHarvestFarmland.class, "field_179504_c");
addMapping("revengeTimerOld", EntityAIHurtByTarget.class, "field_142052_b");
addMapping("excludedReinforcementTypes", EntityAIHurtByTarget.class, "field_179447_c");
addMapping("entityCallsForHelp", EntityAIHurtByTarget.class, "field_75312_a");
addMapping("entity", EntityAILandOnOwnersShoulder.class, "field_192382_a");
addMapping("owner", EntityAILandOnOwnersShoulder.class, "field_192383_b");
addMapping("isSittingOnShoulder", EntityAILandOnOwnersShoulder.class, "field_192384_c");
addMapping("leapTarget", EntityAILeapAtTarget.class, "field_75326_b");
addMapping("leapMotionY", EntityAILeapAtTarget.class, "field_75327_c");
addMapping("leaper", EntityAILeapAtTarget.class, "field_75328_a");
addMapping("llama", EntityAILlamaFollowCaravan.class, "field_190859_a");
addMapping("speedModifier", EntityAILlamaFollowCaravan.class, "field_190860_b");
addMapping("distCheckCounter", EntityAILlamaFollowCaravan.class, "field_190861_c");
addMapping("villager", EntityAILookAtTradePlayer.class, "field_75335_b");
addMapping("villager", EntityAILookAtVillager.class, "field_75395_b");
addMapping("lookTime", EntityAILookAtVillager.class, "field_75396_c");
addMapping("ironGolem", EntityAILookAtVillager.class, "field_75397_a");
addMapping("idleTime", EntityAILookIdle.class, "field_75255_d");
addMapping("lookX", EntityAILookIdle.class, "field_75256_b");
addMapping("lookZ", EntityAILookIdle.class, "field_75257_c");
addMapping("idleEntity", EntityAILookIdle.class, "field_75258_a");
addMapping("mateClass", EntityAIMate.class, "field_190857_e");
addMapping("animal", EntityAIMate.class, "field_75390_d");
addMapping("targetMate", EntityAIMate.class, "field_75391_e");
addMapping("spawnBabyDelay", EntityAIMate.class, "field_75392_b");
addMapping("moveSpeed", EntityAIMate.class, "field_75393_c");
addMapping("world", EntityAIMate.class, "field_75394_a");
addMapping("insidePosZ", EntityAIMoveIndoors.class, "field_75421_d");
addMapping("doorInfo", EntityAIMoveIndoors.class, "field_75422_b");
addMapping("insidePosX", EntityAIMoveIndoors.class, "field_75423_c");
addMapping("entity", EntityAIMoveIndoors.class, "field_75424_a");
addMapping("doorList", EntityAIMoveThroughVillage.class, "field_75415_f");
addMapping("doorInfo", EntityAIMoveThroughVillage.class, "field_75416_d");
addMapping("isNocturnal", EntityAIMoveThroughVillage.class, "field_75417_e");
addMapping("movementSpeed", EntityAIMoveThroughVillage.class, "field_75418_b");
addMapping("path", EntityAIMoveThroughVillage.class, "field_75419_c");
addMapping("entity", EntityAIMoveThroughVillage.class, "field_75420_a");
addMapping("maxStayTicks", EntityAIMoveToBlock.class, "field_179490_f");
addMapping("isAboveDestination", EntityAIMoveToBlock.class, "field_179491_g");
addMapping("movementSpeed", EntityAIMoveToBlock.class, "field_179492_d");
addMapping("timeoutCounter", EntityAIMoveToBlock.class, "field_179493_e");
addMapping("destinationBlock", EntityAIMoveToBlock.class, "field_179494_b");
addMapping("creature", EntityAIMoveToBlock.class, "field_179495_c");
addMapping("runDelay", EntityAIMoveToBlock.class, "field_179496_a");
addMapping("searchLength", EntityAIMoveToBlock.class, "field_179497_h");
addMapping("movePosZ", EntityAIMoveTowardsRestriction.class, "field_75432_d");
addMapping("movementSpeed", EntityAIMoveTowardsRestriction.class, "field_75433_e");
addMapping("movePosX", EntityAIMoveTowardsRestriction.class, "field_75434_b");
addMapping("movePosY", EntityAIMoveTowardsRestriction.class, "field_75435_c");
addMapping("creature", EntityAIMoveTowardsRestriction.class, "field_75436_a");
addMapping("speed", EntityAIMoveTowardsTarget.class, "field_75425_f");
addMapping("maxTargetDistance", EntityAIMoveTowardsTarget.class, "field_75426_g");
addMapping("movePosY", EntityAIMoveTowardsTarget.class, "field_75427_d");
addMapping("movePosZ", EntityAIMoveTowardsTarget.class, "field_75428_e");
addMapping("targetEntity", EntityAIMoveTowardsTarget.class, "field_75429_b");
addMapping("movePosX", EntityAIMoveTowardsTarget.class, "field_75430_c");
addMapping("creature", EntityAIMoveTowardsTarget.class, "field_75431_a");
addMapping("sorter", EntityAINearestAttackableTarget.class, "field_75306_g");
addMapping("targetClass", EntityAINearestAttackableTarget.class, "field_75307_b");
addMapping("targetChance", EntityAINearestAttackableTarget.class, "field_75308_c");
addMapping("targetEntity", EntityAINearestAttackableTarget.class, "field_75309_a");
addMapping("targetEntitySelector", EntityAINearestAttackableTarget.class, "field_82643_g");
addMapping("attackCountdown", EntityAIOcelotAttack.class, "field_75408_d");
addMapping("entity", EntityAIOcelotAttack.class, "field_75409_b");
addMapping("target", EntityAIOcelotAttack.class, "field_75410_c");
addMapping("world", EntityAIOcelotAttack.class, "field_75411_a");
addMapping("ocelot", EntityAIOcelotSit.class, "field_151493_a");
addMapping("closeDoorTemporisation", EntityAIOpenDoor.class, "field_75360_j");
addMapping("closeDoor", EntityAIOpenDoor.class, "field_75361_i");
addMapping("timestamp", EntityAIOwnerHurtByTarget.class, "field_142051_e");
addMapping("attacker", EntityAIOwnerHurtByTarget.class, "field_75315_b");
addMapping("tameable", EntityAIOwnerHurtByTarget.class, "field_75316_a");
addMapping("timestamp", EntityAIOwnerHurtTarget.class, "field_142050_e");
addMapping("attacker", EntityAIOwnerHurtTarget.class, "field_75313_b");
addMapping("tameable", EntityAIOwnerHurtTarget.class, "field_75314_a");
addMapping("randPosY", EntityAIPanic.class, "field_75263_d");
addMapping("randPosZ", EntityAIPanic.class, "field_75264_e");
addMapping("speed", EntityAIPanic.class, "field_75265_b");
addMapping("randPosX", EntityAIPanic.class, "field_75266_c");
addMapping("creature", EntityAIPanic.class, "field_75267_a");
addMapping("playTime", EntityAIPlay.class, "field_75259_d");
addMapping("targetVillager", EntityAIPlay.class, "field_75260_b");
addMapping("speed", EntityAIPlay.class, "field_75261_c");
addMapping("villager", EntityAIPlay.class, "field_75262_a");
addMapping("frontDoor", EntityAIRestrictOpenDoor.class, "field_75274_b");
addMapping("entity", EntityAIRestrictOpenDoor.class, "field_75275_a");
addMapping("entity", EntityAIRestrictSun.class, "field_75273_a");
addMapping("targetY", EntityAIRunAroundLikeCrazy.class, "field_111176_d");
addMapping("targetZ", EntityAIRunAroundLikeCrazy.class, "field_111177_e");
addMapping("speed", EntityAIRunAroundLikeCrazy.class, "field_111178_b");
addMapping("targetX", EntityAIRunAroundLikeCrazy.class, "field_111179_c");
addMapping("horseHost", EntityAIRunAroundLikeCrazy.class, "field_111180_a");
addMapping("isSitting", EntityAISit.class, "field_75271_b");
addMapping("tameable", EntityAISit.class, "field_75272_a");
addMapping("horse", EntityAISkeletonRiders.class, "field_188516_a");
addMapping("entity", EntityAISwimming.class, "field_75373_a");
addMapping("target", EntityAITarget.class, "field_188509_g");
addMapping("unseenMemoryTicks", EntityAITarget.class, "field_188510_h");
addMapping("shouldCheckSight", EntityAITarget.class, "field_75297_f");
addMapping("targetUnseenTicks", EntityAITarget.class, "field_75298_g");
addMapping("taskOwner", EntityAITarget.class, "field_75299_d");
addMapping("targetSearchStatus", EntityAITarget.class, "field_75301_b");
addMapping("targetSearchDelay", EntityAITarget.class, "field_75302_c");
addMapping("nearbyOnly", EntityAITarget.class, "field_75303_a");
addMapping("tameable", EntityAITargetNonTamed.class, "field_75310_g");
addMapping("LOGGER", EntityAITasks.class, "field_151506_a");
addMapping("disabledControlFlags", EntityAITasks.class, "field_188529_g");
addMapping("tickCount", EntityAITasks.class, "field_75778_d");
addMapping("tickRate", EntityAITasks.class, "field_75779_e");
addMapping("executingTaskEntries", EntityAITasks.class, "field_75780_b");
addMapping("profiler", EntityAITasks.class, "field_75781_c");
addMapping("taskEntries", EntityAITasks.class, "field_75782_a");
addMapping("temptItem", EntityAITempt.class, "field_151484_k");
addMapping("pitch", EntityAITempt.class, "field_75278_f");
addMapping("yaw", EntityAITempt.class, "field_75279_g");
addMapping("targetY", EntityAITempt.class, "field_75280_d");
addMapping("targetZ", EntityAITempt.class, "field_75281_e");
addMapping("speed", EntityAITempt.class, "field_75282_b");
addMapping("targetX", EntityAITempt.class, "field_75283_c");
addMapping("temptedEntity", EntityAITempt.class, "field_75284_a");
addMapping("scaredByPlayerMovement", EntityAITempt.class, "field_75285_l");
addMapping("isRunning", EntityAITempt.class, "field_75287_j");
addMapping("temptingPlayer", EntityAITempt.class, "field_75289_h");
addMapping("delayTemptCounter", EntityAITempt.class, "field_75290_i");
addMapping("villager", EntityAITradePlayer.class, "field_75276_a");
addMapping("villager", EntityAIVillagerInteract.class, "field_179477_f");
addMapping("interactionDelay", EntityAIVillagerInteract.class, "field_179478_e");
addMapping("world", EntityAIVillagerMate.class, "field_75448_d");
addMapping("matingTimeout", EntityAIVillagerMate.class, "field_75449_e");
addMapping("villager", EntityAIVillagerMate.class, "field_75450_b");
addMapping("mate", EntityAIVillagerMate.class, "field_75451_c");
addMapping("village", EntityAIVillagerMate.class, "field_75452_a");
addMapping("executionChance", EntityAIWander.class, "field_179481_f");
addMapping("mustUpdate", EntityAIWander.class, "field_179482_g");
addMapping("z", EntityAIWander.class, "field_75453_d");
addMapping("speed", EntityAIWander.class, "field_75454_e");
addMapping("x", EntityAIWander.class, "field_75455_b");
addMapping("y", EntityAIWander.class, "field_75456_c");
addMapping("entity", EntityAIWander.class, "field_75457_a");
addMapping("probability", EntityAIWanderAvoidWater.class, "field_190865_h");
addMapping("watchedClass", EntityAIWatchClosest.class, "field_75329_f");
addMapping("lookTime", EntityAIWatchClosest.class, "field_75330_d");
addMapping("chance", EntityAIWatchClosest.class, "field_75331_e");
addMapping("entity", EntityAIWatchClosest.class, "field_75332_b");
addMapping("maxDistanceForPlayer", EntityAIWatchClosest.class, "field_75333_c");
addMapping("closestEntity", EntityAIWatchClosest.class, "field_75334_a");
addMapping("zombie", EntityAIZombieAttack.class, "field_188494_h");
addMapping("raiseArmTicks", EntityAIZombieAttack.class, "field_188495_i");
addMapping("isJumping", EntityJumpHelper.class, "field_75662_b");
addMapping("entity", EntityJumpHelper.class, "field_75663_a");
addMapping("posY", EntityLookHelper.class, "field_75653_f");
addMapping("posZ", EntityLookHelper.class, "field_75654_g");
addMapping("isLooking", EntityLookHelper.class, "field_75655_d");
addMapping("posX", EntityLookHelper.class, "field_75656_e");
addMapping("deltaLookYaw", EntityLookHelper.class, "field_75657_b");
addMapping("deltaLookPitch", EntityLookHelper.class, "field_75658_c");
addMapping("entity", EntityLookHelper.class, "field_75659_a");
addMapping("moveForward", EntityMoveHelper.class, "field_188489_f");
addMapping("moveStrafe", EntityMoveHelper.class, "field_188490_g");
addMapping("action", EntityMoveHelper.class, "field_188491_h");
addMapping("posZ", EntityMoveHelper.class, "field_75644_d");
addMapping("speed", EntityMoveHelper.class, "field_75645_e");
addMapping("posX", EntityMoveHelper.class, "field_75646_b");
addMapping("posY", EntityMoveHelper.class, "field_75647_c");
addMapping("entity", EntityMoveHelper.class, "field_75648_a");
addMapping("seenEntities", EntitySenses.class, "field_75524_b");
addMapping("unseenEntities", EntitySenses.class, "field_75525_c");
addMapping("entity", EntitySenses.class, "field_75526_a");
addMapping("staticVector", RandomPositionGenerator.class, "field_75465_a");
addMapping("attributesByName", AbstractAttributeMap.class, "field_111153_b");
addMapping("attributes", AbstractAttributeMap.class, "field_111154_a");
addMapping("descendantsByParent", AbstractAttributeMap.class, "field_180377_c");
addMapping("dirtyInstances", AttributeMap.class, "field_111162_d");
addMapping("instancesByName", AttributeMap.class, "field_111163_c");
addMapping("id", AttributeModifier.class, "field_111170_d");
addMapping("isSaved", AttributeModifier.class, "field_111171_e");
addMapping("operation", AttributeModifier.class, "field_111172_b");
addMapping("name", AttributeModifier.class, "field_111173_c");
addMapping("amount", AttributeModifier.class, "field_111174_a");
addMapping("defaultValue", BaseAttribute.class, "field_111113_b");
addMapping("shouldWatch", BaseAttribute.class, "field_111114_c");
addMapping("unlocalizedName", BaseAttribute.class, "field_111115_a");
addMapping("parent", BaseAttribute.class, "field_180373_a");
addMapping("baseValue", ModifiableAttributeInstance.class, "field_111132_f");
addMapping("needsUpdate", ModifiableAttributeInstance.class, "field_111133_g");
addMapping("mapByName", ModifiableAttributeInstance.class, "field_111134_d");
addMapping("mapByUUID", ModifiableAttributeInstance.class, "field_111135_e");
addMapping("genericAttribute", ModifiableAttributeInstance.class, "field_111136_b");
addMapping("mapByOperation", ModifiableAttributeInstance.class, "field_111137_c");
addMapping("attributeMap", ModifiableAttributeInstance.class, "field_111138_a");
addMapping("cachedValue", ModifiableAttributeInstance.class, "field_111139_h");
addMapping("maximumValue", RangedAttribute.class, "field_111118_b");
addMapping("description", RangedAttribute.class, "field_111119_c");
addMapping("minimumValue", RangedAttribute.class, "field_111120_a");
addMapping("dragonPartNeck", EntityDragon.class, "field_184673_bv");
addMapping("PHASE", EntityDragon.class, "field_184674_a");
addMapping("LOGGER", EntityDragon.class, "field_184675_bH");
addMapping("fightManager", EntityDragon.class, "field_184676_bI");
addMapping("phaseManager", EntityDragon.class, "field_184677_bJ");
addMapping("growlTime", EntityDragon.class, "field_184678_bK");
addMapping("sittingDamageReceived", EntityDragon.class, "field_184679_bL");
addMapping("pathPoints", EntityDragon.class, "field_184680_bM");
addMapping("neighbors", EntityDragon.class, "field_184681_bN");
addMapping("pathFindQueue", EntityDragon.class, "field_184682_bO");
addMapping("ringBufferIndex", EntityDragon.class, "field_70976_f");
addMapping("dragonPartArray", EntityDragon.class, "field_70977_g");
addMapping("ringBuffer", EntityDragon.class, "field_70979_e");
addMapping("dragonPartTail3", EntityDragon.class, "field_70982_bz");
addMapping("dragonPartWing1", EntityDragon.class, "field_70983_bA");
addMapping("dragonPartTail2", EntityDragon.class, "field_70984_by");
addMapping("dragonPartTail1", EntityDragon.class, "field_70985_j");
addMapping("dragonPartHead", EntityDragon.class, "field_70986_h");
addMapping("dragonPartBody", EntityDragon.class, "field_70987_i");
addMapping("animTime", EntityDragon.class, "field_70988_bD");
addMapping("dragonPartWing2", EntityDragon.class, "field_70990_bB");
addMapping("prevAnimTime", EntityDragon.class, "field_70991_bC");
addMapping("healingEnderCrystal", EntityDragon.class, "field_70992_bH");
addMapping("slowed", EntityDragon.class, "field_70994_bF");
addMapping("deathTicks", EntityDragon.class, "field_70995_bG");
addMapping("FIRST_HEAD_TARGET", EntityWither.class, "field_184741_a");
addMapping("SECOND_HEAD_TARGET", EntityWither.class, "field_184742_b");
addMapping("THIRD_HEAD_TARGET", EntityWither.class, "field_184743_c");
addMapping("bossInfo", EntityWither.class, "field_184744_bE");
addMapping("HEAD_TARGETS", EntityWither.class, "field_184745_bv");
addMapping("INVULNERABILITY_TIME", EntityWither.class, "field_184746_bw");
addMapping("xRotOHeads", EntityWither.class, "field_82217_f");
addMapping("yRotOHeads", EntityWither.class, "field_82218_g");
addMapping("NOT_UNDEAD", EntityWither.class, "field_82219_bJ");
addMapping("xRotationHeads", EntityWither.class, "field_82220_d");
addMapping("yRotationHeads", EntityWither.class, "field_82221_e");
addMapping("blockBreakCounter", EntityWither.class, "field_82222_j");
addMapping("nextHeadUpdate", EntityWither.class, "field_82223_h");
addMapping("idleHeadUpdates", EntityWither.class, "field_82224_i");
addMapping("dragon", PhaseBase.class, "field_188661_a");
addMapping("LOGGER", PhaseChargingPlayer.class, "field_188669_b");
addMapping("targetLocation", PhaseChargingPlayer.class, "field_188670_c");
addMapping("timeSinceCharge", PhaseChargingPlayer.class, "field_188671_d");
addMapping("targetLocation", PhaseDying.class, "field_188672_b");
addMapping("time", PhaseDying.class, "field_188673_c");
addMapping("currentPath", PhaseHoldingPattern.class, "field_188677_b");
addMapping("targetLocation", PhaseHoldingPattern.class, "field_188678_c");
addMapping("clockwise", PhaseHoldingPattern.class, "field_188679_d");
addMapping("targetLocation", PhaseHover.class, "field_188680_b");
addMapping("targetLocation", PhaseLanding.class, "field_188685_b");
addMapping("currentPath", PhaseLandingApproach.class, "field_188683_b");
addMapping("targetLocation", PhaseLandingApproach.class, "field_188684_c");
addMapping("HOLDING_PATTERN", PhaseList.class, "field_188741_a");
addMapping("STRAFE_PLAYER", PhaseList.class, "field_188742_b");
addMapping("LANDING_APPROACH", PhaseList.class, "field_188743_c");
addMapping("LANDING", PhaseList.class, "field_188744_d");
addMapping("TAKEOFF", PhaseList.class, "field_188745_e");
addMapping("SITTING_FLAMING", PhaseList.class, "field_188746_f");
addMapping("SITTING_SCANNING", PhaseList.class, "field_188747_g");
addMapping("SITTING_ATTACKING", PhaseList.class, "field_188748_h");
addMapping("CHARGING_PLAYER", PhaseList.class, "field_188749_i");
addMapping("DYING", PhaseList.class, "field_188750_j");
addMapping("HOVER", PhaseList.class, "field_188751_k");
addMapping("phases", PhaseList.class, "field_188752_l");
addMapping("clazz", PhaseList.class, "field_188753_m");
addMapping("id", PhaseList.class, "field_188754_n");
addMapping("name", PhaseList.class, "field_188755_o");
addMapping("LOGGER", PhaseManager.class, "field_188759_a");
addMapping("dragon", PhaseManager.class, "field_188760_b");
addMapping("phases", PhaseManager.class, "field_188761_c");
addMapping("phase", PhaseManager.class, "field_188762_d");
addMapping("attackingTicks", PhaseSittingAttacking.class, "field_188662_b");
addMapping("flameTicks", PhaseSittingFlaming.class, "field_188664_b");
addMapping("flameCount", PhaseSittingFlaming.class, "field_188665_c");
addMapping("areaEffectCloud", PhaseSittingFlaming.class, "field_188666_d");
addMapping("scanningTime", PhaseSittingScanning.class, "field_188667_b");
addMapping("LOGGER", PhaseStrafePlayer.class, "field_188689_b");
addMapping("fireballCharge", PhaseStrafePlayer.class, "field_188690_c");
addMapping("currentPath", PhaseStrafePlayer.class, "field_188691_d");
addMapping("targetLocation", PhaseStrafePlayer.class, "field_188692_e");
addMapping("attackTarget", PhaseStrafePlayer.class, "field_188693_f");
addMapping("holdingPatternClockwise", PhaseStrafePlayer.class, "field_188694_g");
addMapping("firstTick", PhaseTakeoff.class, "field_188697_b");
addMapping("currentPath", PhaseTakeoff.class, "field_188698_c");
addMapping("targetLocation", PhaseTakeoff.class, "field_188699_d");
addMapping("effectOnly", EntityLightningBolt.class, "field_184529_d");
addMapping("lightningState", EntityLightningBolt.class, "field_70262_b");
addMapping("boltLivingTime", EntityLightningBolt.class, "field_70263_c");
addMapping("boltVertex", EntityLightningBolt.class, "field_70264_a");
addMapping("DEFAULT_RIGHTLEG_ROTATION", EntityArmorStand.class, "field_175429_f");
addMapping("DEFAULT_RIGHTARM_ROTATION", EntityArmorStand.class, "field_175431_d");
addMapping("DEFAULT_LEFTLEG_ROTATION", EntityArmorStand.class, "field_175432_e");
addMapping("DEFAULT_BODY_ROTATION", EntityArmorStand.class, "field_175433_b");
addMapping("DEFAULT_LEFTARM_ROTATION", EntityArmorStand.class, "field_175434_c");
addMapping("DEFAULT_HEAD_ROTATION", EntityArmorStand.class, "field_175435_a");
addMapping("canInteract", EntityArmorStand.class, "field_175436_h");
addMapping("punchCooldown", EntityArmorStand.class, "field_175437_i");
addMapping("leftArmRotation", EntityArmorStand.class, "field_175438_bj");
addMapping("rightArmRotation", EntityArmorStand.class, "field_175439_bk");
addMapping("leftLegRotation", EntityArmorStand.class, "field_175440_bl");
addMapping("rightLegRotation", EntityArmorStand.class, "field_175441_bm");
addMapping("disabledSlots", EntityArmorStand.class, "field_175442_bg");
addMapping("headRotation", EntityArmorStand.class, "field_175443_bh");
addMapping("bodyRotation", EntityArmorStand.class, "field_175444_bi");
addMapping("wasMarker", EntityArmorStand.class, "field_181028_bj");
addMapping("IS_RIDEABLE_MINECART", EntityArmorStand.class, "field_184798_bv");
addMapping("handItems", EntityArmorStand.class, "field_184799_bw");
addMapping("armorItems", EntityArmorStand.class, "field_184800_bx");
addMapping("STATUS", EntityArmorStand.class, "field_184801_a");
addMapping("HEAD_ROTATION", EntityArmorStand.class, "field_184802_b");
addMapping("BODY_ROTATION", EntityArmorStand.class, "field_184803_c");
addMapping("LEFT_ARM_ROTATION", EntityArmorStand.class, "field_184804_d");
addMapping("RIGHT_ARM_ROTATION", EntityArmorStand.class, "field_184805_e");
addMapping("LEFT_LEG_ROTATION", EntityArmorStand.class, "field_184806_f");
addMapping("RIGHT_LEG_ROTATION", EntityArmorStand.class, "field_184807_g");
addMapping("rightInputDown", EntityBoat.class, "field_184459_aA");
addMapping("TIME_SINCE_HIT", EntityBoat.class, "field_184460_a");
addMapping("forwardInputDown", EntityBoat.class, "field_184461_aB");
addMapping("FORWARD_DIRECTION", EntityBoat.class, "field_184462_b");
addMapping("backInputDown", EntityBoat.class, "field_184463_aC");
addMapping("DAMAGE_TAKEN", EntityBoat.class, "field_184464_c");
addMapping("waterLevel", EntityBoat.class, "field_184465_aD");
addMapping("BOAT_TYPE", EntityBoat.class, "field_184466_d");
addMapping("boatGlide", EntityBoat.class, "field_184467_aE");
addMapping("DATA_ID_PADDLE", EntityBoat.class, "field_184468_e");
addMapping("status", EntityBoat.class, "field_184469_aF");
addMapping("paddlePositions", EntityBoat.class, "field_184470_f");
addMapping("previousStatus", EntityBoat.class, "field_184471_aG");
addMapping("momentum", EntityBoat.class, "field_184472_g");
addMapping("lastYd", EntityBoat.class, "field_184473_aH");
addMapping("outOfControlTicks", EntityBoat.class, "field_184474_h");
addMapping("deltaRotation", EntityBoat.class, "field_184475_as");
addMapping("lerpSteps", EntityBoat.class, "field_184476_at");
addMapping("lerpY", EntityBoat.class, "field_184477_av");
addMapping("lerpZ", EntityBoat.class, "field_184478_aw");
addMapping("lerpPitch", EntityBoat.class, "field_184479_ay");
addMapping("leftInputDown", EntityBoat.class, "field_184480_az");
addMapping("lerpYaw", EntityBoat.class, "field_70273_g");
addMapping("lerpX", EntityBoat.class, "field_70281_h");
addMapping("BEAM_TARGET", EntityEnderCrystal.class, "field_184521_b");
addMapping("SHOW_BOTTOM", EntityEnderCrystal.class, "field_184522_c");
addMapping("innerRotation", EntityEnderCrystal.class, "field_70261_a");
addMapping("shatterOrDrop", EntityEnderEye.class, "field_70221_f");
addMapping("targetZ", EntityEnderEye.class, "field_70222_d");
addMapping("despawnTimer", EntityEnderEye.class, "field_70223_e");
addMapping("targetX", EntityEnderEye.class, "field_70224_b");
addMapping("targetY", EntityEnderEye.class, "field_70225_c");
addMapping("perlThrower", EntityEnderPearl.class, "field_181555_c");
addMapping("dontSetBlock", EntityFallingBlock.class, "field_145808_f");
addMapping("hurtEntities", EntityFallingBlock.class, "field_145809_g");
addMapping("tileEntityData", EntityFallingBlock.class, "field_145810_d");
addMapping("fallTime", EntityFallingBlock.class, "field_145812_b");
addMapping("shouldDropItem", EntityFallingBlock.class, "field_145813_c");
addMapping("fallHurtMax", EntityFallingBlock.class, "field_145815_h");
addMapping("fallHurtAmount", EntityFallingBlock.class, "field_145816_i");
addMapping("fallTile", EntityFallingBlock.class, "field_175132_d");
addMapping("ORIGIN", EntityFallingBlock.class, "field_184532_d");
addMapping("FIREWORK_ITEM", EntityFireworkRocket.class, "field_184566_a");
addMapping("BOOSTED_ENTITY_ID", EntityFireworkRocket.class, "field_191512_b");
addMapping("boostedEntity", EntityFireworkRocket.class, "field_191513_e");
addMapping("lifetime", EntityFireworkRocket.class, "field_92055_b");
addMapping("fireworkAge", EntityFireworkRocket.class, "field_92056_a");
addMapping("thrower", EntityItem.class, "field_145801_f");
addMapping("owner", EntityItem.class, "field_145802_g");
addMapping("LOGGER", EntityItem.class, "field_145803_d");
addMapping("pickupDelay", EntityItem.class, "field_145804_b");
addMapping("ITEM", EntityItem.class, "field_184533_c");
addMapping("hoverStart", EntityItem.class, "field_70290_d");
addMapping("health", EntityItem.class, "field_70291_e");
addMapping("age", EntityItem.class, "field_70292_b");
addMapping("ITEM", EntityItemFrame.class, "field_184525_c");
addMapping("ROTATION", EntityItemFrame.class, "field_184526_d");
addMapping("itemDropChance", EntityItemFrame.class, "field_82337_e");
addMapping("ROLLING_AMPLITUDE", EntityMinecart.class, "field_184265_a");
addMapping("ROLLING_DIRECTION", EntityMinecart.class, "field_184266_b");
addMapping("DAMAGE", EntityMinecart.class, "field_184267_c");
addMapping("DISPLAY_TILE", EntityMinecart.class, "field_184268_d");
addMapping("DISPLAY_TILE_OFFSET", EntityMinecart.class, "field_184269_e");
addMapping("SHOW_BLOCK", EntityMinecart.class, "field_184270_f");
addMapping("isInReverse", EntityMinecart.class, "field_70499_f");
addMapping("MATRIX", EntityMinecart.class, "field_70500_g");
addMapping("velocityZ", EntityMinecart.class, "field_70506_as");
addMapping("velocityY", EntityMinecart.class, "field_70507_ar");
addMapping("velocityX", EntityMinecart.class, "field_70508_aq");
addMapping("minecartY", EntityMinecart.class, "field_70509_j");
addMapping("turnProgress", EntityMinecart.class, "field_70510_h");
addMapping("minecartX", EntityMinecart.class, "field_70511_i");
addMapping("minecartYaw", EntityMinecart.class, "field_70512_ao");
addMapping("minecartPitch", EntityMinecart.class, "field_70513_ap");
addMapping("minecartZ", EntityMinecart.class, "field_70514_an");
addMapping("activatorRailCooldown", EntityMinecartCommandBlock.class, "field_145823_b");
addMapping("commandBlockLogic", EntityMinecartCommandBlock.class, "field_145824_a");
addMapping("COMMAND", EntityMinecartCommandBlock.class, "field_184273_a");
addMapping("LAST_OUTPUT", EntityMinecartCommandBlock.class, "field_184274_b");
addMapping("lootTable", EntityMinecartContainer.class, "field_184290_c");
addMapping("lootTableSeed", EntityMinecartContainer.class, "field_184291_d");
addMapping("dropContentsWhenDead", EntityMinecartContainer.class, "field_94112_b");
addMapping("minecartContainerItems", EntityMinecartContainer.class, "field_94113_a");
addMapping("POWERED", EntityMinecartFurnace.class, "field_184275_c");
addMapping("pushZ", EntityMinecartFurnace.class, "field_94109_b");
addMapping("fuel", EntityMinecartFurnace.class, "field_94110_c");
addMapping("pushX", EntityMinecartFurnace.class, "field_94111_a");
addMapping("lastPosition", EntityMinecartHopper.class, "field_174900_c");
addMapping("isBlocked", EntityMinecartHopper.class, "field_96113_a");
addMapping("transferTicker", EntityMinecartHopper.class, "field_98044_b");
addMapping("mobSpawnerLogic", EntityMinecartMobSpawner.class, "field_98040_a");
addMapping("minecartTNTFuse", EntityMinecartTNT.class, "field_94106_a");
addMapping("art", EntityPainting.class, "field_70522_e");
addMapping("FUSE", EntityTNTPrimed.class, "field_184537_a");
addMapping("fuse", EntityTNTPrimed.class, "field_70516_a");
addMapping("tntPlacedBy", EntityTNTPrimed.class, "field_94084_b");
addMapping("xpOrbHealth", EntityXPOrb.class, "field_70529_d");
addMapping("xpValue", EntityXPOrb.class, "field_70530_e");
addMapping("xpOrbAge", EntityXPOrb.class, "field_70531_b");
addMapping("delayBeforeCanPickup", EntityXPOrb.class, "field_70532_c");
addMapping("xpColor", EntityXPOrb.class, "field_70533_a");
addMapping("closestPlayer", EntityXPOrb.class, "field_80001_f");
addMapping("xpTargetColor", EntityXPOrb.class, "field_80002_g");
addMapping("AGGRESSIVE", AbstractIllager.class, "field_193080_a");
addMapping("SWINGING_ARMS", AbstractSkeleton.class, "field_184728_b");
addMapping("aiArrowAttack", AbstractSkeleton.class, "field_85037_d");
addMapping("aiAttackOnCollide", AbstractSkeleton.class, "field_85038_e");
addMapping("ON_FIRE", EntityBlaze.class, "field_184712_c");
addMapping("heightOffset", EntityBlaze.class, "field_70847_d");
addMapping("heightOffsetUpdateTime", EntityBlaze.class, "field_70848_e");
addMapping("droppedSkulls", EntityCreeper.class, "field_175494_bm");
addMapping("STATE", EntityCreeper.class, "field_184713_a");
addMapping("POWERED", EntityCreeper.class, "field_184714_b");
addMapping("IGNITED", EntityCreeper.class, "field_184715_c");
addMapping("timeSinceIgnited", EntityCreeper.class, "field_70833_d");
addMapping("lastActiveTime", EntityCreeper.class, "field_70834_e");
addMapping("fuseTime", EntityCreeper.class, "field_82225_f");
addMapping("explosionRadius", EntityCreeper.class, "field_82226_g");
addMapping("ATTACKING_SPEED_BOOST_ID", EntityEnderman.class, "field_110192_bp");
addMapping("ATTACKING_SPEED_BOOST", EntityEnderman.class, "field_110193_bq");
addMapping("CARRIED_BLOCK", EntityEnderman.class, "field_184718_bv");
addMapping("SCREAMING", EntityEnderman.class, "field_184719_bw");
addMapping("lastCreepySound", EntityEnderman.class, "field_184720_bx");
addMapping("targetChangeTime", EntityEnderman.class, "field_184721_by");
addMapping("CARRIABLE_BLOCKS", EntityEnderman.class, "field_70827_d");
addMapping("lifetime", EntityEndermite.class, "field_175497_b");
addMapping("playerSpawned", EntityEndermite.class, "field_175498_c");
addMapping("wololoTarget", EntityEvoker.class, "field_190763_bw");
addMapping("ATTACKING", EntityGhast.class, "field_184683_a");
addMapping("explosionStrength", EntityGhast.class, "field_92014_j");
addMapping("targetedEntity", EntityGuardian.class, "field_175478_bn");
addMapping("clientSideAttackTime", EntityGuardian.class, "field_175479_bo");
addMapping("clientSideTouchedGround", EntityGuardian.class, "field_175480_bp");
addMapping("wander", EntityGuardian.class, "field_175481_bq");
addMapping("clientSideTailAnimation", EntityGuardian.class, "field_175482_b");
addMapping("clientSideTailAnimationSpeed", EntityGuardian.class, "field_175483_bk");
addMapping("clientSideTailAnimationO", EntityGuardian.class, "field_175484_c");
addMapping("clientSideSpikesAnimation", EntityGuardian.class, "field_175485_bl");
addMapping("clientSideSpikesAnimationO", EntityGuardian.class, "field_175486_bm");
addMapping("TARGET_ENTITY", EntityGuardian.class, "field_184723_b");
addMapping("MOVING", EntityGuardian.class, "field_190766_bz");
addMapping("ghostTime", EntityIllusionIllager.class, "field_193099_c");
addMapping("renderLocations", EntityIllusionIllager.class, "field_193100_bx");
addMapping("PLAYER_CREATED", EntityIronGolem.class, "field_184750_a");
addMapping("attackTimer", EntityIronGolem.class, "field_70855_f");
addMapping("holdRoseTick", EntityIronGolem.class, "field_70856_g");
addMapping("village", EntityIronGolem.class, "field_70857_d");
addMapping("homeCheckTimer", EntityIronGolem.class, "field_70858_e");
addMapping("ATTACK_SPEED_BOOST_MODIFIER_UUID", EntityPigZombie.class, "field_110189_bq");
addMapping("ATTACK_SPEED_BOOST_MODIFIER", EntityPigZombie.class, "field_110190_br");
addMapping("angerTargetUUID", EntityPigZombie.class, "field_175459_bn");
addMapping("angerLevel", EntityPigZombie.class, "field_70837_d");
addMapping("randomSoundDelay", EntityPigZombie.class, "field_70838_e");
addMapping("warningSoundTicks", EntityPolarBear.class, "field_189797_bB");
addMapping("IS_STANDING", EntityPolarBear.class, "field_189798_bx");
addMapping("clientSideStandAnimation0", EntityPolarBear.class, "field_189799_by");
addMapping("clientSideStandAnimation", EntityPolarBear.class, "field_189800_bz");
addMapping("ATTACHED_FACE", EntityShulker.class, "field_184700_a");
addMapping("ATTACHED_BLOCK_POS", EntityShulker.class, "field_184701_b");
addMapping("PEEK_TICK", EntityShulker.class, "field_184702_c");
addMapping("COVERED_ARMOR_BONUS_ID", EntityShulker.class, "field_184703_bv");
addMapping("COVERED_ARMOR_BONUS_MODIFIER", EntityShulker.class, "field_184704_bw");
addMapping("prevPeekAmount", EntityShulker.class, "field_184705_bx");
addMapping("peekAmount", EntityShulker.class, "field_184706_by");
addMapping("currentAttachmentPosition", EntityShulker.class, "field_184707_bz");
addMapping("clientSideTeleportInterpolation", EntityShulker.class, "field_184708_bA");
addMapping("COLOR", EntityShulker.class, "field_190770_bw");
addMapping("DEFAULT_COLOR", EntityShulker.class, "field_190771_bx");
addMapping("summonSilverfish", EntitySilverfish.class, "field_175460_b");
addMapping("wasOnGround", EntitySlime.class, "field_175452_bi");
addMapping("SLIME_SIZE", EntitySlime.class, "field_184711_bt");
addMapping("squishFactor", EntitySlime.class, "field_70811_b");
addMapping("prevSquishFactor", EntitySlime.class, "field_70812_c");
addMapping("squishAmount", EntitySlime.class, "field_70813_a");
addMapping("PUMPKIN_EQUIPPED", EntitySnowman.class, "field_184749_a");
addMapping("spellTicks", EntitySpellcasterIllager.class, "field_193087_b");
addMapping("SPELL", EntitySpellcasterIllager.class, "field_193088_c");
addMapping("activeSpell", EntitySpellcasterIllager.class, "field_193089_bx");
addMapping("CLIMBING", EntitySpider.class, "field_184729_a");
addMapping("VEX_FLAGS", EntityVex.class, "field_190664_a");
addMapping("owner", EntityVex.class, "field_190665_b");
addMapping("boundOrigin", EntityVex.class, "field_190666_c");
addMapping("limitedLifespan", EntityVex.class, "field_190667_bw");
addMapping("limitedLifeTicks", EntityVex.class, "field_190668_bx");
addMapping("johnny", EntityVindicator.class, "field_190643_b");
addMapping("JOHNNY_SELECTOR", EntityVindicator.class, "field_190644_c");
addMapping("MODIFIER_UUID", EntityWitch.class, "field_110184_bp");
addMapping("MODIFIER", EntityWitch.class, "field_110185_bq");
addMapping("IS_DRINKING", EntityWitch.class, "field_184731_c");
addMapping("potionUseTimer", EntityWitch.class, "field_82200_e");
addMapping("SPAWN_REINFORCEMENTS_CHANCE", EntityZombie.class, "field_110186_bp");
addMapping("BABY_SPEED_BOOST_ID", EntityZombie.class, "field_110187_bq");
addMapping("BABY_SPEED_BOOST", EntityZombie.class, "field_110188_br");
addMapping("zombieHeight", EntityZombie.class, "field_146073_bw");
addMapping("zombieWidth", EntityZombie.class, "field_146074_bv");
addMapping("breakDoor", EntityZombie.class, "field_146075_bs");
addMapping("isBreakDoorsTaskSet", EntityZombie.class, "field_146076_bu");
addMapping("IS_CHILD", EntityZombie.class, "field_184737_bv");
addMapping("VILLAGER_TYPE", EntityZombie.class, "field_184738_bw");
addMapping("ARMS_RAISED", EntityZombie.class, "field_184740_by");
addMapping("CONVERTING", EntityZombieVillager.class, "field_184739_bx");
addMapping("PROFESSION", EntityZombieVillager.class, "field_190739_c");
addMapping("converstionStarter", EntityZombieVillager.class, "field_191992_by");
addMapping("conversionTime", EntityZombieVillager.class, "field_82234_d");
addMapping("VISIBLE_MOB_SELECTOR", IMob.class, "field_175450_e");
addMapping("MOB_SELECTOR", IMob.class, "field_82192_a");
addMapping("DATA_ID_CHEST", AbstractChestHorse.class, "field_190698_bG");
addMapping("JUMP_STRENGTH", AbstractHorse.class, "field_110271_bv");
addMapping("temper", AbstractHorse.class, "field_110274_bs");
addMapping("horseJumping", AbstractHorse.class, "field_110275_br");
addMapping("IS_HORSE_BREEDING", AbstractHorse.class, "field_110276_bu");
addMapping("jumpPower", AbstractHorse.class, "field_110277_bt");
addMapping("tailCounter", AbstractHorse.class, "field_110278_bp");
addMapping("sprintCounter", AbstractHorse.class, "field_110279_bq");
addMapping("rearingAmount", AbstractHorse.class, "field_110281_bL");
addMapping("prevRearingAmount", AbstractHorse.class, "field_110282_bM");
addMapping("headLean", AbstractHorse.class, "field_110283_bJ");
addMapping("prevHeadLean", AbstractHorse.class, "field_110284_bK");
addMapping("gallopTime", AbstractHorse.class, "field_110285_bP");
addMapping("mouthOpenness", AbstractHorse.class, "field_110287_bN");
addMapping("prevMouthOpenness", AbstractHorse.class, "field_110288_bO");
addMapping("openMouthCounter", AbstractHorse.class, "field_110290_bE");
addMapping("allowStandSliding", AbstractHorse.class, "field_110294_bI");
addMapping("jumpRearingCounter", AbstractHorse.class, "field_110295_bF");
addMapping("horseChest", AbstractHorse.class, "field_110296_bG");
addMapping("STATUS", AbstractHorse.class, "field_184787_bE");
addMapping("OWNER_UNIQUE_ID", AbstractHorse.class, "field_184790_bH");
addMapping("canGallop", AbstractHorse.class, "field_190688_bE");
addMapping("eatingCounter", AbstractHorse.class, "field_190689_bJ");
addMapping("playerInLove", EntityAnimal.class, "field_146084_br");
addMapping("spawnableBlock", EntityAnimal.class, "field_175506_bl");
addMapping("inLove", EntityAnimal.class, "field_70881_d");
addMapping("HANGING", EntityBat.class, "field_184660_a");
addMapping("spawnPosition", EntityBat.class, "field_82237_a");
addMapping("chickenJockey", EntityChicken.class, "field_152118_bv");
addMapping("TEMPTATION_ITEMS", EntityChicken.class, "field_184761_bD");
addMapping("destPos", EntityChicken.class, "field_70883_f");
addMapping("oFlapSpeed", EntityChicken.class, "field_70884_g");
addMapping("wingRotation", EntityChicken.class, "field_70886_e");
addMapping("timeUntilNextEgg", EntityChicken.class, "field_70887_j");
addMapping("oFlap", EntityChicken.class, "field_70888_h");
addMapping("wingRotDelta", EntityChicken.class, "field_70889_i");
addMapping("HORSE_TEXTURES", EntityHorse.class, "field_110268_bz");
addMapping("HORSE_TEXTURES_ABBR", EntityHorse.class, "field_110269_bA");
addMapping("horseTexturesArray", EntityHorse.class, "field_110280_bR");
addMapping("texturePrefix", EntityHorse.class, "field_110286_bQ");
addMapping("HORSE_MARKING_TEXTURES", EntityHorse.class, "field_110291_bB");
addMapping("HORSE_MARKING_TEXTURES_ABBR", EntityHorse.class, "field_110292_bC");
addMapping("ARMOR_MODIFIER_UUID", EntityHorse.class, "field_184786_bD");
addMapping("HORSE_VARIANT", EntityHorse.class, "field_184789_bG");
addMapping("HORSE_ARMOR", EntityHorse.class, "field_184791_bI");
addMapping("DATA_STRENGTH_ID", EntityLlama.class, "field_190720_bG");
addMapping("DATA_COLOR_ID", EntityLlama.class, "field_190721_bH");
addMapping("DATA_VARIANT_ID", EntityLlama.class, "field_190722_bI");
addMapping("didSpit", EntityLlama.class, "field_190723_bJ");
addMapping("caravanHead", EntityLlama.class, "field_190724_bK");
addMapping("caravanTail", EntityLlama.class, "field_190725_bL");
addMapping("avoidEntity", EntityOcelot.class, "field_175545_bm");
addMapping("OCELOT_VARIANT", EntityOcelot.class, "field_184757_bz");
addMapping("aiTempt", EntityOcelot.class, "field_70914_e");
addMapping("flap", EntityParrot.class, "field_192008_bB");
addMapping("flapSpeed", EntityParrot.class, "field_192009_bC");
addMapping("oFlapSpeed", EntityParrot.class, "field_192010_bD");
addMapping("oFlap", EntityParrot.class, "field_192011_bE");
addMapping("flapping", EntityParrot.class, "field_192012_bF");
addMapping("VARIANT", EntityParrot.class, "field_192013_bG");
addMapping("CAN_MIMIC", EntityParrot.class, "field_192014_bH");
addMapping("DEADLY_ITEM", EntityParrot.class, "field_192015_bI");
addMapping("TAME_ITEMS", EntityParrot.class, "field_192016_bJ");
addMapping("IMITATION_SOUND_EVENTS", EntityParrot.class, "field_192017_bK");
addMapping("partyParrot", EntityParrot.class, "field_192018_bL");
addMapping("jukeboxPosition", EntityParrot.class, "field_192019_bM");
addMapping("SADDLED", EntityPig.class, "field_184763_bv");
addMapping("TEMPTATION_ITEMS", EntityPig.class, "field_184764_bw");
addMapping("boosting", EntityPig.class, "field_184765_bx");
addMapping("boostTime", EntityPig.class, "field_184766_bz");
addMapping("totalBoostTime", EntityPig.class, "field_184767_bA");
addMapping("BOOST_TIME", EntityPig.class, "field_191520_bx");
addMapping("jumpDuration", EntityRabbit.class, "field_175535_bn");
addMapping("wasOnGround", EntityRabbit.class, "field_175537_bp");
addMapping("currentMoveTypeDuration", EntityRabbit.class, "field_175538_bq");
addMapping("jumpTicks", EntityRabbit.class, "field_175540_bm");
addMapping("carrotTicks", EntityRabbit.class, "field_175541_bs");
addMapping("RABBIT_TYPE", EntityRabbit.class, "field_184773_bv");
addMapping("entityAIEatGrass", EntitySheep.class, "field_146087_bs");
addMapping("DYE_TO_RGB", EntitySheep.class, "field_175514_bm");
addMapping("DYE_COLOR", EntitySheep.class, "field_184774_bv");
addMapping("sheepTimer", EntitySheep.class, "field_70899_e");
addMapping("inventoryCrafting", EntitySheep.class, "field_90016_e");
addMapping("rideCooldownCounter", EntityShoulderRiding.class, "field_191996_bB");
addMapping("skeletonTrapAI", EntitySkeletonHorse.class, "field_184792_bN");
addMapping("skeletonTrap", EntitySkeletonHorse.class, "field_184793_bU");
addMapping("skeletonTrapTime", EntitySkeletonHorse.class, "field_184794_bV");
addMapping("squidYaw", EntitySquid.class, "field_70859_f");
addMapping("prevSquidYaw", EntitySquid.class, "field_70860_g");
addMapping("squidPitch", EntitySquid.class, "field_70861_d");
addMapping("prevSquidPitch", EntitySquid.class, "field_70862_e");
addMapping("randomMotionSpeed", EntitySquid.class, "field_70863_bz");
addMapping("rotationVelocity", EntitySquid.class, "field_70864_bA");
addMapping("lastTentacleAngle", EntitySquid.class, "field_70865_by");
addMapping("tentacleAngle", EntitySquid.class, "field_70866_j");
addMapping("squidRotation", EntitySquid.class, "field_70867_h");
addMapping("prevSquidRotation", EntitySquid.class, "field_70868_i");
addMapping("randomMotionVecY", EntitySquid.class, "field_70869_bD");
addMapping("randomMotionVecZ", EntitySquid.class, "field_70870_bE");
addMapping("rotateSpeed", EntitySquid.class, "field_70871_bB");
addMapping("randomMotionVecX", EntitySquid.class, "field_70872_bC");
addMapping("TAMED", EntityTameable.class, "field_184755_bv");
addMapping("OWNER_UNIQUE_ID", EntityTameable.class, "field_184756_bw");
addMapping("aiSit", EntityTameable.class, "field_70911_d");
addMapping("villagerInventory", EntityVillager.class, "field_175560_bz");
addMapping("DEFAULT_TRADE_LIST_MAP", EntityVillager.class, "field_175561_bA");
addMapping("careerLevel", EntityVillager.class, "field_175562_bw");
addMapping("careerId", EntityVillager.class, "field_175563_bv");
addMapping("areAdditionalTasksSet", EntityVillager.class, "field_175564_by");
addMapping("isWillingToMate", EntityVillager.class, "field_175565_bs");
addMapping("PROFESSION", EntityVillager.class, "field_184752_bw");
addMapping("LOGGER", EntityVillager.class, "field_190674_bx");
addMapping("isMating", EntityVillager.class, "field_70952_f");
addMapping("isPlaying", EntityVillager.class, "field_70953_g");
addMapping("village", EntityVillager.class, "field_70954_d");
addMapping("randomTickDivider", EntityVillager.class, "field_70955_e");
addMapping("wealth", EntityVillager.class, "field_70956_bz");
addMapping("needsInitilization", EntityVillager.class, "field_70959_by");
addMapping("timeUntilReset", EntityVillager.class, "field_70961_j");
addMapping("buyingPlayer", EntityVillager.class, "field_70962_h");
addMapping("buyingList", EntityVillager.class, "field_70963_i");
addMapping("lastBuyingPlayer", EntityVillager.class, "field_82189_bL");
addMapping("isLookingForHome", EntityVillager.class, "field_82190_bM");
addMapping("COLLAR_COLOR", EntityWolf.class, "field_184758_bB");
addMapping("DATA_HEALTH_ID", EntityWolf.class, "field_184759_bz");
addMapping("BEGGING", EntityWolf.class, "field_184760_bA");
addMapping("headRotationCourseOld", EntityWolf.class, "field_70924_f");
addMapping("isWet", EntityWolf.class, "field_70925_g");
addMapping("headRotationCourse", EntityWolf.class, "field_70926_e");
addMapping("prevTimeWolfIsShaking", EntityWolf.class, "field_70927_j");
addMapping("isShaking", EntityWolf.class, "field_70928_h");
addMapping("timeWolfIsShaking", EntityWolf.class, "field_70929_i");
addMapping("textureName", HorseArmorType.class, "field_188586_e");
addMapping("hash", HorseArmorType.class, "field_188587_f");
addMapping("protection", HorseArmorType.class, "field_188588_g");
addMapping("gameProfile", EntityPlayer.class, "field_146106_i");
addMapping("xpSeed", EntityPlayer.class, "field_175152_f");
addMapping("hasReducedDebug", EntityPlayer.class, "field_175153_bG");
addMapping("PLAYER_MODEL_FLAG", EntityPlayer.class, "field_184827_bp");
addMapping("MAIN_HAND", EntityPlayer.class, "field_184828_bq");
addMapping("ABSORPTION", EntityPlayer.class, "field_184829_a");
addMapping("PLAYER_SCORE", EntityPlayer.class, "field_184830_b");
addMapping("itemStackMainHand", EntityPlayer.class, "field_184831_bT");
addMapping("cooldownTracker", EntityPlayer.class, "field_184832_bU");
addMapping("LEFT_SHOULDER_ENTITY", EntityPlayer.class, "field_192032_bt");
addMapping("RIGHT_SHOULDER_ENTITY", EntityPlayer.class, "field_192033_bu");
addMapping("experienceTotal", EntityPlayer.class, "field_71067_cb");
addMapping("experienceLevel", EntityPlayer.class, "field_71068_ca");
addMapping("inventoryContainer", EntityPlayer.class, "field_71069_bz");
addMapping("openContainer", EntityPlayer.class, "field_71070_bA");
addMapping("inventory", EntityPlayer.class, "field_71071_by");
addMapping("capabilities", EntityPlayer.class, "field_71075_bZ");
addMapping("sleepTimer", EntityPlayer.class, "field_71076_b");
addMapping("spawnPos", EntityPlayer.class, "field_71077_c");
addMapping("enderChest", EntityPlayer.class, "field_71078_a");
addMapping("renderOffsetX", EntityPlayer.class, "field_71079_bU");
addMapping("bedLocation", EntityPlayer.class, "field_71081_bT");
addMapping("renderOffsetY", EntityPlayer.class, "field_71082_cx");
addMapping("sleeping", EntityPlayer.class, "field_71083_bS");
addMapping("chasingPosZ", EntityPlayer.class, "field_71085_bR");
addMapping("renderOffsetZ", EntityPlayer.class, "field_71089_bV");
addMapping("xpCooldown", EntityPlayer.class, "field_71090_bL");
addMapping("prevChasingPosX", EntityPlayer.class, "field_71091_bM");
addMapping("chasingPosX", EntityPlayer.class, "field_71094_bP");
addMapping("chasingPosY", EntityPlayer.class, "field_71095_bQ");
addMapping("prevChasingPosY", EntityPlayer.class, "field_71096_bN");
addMapping("prevChasingPosZ", EntityPlayer.class, "field_71097_bO");
addMapping("foodStats", EntityPlayer.class, "field_71100_bB");
addMapping("flyToggleTimer", EntityPlayer.class, "field_71101_bC");
addMapping("speedInAir", EntityPlayer.class, "field_71102_ce");
addMapping("fishEntity", EntityPlayer.class, "field_71104_cf");
addMapping("experience", EntityPlayer.class, "field_71106_cc");
addMapping("prevCameraYaw", EntityPlayer.class, "field_71107_bF");
addMapping("cameraYaw", EntityPlayer.class, "field_71109_bG");
addMapping("spawnForced", EntityPlayer.class, "field_82248_d");
addMapping("lastXPSound", EntityPlayer.class, "field_82249_h");
addMapping("lastHealthScore", EntityPlayerMP.class, "field_130068_bO");
addMapping("playerLastActiveTime", EntityPlayerMP.class, "field_143005_bX");
addMapping("respawnInvulnerabilityTicks", EntityPlayerMP.class, "field_147101_bU");
addMapping("LOGGER", EntityPlayerMP.class, "field_147102_bM");
addMapping("statsFile", EntityPlayerMP.class, "field_147103_bO");
addMapping("spectatingEntity", EntityPlayerMP.class, "field_175401_bS");
addMapping("invulnerableDimensionChange", EntityPlayerMP.class, "field_184851_cj");
addMapping("lastFoodScore", EntityPlayerMP.class, "field_184852_bV");
addMapping("lastAirScore", EntityPlayerMP.class, "field_184853_bW");
addMapping("lastArmorScore", EntityPlayerMP.class, "field_184854_bX");
addMapping("lastLevelScore", EntityPlayerMP.class, "field_184855_bY");
addMapping("lastExperienceScore", EntityPlayerMP.class, "field_184856_bZ");
addMapping("seenCredits", EntityPlayerMP.class, "field_192040_cp");
addMapping("recipeBook", EntityPlayerMP.class, "field_192041_cq");
addMapping("advancements", EntityPlayerMP.class, "field_192042_bX");
addMapping("levitationStartPos", EntityPlayerMP.class, "field_193107_ct");
addMapping("levitatingSince", EntityPlayerMP.class, "field_193108_cu");
addMapping("disconnected", EntityPlayerMP.class, "field_193109_cv");
addMapping("enteredNetherPosition", EntityPlayerMP.class, "field_193110_cw");
addMapping("entityRemoveQueue", EntityPlayerMP.class, "field_71130_g");
addMapping("managedPosX", EntityPlayerMP.class, "field_71131_d");
addMapping("managedPosZ", EntityPlayerMP.class, "field_71132_e");
addMapping("mcServer", EntityPlayerMP.class, "field_71133_b");
addMapping("interactionManager", EntityPlayerMP.class, "field_71134_c");
addMapping("connection", EntityPlayerMP.class, "field_71135_a");
addMapping("queuedEndExit", EntityPlayerMP.class, "field_71136_j");
addMapping("isChangingQuantityOnly", EntityPlayerMP.class, "field_71137_h");
addMapping("ping", EntityPlayerMP.class, "field_71138_i");
addMapping("currentWindowId", EntityPlayerMP.class, "field_71139_cq");
addMapping("chatColours", EntityPlayerMP.class, "field_71140_co");
addMapping("chatVisibility", EntityPlayerMP.class, "field_71143_cn");
addMapping("lastExperience", EntityPlayerMP.class, "field_71144_ck");
addMapping("lastFoodLevel", EntityPlayerMP.class, "field_71146_ci");
addMapping("wasHungry", EntityPlayerMP.class, "field_71147_cj");
addMapping("language", EntityPlayerMP.class, "field_71148_cg");
addMapping("lastHealth", EntityPlayerMP.class, "field_71149_ch");
addMapping("partName", EnumPlayerModelParts.class, "field_179338_j");
addMapping("name", EnumPlayerModelParts.class, "field_179339_k");
addMapping("partId", EnumPlayerModelParts.class, "field_179340_h");
addMapping("partMask", EnumPlayerModelParts.class, "field_179341_i");
addMapping("offHandInventory", InventoryPlayer.class, "field_184439_c");
addMapping("allInventories", InventoryPlayer.class, "field_184440_g");
addMapping("timesChanged", InventoryPlayer.class, "field_194017_h");
addMapping("itemStack", InventoryPlayer.class, "field_70457_g");
addMapping("player", InventoryPlayer.class, "field_70458_d");
addMapping("armorInventory", InventoryPlayer.class, "field_70460_b");
addMapping("currentItem", InventoryPlayer.class, "field_70461_c");
addMapping("mainInventory", InventoryPlayer.class, "field_70462_a");
addMapping("flySpeed", PlayerCapabilities.class, "field_75096_f");
addMapping("walkSpeed", PlayerCapabilities.class, "field_75097_g");
addMapping("isCreativeMode", PlayerCapabilities.class, "field_75098_d");
addMapping("allowEdit", PlayerCapabilities.class, "field_75099_e");
addMapping("isFlying", PlayerCapabilities.class, "field_75100_b");
addMapping("allowFlying", PlayerCapabilities.class, "field_75101_c");
addMapping("disableDamage", PlayerCapabilities.class, "field_75102_a");
addMapping("zTile", EntityArrow.class, "field_145789_f");
addMapping("inTile", EntityArrow.class, "field_145790_g");
addMapping("xTile", EntityArrow.class, "field_145791_d");
addMapping("yTile", EntityArrow.class, "field_145792_e");
addMapping("timeInGround", EntityArrow.class, "field_184552_b");
addMapping("ARROW_TARGETS", EntityArrow.class, "field_184553_f");
addMapping("CRITICAL", EntityArrow.class, "field_184554_g");
addMapping("arrowShake", EntityArrow.class, "field_70249_b");
addMapping("shootingEntity", EntityArrow.class, "field_70250_c");
addMapping("pickupStatus", EntityArrow.class, "field_70251_a");
addMapping("ticksInGround", EntityArrow.class, "field_70252_j");
addMapping("inData", EntityArrow.class, "field_70253_h");
addMapping("inGround", EntityArrow.class, "field_70254_i");
addMapping("damage", EntityArrow.class, "field_70255_ao");
addMapping("knockbackStrength", EntityArrow.class, "field_70256_ap");
addMapping("ticksInAir", EntityArrow.class, "field_70257_an");
addMapping("warmupDelayTicks", EntityEvokerFangs.class, "field_190553_a");
addMapping("sentSpikeEvent", EntityEvokerFangs.class, "field_190554_b");
addMapping("lifeTicks", EntityEvokerFangs.class, "field_190555_c");
addMapping("clientSideAttackStarted", EntityEvokerFangs.class, "field_190556_d");
addMapping("caster", EntityEvokerFangs.class, "field_190557_e");
addMapping("casterUuid", EntityEvokerFangs.class, "field_190558_f");
addMapping("accelerationZ", EntityFireball.class, "field_70230_d");
addMapping("accelerationX", EntityFireball.class, "field_70232_b");
addMapping("accelerationY", EntityFireball.class, "field_70233_c");
addMapping("ticksInAir", EntityFireball.class, "field_70234_an");
addMapping("shootingEntity", EntityFireball.class, "field_70235_a");
addMapping("ticksAlive", EntityFireball.class, "field_70236_j");
addMapping("ticksCatchableDelay", EntityFishHook.class, "field_146038_az");
addMapping("ticksCaughtDelay", EntityFishHook.class, "field_146040_ay");
addMapping("angler", EntityFishHook.class, "field_146042_b");
addMapping("caughtEntity", EntityFishHook.class, "field_146043_c");
addMapping("ticksCatchable", EntityFishHook.class, "field_146045_ax");
addMapping("ticksInAir", EntityFishHook.class, "field_146047_aw");
addMapping("ticksInGround", EntityFishHook.class, "field_146049_av");
addMapping("inGround", EntityFishHook.class, "field_146051_au");
addMapping("fishApproachAngle", EntityFishHook.class, "field_146054_aA");
addMapping("DATA_HOOKED_ENTITY", EntityFishHook.class, "field_184528_c");
addMapping("currentState", EntityFishHook.class, "field_190627_av");
addMapping("luck", EntityFishHook.class, "field_191518_aw");
addMapping("lureSpeed", EntityFishHook.class, "field_191519_ax");
addMapping("explosionPower", EntityLargeFireball.class, "field_92057_e");
addMapping("owner", EntityLlamaSpit.class, "field_190539_a");
addMapping("ownerNbt", EntityLlamaSpit.class, "field_190540_b");
addMapping("ITEM", EntityPotion.class, "field_184545_d");
addMapping("LOGGER", EntityPotion.class, "field_184546_e");
addMapping("WATER_SENSITIVE", EntityPotion.class, "field_190546_d");
addMapping("owner", EntityShulkerBullet.class, "field_184570_a");
addMapping("target", EntityShulkerBullet.class, "field_184571_b");
addMapping("ownerBlockPos", EntityShulkerBullet.class, "field_184572_as");
addMapping("direction", EntityShulkerBullet.class, "field_184573_c");
addMapping("targetUniqueId", EntityShulkerBullet.class, "field_184574_at");
addMapping("steps", EntityShulkerBullet.class, "field_184575_d");
addMapping("targetBlockPos", EntityShulkerBullet.class, "field_184576_au");
addMapping("targetDeltaX", EntityShulkerBullet.class, "field_184577_e");
addMapping("targetDeltaY", EntityShulkerBullet.class, "field_184578_f");
addMapping("targetDeltaZ", EntityShulkerBullet.class, "field_184579_g");
addMapping("ownerUniqueId", EntityShulkerBullet.class, "field_184580_h");
addMapping("duration", EntitySpectralArrow.class, "field_184562_f");
addMapping("yTile", EntityThrowable.class, "field_145786_d");
addMapping("zTile", EntityThrowable.class, "field_145787_e");
addMapping("xTile", EntityThrowable.class, "field_145788_c");
addMapping("inTile", EntityThrowable.class, "field_174853_f");
addMapping("inGround", EntityThrowable.class, "field_174854_a");
addMapping("ignoreEntity", EntityThrowable.class, "field_184539_c");
addMapping("ignoreTime", EntityThrowable.class, "field_184540_av");
addMapping("throwableShake", EntityThrowable.class, "field_70191_b");
addMapping("thrower", EntityThrowable.class, "field_70192_c");
addMapping("ticksInGround", EntityThrowable.class, "field_70194_h");
addMapping("ticksInAir", EntityThrowable.class, "field_70195_i");
addMapping("throwerName", EntityThrowable.class, "field_85053_h");
addMapping("COLOR", EntityTippedArrow.class, "field_184559_f");
addMapping("potion", EntityTippedArrow.class, "field_184560_g");
addMapping("customPotionEffects", EntityTippedArrow.class, "field_184561_h");
addMapping("fixedColor", EntityTippedArrow.class, "field_191509_at");
addMapping("INVULNERABLE", EntityWitherSkull.class, "field_184565_e");
addMapping("JUNGLE_EDGE", Biomes.class, "field_150574_L");
addMapping("DEEP_OCEAN", Biomes.class, "field_150575_M");
addMapping("STONE_BEACH", Biomes.class, "field_150576_N");
addMapping("COLD_BEACH", Biomes.class, "field_150577_O");
addMapping("REDWOOD_TAIGA", Biomes.class, "field_150578_U");
addMapping("COLD_TAIGA_HILLS", Biomes.class, "field_150579_T");
addMapping("EXTREME_HILLS_WITH_TREES", Biomes.class, "field_150580_W");
addMapping("REDWOOD_TAIGA_HILLS", Biomes.class, "field_150581_V");
addMapping("BIRCH_FOREST_HILLS", Biomes.class, "field_150582_Q");
addMapping("BIRCH_FOREST", Biomes.class, "field_150583_P");
addMapping("COLD_TAIGA", Biomes.class, "field_150584_S");
addMapping("ROOFED_FOREST", Biomes.class, "field_150585_R");
addMapping("SAVANNA_PLATEAU", Biomes.class, "field_150587_Y");
addMapping("SAVANNA", Biomes.class, "field_150588_X");
addMapping("MESA", Biomes.class, "field_150589_Z");
addMapping("MUTATED_TAIGA", Biomes.class, "field_150590_f");
addMapping("MUTATED_SWAMPLAND", Biomes.class, "field_150599_m");
addMapping("MESA_ROCK", Biomes.class, "field_150607_aa");
addMapping("MESA_CLEAR_ROCK", Biomes.class, "field_150608_ab");
addMapping("DEFAULT", Biomes.class, "field_180279_ad");
addMapping("MUTATED_BIRCH_FOREST_HILLS", Biomes.class, "field_185429_aa");
addMapping("MUTATED_ROOFED_FOREST", Biomes.class, "field_185430_ab");
addMapping("MUTATED_TAIGA_COLD", Biomes.class, "field_185431_ac");
addMapping("MUTATED_REDWOOD_TAIGA", Biomes.class, "field_185432_ad");
addMapping("MUTATED_REDWOOD_TAIGA_HILLS", Biomes.class, "field_185433_ae");
addMapping("MUTATED_EXTREME_HILLS_WITH_TREES", Biomes.class, "field_185434_af");
addMapping("MUTATED_SAVANNA", Biomes.class, "field_185435_ag");
addMapping("MUTATED_SAVANNA_ROCK", Biomes.class, "field_185436_ah");
addMapping("MUTATED_MESA", Biomes.class, "field_185437_ai");
addMapping("MUTATED_MESA_ROCK", Biomes.class, "field_185438_aj");
addMapping("MUTATED_MESA_CLEAR_ROCK", Biomes.class, "field_185439_ak");
addMapping("VOID", Biomes.class, "field_185440_P");
addMapping("MUTATED_PLAINS", Biomes.class, "field_185441_Q");
addMapping("MUTATED_DESERT", Biomes.class, "field_185442_R");
addMapping("MUTATED_EXTREME_HILLS", Biomes.class, "field_185443_S");
addMapping("MUTATED_FOREST", Biomes.class, "field_185444_T");
addMapping("MUTATED_ICE_FLATS", Biomes.class, "field_185445_W");
addMapping("MUTATED_JUNGLE", Biomes.class, "field_185446_X");
addMapping("MUTATED_JUNGLE_EDGE", Biomes.class, "field_185447_Y");
addMapping("MUTATED_BIRCH_FOREST", Biomes.class, "field_185448_Z");
addMapping("FOREST", Biomes.class, "field_76767_f");
addMapping("TAIGA", Biomes.class, "field_76768_g");
addMapping("DESERT", Biomes.class, "field_76769_d");
addMapping("EXTREME_HILLS", Biomes.class, "field_76770_e");
addMapping("OCEAN", Biomes.class, "field_76771_b");
addMapping("PLAINS", Biomes.class, "field_76772_c");
addMapping("ICE_PLAINS", Biomes.class, "field_76774_n");
addMapping("ICE_MOUNTAINS", Biomes.class, "field_76775_o");
addMapping("FROZEN_OCEAN", Biomes.class, "field_76776_l");
addMapping("FROZEN_RIVER", Biomes.class, "field_76777_m");
addMapping("HELL", Biomes.class, "field_76778_j");
addMapping("SKY", Biomes.class, "field_76779_k");
addMapping("SWAMPLAND", Biomes.class, "field_76780_h");
addMapping("RIVER", Biomes.class, "field_76781_i");
addMapping("JUNGLE", Biomes.class, "field_76782_w");
addMapping("EXTREME_HILLS_EDGE", Biomes.class, "field_76783_v");
addMapping("TAIGA_HILLS", Biomes.class, "field_76784_u");
addMapping("FOREST_HILLS", Biomes.class, "field_76785_t");
addMapping("DESERT_HILLS", Biomes.class, "field_76786_s");
addMapping("BEACH", Biomes.class, "field_76787_r");
addMapping("MUSHROOM_ISLAND_SHORE", Biomes.class, "field_76788_q");
addMapping("MUSHROOM_ISLAND", Biomes.class, "field_76789_p");
addMapping("JUNGLE_HILLS", Biomes.class, "field_76792_x");
addMapping("GOLDEN_RAIL", Blocks.class, "field_150318_D");
addMapping("DETECTOR_RAIL", Blocks.class, "field_150319_E");
addMapping("STICKY_PISTON", Blocks.class, "field_150320_F");
addMapping("WEB", Blocks.class, "field_150321_G");
addMapping("SANDSTONE", Blocks.class, "field_150322_A");
addMapping("NOTEBLOCK", Blocks.class, "field_150323_B");
addMapping("BED", Blocks.class, "field_150324_C");
addMapping("WOOL", Blocks.class, "field_150325_L");
addMapping("YELLOW_FLOWER", Blocks.class, "field_150327_N");
addMapping("RED_FLOWER", Blocks.class, "field_150328_O");
addMapping("TALLGRASS", Blocks.class, "field_150329_H");
addMapping("DEADBUSH", Blocks.class, "field_150330_I");
addMapping("PISTON", Blocks.class, "field_150331_J");
addMapping("PISTON_HEAD", Blocks.class, "field_150332_K");
addMapping("STONE_SLAB", Blocks.class, "field_150333_U");
addMapping("DOUBLE_STONE_SLAB", Blocks.class, "field_150334_T");
addMapping("TNT", Blocks.class, "field_150335_W");
addMapping("BRICK_BLOCK", Blocks.class, "field_150336_V");
addMapping("RED_MUSHROOM", Blocks.class, "field_150337_Q");
addMapping("BROWN_MUSHROOM", Blocks.class, "field_150338_P");
addMapping("IRON_BLOCK", Blocks.class, "field_150339_S");
addMapping("GOLD_BLOCK", Blocks.class, "field_150340_R");
addMapping("MOSSY_COBBLESTONE", Blocks.class, "field_150341_Y");
addMapping("BOOKSHELF", Blocks.class, "field_150342_X");
addMapping("OBSIDIAN", Blocks.class, "field_150343_Z");
addMapping("PLANKS", Blocks.class, "field_150344_f");
addMapping("SAPLING", Blocks.class, "field_150345_g");
addMapping("DIRT", Blocks.class, "field_150346_d");
addMapping("COBBLESTONE", Blocks.class, "field_150347_e");
addMapping("STONE", Blocks.class, "field_150348_b");
addMapping("GRASS", Blocks.class, "field_150349_c");
addMapping("AIR", Blocks.class, "field_150350_a");
addMapping("GRAVEL", Blocks.class, "field_150351_n");
addMapping("GOLD_ORE", Blocks.class, "field_150352_o");
addMapping("LAVA", Blocks.class, "field_150353_l");
addMapping("SAND", Blocks.class, "field_150354_m");
addMapping("WATER", Blocks.class, "field_150355_j");
addMapping("FLOWING_LAVA", Blocks.class, "field_150356_k");
addMapping("BEDROCK", Blocks.class, "field_150357_h");
addMapping("FLOWING_WATER", Blocks.class, "field_150358_i");
addMapping("GLASS", Blocks.class, "field_150359_w");
addMapping("SPONGE", Blocks.class, "field_150360_v");
addMapping("LEAVES2", Blocks.class, "field_150361_u");
addMapping("LEAVES", Blocks.class, "field_150362_t");
addMapping("LOG2", Blocks.class, "field_150363_s");
addMapping("LOG", Blocks.class, "field_150364_r");
addMapping("COAL_ORE", Blocks.class, "field_150365_q");
addMapping("IRON_ORE", Blocks.class, "field_150366_p");
addMapping("DISPENSER", Blocks.class, "field_150367_z");
addMapping("LAPIS_BLOCK", Blocks.class, "field_150368_y");
addMapping("LAPIS_ORE", Blocks.class, "field_150369_x");
addMapping("QUARTZ_STAIRS", Blocks.class, "field_150370_cb");
addMapping("QUARTZ_BLOCK", Blocks.class, "field_150371_ca");
addMapping("SANDSTONE_STAIRS", Blocks.class, "field_150372_bz");
addMapping("DOUBLE_WOODEN_SLAB", Blocks.class, "field_150373_bw");
addMapping("LIT_REDSTONE_LAMP", Blocks.class, "field_150374_bv");
addMapping("COCOA", Blocks.class, "field_150375_by");
addMapping("WOODEN_SLAB", Blocks.class, "field_150376_bx");
addMapping("END_STONE", Blocks.class, "field_150377_bs");
addMapping("END_PORTAL_FRAME", Blocks.class, "field_150378_br");
addMapping("REDSTONE_LAMP", Blocks.class, "field_150379_bu");
addMapping("DRAGON_EGG", Blocks.class, "field_150380_bt");
addMapping("ENCHANTING_TABLE", Blocks.class, "field_150381_bn");
addMapping("BREWING_STAND", Blocks.class, "field_150382_bo");
addMapping("CAULDRON", Blocks.class, "field_150383_bp");
addMapping("END_PORTAL", Blocks.class, "field_150384_bq");
addMapping("NETHER_BRICK", Blocks.class, "field_150385_bj");
addMapping("NETHER_BRICK_FENCE", Blocks.class, "field_150386_bk");
addMapping("NETHER_BRICK_STAIRS", Blocks.class, "field_150387_bl");
addMapping("NETHER_WART", Blocks.class, "field_150388_bm");
addMapping("BRICK_STAIRS", Blocks.class, "field_150389_bf");
addMapping("STONE_BRICK_STAIRS", Blocks.class, "field_150390_bg");
addMapping("MYCELIUM", Blocks.class, "field_150391_bh");
addMapping("WATERLILY", Blocks.class, "field_150392_bi");
addMapping("PUMPKIN_STEM", Blocks.class, "field_150393_bb");
addMapping("MELON_STEM", Blocks.class, "field_150394_bc");
addMapping("VINE", Blocks.class, "field_150395_bd");
addMapping("STAINED_GLASS_PANE", Blocks.class, "field_150397_co");
addMapping("DOUBLE_PLANT", Blocks.class, "field_150398_cm");
addMapping("STAINED_GLASS", Blocks.class, "field_150399_cn");
addMapping("ACACIA_STAIRS", Blocks.class, "field_150400_ck");
addMapping("DARK_OAK_STAIRS", Blocks.class, "field_150401_cl");
addMapping("COAL_BLOCK", Blocks.class, "field_150402_ci");
addMapping("PACKED_ICE", Blocks.class, "field_150403_cj");
addMapping("CARPET", Blocks.class, "field_150404_cg");
addMapping("HARDENED_CLAY", Blocks.class, "field_150405_ch");
addMapping("STAINED_HARDENED_CLAY", Blocks.class, "field_150406_ce");
addMapping("HAY_BLOCK", Blocks.class, "field_150407_cf");
addMapping("ACTIVATOR_RAIL", Blocks.class, "field_150408_cc");
addMapping("DROPPER", Blocks.class, "field_150409_cd");
addMapping("GLASS_PANE", Blocks.class, "field_150410_aZ");
addMapping("IRON_BARS", Blocks.class, "field_150411_aY");
addMapping("EMERALD_ORE", Blocks.class, "field_150412_bA");
addMapping("UNPOWERED_REPEATER", Blocks.class, "field_150413_aR");
addMapping("CAKE", Blocks.class, "field_150414_aQ");
addMapping("TRAPDOOR", Blocks.class, "field_150415_aT");
addMapping("POWERED_REPEATER", Blocks.class, "field_150416_aS");
addMapping("STONEBRICK", Blocks.class, "field_150417_aV");
addMapping("MONSTER_EGG", Blocks.class, "field_150418_aU");
addMapping("RED_MUSHROOM_BLOCK", Blocks.class, "field_150419_aX");
addMapping("BROWN_MUSHROOM_BLOCK", Blocks.class, "field_150420_aW");
addMapping("JUKEBOX", Blocks.class, "field_150421_aI");
addMapping("PUMPKIN", Blocks.class, "field_150423_aK");
addMapping("NETHERRACK", Blocks.class, "field_150424_aL");
addMapping("SOUL_SAND", Blocks.class, "field_150425_aM");
addMapping("GLOWSTONE", Blocks.class, "field_150426_aN");
addMapping("PORTAL", Blocks.class, "field_150427_aO");
addMapping("LIT_PUMPKIN", Blocks.class, "field_150428_aP");
addMapping("REDSTONE_TORCH", Blocks.class, "field_150429_aA");
addMapping("STONE_BUTTON", Blocks.class, "field_150430_aB");
addMapping("SNOW_LAYER", Blocks.class, "field_150431_aC");
addMapping("ICE", Blocks.class, "field_150432_aD");
addMapping("SNOW", Blocks.class, "field_150433_aE");
addMapping("CACTUS", Blocks.class, "field_150434_aF");
addMapping("CLAY", Blocks.class, "field_150435_aG");
addMapping("REEDS", Blocks.class, "field_150436_aH");
addMapping("UNLIT_REDSTONE_TORCH", Blocks.class, "field_150437_az");
addMapping("HOPPER", Blocks.class, "field_150438_bZ");
addMapping("LIT_REDSTONE_ORE", Blocks.class, "field_150439_ay");
addMapping("MELON_BLOCK", Blocks.class, "field_150440_ba");
addMapping("UNPOWERED_COMPARATOR", Blocks.class, "field_150441_bU");
addMapping("LEVER", Blocks.class, "field_150442_at");
addMapping("HEAVY_WEIGHTED_PRESSURE_PLATE", Blocks.class, "field_150443_bT");
addMapping("WALL_SIGN", Blocks.class, "field_150444_as");
addMapping("LIGHT_WEIGHTED_PRESSURE_PLATE", Blocks.class, "field_150445_bS");
addMapping("STONE_STAIRS", Blocks.class, "field_150446_ar");
addMapping("TRAPPED_CHEST", Blocks.class, "field_150447_bR");
addMapping("RAIL", Blocks.class, "field_150448_aq");
addMapping("QUARTZ_ORE", Blocks.class, "field_150449_bY");
addMapping("REDSTONE_ORE", Blocks.class, "field_150450_ax");
addMapping("REDSTONE_BLOCK", Blocks.class, "field_150451_bX");
addMapping("WOODEN_PRESSURE_PLATE", Blocks.class, "field_150452_aw");
addMapping("DAYLIGHT_DETECTOR", Blocks.class, "field_150453_bW");
addMapping("IRON_DOOR", Blocks.class, "field_150454_av");
addMapping("POWERED_COMPARATOR", Blocks.class, "field_150455_bV");
addMapping("STONE_PRESSURE_PLATE", Blocks.class, "field_150456_au");
addMapping("FLOWER_POT", Blocks.class, "field_150457_bL");
addMapping("FARMLAND", Blocks.class, "field_150458_ak");
addMapping("CARROTS", Blocks.class, "field_150459_bM");
addMapping("FURNACE", Blocks.class, "field_150460_al");
addMapping("BEACON", Blocks.class, "field_150461_bJ");
addMapping("CRAFTING_TABLE", Blocks.class, "field_150462_ai");
addMapping("COBBLESTONE_WALL", Blocks.class, "field_150463_bK");
addMapping("WHEAT", Blocks.class, "field_150464_aj");
addMapping("SKULL", Blocks.class, "field_150465_bP");
addMapping("ANVIL", Blocks.class, "field_150467_bQ");
addMapping("LADDER", Blocks.class, "field_150468_ap");
addMapping("POTATOES", Blocks.class, "field_150469_bN");
addMapping("LIT_FURNACE", Blocks.class, "field_150470_am");
addMapping("WOODEN_BUTTON", Blocks.class, "field_150471_bO");
addMapping("STANDING_SIGN", Blocks.class, "field_150472_an");
addMapping("TRIPWIRE", Blocks.class, "field_150473_bD");
addMapping("MOB_SPAWNER", Blocks.class, "field_150474_ac");
addMapping("EMERALD_BLOCK", Blocks.class, "field_150475_bE");
addMapping("OAK_STAIRS", Blocks.class, "field_150476_ad");
addMapping("ENDER_CHEST", Blocks.class, "field_150477_bB");
addMapping("TORCH", Blocks.class, "field_150478_aa");
addMapping("TRIPWIRE_HOOK", Blocks.class, "field_150479_bC");
addMapping("FIRE", Blocks.class, "field_150480_ab");
addMapping("JUNGLE_STAIRS", Blocks.class, "field_150481_bH");
addMapping("DIAMOND_ORE", Blocks.class, "field_150482_ag");
addMapping("COMMAND_BLOCK", Blocks.class, "field_150483_bI");
addMapping("DIAMOND_BLOCK", Blocks.class, "field_150484_ah");
addMapping("SPRUCE_STAIRS", Blocks.class, "field_150485_bF");
addMapping("CHEST", Blocks.class, "field_150486_ae");
addMapping("BIRCH_STAIRS", Blocks.class, "field_150487_bG");
addMapping("REDSTONE_WIRE", Blocks.class, "field_150488_af");
addMapping("PISTON_EXTENSION", Blocks.class, "field_180384_M");
addMapping("DARK_OAK_FENCE_GATE", Blocks.class, "field_180385_bs");
addMapping("JUNGLE_FENCE_GATE", Blocks.class, "field_180386_br");
addMapping("ACACIA_FENCE_GATE", Blocks.class, "field_180387_bt");
addMapping("DOUBLE_STONE_SLAB2", Blocks.class, "field_180388_cO");
addMapping("STONE_SLAB2", Blocks.class, "field_180389_cP");
addMapping("OAK_FENCE_GATE", Blocks.class, "field_180390_bo");
addMapping("SPRUCE_FENCE_GATE", Blocks.class, "field_180391_bp");
addMapping("BIRCH_FENCE_GATE", Blocks.class, "field_180392_bq");
addMapping("STANDING_BANNER", Blocks.class, "field_180393_cK");
addMapping("WALL_BANNER", Blocks.class, "field_180394_cL");
addMapping("RED_SANDSTONE", Blocks.class, "field_180395_cM");
addMapping("RED_SANDSTONE_STAIRS", Blocks.class, "field_180396_cN");
addMapping("PRISMARINE", Blocks.class, "field_180397_cI");
addMapping("SEA_LANTERN", Blocks.class, "field_180398_cJ");
addMapping("SLIME_BLOCK", Blocks.class, "field_180399_cE");
addMapping("IRON_TRAPDOOR", Blocks.class, "field_180400_cw");
addMapping("BARRIER", Blocks.class, "field_180401_cv");
addMapping("DAYLIGHT_DETECTOR_INVERTED", Blocks.class, "field_180402_cm");
addMapping("JUNGLE_FENCE", Blocks.class, "field_180403_aR");
addMapping("BIRCH_FENCE", Blocks.class, "field_180404_aQ");
addMapping("ACACIA_FENCE", Blocks.class, "field_180405_aT");
addMapping("DARK_OAK_FENCE", Blocks.class, "field_180406_aS");
addMapping("OAK_FENCE", Blocks.class, "field_180407_aO");
addMapping("SPRUCE_FENCE", Blocks.class, "field_180408_aP");
addMapping("DARK_OAK_DOOR", Blocks.class, "field_180409_at");
addMapping("ACACIA_DOOR", Blocks.class, "field_180410_as");
addMapping("JUNGLE_DOOR", Blocks.class, "field_180411_ar");
addMapping("BIRCH_DOOR", Blocks.class, "field_180412_aq");
addMapping("OAK_DOOR", Blocks.class, "field_180413_ao");
addMapping("SPRUCE_DOOR", Blocks.class, "field_180414_ap");
addMapping("END_ROD", Blocks.class, "field_185764_cQ");
addMapping("CHORUS_PLANT", Blocks.class, "field_185765_cR");
addMapping("CHORUS_FLOWER", Blocks.class, "field_185766_cS");
addMapping("PURPUR_BLOCK", Blocks.class, "field_185767_cT");
addMapping("PURPUR_PILLAR", Blocks.class, "field_185768_cU");
addMapping("PURPUR_STAIRS", Blocks.class, "field_185769_cV");
addMapping("PURPUR_DOUBLE_SLAB", Blocks.class, "field_185770_cW");
addMapping("PURPUR_SLAB", Blocks.class, "field_185771_cX");
addMapping("END_BRICKS", Blocks.class, "field_185772_cY");
addMapping("BEETROOTS", Blocks.class, "field_185773_cZ");
addMapping("GRASS_PATH", Blocks.class, "field_185774_da");
addMapping("END_GATEWAY", Blocks.class, "field_185775_db");
addMapping("REPEATING_COMMAND_BLOCK", Blocks.class, "field_185776_dc");
addMapping("CHAIN_COMMAND_BLOCK", Blocks.class, "field_185777_dd");
addMapping("FROSTED_ICE", Blocks.class, "field_185778_de");
addMapping("STRUCTURE_BLOCK", Blocks.class, "field_185779_df");
addMapping("CACHE", Blocks.class, "field_185780_dg");
addMapping("MAGMA", Blocks.class, "field_189877_df");
addMapping("NETHER_WART_BLOCK", Blocks.class, "field_189878_dg");
addMapping("RED_NETHER_BRICK", Blocks.class, "field_189879_dh");
addMapping("BONE_BLOCK", Blocks.class, "field_189880_di");
addMapping("STRUCTURE_VOID", Blocks.class, "field_189881_dj");
addMapping("BLACK_SHULKER_BOX", Blocks.class, "field_190975_dA");
addMapping("OBSERVER", Blocks.class, "field_190976_dk");
addMapping("WHITE_SHULKER_BOX", Blocks.class, "field_190977_dl");
addMapping("ORANGE_SHULKER_BOX", Blocks.class, "field_190978_dm");
addMapping("MAGENTA_SHULKER_BOX", Blocks.class, "field_190979_dn");
addMapping("LIGHT_BLUE_SHULKER_BOX", Blocks.class, "field_190980_do");
addMapping("YELLOW_SHULKER_BOX", Blocks.class, "field_190981_dp");
addMapping("LIME_SHULKER_BOX", Blocks.class, "field_190982_dq");
addMapping("PINK_SHULKER_BOX", Blocks.class, "field_190983_dr");
addMapping("GRAY_SHULKER_BOX", Blocks.class, "field_190984_ds");
addMapping("SILVER_SHULKER_BOX", Blocks.class, "field_190985_dt");
addMapping("CYAN_SHULKER_BOX", Blocks.class, "field_190986_du");
addMapping("PURPLE_SHULKER_BOX", Blocks.class, "field_190987_dv");
addMapping("BLUE_SHULKER_BOX", Blocks.class, "field_190988_dw");
addMapping("BROWN_SHULKER_BOX", Blocks.class, "field_190989_dx");
addMapping("GREEN_SHULKER_BOX", Blocks.class, "field_190990_dy");
addMapping("RED_SHULKER_BOX", Blocks.class, "field_190991_dz");
addMapping("WHITE_GLAZED_TERRACOTTA", Blocks.class, "field_192427_dB");
addMapping("ORANGE_GLAZED_TERRACOTTA", Blocks.class, "field_192428_dC");
addMapping("MAGENTA_GLAZED_TERRACOTTA", Blocks.class, "field_192429_dD");
addMapping("LIGHT_BLUE_GLAZED_TERRACOTTA", Blocks.class, "field_192430_dE");
addMapping("YELLOW_GLAZED_TERRACOTTA", Blocks.class, "field_192431_dF");
addMapping("LIME_GLAZED_TERRACOTTA", Blocks.class, "field_192432_dG");
addMapping("PINK_GLAZED_TERRACOTTA", Blocks.class, "field_192433_dH");
addMapping("GRAY_GLAZED_TERRACOTTA", Blocks.class, "field_192434_dI");
addMapping("SILVER_GLAZED_TERRACOTTA", Blocks.class, "field_192435_dJ");
addMapping("CYAN_GLAZED_TERRACOTTA", Blocks.class, "field_192436_dK");
addMapping("PURPLE_GLAZED_TERRACOTTA", Blocks.class, "field_192437_dL");
addMapping("BLUE_GLAZED_TERRACOTTA", Blocks.class, "field_192438_dM");
addMapping("BROWN_GLAZED_TERRACOTTA", Blocks.class, "field_192439_dN");
addMapping("GREEN_GLAZED_TERRACOTTA", Blocks.class, "field_192440_dO");
addMapping("RED_GLAZED_TERRACOTTA", Blocks.class, "field_192441_dP");
addMapping("BLACK_GLAZED_TERRACOTTA", Blocks.class, "field_192442_dQ");
addMapping("CONCRETE", Blocks.class, "field_192443_dR");
addMapping("CONCRETE_POWDER", Blocks.class, "field_192444_dS");
addMapping("alreadyRegistered", Bootstrap.class, "field_151355_a");
addMapping("LOGGER", Bootstrap.class, "field_179871_c");
addMapping("SYSOUT", Bootstrap.class, "field_179872_a");
addMapping("hasErrored", Bootstrap.class, "field_194219_b");
addMapping("LURE", Enchantments.class, "field_151369_A");
addMapping("LUCK_OF_THE_SEA", Enchantments.class, "field_151370_z");
addMapping("PROJECTILE_PROTECTION", Enchantments.class, "field_180308_g");
addMapping("FEATHER_FALLING", Enchantments.class, "field_180309_e");
addMapping("PROTECTION", Enchantments.class, "field_180310_c");
addMapping("BANE_OF_ARTHROPODS", Enchantments.class, "field_180312_n");
addMapping("KNOCKBACK", Enchantments.class, "field_180313_o");
addMapping("MENDING", Enchantments.class, "field_185296_A");
addMapping("BLAST_PROTECTION", Enchantments.class, "field_185297_d");
addMapping("RESPIRATION", Enchantments.class, "field_185298_f");
addMapping("AQUA_AFFINITY", Enchantments.class, "field_185299_g");
addMapping("DEPTH_STRIDER", Enchantments.class, "field_185300_i");
addMapping("FROST_WALKER", Enchantments.class, "field_185301_j");
addMapping("SHARPNESS", Enchantments.class, "field_185302_k");
addMapping("SMITE", Enchantments.class, "field_185303_l");
addMapping("LOOTING", Enchantments.class, "field_185304_p");
addMapping("EFFICIENCY", Enchantments.class, "field_185305_q");
addMapping("SILK_TOUCH", Enchantments.class, "field_185306_r");
addMapping("UNBREAKING", Enchantments.class, "field_185307_s");
addMapping("FORTUNE", Enchantments.class, "field_185308_t");
addMapping("POWER", Enchantments.class, "field_185309_u");
addMapping("PUNCH", Enchantments.class, "field_185310_v");
addMapping("FLAME", Enchantments.class, "field_185311_w");
addMapping("INFINITY", Enchantments.class, "field_185312_x");
addMapping("VANISHING_CURSE", Enchantments.class, "field_190940_C");
addMapping("BINDING_CURSE", Enchantments.class, "field_190941_k");
addMapping("SWEEPING", Enchantments.class, "field_191530_r");
addMapping("FIRE_PROTECTION", Enchantments.class, "field_77329_d");
addMapping("FIRE_ASPECT", Enchantments.class, "field_77334_n");
addMapping("THORNS", Enchantments.class, "field_92091_k");
addMapping("GOLDEN_PICKAXE", Items.class, "field_151005_D");
addMapping("GOLDEN_AXE", Items.class, "field_151006_E");
addMapping("STRING", Items.class, "field_151007_F");
addMapping("FEATHER", Items.class, "field_151008_G");
addMapping("MUSHROOM_STEW", Items.class, "field_151009_A");
addMapping("GOLDEN_SWORD", Items.class, "field_151010_B");
addMapping("GOLDEN_SHOVEL", Items.class, "field_151011_C");
addMapping("DIAMOND_HOE", Items.class, "field_151012_L");
addMapping("GOLDEN_HOE", Items.class, "field_151013_M");
addMapping("WHEAT_SEEDS", Items.class, "field_151014_N");
addMapping("WHEAT", Items.class, "field_151015_O");
addMapping("GUNPOWDER", Items.class, "field_151016_H");
addMapping("WOODEN_HOE", Items.class, "field_151017_I");
addMapping("STONE_HOE", Items.class, "field_151018_J");
addMapping("IRON_HOE", Items.class, "field_151019_K");
addMapping("CHAINMAIL_HELMET", Items.class, "field_151020_U");
addMapping("LEATHER_BOOTS", Items.class, "field_151021_T");
addMapping("CHAINMAIL_LEGGINGS", Items.class, "field_151022_W");
addMapping("CHAINMAIL_CHESTPLATE", Items.class, "field_151023_V");
addMapping("LEATHER_HELMET", Items.class, "field_151024_Q");
addMapping("BREAD", Items.class, "field_151025_P");
addMapping("LEATHER_LEGGINGS", Items.class, "field_151026_S");
addMapping("LEATHER_CHESTPLATE", Items.class, "field_151027_R");
addMapping("IRON_HELMET", Items.class, "field_151028_Y");
addMapping("CHAINMAIL_BOOTS", Items.class, "field_151029_X");
addMapping("IRON_CHESTPLATE", Items.class, "field_151030_Z");
addMapping("BOW", Items.class, "field_151031_f");
addMapping("ARROW", Items.class, "field_151032_g");
addMapping("FLINT_AND_STEEL", Items.class, "field_151033_d");
addMapping("APPLE", Items.class, "field_151034_e");
addMapping("IRON_PICKAXE", Items.class, "field_151035_b");
addMapping("IRON_AXE", Items.class, "field_151036_c");
addMapping("IRON_SHOVEL", Items.class, "field_151037_a");
addMapping("WOODEN_SHOVEL", Items.class, "field_151038_n");
addMapping("WOODEN_PICKAXE", Items.class, "field_151039_o");
addMapping("IRON_SWORD", Items.class, "field_151040_l");
addMapping("WOODEN_SWORD", Items.class, "field_151041_m");
addMapping("IRON_INGOT", Items.class, "field_151042_j");
addMapping("GOLD_INGOT", Items.class, "field_151043_k");
addMapping("COAL", Items.class, "field_151044_h");
addMapping("DIAMOND", Items.class, "field_151045_i");
addMapping("DIAMOND_PICKAXE", Items.class, "field_151046_w");
addMapping("DIAMOND_SHOVEL", Items.class, "field_151047_v");
addMapping("DIAMOND_SWORD", Items.class, "field_151048_u");
addMapping("STONE_AXE", Items.class, "field_151049_t");
addMapping("STONE_PICKAXE", Items.class, "field_151050_s");
addMapping("STONE_SHOVEL", Items.class, "field_151051_r");
addMapping("STONE_SWORD", Items.class, "field_151052_q");
addMapping("WOODEN_AXE", Items.class, "field_151053_p");
addMapping("BOWL", Items.class, "field_151054_z");
addMapping("STICK", Items.class, "field_151055_y");
addMapping("DIAMOND_AXE", Items.class, "field_151056_x");
addMapping("NAME_TAG", Items.class, "field_151057_cb");
addMapping("LEAD", Items.class, "field_151058_ca");
addMapping("FIRE_CHARGE", Items.class, "field_151059_bz");
addMapping("SPECKLED_MELON", Items.class, "field_151060_bw");
addMapping("ENDER_EYE", Items.class, "field_151061_bv");
addMapping("EXPERIENCE_BOTTLE", Items.class, "field_151062_by");
addMapping("SPAWN_EGG", Items.class, "field_151063_bx");
addMapping("MAGMA_CREAM", Items.class, "field_151064_bs");
addMapping("BLAZE_POWDER", Items.class, "field_151065_br");
addMapping("CAULDRON", Items.class, "field_151066_bu");
addMapping("BREWING_STAND", Items.class, "field_151067_bt");
addMapping("POTIONITEM", Items.class, "field_151068_bn");
addMapping("GLASS_BOTTLE", Items.class, "field_151069_bo");
addMapping("SPIDER_EYE", Items.class, "field_151070_bp");
addMapping("FERMENTED_SPIDER_EYE", Items.class, "field_151071_bq");
addMapping("BLAZE_ROD", Items.class, "field_151072_bj");
addMapping("GHAST_TEAR", Items.class, "field_151073_bk");
addMapping("GOLD_NUGGET", Items.class, "field_151074_bl");
addMapping("NETHER_WART", Items.class, "field_151075_bm");
addMapping("CHICKEN", Items.class, "field_151076_bf");
addMapping("COOKED_CHICKEN", Items.class, "field_151077_bg");
addMapping("ROTTEN_FLESH", Items.class, "field_151078_bh");
addMapping("ENDER_PEARL", Items.class, "field_151079_bi");
addMapping("PUMPKIN_SEEDS", Items.class, "field_151080_bb");
addMapping("MELON_SEEDS", Items.class, "field_151081_bc");
addMapping("BEEF", Items.class, "field_151082_bd");
addMapping("COOKED_BEEF", Items.class, "field_151083_be");
addMapping("RECORD_WAIT", Items.class, "field_151084_co");
addMapping("RECORD_WARD", Items.class, "field_151085_cm");
addMapping("RECORD_11", Items.class, "field_151086_cn");
addMapping("RECORD_STAL", Items.class, "field_151087_ck");
addMapping("RECORD_STRAD", Items.class, "field_151088_cl");
addMapping("RECORD_MALL", Items.class, "field_151089_ci");
addMapping("RECORD_MELLOHI", Items.class, "field_151090_cj");
addMapping("RECORD_CHIRP", Items.class, "field_151091_cg");
addMapping("RECORD_FAR", Items.class, "field_151092_ch");
addMapping("RECORD_CAT", Items.class, "field_151093_ce");
addMapping("RECORD_BLOCKS", Items.class, "field_151094_cf");
addMapping("COMMAND_BLOCK_MINECART", Items.class, "field_151095_cc");
addMapping("RECORD_13", Items.class, "field_151096_cd");
addMapping("SHEARS", Items.class, "field_151097_aZ");
addMapping("FILLED_MAP", Items.class, "field_151098_aY");
addMapping("WRITABLE_BOOK", Items.class, "field_151099_bA");
addMapping("DYE", Items.class, "field_151100_aR");
addMapping("SUGAR", Items.class, "field_151102_aT");
addMapping("BONE", Items.class, "field_151103_aS");
addMapping("BED", Items.class, "field_151104_aV");
addMapping("CAKE", Items.class, "field_151105_aU");
addMapping("COOKIE", Items.class, "field_151106_aX");
addMapping("REPEATER", Items.class, "field_151107_aW");
addMapping("CHEST_MINECART", Items.class, "field_151108_aI");
addMapping("FURNACE_MINECART", Items.class, "field_151109_aJ");
addMapping("EGG", Items.class, "field_151110_aK");
addMapping("COMPASS", Items.class, "field_151111_aL");
addMapping("FISHING_ROD", Items.class, "field_151112_aM");
addMapping("CLOCK", Items.class, "field_151113_aN");
addMapping("GLOWSTONE_DUST", Items.class, "field_151114_aO");
addMapping("FISH", Items.class, "field_151115_aP");
addMapping("LEATHER", Items.class, "field_151116_aA");
addMapping("MILK_BUCKET", Items.class, "field_151117_aB");
addMapping("BRICK", Items.class, "field_151118_aC");
addMapping("CLAY_BALL", Items.class, "field_151119_aD");
addMapping("REEDS", Items.class, "field_151120_aE");
addMapping("PAPER", Items.class, "field_151121_aF");
addMapping("BOOK", Items.class, "field_151122_aG");
addMapping("SLIME_BALL", Items.class, "field_151123_aH");
addMapping("BOAT", Items.class, "field_151124_az");
addMapping("DIAMOND_HORSE_ARMOR", Items.class, "field_151125_bZ");
addMapping("SNOWBALL", Items.class, "field_151126_ay");
addMapping("MELON", Items.class, "field_151127_ba");
addMapping("QUARTZ", Items.class, "field_151128_bU");
addMapping("LAVA_BUCKET", Items.class, "field_151129_at");
addMapping("NETHERBRICK", Items.class, "field_151130_bT");
addMapping("WATER_BUCKET", Items.class, "field_151131_as");
addMapping("COMPARATOR", Items.class, "field_151132_bS");
addMapping("BUCKET", Items.class, "field_151133_ar");
addMapping("ENCHANTED_BOOK", Items.class, "field_151134_bR");
addMapping("GOLDEN_HORSE_ARMOR", Items.class, "field_151136_bY");
addMapping("REDSTONE", Items.class, "field_151137_ax");
addMapping("IRON_HORSE_ARMOR", Items.class, "field_151138_bX");
addMapping("IRON_DOOR", Items.class, "field_151139_aw");
addMapping("HOPPER_MINECART", Items.class, "field_151140_bW");
addMapping("SADDLE", Items.class, "field_151141_av");
addMapping("TNT_MINECART", Items.class, "field_151142_bV");
addMapping("MINECART", Items.class, "field_151143_au");
addMapping("SKULL", Items.class, "field_151144_bL");
addMapping("FLINT", Items.class, "field_151145_ak");
addMapping("CARROT_ON_A_STICK", Items.class, "field_151146_bM");
addMapping("PORKCHOP", Items.class, "field_151147_al");
addMapping("MAP", Items.class, "field_151148_bJ");
addMapping("GOLDEN_LEGGINGS", Items.class, "field_151149_ai");
addMapping("GOLDEN_CARROT", Items.class, "field_151150_bK");
addMapping("GOLDEN_BOOTS", Items.class, "field_151151_aj");
addMapping("FIREWORKS", Items.class, "field_151152_bP");
addMapping("GOLDEN_APPLE", Items.class, "field_151153_ao");
addMapping("FIREWORK_CHARGE", Items.class, "field_151154_bQ");
addMapping("SIGN", Items.class, "field_151155_ap");
addMapping("NETHER_STAR", Items.class, "field_151156_bN");
addMapping("COOKED_PORKCHOP", Items.class, "field_151157_am");
addMapping("PUMPKIN_PIE", Items.class, "field_151158_bO");
addMapping("PAINTING", Items.class, "field_151159_an");
addMapping("ITEM_FRAME", Items.class, "field_151160_bD");
addMapping("DIAMOND_HELMET", Items.class, "field_151161_ac");
addMapping("FLOWER_POT", Items.class, "field_151162_bE");
addMapping("DIAMOND_CHESTPLATE", Items.class, "field_151163_ad");
addMapping("WRITTEN_BOOK", Items.class, "field_151164_bB");
addMapping("IRON_LEGGINGS", Items.class, "field_151165_aa");
addMapping("EMERALD", Items.class, "field_151166_bC");
addMapping("IRON_BOOTS", Items.class, "field_151167_ab");
addMapping("BAKED_POTATO", Items.class, "field_151168_bH");
addMapping("GOLDEN_HELMET", Items.class, "field_151169_ag");
addMapping("POISONOUS_POTATO", Items.class, "field_151170_bI");
addMapping("GOLDEN_CHESTPLATE", Items.class, "field_151171_ah");
addMapping("CARROT", Items.class, "field_151172_bF");
addMapping("DIAMOND_LEGGINGS", Items.class, "field_151173_ae");
addMapping("POTATO", Items.class, "field_151174_bG");
addMapping("DIAMOND_BOOTS", Items.class, "field_151175_af");
addMapping("RABBIT_HIDE", Items.class, "field_179555_bs");
addMapping("RABBIT_FOOT", Items.class, "field_179556_br");
addMapping("COOKED_MUTTON", Items.class, "field_179557_bn");
addMapping("RABBIT", Items.class, "field_179558_bo");
addMapping("COOKED_RABBIT", Items.class, "field_179559_bp");
addMapping("RABBIT_STEW", Items.class, "field_179560_bq");
addMapping("MUTTON", Items.class, "field_179561_bm");
addMapping("PRISMARINE_SHARD", Items.class, "field_179562_cC");
addMapping("PRISMARINE_CRYSTALS", Items.class, "field_179563_cD");
addMapping("BANNER", Items.class, "field_179564_cE");
addMapping("ARMOR_STAND", Items.class, "field_179565_cj");
addMapping("COOKED_FISH", Items.class, "field_179566_aV");
addMapping("JUNGLE_DOOR", Items.class, "field_179567_at");
addMapping("BIRCH_DOOR", Items.class, "field_179568_as");
addMapping("SPRUCE_DOOR", Items.class, "field_179569_ar");
addMapping("OAK_DOOR", Items.class, "field_179570_aq");
addMapping("DARK_OAK_DOOR", Items.class, "field_179571_av");
addMapping("ACACIA_DOOR", Items.class, "field_179572_au");
addMapping("SPRUCE_BOAT", Items.class, "field_185150_aH");
addMapping("BIRCH_BOAT", Items.class, "field_185151_aI");
addMapping("JUNGLE_BOAT", Items.class, "field_185152_aJ");
addMapping("ACACIA_BOAT", Items.class, "field_185153_aK");
addMapping("DARK_OAK_BOAT", Items.class, "field_185154_aL");
addMapping("SPLASH_POTION", Items.class, "field_185155_bH");
addMapping("LINGERING_POTION", Items.class, "field_185156_bI");
addMapping("DRAGON_BREATH", Items.class, "field_185157_bK");
addMapping("END_CRYSTAL", Items.class, "field_185158_cP");
addMapping("SHIELD", Items.class, "field_185159_cQ");
addMapping("ELYTRA", Items.class, "field_185160_cR");
addMapping("CHORUS_FRUIT", Items.class, "field_185161_cS");
addMapping("CHORUS_FRUIT_POPPED", Items.class, "field_185162_cT");
addMapping("BEETROOT_SEEDS", Items.class, "field_185163_cU");
addMapping("BEETROOT", Items.class, "field_185164_cV");
addMapping("BEETROOT_SOUP", Items.class, "field_185165_cW");
addMapping("SPECTRAL_ARROW", Items.class, "field_185166_h");
addMapping("TIPPED_ARROW", Items.class, "field_185167_i");
addMapping("TOTEM_OF_UNDYING", Items.class, "field_190929_cY");
addMapping("SHULKER_SHELL", Items.class, "field_190930_cZ");
addMapping("AIR", Items.class, "field_190931_a");
addMapping("IRON_NUGGET", Items.class, "field_191525_da");
addMapping("KNOWLEDGE_BOOK", Items.class, "field_192397_db");
addMapping("HEALTH_BOOST", MobEffects.class, "field_180152_w");
addMapping("GLOWING", MobEffects.class, "field_188423_x");
addMapping("LEVITATION", MobEffects.class, "field_188424_y");
addMapping("LUCK", MobEffects.class, "field_188425_z");
addMapping("UNLUCK", MobEffects.class, "field_189112_A");
addMapping("MINING_FATIGUE", MobEffects.class, "field_76419_f");
addMapping("STRENGTH", MobEffects.class, "field_76420_g");
addMapping("SLOWNESS", MobEffects.class, "field_76421_d");
addMapping("HASTE", MobEffects.class, "field_76422_e");
addMapping("SPEED", MobEffects.class, "field_76424_c");
addMapping("FIRE_RESISTANCE", MobEffects.class, "field_76426_n");
addMapping("WATER_BREATHING", MobEffects.class, "field_76427_o");
addMapping("REGENERATION", MobEffects.class, "field_76428_l");
addMapping("RESISTANCE", MobEffects.class, "field_76429_m");
addMapping("JUMP_BOOST", MobEffects.class, "field_76430_j");
addMapping("NAUSEA", MobEffects.class, "field_76431_k");
addMapping("INSTANT_HEALTH", MobEffects.class, "field_76432_h");
addMapping("INSTANT_DAMAGE", MobEffects.class, "field_76433_i");
addMapping("POISON", MobEffects.class, "field_76436_u");
addMapping("WEAKNESS", MobEffects.class, "field_76437_t");
addMapping("HUNGER", MobEffects.class, "field_76438_s");
addMapping("NIGHT_VISION", MobEffects.class, "field_76439_r");
addMapping("BLINDNESS", MobEffects.class, "field_76440_q");
addMapping("INVISIBILITY", MobEffects.class, "field_76441_p");
addMapping("SATURATION", MobEffects.class, "field_76443_y");
addMapping("ABSORPTION", MobEffects.class, "field_76444_x");
addMapping("WITHER", MobEffects.class, "field_82731_v");
addMapping("LONG_POISON", PotionTypes.class, "field_185218_A");
addMapping("STRONG_POISON", PotionTypes.class, "field_185219_B");
addMapping("REGENERATION", PotionTypes.class, "field_185220_C");
addMapping("LONG_REGENERATION", PotionTypes.class, "field_185221_D");
addMapping("STRONG_REGENERATION", PotionTypes.class, "field_185222_E");
addMapping("STRENGTH", PotionTypes.class, "field_185223_F");
addMapping("LONG_STRENGTH", PotionTypes.class, "field_185224_G");
addMapping("STRONG_STRENGTH", PotionTypes.class, "field_185225_H");
addMapping("WEAKNESS", PotionTypes.class, "field_185226_I");
addMapping("LONG_WEAKNESS", PotionTypes.class, "field_185227_J");
addMapping("CACHE", PotionTypes.class, "field_185228_K");
addMapping("EMPTY", PotionTypes.class, "field_185229_a");
addMapping("WATER", PotionTypes.class, "field_185230_b");
addMapping("MUNDANE", PotionTypes.class, "field_185231_c");
addMapping("THICK", PotionTypes.class, "field_185232_d");
addMapping("AWKWARD", PotionTypes.class, "field_185233_e");
addMapping("NIGHT_VISION", PotionTypes.class, "field_185234_f");
addMapping("LONG_NIGHT_VISION", PotionTypes.class, "field_185235_g");
addMapping("INVISIBILITY", PotionTypes.class, "field_185236_h");
addMapping("LONG_INVISIBILITY", PotionTypes.class, "field_185237_i");
addMapping("LEAPING", PotionTypes.class, "field_185238_j");
addMapping("LONG_LEAPING", PotionTypes.class, "field_185239_k");
addMapping("STRONG_LEAPING", PotionTypes.class, "field_185240_l");
addMapping("FIRE_RESISTANCE", PotionTypes.class, "field_185241_m");
addMapping("LONG_FIRE_RESISTANCE", PotionTypes.class, "field_185242_n");
addMapping("SWIFTNESS", PotionTypes.class, "field_185243_o");
addMapping("LONG_SWIFTNESS", PotionTypes.class, "field_185244_p");
addMapping("STRONG_SWIFTNESS", PotionTypes.class, "field_185245_q");
addMapping("SLOWNESS", PotionTypes.class, "field_185246_r");
addMapping("LONG_SLOWNESS", PotionTypes.class, "field_185247_s");
addMapping("WATER_BREATHING", PotionTypes.class, "field_185248_t");
addMapping("LONG_WATER_BREATHING", PotionTypes.class, "field_185249_u");
addMapping("HEALING", PotionTypes.class, "field_185250_v");
addMapping("STRONG_HEALING", PotionTypes.class, "field_185251_w");
addMapping("HARMING", PotionTypes.class, "field_185252_x");
addMapping("STRONG_HARMING", PotionTypes.class, "field_185253_y");
addMapping("POISON", PotionTypes.class, "field_185254_z");
addMapping("ENTITY_EGG_THROW", SoundEvents.class, "field_187511_aA");
addMapping("ENTITY_ELDER_GUARDIAN_AMBIENT", SoundEvents.class, "field_187512_aB");
addMapping("ENTITY_ELDERGUARDIAN_AMBIENTLAND", SoundEvents.class, "field_187513_aC");
addMapping("ENTITY_ELDER_GUARDIAN_CURSE", SoundEvents.class, "field_187514_aD");
addMapping("ENTITY_ELDER_GUARDIAN_DEATH", SoundEvents.class, "field_187515_aE");
addMapping("ENTITY_ELDER_GUARDIAN_DEATH_LAND", SoundEvents.class, "field_187516_aF");
addMapping("ENTITY_ELDER_GUARDIAN_HURT", SoundEvents.class, "field_187517_aG");
addMapping("ENTITY_ELDER_GUARDIAN_HURT_LAND", SoundEvents.class, "field_187518_aH");
addMapping("BLOCK_ENDERCHEST_CLOSE", SoundEvents.class, "field_187519_aI");
addMapping("BLOCK_ENDERCHEST_OPEN", SoundEvents.class, "field_187520_aJ");
addMapping("ENTITY_ENDERDRAGON_AMBIENT", SoundEvents.class, "field_187521_aK");
addMapping("ENTITY_ENDERDRAGON_DEATH", SoundEvents.class, "field_187522_aL");
addMapping("ENTITY_ENDERDRAGON_FIREBALL_EPLD", SoundEvents.class, "field_187523_aM");
addMapping("ENTITY_ENDERDRAGON_FLAP", SoundEvents.class, "field_187524_aN");
addMapping("ENTITY_ENDERDRAGON_GROWL", SoundEvents.class, "field_187525_aO");
addMapping("ENTITY_ENDERDRAGON_HURT", SoundEvents.class, "field_187526_aP");
addMapping("ENTITY_ENDERDRAGON_SHOOT", SoundEvents.class, "field_187527_aQ");
addMapping("ENTITY_ENDEREYE_LAUNCH", SoundEvents.class, "field_187528_aR");
addMapping("ENTITY_ENDERMEN_AMBIENT", SoundEvents.class, "field_187529_aS");
addMapping("ENTITY_ENDERMEN_DEATH", SoundEvents.class, "field_187530_aT");
addMapping("ENTITY_ENDERMEN_HURT", SoundEvents.class, "field_187531_aU");
addMapping("ENTITY_ENDERMEN_SCREAM", SoundEvents.class, "field_187532_aV");
addMapping("ENTITY_ENDERMEN_STARE", SoundEvents.class, "field_187533_aW");
addMapping("ENTITY_ENDERMEN_TELEPORT", SoundEvents.class, "field_187534_aX");
addMapping("ENTITY_ENDERMITE_AMBIENT", SoundEvents.class, "field_187535_aY");
addMapping("ENTITY_ENDERMITE_DEATH", SoundEvents.class, "field_187536_aZ");
addMapping("ENTITY_GENERIC_EAT", SoundEvents.class, "field_187537_bA");
addMapping("ENTITY_CHICKEN_STEP", SoundEvents.class, "field_187538_aa");
addMapping("ENTITY_GENERIC_EXPLODE", SoundEvents.class, "field_187539_bB");
addMapping("BLOCK_CHORUS_FLOWER_DEATH", SoundEvents.class, "field_187540_ab");
addMapping("ENTITY_GENERIC_EXTINGUISH_FIRE", SoundEvents.class, "field_187541_bC");
addMapping("BLOCK_CHORUS_FLOWER_GROW", SoundEvents.class, "field_187542_ac");
addMapping("ENTITY_GENERIC_HURT", SoundEvents.class, "field_187543_bD");
addMapping("ITEM_CHORUS_FRUIT_TELEPORT", SoundEvents.class, "field_187544_ad");
addMapping("ENTITY_GENERIC_SMALL_FALL", SoundEvents.class, "field_187545_bE");
addMapping("BLOCK_CLOTH_BREAK", SoundEvents.class, "field_187546_ae");
addMapping("ENTITY_GENERIC_SPLASH", SoundEvents.class, "field_187547_bF");
addMapping("BLOCK_CLOTH_FALL", SoundEvents.class, "field_187548_af");
addMapping("ENTITY_GENERIC_SWIM", SoundEvents.class, "field_187549_bG");
addMapping("BLOCK_CLOTH_HIT", SoundEvents.class, "field_187550_ag");
addMapping("ENTITY_GHAST_AMBIENT", SoundEvents.class, "field_187551_bH");
addMapping("BLOCK_CLOTH_PLACE", SoundEvents.class, "field_187552_ah");
addMapping("ENTITY_GHAST_DEATH", SoundEvents.class, "field_187553_bI");
addMapping("BLOCK_CLOTH_STEP", SoundEvents.class, "field_187554_ai");
addMapping("ENTITY_GHAST_HURT", SoundEvents.class, "field_187555_bJ");
addMapping("BLOCK_COMPARATOR_CLICK", SoundEvents.class, "field_187556_aj");
addMapping("ENTITY_GHAST_SHOOT", SoundEvents.class, "field_187557_bK");
addMapping("ENTITY_COW_AMBIENT", SoundEvents.class, "field_187558_ak");
addMapping("ENTITY_GHAST_WARN", SoundEvents.class, "field_187559_bL");
addMapping("ENTITY_COW_DEATH", SoundEvents.class, "field_187560_al");
addMapping("BLOCK_GLASS_BREAK", SoundEvents.class, "field_187561_bM");
addMapping("ENTITY_COW_HURT", SoundEvents.class, "field_187562_am");
addMapping("BLOCK_GLASS_FALL", SoundEvents.class, "field_187563_bN");
addMapping("ENTITY_COW_MILK", SoundEvents.class, "field_187564_an");
addMapping("BLOCK_GLASS_HIT", SoundEvents.class, "field_187565_bO");
addMapping("ENTITY_COW_STEP", SoundEvents.class, "field_187566_ao");
addMapping("BLOCK_GLASS_PLACE", SoundEvents.class, "field_187567_bP");
addMapping("ENTITY_CREEPER_DEATH", SoundEvents.class, "field_187568_ap");
addMapping("BLOCK_GLASS_STEP", SoundEvents.class, "field_187569_bQ");
addMapping("ENTITY_CREEPER_HURT", SoundEvents.class, "field_187570_aq");
addMapping("BLOCK_GRASS_BREAK", SoundEvents.class, "field_187571_bR");
addMapping("ENTITY_CREEPER_PRIMED", SoundEvents.class, "field_187572_ar");
addMapping("BLOCK_GRASS_FALL", SoundEvents.class, "field_187573_bS");
addMapping("BLOCK_DISPENSER_DISPENSE", SoundEvents.class, "field_187574_as");
addMapping("BLOCK_GRASS_HIT", SoundEvents.class, "field_187575_bT");
addMapping("BLOCK_DISPENSER_FAIL", SoundEvents.class, "field_187576_at");
addMapping("BLOCK_GRASS_PLACE", SoundEvents.class, "field_187577_bU");
addMapping("BLOCK_DISPENSER_LAUNCH", SoundEvents.class, "field_187578_au");
addMapping("BLOCK_GRASS_STEP", SoundEvents.class, "field_187579_bV");
addMapping("ENTITY_DONKEY_AMBIENT", SoundEvents.class, "field_187580_av");
addMapping("BLOCK_GRAVEL_BREAK", SoundEvents.class, "field_187581_bW");
addMapping("ENTITY_DONKEY_ANGRY", SoundEvents.class, "field_187582_aw");
addMapping("BLOCK_GRAVEL_FALL", SoundEvents.class, "field_187583_bX");
addMapping("ENTITY_DONKEY_CHEST", SoundEvents.class, "field_187584_ax");
addMapping("BLOCK_GRAVEL_HIT", SoundEvents.class, "field_187585_bY");
addMapping("ENTITY_DONKEY_DEATH", SoundEvents.class, "field_187586_ay");
addMapping("BLOCK_GRAVEL_PLACE", SoundEvents.class, "field_187587_bZ");
addMapping("ENTITY_DONKEY_HURT", SoundEvents.class, "field_187588_az");
addMapping("ENTITY_HOSTILE_SMALL_FALL", SoundEvents.class, "field_187589_cA");
addMapping("ENTITY_ENDERMITE_HURT", SoundEvents.class, "field_187590_ba");
addMapping("ENTITY_HOSTILE_SPLASH", SoundEvents.class, "field_187591_cB");
addMapping("ENTITY_ENDERMITE_STEP", SoundEvents.class, "field_187592_bb");
addMapping("ENTITY_HOSTILE_SWIM", SoundEvents.class, "field_187593_cC");
addMapping("ENTITY_BLAZE_AMBIENT", SoundEvents.class, "field_187594_A");
addMapping("ENTITY_ENDERPEARL_THROW", SoundEvents.class, "field_187595_bc");
addMapping("ENTITY_IRONGOLEM_ATTACK", SoundEvents.class, "field_187596_cD");
addMapping("ENTITY_BLAZE_BURN", SoundEvents.class, "field_187597_B");
addMapping("BLOCK_END_GATEWAY_SPAWN", SoundEvents.class, "field_187598_bd");
addMapping("ENTITY_IRONGOLEM_DEATH", SoundEvents.class, "field_187599_cE");
addMapping("ENTITY_BLAZE_DEATH", SoundEvents.class, "field_187600_C");
addMapping("ENTITY_EXPERIENCE_BOTTLE_THROW", SoundEvents.class, "field_187601_be");
addMapping("ENTITY_IRONGOLEM_HURT", SoundEvents.class, "field_187602_cF");
addMapping("ENTITY_BLAZE_HURT", SoundEvents.class, "field_187603_D");
addMapping("ENTITY_EXPERIENCE_ORB_PICKUP", SoundEvents.class, "field_187604_bf");
addMapping("ENTITY_IRONGOLEM_STEP", SoundEvents.class, "field_187605_cG");
addMapping("ENTITY_BLAZE_SHOOT", SoundEvents.class, "field_187606_E");
addMapping("BLOCK_IRON_DOOR_CLOSE", SoundEvents.class, "field_187608_cH");
addMapping("ENTITY_BOBBER_SPLASH", SoundEvents.class, "field_187609_F");
addMapping("BLOCK_FENCE_GATE_CLOSE", SoundEvents.class, "field_187610_bh");
addMapping("BLOCK_IRON_DOOR_OPEN", SoundEvents.class, "field_187611_cI");
addMapping("ENTITY_BOBBER_THROW", SoundEvents.class, "field_187612_G");
addMapping("BLOCK_FENCE_GATE_OPEN", SoundEvents.class, "field_187613_bi");
addMapping("BLOCK_IRON_TRAPDOOR_CLOSE", SoundEvents.class, "field_187614_cJ");
addMapping("ITEM_BOTTLE_FILL", SoundEvents.class, "field_187615_H");
addMapping("ITEM_FIRECHARGE_USE", SoundEvents.class, "field_187616_bj");
addMapping("BLOCK_IRON_TRAPDOOR_OPEN", SoundEvents.class, "field_187617_cK");
addMapping("ITEM_BOTTLE_FILL_DRAGONBREATH", SoundEvents.class, "field_187618_I");
addMapping("ENTITY_FIREWORK_BLAST", SoundEvents.class, "field_187619_bk");
addMapping("ENTITY_ITEMFRAME_ADD_ITEM", SoundEvents.class, "field_187620_cL");
addMapping("BLOCK_BREWING_STAND_BREW", SoundEvents.class, "field_187621_J");
addMapping("ENTITY_FIREWORK_BLAST_FAR", SoundEvents.class, "field_187622_bl");
addMapping("ENTITY_ITEMFRAME_BREAK", SoundEvents.class, "field_187623_cM");
addMapping("ITEM_BUCKET_EMPTY", SoundEvents.class, "field_187624_K");
addMapping("ENTITY_FIREWORK_LARGE_BLAST", SoundEvents.class, "field_187625_bm");
addMapping("ENTITY_ITEMFRAME_PLACE", SoundEvents.class, "field_187626_cN");
addMapping("ITEM_BUCKET_EMPTY_LAVA", SoundEvents.class, "field_187627_L");
addMapping("ENTITY_FIREWORK_LARGE_BLAST_FAR", SoundEvents.class, "field_187628_bn");
addMapping("ENTITY_ITEMFRAME_REMOVE_ITEM", SoundEvents.class, "field_187629_cO");
addMapping("ITEM_BUCKET_FILL", SoundEvents.class, "field_187630_M");
addMapping("ENTITY_FIREWORK_LAUNCH", SoundEvents.class, "field_187631_bo");
addMapping("ENTITY_ITEMFRAME_ROTATE_ITEM", SoundEvents.class, "field_187632_cP");
addMapping("ITEM_BUCKET_FILL_LAVA", SoundEvents.class, "field_187633_N");
addMapping("ENTITY_FIREWORK_SHOOT", SoundEvents.class, "field_187634_bp");
addMapping("ENTITY_ITEM_BREAK", SoundEvents.class, "field_187635_cQ");
addMapping("ENTITY_CAT_AMBIENT", SoundEvents.class, "field_187636_O");
addMapping("ENTITY_FIREWORK_TWINKLE", SoundEvents.class, "field_187637_bq");
addMapping("ENTITY_ITEM_PICKUP", SoundEvents.class, "field_187638_cR");
addMapping("ENTITY_CAT_DEATH", SoundEvents.class, "field_187639_P");
addMapping("ENTITY_FIREWORK_TWINKLE_FAR", SoundEvents.class, "field_187640_br");
addMapping("BLOCK_LADDER_BREAK", SoundEvents.class, "field_187641_cS");
addMapping("ENTITY_CAT_HURT", SoundEvents.class, "field_187642_Q");
addMapping("BLOCK_FIRE_AMBIENT", SoundEvents.class, "field_187643_bs");
addMapping("BLOCK_LADDER_FALL", SoundEvents.class, "field_187644_cT");
addMapping("ENTITY_CAT_PURR", SoundEvents.class, "field_187645_R");
addMapping("BLOCK_FIRE_EXTINGUISH", SoundEvents.class, "field_187646_bt");
addMapping("BLOCK_LADDER_HIT", SoundEvents.class, "field_187647_cU");
addMapping("ENTITY_CAT_PURREOW", SoundEvents.class, "field_187648_S");
addMapping("ITEM_FLINTANDSTEEL_USE", SoundEvents.class, "field_187649_bu");
addMapping("BLOCK_LADDER_PLACE", SoundEvents.class, "field_187650_cV");
addMapping("BLOCK_CHEST_CLOSE", SoundEvents.class, "field_187651_T");
addMapping("BLOCK_FURNACE_FIRE_CRACKLE", SoundEvents.class, "field_187652_bv");
addMapping("BLOCK_LADDER_STEP", SoundEvents.class, "field_187653_cW");
addMapping("BLOCK_CHEST_LOCKED", SoundEvents.class, "field_187654_U");
addMapping("ENTITY_GENERIC_BIG_FALL", SoundEvents.class, "field_187655_bw");
addMapping("BLOCK_LAVA_AMBIENT", SoundEvents.class, "field_187656_cX");
addMapping("BLOCK_CHEST_OPEN", SoundEvents.class, "field_187657_V");
addMapping("ENTITY_GENERIC_BURN", SoundEvents.class, "field_187658_bx");
addMapping("BLOCK_LAVA_EXTINGUISH", SoundEvents.class, "field_187659_cY");
addMapping("ENTITY_CHICKEN_AMBIENT", SoundEvents.class, "field_187660_W");
addMapping("ENTITY_GENERIC_DEATH", SoundEvents.class, "field_187661_by");
addMapping("BLOCK_LAVA_POP", SoundEvents.class, "field_187662_cZ");
addMapping("ENTITY_CHICKEN_DEATH", SoundEvents.class, "field_187663_X");
addMapping("ENTITY_GENERIC_DRINK", SoundEvents.class, "field_187664_bz");
addMapping("ENTITY_CHICKEN_EGG", SoundEvents.class, "field_187665_Y");
addMapping("ENTITY_CHICKEN_HURT", SoundEvents.class, "field_187666_Z");
addMapping("MUSIC_END", SoundEvents.class, "field_187667_dA");
addMapping("BLOCK_GRAVEL_STEP", SoundEvents.class, "field_187668_ca");
addMapping("MUSIC_GAME", SoundEvents.class, "field_187669_dB");
addMapping("ENTITY_GUARDIAN_AMBIENT", SoundEvents.class, "field_187670_cb");
addMapping("MUSIC_MENU", SoundEvents.class, "field_187671_dC");
addMapping("ENTITY_GUARDIAN_AMBIENT_LAND", SoundEvents.class, "field_187672_cc");
addMapping("MUSIC_NETHER", SoundEvents.class, "field_187673_dD");
addMapping("AMBIENT_CAVE", SoundEvents.class, "field_187674_a");
addMapping("ENTITY_GUARDIAN_ATTACK", SoundEvents.class, "field_187675_cd");
addMapping("BLOCK_NOTE_BASEDRUM", SoundEvents.class, "field_187676_dE");
addMapping("BLOCK_ANVIL_BREAK", SoundEvents.class, "field_187677_b");
addMapping("ENTITY_GUARDIAN_DEATH", SoundEvents.class, "field_187678_ce");
addMapping("BLOCK_NOTE_BASS", SoundEvents.class, "field_187679_dF");
addMapping("BLOCK_ANVIL_DESTROY", SoundEvents.class, "field_187680_c");
addMapping("ENTITY_GUARDIAN_DEATH_LAND", SoundEvents.class, "field_187681_cf");
addMapping("BLOCK_NOTE_HARP", SoundEvents.class, "field_187682_dG");
addMapping("BLOCK_ANVIL_FALL", SoundEvents.class, "field_187683_d");
addMapping("ENTITY_GUARDIAN_FLOP", SoundEvents.class, "field_187684_cg");
addMapping("BLOCK_NOTE_HAT", SoundEvents.class, "field_187685_dH");
addMapping("BLOCK_ANVIL_HIT", SoundEvents.class, "field_187686_e");
addMapping("ENTITY_GUARDIAN_HURT", SoundEvents.class, "field_187687_ch");
addMapping("BLOCK_NOTE_SNARE", SoundEvents.class, "field_187688_dI");
addMapping("BLOCK_ANVIL_LAND", SoundEvents.class, "field_187689_f");
addMapping("ENTITY_GUARDIAN_HURT_LAND", SoundEvents.class, "field_187690_ci");
addMapping("ENTITY_PAINTING_BREAK", SoundEvents.class, "field_187691_dJ");
addMapping("BLOCK_ANVIL_PLACE", SoundEvents.class, "field_187692_g");
addMapping("ITEM_HOE_TILL", SoundEvents.class, "field_187693_cj");
addMapping("ENTITY_PAINTING_PLACE", SoundEvents.class, "field_187694_dK");
addMapping("BLOCK_ANVIL_STEP", SoundEvents.class, "field_187695_h");
addMapping("ENTITY_HORSE_AMBIENT", SoundEvents.class, "field_187696_ck");
addMapping("ENTITY_PIG_AMBIENT", SoundEvents.class, "field_187697_dL");
addMapping("BLOCK_ANVIL_USE", SoundEvents.class, "field_187698_i");
addMapping("ENTITY_HORSE_ANGRY", SoundEvents.class, "field_187699_cl");
addMapping("ENTITY_PIG_DEATH", SoundEvents.class, "field_187700_dM");
addMapping("ENTITY_ARMORSTAND_BREAK", SoundEvents.class, "field_187701_j");
addMapping("ENTITY_HORSE_ARMOR", SoundEvents.class, "field_187702_cm");
addMapping("ENTITY_PIG_HURT", SoundEvents.class, "field_187703_dN");
addMapping("ENTITY_ARMORSTAND_FALL", SoundEvents.class, "field_187704_k");
addMapping("ENTITY_HORSE_BREATHE", SoundEvents.class, "field_187705_cn");
addMapping("ENTITY_PIG_SADDLE", SoundEvents.class, "field_187706_dO");
addMapping("ENTITY_ARMORSTAND_HIT", SoundEvents.class, "field_187707_l");
addMapping("ENTITY_HORSE_DEATH", SoundEvents.class, "field_187708_co");
addMapping("ENTITY_PIG_STEP", SoundEvents.class, "field_187709_dP");
addMapping("ENTITY_ARMORSTAND_PLACE", SoundEvents.class, "field_187710_m");
addMapping("ENTITY_HORSE_EAT", SoundEvents.class, "field_187711_cp");
addMapping("BLOCK_PISTON_CONTRACT", SoundEvents.class, "field_187712_dQ");
addMapping("ITEM_ARMOR_EQUIP_CHAIN", SoundEvents.class, "field_187713_n");
addMapping("ENTITY_HORSE_GALLOP", SoundEvents.class, "field_187714_cq");
addMapping("BLOCK_PISTON_EXTEND", SoundEvents.class, "field_187715_dR");
addMapping("ITEM_ARMOR_EQUIP_DIAMOND", SoundEvents.class, "field_187716_o");
addMapping("ENTITY_HORSE_HURT", SoundEvents.class, "field_187717_cr");
addMapping("ENTITY_PLAYER_ATTACK_CRIT", SoundEvents.class, "field_187718_dS");
addMapping("ITEM_ARMOR_EQUIP_GENERIC", SoundEvents.class, "field_187719_p");
addMapping("ENTITY_HORSE_JUMP", SoundEvents.class, "field_187720_cs");
addMapping("ENTITY_PLAYER_ATTACK_KNOCKBACK", SoundEvents.class, "field_187721_dT");
addMapping("ITEM_ARMOR_EQUIP_GOLD", SoundEvents.class, "field_187722_q");
addMapping("ENTITY_HORSE_LAND", SoundEvents.class, "field_187723_ct");
addMapping("ENTITY_PLAYER_ATTACK_NODAMAGE", SoundEvents.class, "field_187724_dU");
addMapping("ITEM_ARMOR_EQUIP_IRON", SoundEvents.class, "field_187725_r");
addMapping("ENTITY_HORSE_SADDLE", SoundEvents.class, "field_187726_cu");
addMapping("ENTITY_PLAYER_ATTACK_STRONG", SoundEvents.class, "field_187727_dV");
addMapping("ITEM_ARMOR_EQUIP_LEATHER", SoundEvents.class, "field_187728_s");
addMapping("ENTITY_HORSE_STEP", SoundEvents.class, "field_187729_cv");
addMapping("ENTITY_PLAYER_ATTACK_SWEEP", SoundEvents.class, "field_187730_dW");
addMapping("ENTITY_ARROW_HIT", SoundEvents.class, "field_187731_t");
addMapping("ENTITY_HORSE_STEP_WOOD", SoundEvents.class, "field_187732_cw");
addMapping("ENTITY_PLAYER_ATTACK_WEAK", SoundEvents.class, "field_187733_dX");
addMapping("ENTITY_ARROW_HIT_PLAYER", SoundEvents.class, "field_187734_u");
addMapping("ENTITY_HOSTILE_BIG_FALL", SoundEvents.class, "field_187735_cx");
addMapping("ENTITY_PLAYER_BIG_FALL", SoundEvents.class, "field_187736_dY");
addMapping("ENTITY_ARROW_SHOOT", SoundEvents.class, "field_187737_v");
addMapping("ENTITY_HOSTILE_DEATH", SoundEvents.class, "field_187738_cy");
addMapping("ENTITY_PLAYER_BURP", SoundEvents.class, "field_187739_dZ");
addMapping("ENTITY_BAT_AMBIENT", SoundEvents.class, "field_187740_w");
addMapping("ENTITY_HOSTILE_HURT", SoundEvents.class, "field_187741_cz");
addMapping("ENTITY_BAT_DEATH", SoundEvents.class, "field_187742_x");
addMapping("ENTITY_BAT_HURT", SoundEvents.class, "field_187743_y");
addMapping("ENTITY_BAT_TAKEOFF", SoundEvents.class, "field_187744_z");
addMapping("BLOCK_REDSTONE_TORCH_BURNOUT", SoundEvents.class, "field_187745_eA");
addMapping("ENTITY_LEASHKNOT_BREAK", SoundEvents.class, "field_187746_da");
addMapping("BLOCK_SAND_BREAK", SoundEvents.class, "field_187747_eB");
addMapping("ENTITY_LEASHKNOT_PLACE", SoundEvents.class, "field_187748_db");
addMapping("BLOCK_SAND_FALL", SoundEvents.class, "field_187749_eC");
addMapping("BLOCK_LEVER_CLICK", SoundEvents.class, "field_187750_dc");
addMapping("BLOCK_SAND_HIT", SoundEvents.class, "field_187751_eD");
addMapping("ENTITY_LIGHTNING_IMPACT", SoundEvents.class, "field_187752_dd");
addMapping("BLOCK_SAND_PLACE", SoundEvents.class, "field_187753_eE");
addMapping("ENTITY_LIGHTNING_THUNDER", SoundEvents.class, "field_187754_de");
addMapping("BLOCK_SAND_STEP", SoundEvents.class, "field_187755_eF");
addMapping("ENTITY_LINGERINGPOTION_THROW", SoundEvents.class, "field_187756_df");
addMapping("ENTITY_SHEEP_AMBIENT", SoundEvents.class, "field_187757_eG");
addMapping("ENTITY_MAGMACUBE_DEATH", SoundEvents.class, "field_187758_dg");
addMapping("ENTITY_SHEEP_DEATH", SoundEvents.class, "field_187759_eH");
addMapping("ENTITY_MAGMACUBE_HURT", SoundEvents.class, "field_187760_dh");
addMapping("ENTITY_SHEEP_HURT", SoundEvents.class, "field_187761_eI");
addMapping("ENTITY_MAGMACUBE_JUMP", SoundEvents.class, "field_187762_di");
addMapping("ENTITY_SHEEP_SHEAR", SoundEvents.class, "field_187763_eJ");
addMapping("ENTITY_MAGMACUBE_SQUISH", SoundEvents.class, "field_187764_dj");
addMapping("ENTITY_SHEEP_STEP", SoundEvents.class, "field_187765_eK");
addMapping("BLOCK_METAL_BREAK", SoundEvents.class, "field_187766_dk");
addMapping("ITEM_SHIELD_BLOCK", SoundEvents.class, "field_187767_eL");
addMapping("BLOCK_METAL_FALL", SoundEvents.class, "field_187768_dl");
addMapping("ITEM_SHIELD_BREAK", SoundEvents.class, "field_187769_eM");
addMapping("BLOCK_METAL_HIT", SoundEvents.class, "field_187770_dm");
addMapping("ITEM_SHOVEL_FLATTEN", SoundEvents.class, "field_187771_eN");
addMapping("BLOCK_METAL_PLACE", SoundEvents.class, "field_187772_dn");
addMapping("ENTITY_SHULKER_AMBIENT", SoundEvents.class, "field_187773_eO");
addMapping("BLOCK_METAL_PRESSPLATE_CLICK_OFF", SoundEvents.class, "field_187774_do");
addMapping("ENTITY_SHULKER_BULLET_HIT", SoundEvents.class, "field_187775_eP");
addMapping("BLOCK_METAL_PRESSPLATE_CLICK_ON", SoundEvents.class, "field_187776_dp");
addMapping("ENTITY_SHULKER_BULLET_HURT", SoundEvents.class, "field_187777_eQ");
addMapping("BLOCK_METAL_STEP", SoundEvents.class, "field_187778_dq");
addMapping("ENTITY_SHULKER_CLOSE", SoundEvents.class, "field_187779_eR");
addMapping("ENTITY_MINECART_INSIDE", SoundEvents.class, "field_187780_dr");
addMapping("ENTITY_SHULKER_DEATH", SoundEvents.class, "field_187781_eS");
addMapping("ENTITY_MINECART_RIDING", SoundEvents.class, "field_187782_ds");
addMapping("ENTITY_SHULKER_HURT", SoundEvents.class, "field_187783_eT");
addMapping("ENTITY_MOOSHROOM_SHEAR", SoundEvents.class, "field_187784_dt");
addMapping("ENTITY_SHULKER_HURT_CLOSED", SoundEvents.class, "field_187785_eU");
addMapping("ENTITY_MULE_AMBIENT", SoundEvents.class, "field_187786_du");
addMapping("ENTITY_SHULKER_OPEN", SoundEvents.class, "field_187787_eV");
addMapping("ENTITY_MULE_DEATH", SoundEvents.class, "field_187788_dv");
addMapping("ENTITY_SHULKER_SHOOT", SoundEvents.class, "field_187789_eW");
addMapping("ENTITY_MULE_HURT", SoundEvents.class, "field_187790_dw");
addMapping("ENTITY_SHULKER_TELEPORT", SoundEvents.class, "field_187791_eX");
addMapping("MUSIC_CREATIVE", SoundEvents.class, "field_187792_dx");
addMapping("ENTITY_SILVERFISH_AMBIENT", SoundEvents.class, "field_187793_eY");
addMapping("MUSIC_CREDITS", SoundEvents.class, "field_187794_dy");
addMapping("ENTITY_SILVERFISH_DEATH", SoundEvents.class, "field_187795_eZ");
addMapping("MUSIC_DRAGON", SoundEvents.class, "field_187796_dz");
addMapping("ENTITY_SNOWBALL_THROW", SoundEvents.class, "field_187797_fA");
addMapping("ENTITY_PLAYER_DEATH", SoundEvents.class, "field_187798_ea");
addMapping("ENTITY_SNOWMAN_AMBIENT", SoundEvents.class, "field_187799_fB");
addMapping("ENTITY_PLAYER_HURT", SoundEvents.class, "field_187800_eb");
addMapping("ENTITY_SNOWMAN_DEATH", SoundEvents.class, "field_187801_fC");
addMapping("ENTITY_PLAYER_LEVELUP", SoundEvents.class, "field_187802_ec");
addMapping("ENTITY_SNOWMAN_HURT", SoundEvents.class, "field_187803_fD");
addMapping("ENTITY_PLAYER_SMALL_FALL", SoundEvents.class, "field_187804_ed");
addMapping("ENTITY_SNOWMAN_SHOOT", SoundEvents.class, "field_187805_fE");
addMapping("ENTITY_PLAYER_SPLASH", SoundEvents.class, "field_187806_ee");
addMapping("BLOCK_SNOW_BREAK", SoundEvents.class, "field_187807_fF");
addMapping("ENTITY_PLAYER_SWIM", SoundEvents.class, "field_187808_ef");
addMapping("BLOCK_SNOW_FALL", SoundEvents.class, "field_187809_fG");
addMapping("BLOCK_PORTAL_AMBIENT", SoundEvents.class, "field_187810_eg");
addMapping("BLOCK_SNOW_HIT", SoundEvents.class, "field_187811_fH");
addMapping("BLOCK_PORTAL_TRAVEL", SoundEvents.class, "field_187812_eh");
addMapping("BLOCK_SNOW_PLACE", SoundEvents.class, "field_187813_fI");
addMapping("BLOCK_PORTAL_TRIGGER", SoundEvents.class, "field_187814_ei");
addMapping("BLOCK_SNOW_STEP", SoundEvents.class, "field_187815_fJ");
addMapping("ENTITY_RABBIT_AMBIENT", SoundEvents.class, "field_187816_ej");
addMapping("ENTITY_SPIDER_AMBIENT", SoundEvents.class, "field_187817_fK");
addMapping("ENTITY_RABBIT_ATTACK", SoundEvents.class, "field_187818_ek");
addMapping("ENTITY_SPIDER_DEATH", SoundEvents.class, "field_187819_fL");
addMapping("ENTITY_RABBIT_DEATH", SoundEvents.class, "field_187820_el");
addMapping("ENTITY_SPIDER_HURT", SoundEvents.class, "field_187821_fM");
addMapping("ENTITY_RABBIT_HURT", SoundEvents.class, "field_187822_em");
addMapping("ENTITY_SPIDER_STEP", SoundEvents.class, "field_187823_fN");
addMapping("ENTITY_RABBIT_JUMP", SoundEvents.class, "field_187824_en");
addMapping("ENTITY_SPLASH_POTION_BREAK", SoundEvents.class, "field_187825_fO");
addMapping("RECORD_11", SoundEvents.class, "field_187826_eo");
addMapping("ENTITY_SPLASH_POTION_THROW", SoundEvents.class, "field_187827_fP");
addMapping("RECORD_13", SoundEvents.class, "field_187828_ep");
addMapping("ENTITY_SQUID_AMBIENT", SoundEvents.class, "field_187829_fQ");
addMapping("RECORD_BLOCKS", SoundEvents.class, "field_187830_eq");
addMapping("ENTITY_SQUID_DEATH", SoundEvents.class, "field_187831_fR");
addMapping("RECORD_CAT", SoundEvents.class, "field_187832_er");
addMapping("ENTITY_SQUID_HURT", SoundEvents.class, "field_187833_fS");
addMapping("RECORD_CHIRP", SoundEvents.class, "field_187834_es");
addMapping("BLOCK_STONE_BREAK", SoundEvents.class, "field_187835_fT");
addMapping("RECORD_FAR", SoundEvents.class, "field_187836_et");
addMapping("BLOCK_STONE_BUTTON_CLICK_OFF", SoundEvents.class, "field_187837_fU");
addMapping("RECORD_MALL", SoundEvents.class, "field_187838_eu");
addMapping("BLOCK_STONE_BUTTON_CLICK_ON", SoundEvents.class, "field_187839_fV");
addMapping("RECORD_MELLOHI", SoundEvents.class, "field_187840_ev");
addMapping("BLOCK_STONE_FALL", SoundEvents.class, "field_187841_fW");
addMapping("RECORD_STAL", SoundEvents.class, "field_187842_ew");
addMapping("BLOCK_STONE_HIT", SoundEvents.class, "field_187843_fX");
addMapping("RECORD_STRAD", SoundEvents.class, "field_187844_ex");
addMapping("BLOCK_STONE_PLACE", SoundEvents.class, "field_187845_fY");
addMapping("RECORD_WAIT", SoundEvents.class, "field_187846_ey");
addMapping("BLOCK_STONE_PRESSPLATE_CLICK_OFF", SoundEvents.class, "field_187847_fZ");
addMapping("RECORD_WARD", SoundEvents.class, "field_187848_ez");
addMapping("ENTITY_WITHER_DEATH", SoundEvents.class, "field_187849_gA");
addMapping("ENTITY_SILVERFISH_HURT", SoundEvents.class, "field_187850_fa");
addMapping("ENTITY_WITHER_HURT", SoundEvents.class, "field_187851_gB");
addMapping("ENTITY_SILVERFISH_STEP", SoundEvents.class, "field_187852_fb");
addMapping("ENTITY_WITHER_SHOOT", SoundEvents.class, "field_187853_gC");
addMapping("ENTITY_SKELETON_AMBIENT", SoundEvents.class, "field_187854_fc");
addMapping("ENTITY_WITHER_SPAWN", SoundEvents.class, "field_187855_gD");
addMapping("ENTITY_SKELETON_DEATH", SoundEvents.class, "field_187856_fd");
addMapping("ENTITY_WOLF_AMBIENT", SoundEvents.class, "field_187857_gE");
addMapping("ENTITY_SKELETON_HORSE_AMBIENT", SoundEvents.class, "field_187858_fe");
addMapping("ENTITY_WOLF_DEATH", SoundEvents.class, "field_187859_gF");
addMapping("ENTITY_SKELETON_HORSE_DEATH", SoundEvents.class, "field_187860_ff");
addMapping("ENTITY_WOLF_GROWL", SoundEvents.class, "field_187861_gG");
addMapping("ENTITY_SKELETON_HORSE_HURT", SoundEvents.class, "field_187862_fg");
addMapping("ENTITY_WOLF_HURT", SoundEvents.class, "field_187863_gH");
addMapping("ENTITY_SKELETON_HURT", SoundEvents.class, "field_187864_fh");
addMapping("ENTITY_WOLF_PANT", SoundEvents.class, "field_187865_gI");
addMapping("ENTITY_SKELETON_SHOOT", SoundEvents.class, "field_187866_fi");
addMapping("ENTITY_WOLF_SHAKE", SoundEvents.class, "field_187867_gJ");
addMapping("ENTITY_SKELETON_STEP", SoundEvents.class, "field_187868_fj");
addMapping("ENTITY_WOLF_STEP", SoundEvents.class, "field_187869_gK");
addMapping("ENTITY_SLIME_ATTACK", SoundEvents.class, "field_187870_fk");
addMapping("ENTITY_WOLF_WHINE", SoundEvents.class, "field_187871_gL");
addMapping("BLOCK_SLIME_BREAK", SoundEvents.class, "field_187872_fl");
addMapping("BLOCK_WOODEN_DOOR_CLOSE", SoundEvents.class, "field_187873_gM");
addMapping("ENTITY_SLIME_DEATH", SoundEvents.class, "field_187874_fm");
addMapping("BLOCK_WOODEN_DOOR_OPEN", SoundEvents.class, "field_187875_gN");
addMapping("BLOCK_SLIME_FALL", SoundEvents.class, "field_187876_fn");
addMapping("BLOCK_WOODEN_TRAPDOOR_CLOSE", SoundEvents.class, "field_187877_gO");
addMapping("BLOCK_SLIME_HIT", SoundEvents.class, "field_187878_fo");
addMapping("BLOCK_WOODEN_TRAPDOOR_OPEN", SoundEvents.class, "field_187879_gP");
addMapping("ENTITY_SLIME_HURT", SoundEvents.class, "field_187880_fp");
addMapping("BLOCK_WOOD_BREAK", SoundEvents.class, "field_187881_gQ");
addMapping("ENTITY_SLIME_JUMP", SoundEvents.class, "field_187882_fq");
addMapping("BLOCK_WOOD_BUTTON_CLICK_OFF", SoundEvents.class, "field_187883_gR");
addMapping("BLOCK_SLIME_PLACE", SoundEvents.class, "field_187884_fr");
addMapping("BLOCK_WOOD_BUTTON_CLICK_ON", SoundEvents.class, "field_187885_gS");
addMapping("ENTITY_SLIME_SQUISH", SoundEvents.class, "field_187886_fs");
addMapping("BLOCK_WOOD_FALL", SoundEvents.class, "field_187887_gT");
addMapping("BLOCK_SLIME_STEP", SoundEvents.class, "field_187888_ft");
addMapping("BLOCK_WOOD_HIT", SoundEvents.class, "field_187889_gU");
addMapping("ENTITY_SMALL_MAGMACUBE_DEATH", SoundEvents.class, "field_187890_fu");
addMapping("BLOCK_WOOD_PLACE", SoundEvents.class, "field_187891_gV");
addMapping("ENTITY_SMALL_MAGMACUBE_HURT", SoundEvents.class, "field_187892_fv");
addMapping("BLOCK_WOOD_PRESSPLATE_CLICK_OFF", SoundEvents.class, "field_187893_gW");
addMapping("ENTITY_SMALL_MAGMACUBE_SQUISH", SoundEvents.class, "field_187894_fw");
addMapping("BLOCK_WOOD_PRESSPLATE_CLICK_ON", SoundEvents.class, "field_187895_gX");
addMapping("ENTITY_SMALL_SLIME_DEATH", SoundEvents.class, "field_187896_fx");
addMapping("BLOCK_WOOD_STEP", SoundEvents.class, "field_187897_gY");
addMapping("ENTITY_SMALL_SLIME_HURT", SoundEvents.class, "field_187898_fy");
addMapping("ENTITY_ZOMBIE_AMBIENT", SoundEvents.class, "field_187899_gZ");
addMapping("ENTITY_SMALL_SLIME_SQUISH", SoundEvents.class, "field_187900_fz");
addMapping("BLOCK_STONE_PRESSPLATE_CLICK_ON", SoundEvents.class, "field_187901_ga");
addMapping("BLOCK_STONE_STEP", SoundEvents.class, "field_187902_gb");
addMapping("ENCHANT_THORNS_HIT", SoundEvents.class, "field_187903_gc");
addMapping("ENTITY_TNT_PRIMED", SoundEvents.class, "field_187904_gd");
addMapping("BLOCK_TRIPWIRE_ATTACH", SoundEvents.class, "field_187905_ge");
addMapping("BLOCK_TRIPWIRE_CLICK_OFF", SoundEvents.class, "field_187906_gf");
addMapping("BLOCK_TRIPWIRE_CLICK_ON", SoundEvents.class, "field_187907_gg");
addMapping("BLOCK_TRIPWIRE_DETACH", SoundEvents.class, "field_187908_gh");
addMapping("UI_BUTTON_CLICK", SoundEvents.class, "field_187909_gi");
addMapping("ENTITY_VILLAGER_AMBIENT", SoundEvents.class, "field_187910_gj");
addMapping("ENTITY_VILLAGER_DEATH", SoundEvents.class, "field_187911_gk");
addMapping("ENTITY_VILLAGER_HURT", SoundEvents.class, "field_187912_gl");
addMapping("ENTITY_VILLAGER_NO", SoundEvents.class, "field_187913_gm");
addMapping("ENTITY_VILLAGER_TRADING", SoundEvents.class, "field_187914_gn");
addMapping("ENTITY_VILLAGER_YES", SoundEvents.class, "field_187915_go");
addMapping("BLOCK_WATERLILY_PLACE", SoundEvents.class, "field_187916_gp");
addMapping("BLOCK_WATER_AMBIENT", SoundEvents.class, "field_187917_gq");
addMapping("WEATHER_RAIN", SoundEvents.class, "field_187918_gr");
addMapping("WEATHER_RAIN_ABOVE", SoundEvents.class, "field_187919_gs");
addMapping("ENTITY_WITCH_AMBIENT", SoundEvents.class, "field_187920_gt");
addMapping("ENTITY_WITCH_DEATH", SoundEvents.class, "field_187921_gu");
addMapping("ENTITY_WITCH_DRINK", SoundEvents.class, "field_187922_gv");
addMapping("ENTITY_WITCH_HURT", SoundEvents.class, "field_187923_gw");
addMapping("ENTITY_WITCH_THROW", SoundEvents.class, "field_187924_gx");
addMapping("ENTITY_WITHER_AMBIENT", SoundEvents.class, "field_187925_gy");
addMapping("ENTITY_WITHER_BREAK_BLOCK", SoundEvents.class, "field_187926_gz");
addMapping("ENTITY_ZOMBIE_ATTACK_DOOR_WOOD", SoundEvents.class, "field_187927_ha");
addMapping("ENTITY_ZOMBIE_ATTACK_IRON_DOOR", SoundEvents.class, "field_187928_hb");
addMapping("ENTITY_ZOMBIE_BREAK_DOOR_WOOD", SoundEvents.class, "field_187929_hc");
addMapping("ENTITY_ZOMBIE_DEATH", SoundEvents.class, "field_187930_hd");
addMapping("ENTITY_ZOMBIE_HORSE_AMBIENT", SoundEvents.class, "field_187931_he");
addMapping("ENTITY_ZOMBIE_HORSE_DEATH", SoundEvents.class, "field_187932_hf");
addMapping("ENTITY_ZOMBIE_HORSE_HURT", SoundEvents.class, "field_187933_hg");
addMapping("ENTITY_ZOMBIE_HURT", SoundEvents.class, "field_187934_hh");
addMapping("ENTITY_ZOMBIE_PIG_AMBIENT", SoundEvents.class, "field_187935_hi");
addMapping("ENTITY_ZOMBIE_PIG_ANGRY", SoundEvents.class, "field_187936_hj");
addMapping("ENTITY_ZOMBIE_PIG_DEATH", SoundEvents.class, "field_187937_hk");
addMapping("ENTITY_ZOMBIE_PIG_HURT", SoundEvents.class, "field_187938_hl");
addMapping("ENTITY_ZOMBIE_STEP", SoundEvents.class, "field_187939_hm");
addMapping("ENTITY_ZOMBIE_VILLAGER_AMBIENT", SoundEvents.class, "field_187940_hn");
addMapping("ENTITY_ZOMBIE_VILLAGER_CONVERTED", SoundEvents.class, "field_187941_ho");
addMapping("ENTITY_ZOMBIE_VILLAGER_CURE", SoundEvents.class, "field_187942_hp");
addMapping("ENTITY_ZOMBIE_VILLAGER_DEATH", SoundEvents.class, "field_187943_hq");
addMapping("ENTITY_ZOMBIE_VILLAGER_HURT", SoundEvents.class, "field_187944_hr");
addMapping("ENTITY_ZOMBIE_INFECT", SoundEvents.class, "field_187945_hs");
addMapping("ENTITY_ZOMBIE_VILLAGER_STEP", SoundEvents.class, "field_187946_ht");
addMapping("ENTITY_GHAST_SCREAM", SoundEvents.class, "field_189105_bM");
addMapping("ENTITY_CAT_HISS", SoundEvents.class, "field_189106_R");
addMapping("BLOCK_NOTE_PLING", SoundEvents.class, "field_189107_dL");
addMapping("ENTITY_BAT_LOOP", SoundEvents.class, "field_189108_z");
addMapping("ENTITY_PLAYER_BREATH", SoundEvents.class, "field_189109_ed");
addMapping("ENTITY_SMALL_SLIME_JUMP", SoundEvents.class, "field_189110_fE");
addMapping("ENTITY_WOLF_HOWL", SoundEvents.class, "field_189111_gN");
addMapping("ITEM_ELYTRA_FLYING", SoundEvents.class, "field_189426_aK");
addMapping("BLOCK_ENCHANTMENT_TABLE_USE", SoundEvents.class, "field_190021_aL");
addMapping("ENTITY_HUSK_AMBIENT", SoundEvents.class, "field_190022_cI");
addMapping("ENTITY_HUSK_DEATH", SoundEvents.class, "field_190023_cJ");
addMapping("ENTITY_HUSK_HURT", SoundEvents.class, "field_190024_cK");
addMapping("ENTITY_HUSK_STEP", SoundEvents.class, "field_190025_cL");
addMapping("ENTITY_POLAR_BEAR_AMBIENT", SoundEvents.class, "field_190026_er");
addMapping("ENTITY_POLAR_BEAR_BABY_AMBIENT", SoundEvents.class, "field_190027_es");
addMapping("ENTITY_POLAR_BEAR_DEATH", SoundEvents.class, "field_190028_et");
addMapping("ENTITY_POLAR_BEAR_HURT", SoundEvents.class, "field_190029_eu");
addMapping("ENTITY_POLAR_BEAR_STEP", SoundEvents.class, "field_190030_ev");
addMapping("ENTITY_POLAR_BEAR_WARNING", SoundEvents.class, "field_190031_ew");
addMapping("ENTITY_STRAY_AMBIENT", SoundEvents.class, "field_190032_gu");
addMapping("ENTITY_STRAY_DEATH", SoundEvents.class, "field_190033_gv");
addMapping("ENTITY_STRAY_HURT", SoundEvents.class, "field_190034_gw");
addMapping("ENTITY_STRAY_STEP", SoundEvents.class, "field_190035_gx");
addMapping("ENTITY_WITHER_SKELETON_AMBIENT", SoundEvents.class, "field_190036_ha");
addMapping("ENTITY_WITHER_SKELETON_DEATH", SoundEvents.class, "field_190037_hb");
addMapping("ENTITY_WITHER_SKELETON_HURT", SoundEvents.class, "field_190038_hc");
addMapping("ENTITY_WITHER_SKELETON_STEP", SoundEvents.class, "field_190039_hd");
addMapping("ENTITY_ELDER_GUARDIAN_FLOP", SoundEvents.class, "field_191240_aK");
addMapping("ITEM_BOTTLE_EMPTY", SoundEvents.class, "field_191241_J");
addMapping("EVOCATION_FANGS_ATTACK", SoundEvents.class, "field_191242_bl");
addMapping("ENTITY_EVOCATION_ILLAGER_AMBIENT", SoundEvents.class, "field_191243_bm");
addMapping("EVOCATION_ILLAGER_CAST_SPELL", SoundEvents.class, "field_191244_bn");
addMapping("EVOCATION_ILLAGER_DEATH", SoundEvents.class, "field_191245_bo");
addMapping("ENTITY_EVOCATION_ILLAGER_HURT", SoundEvents.class, "field_191246_bp");
addMapping("EVOCATION_ILLAGER_PREPARE_ATTACK", SoundEvents.class, "field_191247_bq");
addMapping("EVOCATION_ILLAGER_PREPARE_SUMMON", SoundEvents.class, "field_191248_br");
addMapping("EVOCATION_ILLAGER_PREPARE_WOLOLO", SoundEvents.class, "field_191249_bs");
addMapping("ENTITY_LLAMA_ANGRY", SoundEvents.class, "field_191250_dA");
addMapping("ENTITY_LLAMA_CHEST", SoundEvents.class, "field_191251_dB");
addMapping("ENTITY_LLAMA_DEATH", SoundEvents.class, "field_191252_dC");
addMapping("ENTITY_LLAMA_EAT", SoundEvents.class, "field_191253_dD");
addMapping("ENTITY_LLAMA_HURT", SoundEvents.class, "field_191254_dE");
addMapping("ENTITY_LLAMA_SPIT", SoundEvents.class, "field_191255_dF");
addMapping("ENTITY_LLAMA_STEP", SoundEvents.class, "field_191256_dG");
addMapping("ENTITY_LLAMA_SWAG", SoundEvents.class, "field_191257_dH");
addMapping("ITEM_ARMOR_EQIIP_ELYTRA", SoundEvents.class, "field_191258_p");
addMapping("ENTITY_MULE_CHEST", SoundEvents.class, "field_191259_dX");
addMapping("ENTITY_LLAMA_AMBIENT", SoundEvents.class, "field_191260_dz");
addMapping("BLOCK_SHULKER_BOX_CLOSE", SoundEvents.class, "field_191261_fA");
addMapping("BLOCK_SHULKER_BOX_OPEN", SoundEvents.class, "field_191262_fB");
addMapping("ITEM_TOTEM_USE", SoundEvents.class, "field_191263_gW");
addMapping("ENTITY_VEX_AMBIENT", SoundEvents.class, "field_191264_hc");
addMapping("ENTITY_VEX_CHARGE", SoundEvents.class, "field_191265_hd");
addMapping("ENTITY_VEX_DEATH", SoundEvents.class, "field_191266_he");
addMapping("ENTITY_VEX_HURT", SoundEvents.class, "field_191267_hf");
addMapping("VINDICATION_ILLAGER_AMBIENT", SoundEvents.class, "field_191268_hm");
addMapping("VINDICATION_ILLAGER_DEATH", SoundEvents.class, "field_191269_hn");
addMapping("ENTITY_VINDICATION_ILLAGER_HURT", SoundEvents.class, "field_191270_ho");
addMapping("ENTITY_PARROT_AMBIENT", SoundEvents.class, "field_192792_ep");
addMapping("ENTITY_PARROT_DEATH", SoundEvents.class, "field_192793_eq");
addMapping("ENTITY_PARROT_HURT", SoundEvents.class, "field_192794_er");
addMapping("ENTITY_PARROT_STEP", SoundEvents.class, "field_192795_es");
addMapping("ENTITY_PARROT_FLY", SoundEvents.class, "field_192796_et");
addMapping("ENTITY_PARROT_EAT", SoundEvents.class, "field_192797_eu");
addMapping("ENTITY_ENDEREYE_DEATH", SoundEvents.class, "field_193777_bb");
addMapping("ENTITY_BOAT_PADDLE_LAND", SoundEvents.class, "field_193778_H");
addMapping("ENTITY_BOAT_PADDLE_WATER", SoundEvents.class, "field_193779_I");
addMapping("ENTITY_BOBBER_RETRIEVE", SoundEvents.class, "field_193780_J");
addMapping("BLOCK_END_PORTAL_FRAME_FILL", SoundEvents.class, "field_193781_bp");
addMapping("BLOCK_END_PORTAL_SPAWN", SoundEvents.class, "field_193782_bq");
addMapping("ENTITY_ILLUSION_ILLAGER_AMBIENT", SoundEvents.class, "field_193783_dc");
addMapping("ENTITY_ILLAGER_CAST_SPELL", SoundEvents.class, "field_193784_dd");
addMapping("BLOCK_NOTE_XYLOPHONE", SoundEvents.class, "field_193785_eE");
addMapping("ENTITY_ILLAGER_DEATH", SoundEvents.class, "field_193786_de");
addMapping("ENTITY_ILLUSION_ILLAGER_HURT", SoundEvents.class, "field_193787_df");
addMapping("ENTITY_ILLAGER_MIRROR_MOVE", SoundEvents.class, "field_193788_dg");
addMapping("ENTITY_ILLAGER_PREPARE_BLINDNESS", SoundEvents.class, "field_193789_dh");
addMapping("ENTITY_ILLAGER_PREPARE_MIRROR", SoundEvents.class, "field_193790_di");
addMapping("E_PARROT_IM_BLAZE", SoundEvents.class, "field_193791_eM");
addMapping("E_PARROT_IM_CREEPER", SoundEvents.class, "field_193792_eN");
addMapping("E_PARROT_IM_ELDER_GUARDIAN", SoundEvents.class, "field_193793_eO");
addMapping("E_PARROT_IM_ENDERDRAGON", SoundEvents.class, "field_193794_eP");
addMapping("E_PARROT_IM_ENDERMAN", SoundEvents.class, "field_193795_eQ");
addMapping("E_PARROT_IM_ENDERMITE", SoundEvents.class, "field_193796_eR");
addMapping("E_PARROT_IM_EVOCATION_ILLAGER", SoundEvents.class, "field_193797_eS");
addMapping("E_PARROT_IM_GHAST", SoundEvents.class, "field_193798_eT");
addMapping("E_PARROT_IM_HUSK", SoundEvents.class, "field_193799_eU");
addMapping("E_PARROT_IM_ILLUSION_ILLAGER", SoundEvents.class, "field_193800_eV");
addMapping("E_PARROT_IM_MAGMACUBE", SoundEvents.class, "field_193801_eW");
addMapping("E_PARROT_IM_POLAR_BEAR", SoundEvents.class, "field_193802_eX");
addMapping("E_PARROT_IM_SHULKER", SoundEvents.class, "field_193803_eY");
addMapping("E_PARROT_IM_SILVERFISH", SoundEvents.class, "field_193804_eZ");
addMapping("ENTITY_PLAYER_HURT_DROWN", SoundEvents.class, "field_193805_fG");
addMapping("ENTITY_PLAYER_HURT_ON_FIRE", SoundEvents.class, "field_193806_fH");
addMapping("BLOCK_NOTE_BELL", SoundEvents.class, "field_193807_ew");
addMapping("BLOCK_NOTE_CHIME", SoundEvents.class, "field_193808_ex");
addMapping("BLOCK_NOTE_FLUTE", SoundEvents.class, "field_193809_ey");
addMapping("BLOCK_NOTE_GUITAR", SoundEvents.class, "field_193810_ez");
addMapping("E_PARROT_IM_SKELETON", SoundEvents.class, "field_193811_fa");
addMapping("E_PARROT_IM_SLIME", SoundEvents.class, "field_193812_fb");
addMapping("E_PARROT_IM_SPIDER", SoundEvents.class, "field_193813_fc");
addMapping("E_PARROT_IM_STRAY", SoundEvents.class, "field_193814_fd");
addMapping("E_PARROT_IM_VEX", SoundEvents.class, "field_193815_fe");
addMapping("E_PARROT_IM_VINDICATION_ILLAGER", SoundEvents.class, "field_193816_ff");
addMapping("E_PARROT_IM_WITCH", SoundEvents.class, "field_193817_fg");
addMapping("E_PARROT_IM_WITHER", SoundEvents.class, "field_193818_fh");
addMapping("E_PARROT_IM_WITHER_SKELETON", SoundEvents.class, "field_193819_fi");
addMapping("E_PARROT_IM_WOLF", SoundEvents.class, "field_193820_fj");
addMapping("E_PARROT_IM_ZOMBIE", SoundEvents.class, "field_193821_fk");
addMapping("E_PARROT_IM_ZOMBIE_PIGMAN", SoundEvents.class, "field_193822_fl");
addMapping("E_PARROT_IM_ZOMBIE_VILLAGER", SoundEvents.class, "field_193823_fm");
addMapping("UI_TOAST_IN", SoundEvents.class, "field_194226_id");
addMapping("UI_TOAST_OUT", SoundEvents.class, "field_194227_ie");
addMapping("UI_TOAST_CHALLENGE_COMPLETE", SoundEvents.class, "field_194228_if");
addMapping("playerList", Container.class, "field_75148_f");
addMapping("listeners", Container.class, "field_75149_d");
addMapping("transactionID", Container.class, "field_75150_e");
addMapping("inventorySlots", Container.class, "field_75151_b");
addMapping("windowId", Container.class, "field_75152_c");
addMapping("inventoryItemStacks", Container.class, "field_75153_a");
addMapping("dragMode", Container.class, "field_94535_f");
addMapping("dragEvent", Container.class, "field_94536_g");
addMapping("dragSlots", Container.class, "field_94537_h");
addMapping("beaconSlot", ContainerBeacon.class, "field_82864_f");
addMapping("tileBeacon", ContainerBeacon.class, "field_82866_e");
addMapping("prevBrewTime", ContainerBrewingStand.class, "field_184998_g");
addMapping("prevFuel", ContainerBrewingStand.class, "field_184999_h");
addMapping("slot", ContainerBrewingStand.class, "field_75186_f");
addMapping("tileBrewingStand", ContainerBrewingStand.class, "field_75188_e");
addMapping("numRows", ContainerChest.class, "field_75154_f");
addMapping("lowerChestInventory", ContainerChest.class, "field_75155_e");
addMapping("dispenserInventory", ContainerDispenser.class, "field_178146_a");
addMapping("xpSeed", ContainerEnchantment.class, "field_178149_f");
addMapping("position", ContainerEnchantment.class, "field_178150_j");
addMapping("enchantClue", ContainerEnchantment.class, "field_185001_h");
addMapping("worldClue", ContainerEnchantment.class, "field_185002_i");
addMapping("enchantLevels", ContainerEnchantment.class, "field_75167_g");
addMapping("tableInventory", ContainerEnchantment.class, "field_75168_e");
addMapping("rand", ContainerEnchantment.class, "field_75169_l");
addMapping("worldPointer", ContainerEnchantment.class, "field_75172_h");
addMapping("cookTime", ContainerFurnace.class, "field_178152_f");
addMapping("totalCookTime", ContainerFurnace.class, "field_178153_g");
addMapping("furnaceBurnTime", ContainerFurnace.class, "field_178154_h");
addMapping("currentItemBurnTime", ContainerFurnace.class, "field_178155_i");
addMapping("tileFurnace", ContainerFurnace.class, "field_75158_e");
addMapping("hopperInventory", ContainerHopper.class, "field_94538_a");
addMapping("horse", ContainerHorseInventory.class, "field_111242_f");
addMapping("horseInventory", ContainerHorseInventory.class, "field_111243_a");
addMapping("merchantInventory", ContainerMerchant.class, "field_75176_f");
addMapping("world", ContainerMerchant.class, "field_75177_g");
addMapping("merchant", ContainerMerchant.class, "field_75178_e");
addMapping("VALID_EQUIPMENT_SLOTS", ContainerPlayer.class, "field_185003_h");
addMapping("craftResult", ContainerPlayer.class, "field_75179_f");
addMapping("isLocalWorld", ContainerPlayer.class, "field_75180_g");
addMapping("craftMatrix", ContainerPlayer.class, "field_75181_e");
addMapping("player", ContainerPlayer.class, "field_82862_h");
addMapping("LOGGER", ContainerRepair.class, "field_148326_f");
addMapping("selfPosition", ContainerRepair.class, "field_178156_j");
addMapping("outputSlot", ContainerRepair.class, "field_82852_f");
addMapping("inputSlots", ContainerRepair.class, "field_82853_g");
addMapping("maximumCost", ContainerRepair.class, "field_82854_e");
addMapping("player", ContainerRepair.class, "field_82855_n");
addMapping("materialCost", ContainerRepair.class, "field_82856_l");
addMapping("repairedItemName", ContainerRepair.class, "field_82857_m");
addMapping("world", ContainerRepair.class, "field_82860_h");
addMapping("inventory", ContainerShulkerBox.class, "field_190899_a");
addMapping("pos", ContainerWorkbench.class, "field_178145_h");
addMapping("player", ContainerWorkbench.class, "field_192390_i");
addMapping("craftResult", ContainerWorkbench.class, "field_75160_f");
addMapping("world", ContainerWorkbench.class, "field_75161_g");
addMapping("craftMatrix", ContainerWorkbench.class, "field_75162_e");
addMapping("slotType", EntityEquipmentSlot.class, "field_188462_g");
addMapping("index", EntityEquipmentSlot.class, "field_188463_h");
addMapping("slotIndex", EntityEquipmentSlot.class, "field_188464_i");
addMapping("name", EntityEquipmentSlot.class, "field_188465_j");
addMapping("changeListeners", InventoryBasic.class, "field_70480_d");
addMapping("slotsCount", InventoryBasic.class, "field_70481_b");
addMapping("inventoryContents", InventoryBasic.class, "field_70482_c");
addMapping("inventoryTitle", InventoryBasic.class, "field_70483_a");
addMapping("hasCustomName", InventoryBasic.class, "field_94051_e");
addMapping("recipeUsed", InventoryCraftResult.class, "field_193057_b");
addMapping("stackResult", InventoryCraftResult.class, "field_70467_a");
addMapping("inventoryHeight", InventoryCrafting.class, "field_174924_c");
addMapping("inventoryWidth", InventoryCrafting.class, "field_70464_b");
addMapping("eventHandler", InventoryCrafting.class, "field_70465_c");
addMapping("stackList", InventoryCrafting.class, "field_70466_a");
addMapping("associatedChest", InventoryEnderChest.class, "field_70488_a");
addMapping("RANDOM", InventoryHelper.class, "field_180177_a");
addMapping("upperChest", InventoryLargeChest.class, "field_70477_b");
addMapping("lowerChest", InventoryLargeChest.class, "field_70478_c");
addMapping("name", InventoryLargeChest.class, "field_70479_a");
addMapping("currentRecipe", InventoryMerchant.class, "field_70472_d");
addMapping("currentRecipeIndex", InventoryMerchant.class, "field_70473_e");
addMapping("slots", InventoryMerchant.class, "field_70474_b");
addMapping("player", InventoryMerchant.class, "field_70475_c");
addMapping("merchant", InventoryMerchant.class, "field_70476_a");
addMapping("yPos", Slot.class, "field_75221_f");
addMapping("slotNumber", Slot.class, "field_75222_d");
addMapping("xPos", Slot.class, "field_75223_e");
addMapping("inventory", Slot.class, "field_75224_c");
addMapping("slotIndex", Slot.class, "field_75225_a");
addMapping("amountCrafted", SlotCrafting.class, "field_75237_g");
addMapping("player", SlotCrafting.class, "field_75238_b");
addMapping("craftMatrix", SlotCrafting.class, "field_75239_a");
addMapping("removeCount", SlotFurnaceOutput.class, "field_75228_b");
addMapping("player", SlotFurnaceOutput.class, "field_75229_a");
addMapping("removeCount", SlotMerchantResult.class, "field_75231_g");
addMapping("player", SlotMerchantResult.class, "field_75232_b");
addMapping("merchantInventory", SlotMerchantResult.class, "field_75233_a");
addMapping("merchant", SlotMerchantResult.class, "field_75234_h");
addMapping("unlocalizedName", EnumDyeColor.class, "field_176785_v");
addMapping("name", EnumDyeColor.class, "field_176786_u");
addMapping("dyeDamage", EnumDyeColor.class, "field_176787_t");
addMapping("meta", EnumDyeColor.class, "field_176788_s");
addMapping("DYE_DMG_LOOKUP", EnumDyeColor.class, "field_176789_r");
addMapping("META_LOOKUP", EnumDyeColor.class, "field_176790_q");
addMapping("chatColor", EnumDyeColor.class, "field_176793_x");
addMapping("colorValue", EnumDyeColor.class, "field_193351_w");
addMapping("colorComponentValues", EnumDyeColor.class, "field_193352_x");
addMapping("rarityName", EnumRarity.class, "field_77934_f");
addMapping("rarityColor", EnumRarity.class, "field_77937_e");
addMapping("ATTACK_DAMAGE_MODIFIER", Item.class, "field_111210_e");
addMapping("REGISTRY", Item.class, "field_150901_e");
addMapping("BLOCK_TO_ITEM", Item.class, "field_179220_a");
addMapping("DAMAGED_GETTER", Item.class, "field_185046_b");
addMapping("DAMAGE_GETTER", Item.class, "field_185047_c");
addMapping("LEFTHANDED_GETTER", Item.class, "field_185048_d");
addMapping("COOLDOWN_GETTER", Item.class, "field_185049_e");
addMapping("ATTACK_SPEED_MODIFIER", Item.class, "field_185050_h");
addMapping("properties", Item.class, "field_185051_m");
addMapping("itemRand", Item.class, "field_77697_d");
addMapping("maxDamage", Item.class, "field_77699_b");
addMapping("containerItem", Item.class, "field_77700_c");
addMapping("tabToDisplayOn", Item.class, "field_77701_a");
addMapping("unlocalizedName", Item.class, "field_77774_bZ");
addMapping("maxStackSize", Item.class, "field_77777_bU");
addMapping("hasSubtypes", Item.class, "field_77787_bX");
addMapping("bFull3D", Item.class, "field_77789_bW");
addMapping("block", ItemAir.class, "field_190904_a");
addMapping("ARMOR_MODIFIERS", ItemArmor.class, "field_185084_n");
addMapping("toughness", ItemArmor.class, "field_189415_e");
addMapping("material", ItemArmor.class, "field_77878_bZ");
addMapping("damageReduceAmount", ItemArmor.class, "field_77879_b");
addMapping("renderIndex", ItemArmor.class, "field_77880_c");
addMapping("armorType", ItemArmor.class, "field_77881_a");
addMapping("MAX_DAMAGE_ARRAY", ItemArmor.class, "field_77882_bY");
addMapping("EMPTY_SLOT_NAMES", ItemArmor.class, "field_94603_a");
addMapping("DISPENSER_BEHAVIOR", ItemArmor.class, "field_96605_cw");
addMapping("EFFECTIVE_ON", ItemAxe.class, "field_150917_c");
addMapping("ATTACK_DAMAGES", ItemAxe.class, "field_185066_m");
addMapping("ATTACK_SPEEDS", ItemAxe.class, "field_185067_n");
addMapping("block", ItemBlock.class, "field_150939_a");
addMapping("block", ItemBlockSpecial.class, "field_150935_a");
addMapping("type", ItemBoat.class, "field_185057_a");
addMapping("containedBlock", ItemBucket.class, "field_77876_a");
addMapping("subtypeNames", ItemColored.class, "field_150945_c");
addMapping("block", ItemDoor.class, "field_179236_a");
addMapping("DYE_COLORS", ItemDye.class, "field_150922_c");
addMapping("cooked", ItemFishFood.class, "field_150907_b");
addMapping("potionId", ItemFood.class, "field_77851_ca");
addMapping("alwaysEdible", ItemFood.class, "field_77852_bZ");
addMapping("healAmount", ItemFood.class, "field_77853_b");
addMapping("saturationModifier", ItemFood.class, "field_77854_c");
addMapping("itemUseDuration", ItemFood.class, "field_77855_a");
addMapping("isWolfsFavoriteMeat", ItemFood.class, "field_77856_bY");
addMapping("potionEffectProbability", ItemFood.class, "field_77858_cd");
addMapping("hangingEntityClass", ItemHangingEntity.class, "field_82811_a");
addMapping("speed", ItemHoe.class, "field_185072_b");
addMapping("toolMaterial", ItemHoe.class, "field_77843_a");
addMapping("LOGGER", ItemKnowledgeBook.class, "field_194126_a");
addMapping("leaves", ItemLeaves.class, "field_150940_b");
addMapping("minecartType", ItemMinecart.class, "field_77841_a");
addMapping("MINECART_DISPENSER_BEHAVIOR", ItemMinecart.class, "field_96602_b");
addMapping("unused", ItemMultiTexture.class, "field_179227_b");
addMapping("nameFunction", ItemMultiTexture.class, "field_179228_c");
addMapping("EFFECTIVE_ON", ItemPickaxe.class, "field_150915_c");
addMapping("RECORDS", ItemRecord.class, "field_150928_b");
addMapping("sound", ItemRecord.class, "field_185076_b");
addMapping("displayName", ItemRecord.class, "field_185077_c");
addMapping("crops", ItemSeedFood.class, "field_150908_b");
addMapping("soilId", ItemSeedFood.class, "field_82809_c");
addMapping("crops", ItemSeeds.class, "field_150925_a");
addMapping("soilBlockID", ItemSeeds.class, "field_77838_b");
addMapping("SKULL_TYPES", ItemSkull.class, "field_82807_a");
addMapping("singleSlab", ItemSlab.class, "field_150949_c");
addMapping("doubleSlab", ItemSlab.class, "field_179226_c");
addMapping("EFFECTIVE_ON", ItemSpade.class, "field_150916_c");
addMapping("DECIMALFORMAT", ItemStack.class, "field_111284_a");
addMapping("item", ItemStack.class, "field_151002_e");
addMapping("canPlaceOnCacheBlock", ItemStack.class, "field_179550_j");
addMapping("canPlaceOnCacheResult", ItemStack.class, "field_179551_k");
addMapping("canDestroyCacheBlock", ItemStack.class, "field_179552_h");
addMapping("canDestroyCacheResult", ItemStack.class, "field_179553_i");
addMapping("EMPTY", ItemStack.class, "field_190927_a");
addMapping("isEmpty", ItemStack.class, "field_190928_g");
addMapping("stackTagCompound", ItemStack.class, "field_77990_d");
addMapping("itemDamage", ItemStack.class, "field_77991_e");
addMapping("animationsToGo", ItemStack.class, "field_77992_b");
addMapping("stackSize", ItemStack.class, "field_77994_a");
addMapping("itemFrame", ItemStack.class, "field_82843_f");
addMapping("material", ItemSword.class, "field_150933_b");
addMapping("attackDamage", ItemSword.class, "field_150934_a");
addMapping("effectiveBlocks", ItemTool.class, "field_150914_c");
addMapping("attackSpeed", ItemTool.class, "field_185065_c");
addMapping("toolMaterial", ItemTool.class, "field_77862_b");
addMapping("efficiency", ItemTool.class, "field_77864_a");
addMapping("attackDamage", ItemTool.class, "field_77865_bY");
addMapping("LOGGER", CraftingManager.class, "field_192422_a");
addMapping("REGISTRY", CraftingManager.class, "field_193380_a");
addMapping("nextAvailableId", CraftingManager.class, "field_193381_c");
addMapping("smeltingList", FurnaceRecipes.class, "field_77604_b");
addMapping("experienceList", FurnaceRecipes.class, "field_77605_c");
addMapping("SMELTING_BASE", FurnaceRecipes.class, "field_77606_a");
addMapping("EMPTY", Ingredient.class, "field_193370_a");
addMapping("matchingStacks", Ingredient.class, "field_193371_b");
addMapping("matchingStacksPacked", Ingredient.class, "field_194140_c");
addMapping("resultItem", RecipeFireworks.class, "field_92102_a");
addMapping("group", ShapedRecipes.class, "field_194137_e");
addMapping("recipeItems", ShapedRecipes.class, "field_77574_d");
addMapping("recipeOutput", ShapedRecipes.class, "field_77575_e");
addMapping("recipeWidth", ShapedRecipes.class, "field_77576_b");
addMapping("recipeHeight", ShapedRecipes.class, "field_77577_c");
addMapping("group", ShapelessRecipes.class, "field_194138_c");
addMapping("recipeItems", ShapelessRecipes.class, "field_77579_b");
addMapping("recipeOutput", ShapelessRecipes.class, "field_77580_a");
addMapping("DOUBLE_PATTERN_NOSUFFIX", JsonToNBT.class, "field_193615_a");
addMapping("DOUBLE_PATTERN", JsonToNBT.class, "field_193616_b");
addMapping("FLOAT_PATTERN", JsonToNBT.class, "field_193617_c");
addMapping("BYTE_PATTERN", JsonToNBT.class, "field_193618_d");
addMapping("LONG_PATTERN", JsonToNBT.class, "field_193619_e");
addMapping("SHORT_PATTERN", JsonToNBT.class, "field_193620_f");
addMapping("INT_PATTERN", JsonToNBT.class, "field_193621_g");
addMapping("string", JsonToNBT.class, "field_193622_h");
addMapping("cursor", JsonToNBT.class, "field_193623_i");
addMapping("NBT_TYPES", NBTBase.class, "field_82578_b");
addMapping("INFINITE", NBTSizeTracker.class, "field_152451_a");
addMapping("max", NBTSizeTracker.class, "field_152452_b");
addMapping("read", NBTSizeTracker.class, "field_152453_c");
addMapping("data", NBTTagByte.class, "field_74756_a");
addMapping("data", NBTTagByteArray.class, "field_74754_a");
addMapping("LOGGER", NBTTagCompound.class, "field_191551_b");
addMapping("SIMPLE_VALUE", NBTTagCompound.class, "field_193583_c");
addMapping("tagMap", NBTTagCompound.class, "field_74784_a");
addMapping("data", NBTTagDouble.class, "field_74755_a");
addMapping("data", NBTTagFloat.class, "field_74750_a");
addMapping("data", NBTTagInt.class, "field_74748_a");
addMapping("intArray", NBTTagIntArray.class, "field_74749_a");
addMapping("LOGGER", NBTTagList.class, "field_179239_b");
addMapping("tagType", NBTTagList.class, "field_74746_b");
addMapping("tagList", NBTTagList.class, "field_74747_a");
addMapping("data", NBTTagLong.class, "field_74753_a");
addMapping("data", NBTTagLongArray.class, "field_193587_b");
addMapping("data", NBTTagShort.class, "field_74752_a");
addMapping("data", NBTTagString.class, "field_74751_a");
addMapping("LOGGER", NBTUtil.class, "field_193591_a");
addMapping("STATES_BY_CLASS", EnumConnectionState.class, "field_150761_f");
addMapping("id", EnumConnectionState.class, "field_150762_g");
addMapping("STATES_BY_ID", EnumConnectionState.class, "field_150764_e");
addMapping("directionMaps", EnumConnectionState.class, "field_179247_h");
addMapping("networkSystem", LegacyPingHandler.class, "field_151257_b");
addMapping("LOGGER", LegacyPingHandler.class, "field_151258_a");
addMapping("floatingTickCount", NetHandlerPlayServer.class, "field_147365_f");
addMapping("serverController", NetHandlerPlayServer.class, "field_147367_d");
addMapping("networkTickCount", NetHandlerPlayServer.class, "field_147368_e");
addMapping("player", NetHandlerPlayServer.class, "field_147369_b");
addMapping("LOGGER", NetHandlerPlayServer.class, "field_147370_c");
addMapping("netManager", NetHandlerPlayServer.class, "field_147371_a");
addMapping("pendingTransactions", NetHandlerPlayServer.class, "field_147372_n");
addMapping("chatSpamThresholdCount", NetHandlerPlayServer.class, "field_147374_l");
addMapping("itemDropThreshold", NetHandlerPlayServer.class, "field_147375_m");
addMapping("lastSentPingPacket", NetHandlerPlayServer.class, "field_147377_k");
addMapping("keepAliveId", NetHandlerPlayServer.class, "field_147378_h");
addMapping("lastPingTime", NetHandlerPlayServer.class, "field_147379_i");
addMapping("lastPositionUpdate", NetHandlerPlayServer.class, "field_184343_A");
addMapping("floating", NetHandlerPlayServer.class, "field_184344_B");
addMapping("vehicleFloating", NetHandlerPlayServer.class, "field_184345_D");
addMapping("vehicleFloatingTickCount", NetHandlerPlayServer.class, "field_184346_E");
addMapping("movePacketCounter", NetHandlerPlayServer.class, "field_184347_F");
addMapping("lastMovePacketCounter", NetHandlerPlayServer.class, "field_184348_G");
addMapping("firstGoodX", NetHandlerPlayServer.class, "field_184349_l");
addMapping("firstGoodY", NetHandlerPlayServer.class, "field_184350_m");
addMapping("firstGoodZ", NetHandlerPlayServer.class, "field_184351_n");
addMapping("lastGoodX", NetHandlerPlayServer.class, "field_184352_o");
addMapping("lastGoodY", NetHandlerPlayServer.class, "field_184353_p");
addMapping("lastGoodZ", NetHandlerPlayServer.class, "field_184354_q");
addMapping("lowestRiddenEnt", NetHandlerPlayServer.class, "field_184355_r");
addMapping("lowestRiddenX", NetHandlerPlayServer.class, "field_184356_s");
addMapping("lowestRiddenY", NetHandlerPlayServer.class, "field_184357_t");
addMapping("lowestRiddenZ", NetHandlerPlayServer.class, "field_184358_u");
addMapping("lowestRiddenX1", NetHandlerPlayServer.class, "field_184359_v");
addMapping("lowestRiddenY1", NetHandlerPlayServer.class, "field_184360_w");
addMapping("lowestRiddenZ1", NetHandlerPlayServer.class, "field_184361_x");
addMapping("targetPos", NetHandlerPlayServer.class, "field_184362_y");
addMapping("teleportId", NetHandlerPlayServer.class, "field_184363_z");
addMapping("threshold", NettyCompressionDecoder.class, "field_179304_b");
addMapping("inflater", NettyCompressionDecoder.class, "field_179305_a");
addMapping("deflater", NettyCompressionEncoder.class, "field_179300_b");
addMapping("threshold", NettyCompressionEncoder.class, "field_179301_c");
addMapping("buffer", NettyCompressionEncoder.class, "field_179302_a");
addMapping("decryptionCodec", NettyEncryptingDecoder.class, "field_150509_a");
addMapping("encryptionCodec", NettyEncryptingEncoder.class, "field_150750_a");
addMapping("inputBuffer", NettyEncryptionTranslator.class, "field_150505_b");
addMapping("outputBuffer", NettyEncryptionTranslator.class, "field_150506_c");
addMapping("cipher", NettyEncryptionTranslator.class, "field_150507_a");
addMapping("RECEIVED_PACKET_MARKER", NettyPacketDecoder.class, "field_150799_b");
addMapping("LOGGER", NettyPacketDecoder.class, "field_150800_a");
addMapping("direction", NettyPacketDecoder.class, "field_152499_c");
addMapping("RECEIVED_PACKET_MARKER", NettyPacketEncoder.class, "field_150797_b");
addMapping("LOGGER", NettyPacketEncoder.class, "field_150798_a");
addMapping("direction", NettyPacketEncoder.class, "field_152500_c");
addMapping("LOGGER", NetworkManager.class, "field_150735_g");
addMapping("NETWORK_PACKETS_MARKER", NetworkManager.class, "field_150738_b");
addMapping("PROTOCOL_ATTRIBUTE_KEY", NetworkManager.class, "field_150739_c");
addMapping("NETWORK_MARKER", NetworkManager.class, "field_150740_a");
addMapping("terminationReason", NetworkManager.class, "field_150742_o");
addMapping("socketAddress", NetworkManager.class, "field_150743_l");
addMapping("packetListener", NetworkManager.class, "field_150744_m");
addMapping("outboundPacketsQueue", NetworkManager.class, "field_150745_j");
addMapping("channel", NetworkManager.class, "field_150746_k");
addMapping("isEncrypted", NetworkManager.class, "field_152463_r");
addMapping("direction", NetworkManager.class, "field_179294_g");
addMapping("CLIENT_NIO_EVENTLOOP", NetworkManager.class, "field_179295_d");
addMapping("CLIENT_LOCAL_EVENTLOOP", NetworkManager.class, "field_179296_e");
addMapping("disconnected", NetworkManager.class, "field_179297_n");
addMapping("CLIENT_EPOLL_EVENTLOOP", NetworkManager.class, "field_181125_e");
addMapping("readWriteLock", NetworkManager.class, "field_181680_j");
addMapping("networkManagers", NetworkSystem.class, "field_151272_f");
addMapping("mcServer", NetworkSystem.class, "field_151273_d");
addMapping("endpoints", NetworkSystem.class, "field_151274_e");
addMapping("LOGGER", NetworkSystem.class, "field_151275_b");
addMapping("SERVER_NIO_EVENTLOOP", NetworkSystem.class, "field_151276_c");
addMapping("isAlive", NetworkSystem.class, "field_151277_a");
addMapping("SERVER_LOCAL_EVENTLOOP", NetworkSystem.class, "field_180232_b");
addMapping("SERVER_EPOLL_EVENTLOOP", NetworkSystem.class, "field_181141_b");
addMapping("buf", PacketBuffer.class, "field_150794_a");
addMapping("favicon", ServerStatusResponse.class, "field_151323_d");
addMapping("players", ServerStatusResponse.class, "field_151324_b");
addMapping("version", ServerStatusResponse.class, "field_151325_c");
addMapping("description", ServerStatusResponse.class, "field_151326_a");
addMapping("INSTANCE", ThreadQuickExitException.class, "field_179886_a");
addMapping("id", DataParameter.class, "field_187157_a");
addMapping("serializer", DataParameter.class, "field_187158_b");
addMapping("BYTE", DataSerializers.class, "field_187191_a");
addMapping("VARINT", DataSerializers.class, "field_187192_b");
addMapping("FLOAT", DataSerializers.class, "field_187193_c");
addMapping("STRING", DataSerializers.class, "field_187194_d");
addMapping("TEXT_COMPONENT", DataSerializers.class, "field_187195_e");
addMapping("ITEM_STACK", DataSerializers.class, "field_187196_f");
addMapping("OPTIONAL_BLOCK_STATE", DataSerializers.class, "field_187197_g");
addMapping("BOOLEAN", DataSerializers.class, "field_187198_h");
addMapping("ROTATIONS", DataSerializers.class, "field_187199_i");
addMapping("BLOCK_POS", DataSerializers.class, "field_187200_j");
addMapping("OPTIONAL_BLOCK_POS", DataSerializers.class, "field_187201_k");
addMapping("FACING", DataSerializers.class, "field_187202_l");
addMapping("OPTIONAL_UNIQUE_ID", DataSerializers.class, "field_187203_m");
addMapping("REGISTRY", DataSerializers.class, "field_187204_n");
addMapping("COMPOUND_TAG", DataSerializers.class, "field_192734_n");
addMapping("NEXT_ID_MAP", EntityDataManager.class, "field_187232_a");
addMapping("entity", EntityDataManager.class, "field_187233_b");
addMapping("entries", EntityDataManager.class, "field_187234_c");
addMapping("lock", EntityDataManager.class, "field_187235_d");
addMapping("empty", EntityDataManager.class, "field_187236_e");
addMapping("dirty", EntityDataManager.class, "field_187237_f");
addMapping("LOGGER", EntityDataManager.class, "field_190303_a");
addMapping("requestedState", C00Handshake.class, "field_149597_d");
addMapping("ip", C00Handshake.class, "field_149598_b");
addMapping("port", C00Handshake.class, "field_149599_c");
addMapping("protocolVersion", C00Handshake.class, "field_149600_a");
addMapping("verifyTokenEncrypted", CPacketEncryptionResponse.class, "field_149301_b");
addMapping("secretKeyEncrypted", CPacketEncryptionResponse.class, "field_149302_a");
addMapping("profile", CPacketLoginStart.class, "field_149305_a");
addMapping("reason", SPacketDisconnect.class, "field_149605_a");
addMapping("compressionThreshold", SPacketEnableCompression.class, "field_179733_a");
addMapping("publicKey", SPacketEncryptionRequest.class, "field_149610_b");
addMapping("verifyToken", SPacketEncryptionRequest.class, "field_149611_c");
addMapping("hashedServerId", SPacketEncryptionRequest.class, "field_149612_a");
addMapping("profile", SPacketLoginSuccess.class, "field_149602_a");
addMapping("hand", CPacketAnimation.class, "field_187019_a");
addMapping("message", CPacketChatMessage.class, "field_149440_a");
addMapping("mode", CPacketClickWindow.class, "field_149549_f");
addMapping("actionNumber", CPacketClickWindow.class, "field_149550_d");
addMapping("clickedItem", CPacketClickWindow.class, "field_149551_e");
addMapping("slotId", CPacketClickWindow.class, "field_149552_b");
addMapping("packedClickData", CPacketClickWindow.class, "field_149553_c");
addMapping("windowId", CPacketClickWindow.class, "field_149554_a");
addMapping("enableColors", CPacketClientSettings.class, "field_149526_d");
addMapping("view", CPacketClientSettings.class, "field_149528_b");
addMapping("chatVisibility", CPacketClientSettings.class, "field_149529_c");
addMapping("lang", CPacketClientSettings.class, "field_149530_a");
addMapping("modelPartFlags", CPacketClientSettings.class, "field_179711_e");
addMapping("mainHand", CPacketClientSettings.class, "field_186992_f");
addMapping("status", CPacketClientStatus.class, "field_149437_a");
addMapping("windowId", CPacketCloseWindow.class, "field_149556_a");
addMapping("telportId", CPacketConfirmTeleport.class, "field_186988_a");
addMapping("uid", CPacketConfirmTransaction.class, "field_149534_b");
addMapping("accepted", CPacketConfirmTransaction.class, "field_149535_c");
addMapping("windowId", CPacketConfirmTransaction.class, "field_149536_a");
addMapping("stack", CPacketCreativeInventoryAction.class, "field_149628_b");
addMapping("slotId", CPacketCreativeInventoryAction.class, "field_149629_a");
addMapping("data", CPacketCustomPayload.class, "field_149561_c");
addMapping("channel", CPacketCustomPayload.class, "field_149562_a");
addMapping("button", CPacketEnchantItem.class, "field_149540_b");
addMapping("windowId", CPacketEnchantItem.class, "field_149541_a");
addMapping("action", CPacketEntityAction.class, "field_149515_b");
addMapping("auxData", CPacketEntityAction.class, "field_149516_c");
addMapping("entityID", CPacketEntityAction.class, "field_149517_a");
addMapping("slotId", CPacketHeldItemChange.class, "field_149615_a");
addMapping("sneaking", CPacketInput.class, "field_149621_d");
addMapping("jumping", CPacketInput.class, "field_149623_c");
addMapping("strafeSpeed", CPacketInput.class, "field_149624_a");
addMapping("forwardSpeed", CPacketInput.class, "field_192621_b");
addMapping("key", CPacketKeepAlive.class, "field_149461_a");
addMapping("pitch", CPacketPlayer.class, "field_149473_f");
addMapping("onGround", CPacketPlayer.class, "field_149474_g");
addMapping("yaw", CPacketPlayer.class, "field_149476_e");
addMapping("y", CPacketPlayer.class, "field_149477_b");
addMapping("z", CPacketPlayer.class, "field_149478_c");
addMapping("x", CPacketPlayer.class, "field_149479_a");
addMapping("moving", CPacketPlayer.class, "field_149480_h");
addMapping("rotating", CPacketPlayer.class, "field_149481_i");
addMapping("walkSpeed", CPacketPlayerAbilities.class, "field_149495_f");
addMapping("creativeMode", CPacketPlayerAbilities.class, "field_149496_d");
addMapping("flySpeed", CPacketPlayerAbilities.class, "field_149497_e");
addMapping("flying", CPacketPlayerAbilities.class, "field_149498_b");
addMapping("allowFlying", CPacketPlayerAbilities.class, "field_149499_c");
addMapping("invulnerable", CPacketPlayerAbilities.class, "field_149500_a");
addMapping("action", CPacketPlayerDigging.class, "field_149508_e");
addMapping("facing", CPacketPlayerDigging.class, "field_179716_b");
addMapping("position", CPacketPlayerDigging.class, "field_179717_a");
addMapping("hand", CPacketPlayerTryUseItem.class, "field_187029_a");
addMapping("facingX", CPacketPlayerTryUseItemOnBlock.class, "field_149577_f");
addMapping("facingY", CPacketPlayerTryUseItemOnBlock.class, "field_149578_g");
addMapping("placedBlockDirection", CPacketPlayerTryUseItemOnBlock.class, "field_149579_d");
addMapping("facingZ", CPacketPlayerTryUseItemOnBlock.class, "field_149584_h");
addMapping("position", CPacketPlayerTryUseItemOnBlock.class, "field_179725_b");
addMapping("hand", CPacketPlayerTryUseItemOnBlock.class, "field_187027_c");
addMapping("isGuiOpen", CPacketRecipeInfo.class, "field_192631_e");
addMapping("filteringCraftable", CPacketRecipeInfo.class, "field_192632_f");
addMapping("recipe", CPacketRecipeInfo.class, "field_193649_d");
addMapping("purpose", CPacketRecipeInfo.class, "field_194157_a");
addMapping("containerId", CPacketRecipePlacement.class, "field_192616_a");
addMapping("uid", CPacketRecipePlacement.class, "field_192617_b");
addMapping("moveItemsFromGrid", CPacketRecipePlacement.class, "field_192618_c");
addMapping("moveItemsToGrid", CPacketRecipePlacement.class, "field_192619_d");
addMapping("action", CPacketResourcePackStatus.class, "field_179719_b");
addMapping("action", CPacketSeenAdvancements.class, "field_194166_a");
addMapping("tab", CPacketSeenAdvancements.class, "field_194167_b");
addMapping("id", CPacketSpectate.class, "field_179729_a");
addMapping("left", CPacketSteerBoat.class, "field_187015_a");
addMapping("right", CPacketSteerBoat.class, "field_187016_b");
addMapping("message", CPacketTabComplete.class, "field_149420_a");
addMapping("targetBlock", CPacketTabComplete.class, "field_179710_b");
addMapping("hasTargetBlock", CPacketTabComplete.class, "field_186990_b");
addMapping("lines", CPacketUpdateSign.class, "field_149590_d");
addMapping("pos", CPacketUpdateSign.class, "field_179723_a");
addMapping("action", CPacketUseEntity.class, "field_149566_b");
addMapping("entityId", CPacketUseEntity.class, "field_149567_a");
addMapping("hitVec", CPacketUseEntity.class, "field_179713_c");
addMapping("hand", CPacketUseEntity.class, "field_186995_d");
addMapping("x", CPacketVehicleMove.class, "field_187007_a");
addMapping("y", CPacketVehicleMove.class, "field_187008_b");
addMapping("z", CPacketVehicleMove.class, "field_187009_c");
addMapping("yaw", CPacketVehicleMove.class, "field_187010_d");
addMapping("pitch", CPacketVehicleMove.class, "field_187011_e");
addMapping("firstSync", SPacketAdvancementInfo.class, "field_192605_a");
addMapping("advancementsToAdd", SPacketAdvancementInfo.class, "field_192606_b");
addMapping("advancementsToRemove", SPacketAdvancementInfo.class, "field_192607_c");
addMapping("progressUpdates", SPacketAdvancementInfo.class, "field_192608_d");
addMapping("type", SPacketAnimation.class, "field_148980_b");
addMapping("entityId", SPacketAnimation.class, "field_148981_a");
addMapping("block", SPacketBlockAction.class, "field_148871_f");
addMapping("instrument", SPacketBlockAction.class, "field_148872_d");
addMapping("pitch", SPacketBlockAction.class, "field_148873_e");
addMapping("blockPosition", SPacketBlockAction.class, "field_179826_a");
addMapping("progress", SPacketBlockBreakAnim.class, "field_148849_e");
addMapping("breakerId", SPacketBlockBreakAnim.class, "field_148852_a");
addMapping("position", SPacketBlockBreakAnim.class, "field_179822_b");
addMapping("blockState", SPacketBlockChange.class, "field_148883_d");
addMapping("blockPosition", SPacketBlockChange.class, "field_179828_a");
addMapping("entityId", SPacketCamera.class, "field_179781_a");
addMapping("state", SPacketChangeGameState.class, "field_149140_b");
addMapping("value", SPacketChangeGameState.class, "field_149141_c");
addMapping("MESSAGE_NAMES", SPacketChangeGameState.class, "field_149142_a");
addMapping("chatComponent", SPacketChat.class, "field_148919_a");
addMapping("type", SPacketChat.class, "field_179842_b");
addMapping("fullChunk", SPacketChunkData.class, "field_149279_g");
addMapping("chunkZ", SPacketChunkData.class, "field_149282_b");
addMapping("chunkX", SPacketChunkData.class, "field_149284_a");
addMapping("availableSections", SPacketChunkData.class, "field_186948_c");
addMapping("buffer", SPacketChunkData.class, "field_186949_d");
addMapping("tileEntityTags", SPacketChunkData.class, "field_189557_e");
addMapping("windowId", SPacketCloseWindow.class, "field_148896_a");
addMapping("entityId", SPacketCollectItem.class, "field_149356_b");
addMapping("collectedItemEntityId", SPacketCollectItem.class, "field_149357_a");
addMapping("collectedQuantity", SPacketCollectItem.class, "field_191209_c");
addMapping("duration", SPacketCombatEvent.class, "field_179772_d");
addMapping("deathMessage", SPacketCombatEvent.class, "field_179773_e");
addMapping("playerId", SPacketCombatEvent.class, "field_179774_b");
addMapping("entityId", SPacketCombatEvent.class, "field_179775_c");
addMapping("eventType", SPacketCombatEvent.class, "field_179776_a");
addMapping("actionNumber", SPacketConfirmTransaction.class, "field_148892_b");
addMapping("accepted", SPacketConfirmTransaction.class, "field_148893_c");
addMapping("windowId", SPacketConfirmTransaction.class, "field_148894_a");
addMapping("item", SPacketCooldown.class, "field_186923_a");
addMapping("ticks", SPacketCooldown.class, "field_186924_b");
addMapping("data", SPacketCustomPayload.class, "field_149171_b");
addMapping("channel", SPacketCustomPayload.class, "field_149172_a");
addMapping("soundName", SPacketCustomSound.class, "field_149219_a");
addMapping("category", SPacketCustomSound.class, "field_186933_b");
addMapping("x", SPacketCustomSound.class, "field_186934_c");
addMapping("y", SPacketCustomSound.class, "field_186935_d");
addMapping("z", SPacketCustomSound.class, "field_186936_e");
addMapping("volume", SPacketCustomSound.class, "field_186937_f");
addMapping("pitch", SPacketCustomSound.class, "field_186938_g");
addMapping("entityIDs", SPacketDestroyEntities.class, "field_149100_a");
addMapping("reason", SPacketDisconnect.class, "field_149167_a");
addMapping("scoreName", SPacketDisplayObjective.class, "field_149373_b");
addMapping("position", SPacketDisplayObjective.class, "field_149374_a");
addMapping("serverWide", SPacketEffect.class, "field_149246_f");
addMapping("soundData", SPacketEffect.class, "field_149249_b");
addMapping("soundType", SPacketEffect.class, "field_149251_a");
addMapping("soundPos", SPacketEffect.class, "field_179747_b");
addMapping("pitch", SPacketEntity.class, "field_149068_f");
addMapping("rotating", SPacketEntity.class, "field_149069_g");
addMapping("posZ", SPacketEntity.class, "field_149070_d");
addMapping("yaw", SPacketEntity.class, "field_149071_e");
addMapping("posX", SPacketEntity.class, "field_149072_b");
addMapping("posY", SPacketEntity.class, "field_149073_c");
addMapping("entityId", SPacketEntity.class, "field_149074_a");
addMapping("onGround", SPacketEntity.class, "field_179743_g");
addMapping("entityId", SPacketEntityAttach.class, "field_149406_b");
addMapping("vehicleEntityId", SPacketEntityAttach.class, "field_149407_c");
addMapping("duration", SPacketEntityEffect.class, "field_149431_d");
addMapping("effectId", SPacketEntityEffect.class, "field_149432_b");
addMapping("amplifier", SPacketEntityEffect.class, "field_149433_c");
addMapping("entityId", SPacketEntityEffect.class, "field_149434_a");
addMapping("flags", SPacketEntityEffect.class, "field_186985_e");
addMapping("equipmentSlot", SPacketEntityEquipment.class, "field_149392_b");
addMapping("itemStack", SPacketEntityEquipment.class, "field_149393_c");
addMapping("entityID", SPacketEntityEquipment.class, "field_149394_a");
addMapping("yaw", SPacketEntityHeadLook.class, "field_149383_b");
addMapping("entityId", SPacketEntityHeadLook.class, "field_149384_a");
addMapping("dataManagerEntries", SPacketEntityMetadata.class, "field_149378_b");
addMapping("entityId", SPacketEntityMetadata.class, "field_149379_a");
addMapping("snapshots", SPacketEntityProperties.class, "field_149444_b");
addMapping("entityId", SPacketEntityProperties.class, "field_149445_a");
addMapping("logicOpcode", SPacketEntityStatus.class, "field_149163_b");
addMapping("entityId", SPacketEntityStatus.class, "field_149164_a");
addMapping("pitch", SPacketEntityTeleport.class, "field_149453_f");
addMapping("posZ", SPacketEntityTeleport.class, "field_149454_d");
addMapping("yaw", SPacketEntityTeleport.class, "field_149455_e");
addMapping("posX", SPacketEntityTeleport.class, "field_149456_b");
addMapping("posY", SPacketEntityTeleport.class, "field_149457_c");
addMapping("entityId", SPacketEntityTeleport.class, "field_149458_a");
addMapping("onGround", SPacketEntityTeleport.class, "field_179698_g");
addMapping("motionZ", SPacketEntityVelocity.class, "field_149414_d");
addMapping("motionX", SPacketEntityVelocity.class, "field_149415_b");
addMapping("motionY", SPacketEntityVelocity.class, "field_149416_c");
addMapping("entityID", SPacketEntityVelocity.class, "field_149417_a");
addMapping("motionX", SPacketExplosion.class, "field_149152_f");
addMapping("motionY", SPacketExplosion.class, "field_149153_g");
addMapping("strength", SPacketExplosion.class, "field_149154_d");
addMapping("affectedBlockPositions", SPacketExplosion.class, "field_149155_e");
addMapping("posY", SPacketExplosion.class, "field_149156_b");
addMapping("posZ", SPacketExplosion.class, "field_149157_c");
addMapping("posX", SPacketExplosion.class, "field_149158_a");
addMapping("motionZ", SPacketExplosion.class, "field_149159_h");
addMapping("heldItemHotbarIndex", SPacketHeldItemChange.class, "field_149387_a");
addMapping("maxPlayers", SPacketJoinGame.class, "field_149200_f");
addMapping("worldType", SPacketJoinGame.class, "field_149201_g");
addMapping("dimension", SPacketJoinGame.class, "field_149202_d");
addMapping("difficulty", SPacketJoinGame.class, "field_149203_e");
addMapping("hardcoreMode", SPacketJoinGame.class, "field_149204_b");
addMapping("gameType", SPacketJoinGame.class, "field_149205_c");
addMapping("playerId", SPacketJoinGame.class, "field_149206_a");
addMapping("reducedDebugInfo", SPacketJoinGame.class, "field_179745_h");
addMapping("id", SPacketKeepAlive.class, "field_149136_a");
addMapping("mapId", SPacketMaps.class, "field_149191_a");
addMapping("columns", SPacketMaps.class, "field_179735_f");
addMapping("rows", SPacketMaps.class, "field_179736_g");
addMapping("minX", SPacketMaps.class, "field_179737_d");
addMapping("minZ", SPacketMaps.class, "field_179738_e");
addMapping("mapScale", SPacketMaps.class, "field_179739_b");
addMapping("icons", SPacketMaps.class, "field_179740_c");
addMapping("mapDataBytes", SPacketMaps.class, "field_179741_h");
addMapping("trackingPosition", SPacketMaps.class, "field_186950_c");
addMapping("x", SPacketMoveVehicle.class, "field_186960_a");
addMapping("y", SPacketMoveVehicle.class, "field_186961_b");
addMapping("z", SPacketMoveVehicle.class, "field_186962_c");
addMapping("yaw", SPacketMoveVehicle.class, "field_186963_d");
addMapping("pitch", SPacketMoveVehicle.class, "field_186964_e");
addMapping("chunkPos", SPacketMultiBlockChange.class, "field_148925_b");
addMapping("changedBlocks", SPacketMultiBlockChange.class, "field_179845_b");
addMapping("entityId", SPacketOpenWindow.class, "field_148904_f");
addMapping("slotCount", SPacketOpenWindow.class, "field_148905_d");
addMapping("inventoryType", SPacketOpenWindow.class, "field_148907_b");
addMapping("windowTitle", SPacketOpenWindow.class, "field_148908_c");
addMapping("windowId", SPacketOpenWindow.class, "field_148909_a");
addMapping("yOffset", SPacketParticles.class, "field_149230_f");
addMapping("zOffset", SPacketParticles.class, "field_149231_g");
addMapping("zCoord", SPacketParticles.class, "field_149232_d");
addMapping("xOffset", SPacketParticles.class, "field_149233_e");
addMapping("xCoord", SPacketParticles.class, "field_149234_b");
addMapping("yCoord", SPacketParticles.class, "field_149235_c");
addMapping("particleSpeed", SPacketParticles.class, "field_149237_h");
addMapping("particleCount", SPacketParticles.class, "field_149238_i");
addMapping("particleType", SPacketParticles.class, "field_179751_a");
addMapping("longDistance", SPacketParticles.class, "field_179752_j");
addMapping("particleArguments", SPacketParticles.class, "field_179753_k");
addMapping("walkSpeed", SPacketPlayerAbilities.class, "field_149114_f");
addMapping("creativeMode", SPacketPlayerAbilities.class, "field_149115_d");
addMapping("flySpeed", SPacketPlayerAbilities.class, "field_149116_e");
addMapping("flying", SPacketPlayerAbilities.class, "field_149117_b");
addMapping("allowFlying", SPacketPlayerAbilities.class, "field_149118_c");
addMapping("invulnerable", SPacketPlayerAbilities.class, "field_149119_a");
addMapping("footer", SPacketPlayerListHeaderFooter.class, "field_179702_b");
addMapping("header", SPacketPlayerListHeaderFooter.class, "field_179703_a");
addMapping("players", SPacketPlayerListItem.class, "field_179769_b");
addMapping("action", SPacketPlayerListItem.class, "field_179770_a");
addMapping("yaw", SPacketPlayerPosLook.class, "field_148936_d");
addMapping("pitch", SPacketPlayerPosLook.class, "field_148937_e");
addMapping("y", SPacketPlayerPosLook.class, "field_148938_b");
addMapping("z", SPacketPlayerPosLook.class, "field_148939_c");
addMapping("x", SPacketPlayerPosLook.class, "field_148940_a");
addMapping("flags", SPacketPlayerPosLook.class, "field_179835_f");
addMapping("teleportId", SPacketPlayerPosLook.class, "field_186966_g");
addMapping("recipes", SPacketRecipeBook.class, "field_192596_a");
addMapping("guiOpen", SPacketRecipeBook.class, "field_192598_c");
addMapping("filteringCraftable", SPacketRecipeBook.class, "field_192599_d");
addMapping("state", SPacketRecipeBook.class, "field_193646_a");
addMapping("displayedRecipes", SPacketRecipeBook.class, "field_193647_c");
addMapping("effectId", SPacketRemoveEntityEffect.class, "field_149078_b");
addMapping("entityId", SPacketRemoveEntityEffect.class, "field_149079_a");
addMapping("hash", SPacketResourcePackSend.class, "field_179785_b");
addMapping("url", SPacketResourcePackSend.class, "field_179786_a");
addMapping("worldType", SPacketRespawn.class, "field_149085_d");
addMapping("difficulty", SPacketRespawn.class, "field_149086_b");
addMapping("gameType", SPacketRespawn.class, "field_149087_c");
addMapping("dimensionID", SPacketRespawn.class, "field_149088_a");
addMapping("objectiveValue", SPacketScoreboardObjective.class, "field_149341_b");
addMapping("action", SPacketScoreboardObjective.class, "field_149342_c");
addMapping("objectiveName", SPacketScoreboardObjective.class, "field_149343_a");
addMapping("type", SPacketScoreboardObjective.class, "field_179818_c");
addMapping("tab", SPacketSelectAdvancementsTab.class, "field_194155_a");
addMapping("difficultyLocked", SPacketServerDifficulty.class, "field_179832_b");
addMapping("difficulty", SPacketServerDifficulty.class, "field_179833_a");
addMapping("totalExperience", SPacketSetExperience.class, "field_149399_b");
addMapping("level", SPacketSetExperience.class, "field_149400_c");
addMapping("experienceBar", SPacketSetExperience.class, "field_149401_a");
addMapping("entityId", SPacketSetPassengers.class, "field_186973_a");
addMapping("passengerIds", SPacketSetPassengers.class, "field_186974_b");
addMapping("slot", SPacketSetSlot.class, "field_149177_b");
addMapping("item", SPacketSetSlot.class, "field_149178_c");
addMapping("windowId", SPacketSetSlot.class, "field_149179_a");
addMapping("signPosition", SPacketSignEditorOpen.class, "field_179778_a");
addMapping("soundPitch", SPacketSoundEffect.class, "field_149214_f");
addMapping("posZ", SPacketSoundEffect.class, "field_149215_d");
addMapping("soundVolume", SPacketSoundEffect.class, "field_149216_e");
addMapping("posX", SPacketSoundEffect.class, "field_149217_b");
addMapping("posY", SPacketSoundEffect.class, "field_149218_c");
addMapping("sound", SPacketSoundEffect.class, "field_186979_a");
addMapping("category", SPacketSoundEffect.class, "field_186980_b");
addMapping("posZ", SPacketSpawnExperienceOrb.class, "field_148988_d");
addMapping("xpValue", SPacketSpawnExperienceOrb.class, "field_148989_e");
addMapping("posX", SPacketSpawnExperienceOrb.class, "field_148990_b");
addMapping("posY", SPacketSpawnExperienceOrb.class, "field_148991_c");
addMapping("entityID", SPacketSpawnExperienceOrb.class, "field_148992_a");
addMapping("z", SPacketSpawnGlobalEntity.class, "field_149055_d");
addMapping("type", SPacketSpawnGlobalEntity.class, "field_149056_e");
addMapping("x", SPacketSpawnGlobalEntity.class, "field_149057_b");
addMapping("y", SPacketSpawnGlobalEntity.class, "field_149058_c");
addMapping("entityId", SPacketSpawnGlobalEntity.class, "field_149059_a");
addMapping("velocityX", SPacketSpawnMob.class, "field_149036_f");
addMapping("velocityY", SPacketSpawnMob.class, "field_149037_g");
addMapping("y", SPacketSpawnMob.class, "field_149038_d");
addMapping("z", SPacketSpawnMob.class, "field_149039_e");
addMapping("type", SPacketSpawnMob.class, "field_149040_b");
addMapping("x", SPacketSpawnMob.class, "field_149041_c");
addMapping("entityId", SPacketSpawnMob.class, "field_149042_a");
addMapping("dataManager", SPacketSpawnMob.class, "field_149043_l");
addMapping("dataManagerEntries", SPacketSpawnMob.class, "field_149044_m");
addMapping("pitch", SPacketSpawnMob.class, "field_149045_j");
addMapping("headPitch", SPacketSpawnMob.class, "field_149046_k");
addMapping("velocityZ", SPacketSpawnMob.class, "field_149047_h");
addMapping("yaw", SPacketSpawnMob.class, "field_149048_i");
addMapping("uniqueId", SPacketSpawnMob.class, "field_186894_b");
addMapping("speedY", SPacketSpawnObject.class, "field_149012_f");
addMapping("speedZ", SPacketSpawnObject.class, "field_149013_g");
addMapping("z", SPacketSpawnObject.class, "field_149014_d");
addMapping("speedX", SPacketSpawnObject.class, "field_149015_e");
addMapping("x", SPacketSpawnObject.class, "field_149016_b");
addMapping("y", SPacketSpawnObject.class, "field_149017_c");
addMapping("entityId", SPacketSpawnObject.class, "field_149018_a");
addMapping("type", SPacketSpawnObject.class, "field_149019_j");
addMapping("data", SPacketSpawnObject.class, "field_149020_k");
addMapping("pitch", SPacketSpawnObject.class, "field_149021_h");
addMapping("yaw", SPacketSpawnObject.class, "field_149022_i");
addMapping("uniqueId", SPacketSpawnObject.class, "field_186883_b");
addMapping("title", SPacketSpawnPainting.class, "field_148968_f");
addMapping("entityID", SPacketSpawnPainting.class, "field_148973_a");
addMapping("position", SPacketSpawnPainting.class, "field_179838_b");
addMapping("facing", SPacketSpawnPainting.class, "field_179839_c");
addMapping("uniqueId", SPacketSpawnPainting.class, "field_186896_b");
addMapping("yaw", SPacketSpawnPlayer.class, "field_148951_f");
addMapping("pitch", SPacketSpawnPlayer.class, "field_148952_g");
addMapping("y", SPacketSpawnPlayer.class, "field_148953_d");
addMapping("z", SPacketSpawnPlayer.class, "field_148954_e");
addMapping("x", SPacketSpawnPlayer.class, "field_148956_c");
addMapping("entityId", SPacketSpawnPlayer.class, "field_148957_a");
addMapping("dataManagerEntries", SPacketSpawnPlayer.class, "field_148958_j");
addMapping("watcher", SPacketSpawnPlayer.class, "field_148960_i");
addMapping("uniqueId", SPacketSpawnPlayer.class, "field_179820_b");
addMapping("spawnBlockPos", SPacketSpawnPosition.class, "field_179801_a");
addMapping("statisticMap", SPacketStatistics.class, "field_148976_a");
addMapping("matches", SPacketTabComplete.class, "field_149632_a");
addMapping("action", SPacketTeams.class, "field_149314_f");
addMapping("friendlyFlags", SPacketTeams.class, "field_149315_g");
addMapping("suffix", SPacketTeams.class, "field_149316_d");
addMapping("players", SPacketTeams.class, "field_149317_e");
addMapping("displayName", SPacketTeams.class, "field_149318_b");
addMapping("prefix", SPacketTeams.class, "field_149319_c");
addMapping("name", SPacketTeams.class, "field_149320_a");
addMapping("color", SPacketTeams.class, "field_179815_f");
addMapping("nameTagVisibility", SPacketTeams.class, "field_179816_e");
addMapping("collisionRule", SPacketTeams.class, "field_186976_f");
addMapping("worldTime", SPacketTimeUpdate.class, "field_149368_b");
addMapping("totalWorldTime", SPacketTimeUpdate.class, "field_149369_a");
addMapping("displayTime", SPacketTitle.class, "field_179808_d");
addMapping("fadeOutTime", SPacketTitle.class, "field_179809_e");
addMapping("message", SPacketTitle.class, "field_179810_b");
addMapping("fadeInTime", SPacketTitle.class, "field_179811_c");
addMapping("type", SPacketTitle.class, "field_179812_a");
addMapping("x", SPacketUnloadChunk.class, "field_186942_a");
addMapping("z", SPacketUnloadChunk.class, "field_186943_b");
addMapping("uniqueId", SPacketUpdateBossInfo.class, "field_186911_a");
addMapping("operation", SPacketUpdateBossInfo.class, "field_186912_b");
addMapping("name", SPacketUpdateBossInfo.class, "field_186913_c");
addMapping("percent", SPacketUpdateBossInfo.class, "field_186914_d");
addMapping("color", SPacketUpdateBossInfo.class, "field_186915_e");
addMapping("overlay", SPacketUpdateBossInfo.class, "field_186916_f");
addMapping("darkenSky", SPacketUpdateBossInfo.class, "field_186917_g");
addMapping("playEndBossMusic", SPacketUpdateBossInfo.class, "field_186918_h");
addMapping("createFog", SPacketUpdateBossInfo.class, "field_186919_i");
addMapping("foodLevel", SPacketUpdateHealth.class, "field_149334_b");
addMapping("saturationLevel", SPacketUpdateHealth.class, "field_149335_c");
addMapping("health", SPacketUpdateHealth.class, "field_149336_a");
addMapping("action", SPacketUpdateScore.class, "field_149326_d");
addMapping("objective", SPacketUpdateScore.class, "field_149327_b");
addMapping("value", SPacketUpdateScore.class, "field_149328_c");
addMapping("name", SPacketUpdateScore.class, "field_149329_a");
addMapping("tileEntityType", SPacketUpdateTileEntity.class, "field_148859_d");
addMapping("nbt", SPacketUpdateTileEntity.class, "field_148860_e");
addMapping("blockPos", SPacketUpdateTileEntity.class, "field_179824_a");
addMapping("playerID", SPacketUseBed.class, "field_149097_a");
addMapping("bedPos", SPacketUseBed.class, "field_179799_b");
addMapping("itemStacks", SPacketWindowItems.class, "field_148913_b");
addMapping("windowId", SPacketWindowItems.class, "field_148914_a");
addMapping("property", SPacketWindowProperty.class, "field_149184_b");
addMapping("value", SPacketWindowProperty.class, "field_149185_c");
addMapping("windowId", SPacketWindowProperty.class, "field_149186_a");
addMapping("diameter", SPacketWorldBorder.class, "field_179789_f");
addMapping("timeUntilTarget", SPacketWorldBorder.class, "field_179790_g");
addMapping("centerZ", SPacketWorldBorder.class, "field_179791_d");
addMapping("targetSize", SPacketWorldBorder.class, "field_179792_e");
addMapping("size", SPacketWorldBorder.class, "field_179793_b");
addMapping("centerX", SPacketWorldBorder.class, "field_179794_c");
addMapping("action", SPacketWorldBorder.class, "field_179795_a");
addMapping("warningTime", SPacketWorldBorder.class, "field_179796_h");
addMapping("warningDistance", SPacketWorldBorder.class, "field_179797_i");
addMapping("server", RConConsoleSource.class, "field_184171_b");
addMapping("buffer", RConConsoleSource.class, "field_70009_b");
addMapping("output", RConOutputStream.class, "field_72673_b");
addMapping("byteArrayOutput", RConOutputStream.class, "field_72674_a");
addMapping("threadName", RConThreadBase.class, "field_164003_c");
addMapping("THREAD_ID", RConThreadBase.class, "field_164004_h");
addMapping("serverSocketList", RConThreadBase.class, "field_72614_f");
addMapping("maxStopWait", RConThreadBase.class, "field_72615_d");
addMapping("socketList", RConThreadBase.class, "field_72616_e");
addMapping("server", RConThreadBase.class, "field_72617_b");
addMapping("rconThread", RConThreadBase.class, "field_72618_c");
addMapping("running", RConThreadBase.class, "field_72619_a");
addMapping("LOGGER", RConThreadClient.class, "field_164005_h");
addMapping("loggedIn", RConThreadClient.class, "field_72657_g");
addMapping("rconPassword", RConThreadClient.class, "field_72658_j");
addMapping("clientSocket", RConThreadClient.class, "field_72659_h");
addMapping("buffer", RConThreadClient.class, "field_72660_i");
addMapping("rconPort", RConThreadMain.class, "field_72647_g");
addMapping("clientThreads", RConThreadMain.class, "field_72648_l");
addMapping("serverSocket", RConThreadMain.class, "field_72649_j");
addMapping("rconPassword", RConThreadMain.class, "field_72650_k");
addMapping("serverPort", RConThreadMain.class, "field_72651_h");
addMapping("hostname", RConThreadMain.class, "field_72652_i");
addMapping("lastAuthCheckTime", RConThreadQuery.class, "field_72629_g");
addMapping("buffer", RConThreadQuery.class, "field_72630_n");
addMapping("incomingPacket", RConThreadQuery.class, "field_72631_o");
addMapping("worldName", RConThreadQuery.class, "field_72632_l");
addMapping("querySocket", RConThreadQuery.class, "field_72633_m");
addMapping("maxPlayers", RConThreadQuery.class, "field_72634_j");
addMapping("serverMotd", RConThreadQuery.class, "field_72635_k");
addMapping("queryPort", RConThreadQuery.class, "field_72636_h");
addMapping("serverPort", RConThreadQuery.class, "field_72637_i");
addMapping("lastQueryResponseTime", RConThreadQuery.class, "field_72638_v");
addMapping("output", RConThreadQuery.class, "field_72639_u");
addMapping("time", RConThreadQuery.class, "field_72640_t");
addMapping("queryClients", RConThreadQuery.class, "field_72641_s");
addMapping("serverHostname", RConThreadQuery.class, "field_72642_r");
addMapping("queryHostname", RConThreadQuery.class, "field_72643_q");
addMapping("idents", RConThreadQuery.class, "field_72644_p");
addMapping("HEX_DIGITS", RConUtils.class, "field_72666_a");
addMapping("clientTime", CPacketPing.class, "field_149290_a");
addMapping("clientTime", SPacketPong.class, "field_149293_a");
addMapping("response", SPacketServerInfo.class, "field_149296_b");
addMapping("GSON", SPacketServerInfo.class, "field_149297_a");
addMapping("entitySizeY", NodeProcessor.class, "field_176165_d");
addMapping("entitySizeZ", NodeProcessor.class, "field_176166_e");
addMapping("pointMap", NodeProcessor.class, "field_176167_b");
addMapping("entitySizeX", NodeProcessor.class, "field_176168_c");
addMapping("blockaccess", NodeProcessor.class, "field_176169_a");
addMapping("canEnterDoors", NodeProcessor.class, "field_176180_f");
addMapping("canOpenDoors", NodeProcessor.class, "field_176181_g");
addMapping("canSwim", NodeProcessor.class, "field_176184_i");
addMapping("entity", NodeProcessor.class, "field_186326_b");
addMapping("openSet", Path.class, "field_186312_b");
addMapping("closedSet", Path.class, "field_186313_c");
addMapping("target", Path.class, "field_186314_d");
addMapping("currentPathIndex", Path.class, "field_75882_b");
addMapping("pathLength", Path.class, "field_75883_c");
addMapping("points", Path.class, "field_75884_a");
addMapping("nodeProcessor", PathFinder.class, "field_176190_c");
addMapping("closedSet", PathFinder.class, "field_186337_b");
addMapping("pathOptions", PathFinder.class, "field_75864_d");
addMapping("path", PathFinder.class, "field_75866_b");
addMapping("count", PathHeap.class, "field_75851_b");
addMapping("pathPoints", PathHeap.class, "field_75852_a");
addMapping("pathFinder", PathNavigate.class, "field_179681_j");
addMapping("nodeProcessor", PathNavigate.class, "field_179695_a");
addMapping("timeoutCachedNode", PathNavigate.class, "field_188557_k");
addMapping("timeoutTimer", PathNavigate.class, "field_188558_l");
addMapping("lastTimeoutCheck", PathNavigate.class, "field_188559_m");
addMapping("timeoutLimit", PathNavigate.class, "field_188560_n");
addMapping("maxDistanceToWaypoint", PathNavigate.class, "field_188561_o");
addMapping("tryUpdatePath", PathNavigate.class, "field_188562_p");
addMapping("lastTimeUpdated", PathNavigate.class, "field_188563_q");
addMapping("targetPos", PathNavigate.class, "field_188564_r");
addMapping("totalTicks", PathNavigate.class, "field_75510_g");
addMapping("speed", PathNavigate.class, "field_75511_d");
addMapping("pathSearchRange", PathNavigate.class, "field_75512_e");
addMapping("world", PathNavigate.class, "field_75513_b");
addMapping("currentPath", PathNavigate.class, "field_75514_c");
addMapping("entity", PathNavigate.class, "field_75515_a");
addMapping("ticksAtLastPos", PathNavigate.class, "field_75520_h");
addMapping("lastPosCheck", PathNavigate.class, "field_75521_i");
addMapping("targetPosition", PathNavigateClimber.class, "field_179696_f");
addMapping("shouldAvoidSun", PathNavigateGround.class, "field_179694_f");
addMapping("priority", PathNodeType.class, "field_186307_r");
addMapping("distanceFromOrigin", PathPoint.class, "field_186284_j");
addMapping("cost", PathPoint.class, "field_186285_k");
addMapping("costMalus", PathPoint.class, "field_186286_l");
addMapping("nodeType", PathPoint.class, "field_186287_m");
addMapping("distanceToNext", PathPoint.class, "field_75833_f");
addMapping("distanceToTarget", PathPoint.class, "field_75834_g");
addMapping("index", PathPoint.class, "field_75835_d");
addMapping("totalPathDistance", PathPoint.class, "field_75836_e");
addMapping("y", PathPoint.class, "field_75837_b");
addMapping("z", PathPoint.class, "field_75838_c");
addMapping("x", PathPoint.class, "field_75839_a");
addMapping("hash", PathPoint.class, "field_75840_j");
addMapping("previous", PathPoint.class, "field_75841_h");
addMapping("visited", PathPoint.class, "field_75842_i");
addMapping("navigations", PathWorldListener.class, "field_189519_a");
addMapping("avoidsWater", WalkNodeProcessor.class, "field_176183_h");
addMapping("attributeModifierMap", Potion.class, "field_111188_I");
addMapping("REGISTRY", Potion.class, "field_188414_b");
addMapping("beneficial", Potion.class, "field_188415_h");
addMapping("effectiveness", Potion.class, "field_76412_L");
addMapping("liquidColor", Potion.class, "field_76414_N");
addMapping("name", Potion.class, "field_76416_I");
addMapping("statusIconIndex", Potion.class, "field_76417_J");
addMapping("isBadEffect", Potion.class, "field_76418_K");
addMapping("bonusPerLevel", PotionAttackDamage.class, "field_188416_a");
addMapping("isPotionDurationMax", PotionEffect.class, "field_100013_f");
addMapping("LOGGER", PotionEffect.class, "field_180155_a");
addMapping("potion", PotionEffect.class, "field_188420_b");
addMapping("showParticles", PotionEffect.class, "field_188421_h");
addMapping("duration", PotionEffect.class, "field_76460_b");
addMapping("amplifier", PotionEffect.class, "field_76461_c");
addMapping("isSplashPotion", PotionEffect.class, "field_82723_d");
addMapping("isAmbient", PotionEffect.class, "field_82724_e");
addMapping("POTION_TYPE_CONVERSIONS", PotionHelper.class, "field_185213_a");
addMapping("POTION_ITEM_CONVERSIONS", PotionHelper.class, "field_185214_b");
addMapping("POTION_ITEMS", PotionHelper.class, "field_185215_c");
addMapping("IS_POTION_ITEM", PotionHelper.class, "field_185216_d");
addMapping("REGISTRY", PotionType.class, "field_185176_a");
addMapping("EMPTY", PotionType.class, "field_185177_b");
addMapping("nextPotionTypeId", PotionType.class, "field_185178_c");
addMapping("baseName", PotionType.class, "field_185179_d");
addMapping("effects", PotionType.class, "field_185180_e");
addMapping("LOGGER", Profiler.class, "field_151234_b");
addMapping("profilingSection", Profiler.class, "field_76323_d");
addMapping("profilingMap", Profiler.class, "field_76324_e");
addMapping("sectionList", Profiler.class, "field_76325_b");
addMapping("timestampList", Profiler.class, "field_76326_c");
addMapping("profilingEnabled", Profiler.class, "field_76327_a");
addMapping("snooperStats", Snooper.class, "field_152773_a");
addMapping("clientStats", Snooper.class, "field_152774_b");
addMapping("syncLock", Snooper.class, "field_76476_f");
addMapping("isRunning", Snooper.class, "field_76477_g");
addMapping("playerStatsCollector", Snooper.class, "field_76478_d");
addMapping("threadTrigger", Snooper.class, "field_76479_e");
addMapping("uniqueID", Snooper.class, "field_76480_b");
addMapping("serverUrl", Snooper.class, "field_76481_c");
addMapping("selfCounter", Snooper.class, "field_76483_h");
addMapping("minecraftStartTimeMilis", Snooper.class, "field_98224_g");
addMapping("TRIGGER", IScoreCriteria.class, "field_178791_c");
addMapping("TEAM_KILL", IScoreCriteria.class, "field_178792_h");
addMapping("KILLED_BY_TEAM", IScoreCriteria.class, "field_178793_i");
addMapping("FOOD", IScoreCriteria.class, "field_186698_h");
addMapping("AIR", IScoreCriteria.class, "field_186699_i");
addMapping("ARMOR", IScoreCriteria.class, "field_186700_j");
addMapping("XP", IScoreCriteria.class, "field_186701_k");
addMapping("LEVEL", IScoreCriteria.class, "field_186702_l");
addMapping("HEALTH", IScoreCriteria.class, "field_96638_f");
addMapping("PLAYER_KILL_COUNT", IScoreCriteria.class, "field_96639_d");
addMapping("TOTAL_KILL_COUNT", IScoreCriteria.class, "field_96640_e");
addMapping("DUMMY", IScoreCriteria.class, "field_96641_b");
addMapping("DEATH_COUNT", IScoreCriteria.class, "field_96642_c");
addMapping("INSTANCES", IScoreCriteria.class, "field_96643_a");
addMapping("locked", Score.class, "field_178817_f");
addMapping("forceUpdate", Score.class, "field_178818_g");
addMapping("scorePlayerName", Score.class, "field_96654_d");
addMapping("scorePoints", Score.class, "field_96655_e");
addMapping("scoreboard", Score.class, "field_96656_b");
addMapping("objective", Score.class, "field_96657_c");
addMapping("SCORE_COMPARATOR", Score.class, "field_96658_a");
addMapping("dummyName", ScoreCriteria.class, "field_96644_g");
addMapping("goalName", ScoreCriteriaColored.class, "field_178794_j");
addMapping("stat", ScoreCriteriaStat.class, "field_151459_g");
addMapping("renderType", ScoreObjective.class, "field_178768_d");
addMapping("displayName", ScoreObjective.class, "field_96683_d");
addMapping("name", ScoreObjective.class, "field_96684_b");
addMapping("objectiveCriteria", ScoreObjective.class, "field_96685_c");
addMapping("scoreboard", ScoreObjective.class, "field_96686_a");
addMapping("deathMessageVisibility", ScorePlayerTeam.class, "field_178776_j");
addMapping("color", ScorePlayerTeam.class, "field_178777_k");
addMapping("nameTagVisibility", ScorePlayerTeam.class, "field_178778_i");
addMapping("collisionRule", ScorePlayerTeam.class, "field_186683_l");
addMapping("suffix", ScorePlayerTeam.class, "field_96671_f");
addMapping("allowFriendlyFire", ScorePlayerTeam.class, "field_96672_g");
addMapping("displayName", ScorePlayerTeam.class, "field_96673_d");
addMapping("prefix", ScorePlayerTeam.class, "field_96674_e");
addMapping("name", ScorePlayerTeam.class, "field_96675_b");
addMapping("membershipSet", ScorePlayerTeam.class, "field_96676_c");
addMapping("scoreboard", ScorePlayerTeam.class, "field_96677_a");
addMapping("canSeeFriendlyInvisibles", ScorePlayerTeam.class, "field_98301_h");
addMapping("displaySlots", Scoreboard.class, "field_178823_g");
addMapping("teamMemberships", Scoreboard.class, "field_96540_f");
addMapping("objectiveDisplaySlots", Scoreboard.class, "field_96541_d");
addMapping("teams", Scoreboard.class, "field_96542_e");
addMapping("scoreObjectiveCriterias", Scoreboard.class, "field_96543_b");
addMapping("entitiesScoreObjectives", Scoreboard.class, "field_96544_c");
addMapping("scoreObjectives", Scoreboard.class, "field_96545_a");
addMapping("LOGGER", ScoreboardSaveData.class, "field_151481_a");
addMapping("delayedInitNbt", ScoreboardSaveData.class, "field_96506_b");
addMapping("scoreboard", ScoreboardSaveData.class, "field_96507_a");
addMapping("dirtyRunnables", ServerScoreboard.class, "field_186685_c");
addMapping("addedObjectives", ServerScoreboard.class, "field_96553_b");
addMapping("scoreboardMCServer", ServerScoreboard.class, "field_96555_a");
addMapping("isGamemodeForced", MinecraftServer.class, "field_104057_T");
addMapping("serverProxy", MinecraftServer.class, "field_110456_c");
addMapping("maxPlayerIdleMinutes", MinecraftServer.class, "field_143008_E");
addMapping("resourcePackUrl", MinecraftServer.class, "field_147141_M");
addMapping("nanoTimeSinceStatusRefresh", MinecraftServer.class, "field_147142_T");
addMapping("sessionService", MinecraftServer.class, "field_147143_S");
addMapping("networkSystem", MinecraftServer.class, "field_147144_o");
addMapping("LOGGER", MinecraftServer.class, "field_147145_h");
addMapping("random", MinecraftServer.class, "field_147146_q");
addMapping("statusResponse", MinecraftServer.class, "field_147147_p");
addMapping("authService", MinecraftServer.class, "field_152364_T");
addMapping("profileRepo", MinecraftServer.class, "field_152365_W");
addMapping("profileCache", MinecraftServer.class, "field_152366_X");
addMapping("USER_CACHE_FILE", MinecraftServer.class, "field_152367_a");
addMapping("resourcePackHash", MinecraftServer.class, "field_175588_P");
addMapping("futureTaskQueue", MinecraftServer.class, "field_175589_i");
addMapping("serverThread", MinecraftServer.class, "field_175590_aa");
addMapping("currentTime", MinecraftServer.class, "field_175591_ab");
addMapping("worldIconSet", MinecraftServer.class, "field_184111_ab");
addMapping("dataFixer", MinecraftServer.class, "field_184112_s");
addMapping("preventProxyConnections", MinecraftServer.class, "field_190519_A");
addMapping("buildLimit", MinecraftServer.class, "field_71280_D");
addMapping("pvpEnabled", MinecraftServer.class, "field_71284_A");
addMapping("allowFlight", MinecraftServer.class, "field_71285_B");
addMapping("motd", MinecraftServer.class, "field_71286_C");
addMapping("worldName", MinecraftServer.class, "field_71287_L");
addMapping("isDemo", MinecraftServer.class, "field_71288_M");
addMapping("enableBonusChest", MinecraftServer.class, "field_71289_N");
addMapping("serverKeyPair", MinecraftServer.class, "field_71292_I");
addMapping("serverOwner", MinecraftServer.class, "field_71293_J");
addMapping("folderName", MinecraftServer.class, "field_71294_K");
addMapping("startProfiling", MinecraftServer.class, "field_71295_T");
addMapping("serverIsRunning", MinecraftServer.class, "field_71296_Q");
addMapping("userMessage", MinecraftServer.class, "field_71298_S");
addMapping("timeOfLastWarning", MinecraftServer.class, "field_71299_R");
addMapping("currentTask", MinecraftServer.class, "field_71302_d");
addMapping("percentDone", MinecraftServer.class, "field_71303_e");
addMapping("profiler", MinecraftServer.class, "field_71304_b");
addMapping("worlds", MinecraftServer.class, "field_71305_c");
addMapping("usageSnooper", MinecraftServer.class, "field_71307_n");
addMapping("anvilFile", MinecraftServer.class, "field_71308_o");
addMapping("anvilConverterForAnvilFile", MinecraftServer.class, "field_71310_m");
addMapping("tickTimeArray", MinecraftServer.class, "field_71311_j");
addMapping("timeOfLastDimensionTick", MinecraftServer.class, "field_71312_k");
addMapping("tickCounter", MinecraftServer.class, "field_71315_w");
addMapping("serverStopped", MinecraftServer.class, "field_71316_v");
addMapping("serverRunning", MinecraftServer.class, "field_71317_u");
addMapping("playerList", MinecraftServer.class, "field_71318_t");
addMapping("serverPort", MinecraftServer.class, "field_71319_s");
addMapping("hostname", MinecraftServer.class, "field_71320_r");
addMapping("commandManager", MinecraftServer.class, "field_71321_q");
addMapping("tickables", MinecraftServer.class, "field_71322_p");
addMapping("canSpawnNPCs", MinecraftServer.class, "field_71323_z");
addMapping("canSpawnAnimals", MinecraftServer.class, "field_71324_y");
addMapping("onlineMode", MinecraftServer.class, "field_71325_x");
addMapping("LOG", ServerEula.class, "field_154349_a");
addMapping("eulaFile", ServerEula.class, "field_154350_b");
addMapping("acceptedEULA", ServerEula.class, "field_154351_c");
addMapping("LOGGER", DedicatedPlayerList.class, "field_164439_d");
addMapping("eula", DedicatedServer.class, "field_154332_n");
addMapping("LOGGER", DedicatedServer.class, "field_155771_h");
addMapping("rconConsoleSource", DedicatedServer.class, "field_184115_n");
addMapping("RESOURCE_PACK_SHA1_PATTERN", DedicatedServer.class, "field_189647_l");
addMapping("guiIsEnabled", DedicatedServer.class, "field_71335_s");
addMapping("gameType", DedicatedServer.class, "field_71337_q");
addMapping("canSpawnStructures", DedicatedServer.class, "field_71338_p");
addMapping("rconThread", DedicatedServer.class, "field_71339_n");
addMapping("settings", DedicatedServer.class, "field_71340_o");
addMapping("pendingCommandList", DedicatedServer.class, "field_71341_l");
addMapping("rconQueryThread", DedicatedServer.class, "field_71342_m");
addMapping("sender", PendingCommand.class, "field_73701_b");
addMapping("command", PendingCommand.class, "field_73702_a");
addMapping("LOGGER", PropertyManager.class, "field_164440_a");
addMapping("serverProperties", PropertyManager.class, "field_73672_b");
addMapping("serverPropertiesFile", PropertyManager.class, "field_73673_c");
addMapping("server", ServerHangWatchdog.class, "field_180249_b");
addMapping("maxTickTime", ServerHangWatchdog.class, "field_180250_c");
addMapping("LOGGER", ServerHangWatchdog.class, "field_180251_a");
addMapping("server", MinecraftServerGui.class, "field_120021_b");
addMapping("LOGGER", MinecraftServerGui.class, "field_164248_b");
addMapping("SERVER_GUI_FONT", MinecraftServerGui.class, "field_164249_a");
addMapping("ticks", PlayerListComponent.class, "field_120014_b");
addMapping("server", PlayerListComponent.class, "field_120015_a");
addMapping("msgs", StatsComponent.class, "field_120036_d");
addMapping("server", StatsComponent.class, "field_120037_e");
addMapping("values", StatsComponent.class, "field_120038_b");
addMapping("vp", StatsComponent.class, "field_120039_c");
addMapping("FORMATTER", StatsComponent.class, "field_120040_a");
addMapping("hostPlayerData", IntegratedPlayerList.class, "field_72416_e");
addMapping("LOGGER", IntegratedServer.class, "field_147148_h");
addMapping("lanServerPing", IntegratedServer.class, "field_71345_q");
addMapping("isPublic", IntegratedServer.class, "field_71346_p");
addMapping("isGamePaused", IntegratedServer.class, "field_71348_o");
addMapping("mc", IntegratedServer.class, "field_71349_l");
addMapping("worldSettings", IntegratedServer.class, "field_71350_m");
addMapping("gameModeTicks", DemoPlayerInteractionManager.class, "field_73102_f");
addMapping("demoTimeExpired", DemoPlayerInteractionManager.class, "field_73103_d");
addMapping("demoEndedReminder", DemoPlayerInteractionManager.class, "field_73104_e");
addMapping("displayedIntro", DemoPlayerInteractionManager.class, "field_73105_c");
addMapping("previousTotalWorldTime", PlayerChunkMap.class, "field_111192_g");
addMapping("entries", PlayerChunkMap.class, "field_111193_e");
addMapping("NOT_SPECTATOR", PlayerChunkMap.class, "field_187308_a");
addMapping("CAN_GENERATE_CHUNKS", PlayerChunkMap.class, "field_187309_b");
addMapping("pendingSendToPlayers", PlayerChunkMap.class, "field_187310_g");
addMapping("entriesWithoutChunks", PlayerChunkMap.class, "field_187311_h");
addMapping("sortMissingChunks", PlayerChunkMap.class, "field_187312_l");
addMapping("sortSendToPlayers", PlayerChunkMap.class, "field_187313_m");
addMapping("dirtyEntries", PlayerChunkMap.class, "field_72697_d");
addMapping("playerViewRadius", PlayerChunkMap.class, "field_72698_e");
addMapping("players", PlayerChunkMap.class, "field_72699_b");
addMapping("entryMap", PlayerChunkMap.class, "field_72700_c");
addMapping("world", PlayerChunkMap.class, "field_72701_a");
addMapping("LOGGER", PlayerChunkMapEntry.class, "field_187281_a");
addMapping("playerChunkMap", PlayerChunkMapEntry.class, "field_187282_b");
addMapping("players", PlayerChunkMapEntry.class, "field_187283_c");
addMapping("pos", PlayerChunkMapEntry.class, "field_187284_d");
addMapping("changedBlocks", PlayerChunkMapEntry.class, "field_187285_e");
addMapping("chunk", PlayerChunkMapEntry.class, "field_187286_f");
addMapping("changes", PlayerChunkMapEntry.class, "field_187287_g");
addMapping("changedSectionFilter", PlayerChunkMapEntry.class, "field_187288_h");
addMapping("lastUpdateInhabitedTime", PlayerChunkMapEntry.class, "field_187289_i");
addMapping("sentToPlayers", PlayerChunkMapEntry.class, "field_187290_j");
addMapping("destroyPos", PlayerInteractionManager.class, "field_180240_f");
addMapping("delayedDestroyPos", PlayerInteractionManager.class, "field_180241_i");
addMapping("isDestroyingBlock", PlayerInteractionManager.class, "field_73088_d");
addMapping("initialDamage", PlayerInteractionManager.class, "field_73089_e");
addMapping("player", PlayerInteractionManager.class, "field_73090_b");
addMapping("gameType", PlayerInteractionManager.class, "field_73091_c");
addMapping("world", PlayerInteractionManager.class, "field_73092_a");
addMapping("initialBlockDamage", PlayerInteractionManager.class, "field_73093_n");
addMapping("durabilityRemainingOnBlock", PlayerInteractionManager.class, "field_73094_o");
addMapping("receivedFinishDiggingPacket", PlayerInteractionManager.class, "field_73097_j");
addMapping("curblockDamage", PlayerInteractionManager.class, "field_73100_i");
addMapping("LOGGER", PlayerList.class, "field_148546_d");
addMapping("playerStatFiles", PlayerList.class, "field_148547_k");
addMapping("FILE_PLAYERBANS", PlayerList.class, "field_152613_a");
addMapping("FILE_IPBANS", PlayerList.class, "field_152614_b");
addMapping("FILE_OPS", PlayerList.class, "field_152615_c");
addMapping("FILE_WHITELIST", PlayerList.class, "field_152616_d");
addMapping("uuidToPlayerMap", PlayerList.class, "field_177454_f");
addMapping("advancements", PlayerList.class, "field_192055_p");
addMapping("mcServer", PlayerList.class, "field_72400_f");
addMapping("bannedPlayers", PlayerList.class, "field_72401_g");
addMapping("viewDistance", PlayerList.class, "field_72402_d");
addMapping("DATE_FORMAT", PlayerList.class, "field_72403_e");
addMapping("playerEntityList", PlayerList.class, "field_72404_b");
addMapping("maxPlayers", PlayerList.class, "field_72405_c");
addMapping("commandsAllowedForAll", PlayerList.class, "field_72407_n");
addMapping("playerPingIndex", PlayerList.class, "field_72408_o");
addMapping("whiteListEnforced", PlayerList.class, "field_72409_l");
addMapping("gameType", PlayerList.class, "field_72410_m");
addMapping("whiteListedPlayers", PlayerList.class, "field_72411_j");
addMapping("playerDataManager", PlayerList.class, "field_72412_k");
addMapping("bannedIPs", PlayerList.class, "field_72413_h");
addMapping("ops", PlayerList.class, "field_72414_i");
addMapping("DATE_FORMAT", PlayerProfileCache.class, "field_152659_a");
addMapping("gson", PlayerProfileCache.class, "field_152660_b");
addMapping("usernameToProfileEntryMap", PlayerProfileCache.class, "field_152661_c");
addMapping("uuidToProfileEntryMap", PlayerProfileCache.class, "field_152662_d");
addMapping("gameProfiles", PlayerProfileCache.class, "field_152663_e");
addMapping("usercacheFile", PlayerProfileCache.class, "field_152665_g");
addMapping("TYPE", PlayerProfileCache.class, "field_152666_h");
addMapping("onlineMode", PlayerProfileCache.class, "field_187322_c");
addMapping("profileRepo", PlayerProfileCache.class, "field_187323_g");
addMapping("OLD_IPBAN_FILE", PreYggdrasilConverter.class, "field_152728_a");
addMapping("OLD_PLAYERBAN_FILE", PreYggdrasilConverter.class, "field_152729_b");
addMapping("OLD_OPS_FILE", PreYggdrasilConverter.class, "field_152730_c");
addMapping("OLD_WHITELIST_FILE", PreYggdrasilConverter.class, "field_152731_d");
addMapping("LOGGER", PreYggdrasilConverter.class, "field_152732_e");
addMapping("LOGGER", UserList.class, "field_152693_a");
addMapping("gson", UserList.class, "field_152694_b");
addMapping("saveFile", UserList.class, "field_152695_c");
addMapping("values", UserList.class, "field_152696_d");
addMapping("lanServer", UserList.class, "field_152697_e");
addMapping("USER_LIST_ENTRY_TYPE", UserList.class, "field_152698_f");
addMapping("value", UserListEntry.class, "field_152642_a");
addMapping("banEndDate", UserListEntryBan.class, "field_73692_f");
addMapping("reason", UserListEntryBan.class, "field_73693_g");
addMapping("banStartDate", UserListEntryBan.class, "field_73694_d");
addMapping("bannedBy", UserListEntryBan.class, "field_73695_e");
addMapping("DATE_FORMAT", UserListEntryBan.class, "field_73698_a");
addMapping("permissionLevel", UserListOpsEntry.class, "field_152645_a");
addMapping("bypassesPlayerLimit", UserListOpsEntry.class, "field_183025_b");
addMapping("networkManager", NetHandlerHandshakeTCP.class, "field_147386_b");
addMapping("server", NetHandlerHandshakeTCP.class, "field_147387_a");
addMapping("server", NetHandlerLoginServer.class, "field_147327_f");
addMapping("currentLoginState", NetHandlerLoginServer.class, "field_147328_g");
addMapping("RANDOM", NetHandlerLoginServer.class, "field_147329_d");
addMapping("verifyToken", NetHandlerLoginServer.class, "field_147330_e");
addMapping("AUTHENTICATOR_THREAD_ID", NetHandlerLoginServer.class, "field_147331_b");
addMapping("LOGGER", NetHandlerLoginServer.class, "field_147332_c");
addMapping("networkManager", NetHandlerLoginServer.class, "field_147333_a");
addMapping("serverId", NetHandlerLoginServer.class, "field_147334_j");
addMapping("secretKey", NetHandlerLoginServer.class, "field_147335_k");
addMapping("connectionTimer", NetHandlerLoginServer.class, "field_147336_h");
addMapping("loginGameProfile", NetHandlerLoginServer.class, "field_147337_i");
addMapping("player", NetHandlerLoginServer.class, "field_181025_l");
addMapping("networkManager", NetHandlerStatusServer.class, "field_147313_b");
addMapping("server", NetHandlerStatusServer.class, "field_147314_a");
addMapping("EXIT_MESSAGE", NetHandlerStatusServer.class, "field_183007_a");
addMapping("handled", NetHandlerStatusServer.class, "field_183008_d");
addMapping("isGuiOpen", RecipeBook.class, "field_192818_b");
addMapping("isFilteringCraftable", RecipeBook.class, "field_192819_c");
addMapping("recipes", RecipeBook.class, "field_194077_a");
addMapping("newRecipes", RecipeBook.class, "field_194078_b");
addMapping("LOGGER", RecipeBookServer.class, "field_192828_d");
addMapping("divideByTen", StatBase.class, "field_111202_k");
addMapping("serializableClazz", StatBase.class, "field_150956_d");
addMapping("objectiveCriteria", StatBase.class, "field_150957_c");
addMapping("isIndependent", StatBase.class, "field_75972_f");
addMapping("decimalFormat", StatBase.class, "field_75974_d");
addMapping("statId", StatBase.class, "field_75975_e");
addMapping("formatter", StatBase.class, "field_75976_b");
addMapping("numberFormat", StatBase.class, "field_75977_c");
addMapping("statName", StatBase.class, "field_75978_a");
addMapping("distanceStatType", StatBase.class, "field_75979_j");
addMapping("simpleStatType", StatBase.class, "field_75980_h");
addMapping("timeStatType", StatBase.class, "field_75981_i");
addMapping("item", StatCrafting.class, "field_150960_a");
addMapping("ANIMALS_BRED", StatList.class, "field_151186_x");
addMapping("FURNACE_INTERACTION", StatList.class, "field_188061_aa");
addMapping("CRAFTING_TABLE_INTERACTION", StatList.class, "field_188062_ab");
addMapping("CHEST_OPENED", StatList.class, "field_188063_ac");
addMapping("SLEEP_IN_BED", StatList.class, "field_188064_ad");
addMapping("BLOCKS_STATS", StatList.class, "field_188065_ae");
addMapping("CRAFTS_STATS", StatList.class, "field_188066_af");
addMapping("OBJECTS_PICKED_UP_STATS", StatList.class, "field_188067_ai");
addMapping("OBJECTS_DROPPED_STATS", StatList.class, "field_188068_aj");
addMapping("DEATHS", StatList.class, "field_188069_A");
addMapping("MOB_KILLS", StatList.class, "field_188070_B");
addMapping("FISH_CAUGHT", StatList.class, "field_188071_E");
addMapping("TALKED_TO_VILLAGER", StatList.class, "field_188074_H");
addMapping("TRADED_WITH_VILLAGER", StatList.class, "field_188075_I");
addMapping("CAKE_SLICES_EATEN", StatList.class, "field_188076_J");
addMapping("CAULDRON_FILLED", StatList.class, "field_188077_K");
addMapping("CAULDRON_USED", StatList.class, "field_188078_L");
addMapping("ARMOR_CLEANED", StatList.class, "field_188079_M");
addMapping("BANNER_CLEANED", StatList.class, "field_188080_N");
addMapping("BREWINGSTAND_INTERACTION", StatList.class, "field_188081_O");
addMapping("BEACON_INTERACTION", StatList.class, "field_188082_P");
addMapping("DROPPER_INSPECTED", StatList.class, "field_188083_Q");
addMapping("HOPPER_INSPECTED", StatList.class, "field_188084_R");
addMapping("DISPENSER_INSPECTED", StatList.class, "field_188085_S");
addMapping("NOTEBLOCK_PLAYED", StatList.class, "field_188086_T");
addMapping("NOTEBLOCK_TUNED", StatList.class, "field_188087_U");
addMapping("FLOWER_POTTED", StatList.class, "field_188088_V");
addMapping("TRAPPED_CHEST_TRIGGERED", StatList.class, "field_188089_W");
addMapping("ENDERCHEST_OPENED", StatList.class, "field_188090_X");
addMapping("ITEM_ENCHANTED", StatList.class, "field_188091_Y");
addMapping("RECORD_PLAYED", StatList.class, "field_188092_Z");
addMapping("ID_TO_STAT_MAP", StatList.class, "field_188093_a");
addMapping("BASIC_STATS", StatList.class, "field_188094_c");
addMapping("USE_ITEM_STATS", StatList.class, "field_188095_d");
addMapping("MINE_BLOCK_STATS", StatList.class, "field_188096_e");
addMapping("PLAY_ONE_MINUTE", StatList.class, "field_188097_g");
addMapping("TIME_SINCE_DEATH", StatList.class, "field_188098_h");
addMapping("SNEAK_TIME", StatList.class, "field_188099_i");
addMapping("WALK_ONE_CM", StatList.class, "field_188100_j");
addMapping("CROUCH_ONE_CM", StatList.class, "field_188101_k");
addMapping("SPRINT_ONE_CM", StatList.class, "field_188102_l");
addMapping("CLIMB_ONE_CM", StatList.class, "field_188103_o");
addMapping("FLY_ONE_CM", StatList.class, "field_188104_p");
addMapping("DIVE_ONE_CM", StatList.class, "field_188105_q");
addMapping("MINECART_ONE_CM", StatList.class, "field_188106_r");
addMapping("BOAT_ONE_CM", StatList.class, "field_188107_s");
addMapping("PIG_ONE_CM", StatList.class, "field_188108_t");
addMapping("HORSE_ONE_CM", StatList.class, "field_188109_u");
addMapping("AVIATE_ONE_CM", StatList.class, "field_188110_v");
addMapping("DAMAGE_DEALT", StatList.class, "field_188111_y");
addMapping("DAMAGE_TAKEN", StatList.class, "field_188112_z");
addMapping("OPEN_SHULKER_BOX", StatList.class, "field_191272_ae");
addMapping("OBJECT_USE_STATS", StatList.class, "field_75929_E");
addMapping("OBJECT_BREAK_STATS", StatList.class, "field_75930_F");
addMapping("PLAYER_KILLS", StatList.class, "field_75932_A");
addMapping("ALL_STATS", StatList.class, "field_75940_b");
addMapping("FALL_ONE_CM", StatList.class, "field_75943_n");
addMapping("SWIM_ONE_CM", StatList.class, "field_75946_m");
addMapping("LEAVE_GAME", StatList.class, "field_75947_j");
addMapping("DROP", StatList.class, "field_75952_v");
addMapping("JUMP", StatList.class, "field_75953_u");
addMapping("statsData", StatisticsManager.class, "field_150875_a");
addMapping("lastStatRequest", StatisticsManagerServer.class, "field_150885_f");
addMapping("statsFile", StatisticsManagerServer.class, "field_150887_d");
addMapping("dirty", StatisticsManagerServer.class, "field_150888_e");
addMapping("LOGGER", StatisticsManagerServer.class, "field_150889_b");
addMapping("mcServer", StatisticsManagerServer.class, "field_150890_c");
addMapping("fileName", BannerPattern.class, "field_191014_N");
addMapping("hashname", BannerPattern.class, "field_191015_O");
addMapping("patterns", BannerPattern.class, "field_191016_P");
addMapping("patternItem", BannerPattern.class, "field_191017_Q");
addMapping("customName", CommandBlockBaseLogic.class, "field_145761_f");
addMapping("lastOutput", CommandBlockBaseLogic.class, "field_145762_d");
addMapping("commandStored", CommandBlockBaseLogic.class, "field_145763_e");
addMapping("successCount", CommandBlockBaseLogic.class, "field_145764_b");
addMapping("trackOutput", CommandBlockBaseLogic.class, "field_145765_c");
addMapping("TIMESTAMP_FORMAT", CommandBlockBaseLogic.class, "field_145766_a");
addMapping("resultStats", CommandBlockBaseLogic.class, "field_175575_g");
addMapping("lastExecution", CommandBlockBaseLogic.class, "field_193041_b");
addMapping("updateLastExecution", CommandBlockBaseLogic.class, "field_193042_c");
addMapping("spawnData", MobSpawnerBaseLogic.class, "field_98282_f");
addMapping("minSpawnDelay", MobSpawnerBaseLogic.class, "field_98283_g");
addMapping("prevMobRotation", MobSpawnerBaseLogic.class, "field_98284_d");
addMapping("potentialSpawns", MobSpawnerBaseLogic.class, "field_98285_e");
addMapping("spawnDelay", MobSpawnerBaseLogic.class, "field_98286_b");
addMapping("mobRotation", MobSpawnerBaseLogic.class, "field_98287_c");
addMapping("activatingRangeFromPlayer", MobSpawnerBaseLogic.class, "field_98289_l");
addMapping("spawnRange", MobSpawnerBaseLogic.class, "field_98290_m");
addMapping("cachedEntity", MobSpawnerBaseLogic.class, "field_98291_j");
addMapping("maxNearbyEntities", MobSpawnerBaseLogic.class, "field_98292_k");
addMapping("maxSpawnDelay", MobSpawnerBaseLogic.class, "field_98293_h");
addMapping("spawnCount", MobSpawnerBaseLogic.class, "field_98294_i");
addMapping("tileEntityInvalid", TileEntity.class, "field_145846_f");
addMapping("blockMetadata", TileEntity.class, "field_145847_g");
addMapping("world", TileEntity.class, "field_145850_b");
addMapping("LOGGER", TileEntity.class, "field_145852_a");
addMapping("blockType", TileEntity.class, "field_145854_h");
addMapping("pos", TileEntity.class, "field_174879_c");
addMapping("REGISTRY", TileEntity.class, "field_190562_f");
addMapping("patterns", TileEntityBanner.class, "field_175118_f");
addMapping("patternDataSet", TileEntityBanner.class, "field_175119_g");
addMapping("baseColor", TileEntityBanner.class, "field_175120_a");
addMapping("patternResourceLocation", TileEntityBanner.class, "field_175121_j");
addMapping("patternList", TileEntityBanner.class, "field_175122_h");
addMapping("colorList", TileEntityBanner.class, "field_175123_i");
addMapping("name", TileEntityBanner.class, "field_190617_a");
addMapping("customName", TileEntityBeacon.class, "field_146008_p");
addMapping("EFFECTS_LIST", TileEntityBeacon.class, "field_146009_a");
addMapping("secondaryEffect", TileEntityBeacon.class, "field_146010_n");
addMapping("payment", TileEntityBeacon.class, "field_146011_o");
addMapping("levels", TileEntityBeacon.class, "field_146012_l");
addMapping("primaryEffect", TileEntityBeacon.class, "field_146013_m");
addMapping("beamRenderScale", TileEntityBeacon.class, "field_146014_j");
addMapping("isComplete", TileEntityBeacon.class, "field_146015_k");
addMapping("beamRenderCounter", TileEntityBeacon.class, "field_146016_i");
addMapping("beamSegments", TileEntityBeacon.class, "field_174909_f");
addMapping("VALID_EFFECTS", TileEntityBeacon.class, "field_184280_f");
addMapping("color", TileEntityBed.class, "field_193053_a");
addMapping("SLOTS_FOR_UP", TileEntityBrewingStand.class, "field_145941_a");
addMapping("customName", TileEntityBrewingStand.class, "field_145942_n");
addMapping("filledSlots", TileEntityBrewingStand.class, "field_145943_l");
addMapping("ingredientID", TileEntityBrewingStand.class, "field_145944_m");
addMapping("brewingItemStacks", TileEntityBrewingStand.class, "field_145945_j");
addMapping("brewTime", TileEntityBrewingStand.class, "field_145946_k");
addMapping("OUTPUT_SLOTS", TileEntityBrewingStand.class, "field_145947_i");
addMapping("SLOTS_FOR_DOWN", TileEntityBrewingStand.class, "field_184277_f");
addMapping("fuel", TileEntityBrewingStand.class, "field_184278_m");
addMapping("cachedChestType", TileEntityChest.class, "field_145982_r");
addMapping("ticksSinceSync", TileEntityChest.class, "field_145983_q");
addMapping("adjacentChestChecked", TileEntityChest.class, "field_145984_a");
addMapping("chestContents", TileEntityChest.class, "field_145985_p");
addMapping("prevLidAngle", TileEntityChest.class, "field_145986_n");
addMapping("numPlayersUsing", TileEntityChest.class, "field_145987_o");
addMapping("adjacentChestZPos", TileEntityChest.class, "field_145988_l");
addMapping("lidAngle", TileEntityChest.class, "field_145989_m");
addMapping("adjacentChestXPos", TileEntityChest.class, "field_145990_j");
addMapping("adjacentChestXNeg", TileEntityChest.class, "field_145991_k");
addMapping("adjacentChestZNeg", TileEntityChest.class, "field_145992_i");
addMapping("commandBlockLogic", TileEntityCommandBlock.class, "field_145994_a");
addMapping("powered", TileEntityCommandBlock.class, "field_184259_a");
addMapping("auto", TileEntityCommandBlock.class, "field_184260_f");
addMapping("conditionMet", TileEntityCommandBlock.class, "field_184261_g");
addMapping("sendToClient", TileEntityCommandBlock.class, "field_184262_h");
addMapping("outputSignal", TileEntityComparator.class, "field_145997_a");
addMapping("stacks", TileEntityDispenser.class, "field_146022_i");
addMapping("RNG", TileEntityDispenser.class, "field_174913_f");
addMapping("customName", TileEntityEnchantmentTable.class, "field_145922_s");
addMapping("rand", TileEntityEnchantmentTable.class, "field_145923_r");
addMapping("tRot", TileEntityEnchantmentTable.class, "field_145924_q");
addMapping("bookRotationPrev", TileEntityEnchantmentTable.class, "field_145925_p");
addMapping("tickCount", TileEntityEnchantmentTable.class, "field_145926_a");
addMapping("bookSpreadPrev", TileEntityEnchantmentTable.class, "field_145927_n");
addMapping("bookRotation", TileEntityEnchantmentTable.class, "field_145928_o");
addMapping("flipA", TileEntityEnchantmentTable.class, "field_145929_l");
addMapping("bookSpread", TileEntityEnchantmentTable.class, "field_145930_m");
addMapping("pageFlipPrev", TileEntityEnchantmentTable.class, "field_145931_j");
addMapping("flipT", TileEntityEnchantmentTable.class, "field_145932_k");
addMapping("pageFlip", TileEntityEnchantmentTable.class, "field_145933_i");
addMapping("LOGGER", TileEntityEndGateway.class, "field_184314_a");
addMapping("age", TileEntityEndGateway.class, "field_184315_f");
addMapping("teleportCooldown", TileEntityEndGateway.class, "field_184316_g");
addMapping("exitPortal", TileEntityEndGateway.class, "field_184317_h");
addMapping("exactTeleport", TileEntityEndGateway.class, "field_184318_i");
addMapping("lidAngle", TileEntityEnderChest.class, "field_145972_a");
addMapping("numPlayersUsing", TileEntityEnderChest.class, "field_145973_j");
addMapping("ticksSinceSync", TileEntityEnderChest.class, "field_145974_k");
addMapping("prevLidAngle", TileEntityEnderChest.class, "field_145975_i");
addMapping("flowerPotItem", TileEntityFlowerPot.class, "field_145967_a");
addMapping("flowerPotData", TileEntityFlowerPot.class, "field_145968_i");
addMapping("furnaceBurnTime", TileEntityFurnace.class, "field_145956_a");
addMapping("furnaceItemStacks", TileEntityFurnace.class, "field_145957_n");
addMapping("furnaceCustomName", TileEntityFurnace.class, "field_145958_o");
addMapping("SLOTS_BOTTOM", TileEntityFurnace.class, "field_145959_l");
addMapping("SLOTS_SIDES", TileEntityFurnace.class, "field_145960_m");
addMapping("SLOTS_TOP", TileEntityFurnace.class, "field_145962_k");
addMapping("currentItemBurnTime", TileEntityFurnace.class, "field_145963_i");
addMapping("totalCookTime", TileEntityFurnace.class, "field_174905_l");
addMapping("cookTime", TileEntityFurnace.class, "field_174906_k");
addMapping("inventory", TileEntityHopper.class, "field_145900_a");
addMapping("transferCooldown", TileEntityHopper.class, "field_145901_j");
addMapping("tickedGameTime", TileEntityHopper.class, "field_190578_g");
addMapping("code", TileEntityLockable.class, "field_174901_a");
addMapping("lootTable", TileEntityLockableLoot.class, "field_184284_m");
addMapping("lootTableSeed", TileEntityLockableLoot.class, "field_184285_n");
addMapping("customName", TileEntityLockableLoot.class, "field_190577_o");
addMapping("spawnerLogic", TileEntityMobSpawner.class, "field_145882_a");
addMapping("note", TileEntityNote.class, "field_145879_a");
addMapping("previousRedstoneState", TileEntityNote.class, "field_145880_i");
addMapping("lastProgress", TileEntityPiston.class, "field_145870_n");
addMapping("shouldHeadBeRendered", TileEntityPiston.class, "field_145872_l");
addMapping("progress", TileEntityPiston.class, "field_145873_m");
addMapping("extending", TileEntityPiston.class, "field_145875_k");
addMapping("pistonFacing", TileEntityPiston.class, "field_174931_f");
addMapping("pistonState", TileEntityPiston.class, "field_174932_a");
addMapping("MOVING_ENTITY", TileEntityPiston.class, "field_190613_i");
addMapping("destroyedByCreativePlayer", TileEntityShulkerBox.class, "field_190594_p");
addMapping("SLOTS", TileEntityShulkerBox.class, "field_190595_a");
addMapping("items", TileEntityShulkerBox.class, "field_190596_f");
addMapping("hasBeenCleared", TileEntityShulkerBox.class, "field_190597_g");
addMapping("openCount", TileEntityShulkerBox.class, "field_190598_h");
addMapping("animationStatus", TileEntityShulkerBox.class, "field_190599_i");
addMapping("progress", TileEntityShulkerBox.class, "field_190600_j");
addMapping("progressOld", TileEntityShulkerBox.class, "field_190601_k");
addMapping("color", TileEntityShulkerBox.class, "field_190602_l");
addMapping("signText", TileEntitySign.class, "field_145915_a");
addMapping("isEditable", TileEntitySign.class, "field_145916_j");
addMapping("player", TileEntitySign.class, "field_145917_k");
addMapping("lineBeingEdited", TileEntitySign.class, "field_145918_i");
addMapping("stats", TileEntitySign.class, "field_174883_i");
addMapping("skullType", TileEntitySkull.class, "field_145908_a");
addMapping("skullRotation", TileEntitySkull.class, "field_145910_i");
addMapping("playerProfile", TileEntitySkull.class, "field_152110_j");
addMapping("dragonAnimatedTicks", TileEntitySkull.class, "field_184296_h");
addMapping("dragonAnimated", TileEntitySkull.class, "field_184297_i");
addMapping("profileCache", TileEntitySkull.class, "field_184298_j");
addMapping("sessionService", TileEntitySkull.class, "field_184299_k");
addMapping("name", TileEntityStructure.class, "field_184420_a");
addMapping("author", TileEntityStructure.class, "field_184421_f");
addMapping("metadata", TileEntityStructure.class, "field_184422_g");
addMapping("position", TileEntityStructure.class, "field_184423_h");
addMapping("size", TileEntityStructure.class, "field_184424_i");
addMapping("mirror", TileEntityStructure.class, "field_184425_j");
addMapping("rotation", TileEntityStructure.class, "field_184426_k");
addMapping("mode", TileEntityStructure.class, "field_184427_l");
addMapping("ignoreEntities", TileEntityStructure.class, "field_184428_m");
addMapping("powered", TileEntityStructure.class, "field_189727_n");
addMapping("showAir", TileEntityStructure.class, "field_189728_o");
addMapping("showBoundingBox", TileEntityStructure.class, "field_189729_p");
addMapping("integrity", TileEntityStructure.class, "field_189730_q");
addMapping("seed", TileEntityStructure.class, "field_189731_r");
addMapping("type", ActionResult.class, "field_188399_a");
addMapping("result", ActionResult.class, "field_188400_b");
addMapping("longArray", BitArray.class, "field_188145_a");
addMapping("bitsPerEntry", BitArray.class, "field_188146_b");
addMapping("maxEntryValue", BitArray.class, "field_188147_c");
addMapping("arraySize", BitArray.class, "field_188148_d");
addMapping("layerName", BlockRenderLayer.class, "field_180338_e");
addMapping("NETTY_LEAK_DETECTION", ChatAllowedCharacters.class, "field_184877_a");
addMapping("ILLEGAL_STRUCTURE_CHARACTERS", ChatAllowedCharacters.class, "field_189861_b");
addMapping("ILLEGAL_FILE_CHARACTERS", ChatAllowedCharacters.class, "field_71567_b");
addMapping("knownKeys", ClassInheritanceMultiMap.class, "field_180216_b");
addMapping("baseClass", ClassInheritanceMultiMap.class, "field_180217_c");
addMapping("map", ClassInheritanceMultiMap.class, "field_180218_a");
addMapping("ALL_KNOWN", ClassInheritanceMultiMap.class, "field_181158_a");
addMapping("values", ClassInheritanceMultiMap.class, "field_181745_e");
addMapping("fallDistance", CombatEntry.class, "field_94564_f");
addMapping("health", CombatEntry.class, "field_94565_d");
addMapping("fallSuffix", CombatEntry.class, "field_94566_e");
addMapping("time", CombatEntry.class, "field_94567_b");
addMapping("damage", CombatEntry.class, "field_94568_c");
addMapping("damageSrc", CombatEntry.class, "field_94569_a");
addMapping("combatStartTime", CombatTracker.class, "field_152775_d");
addMapping("combatEndTime", CombatTracker.class, "field_152776_e");
addMapping("fallSuffix", CombatTracker.class, "field_94551_f");
addMapping("inCombat", CombatTracker.class, "field_94552_d");
addMapping("takingDamage", CombatTracker.class, "field_94553_e");
addMapping("fighter", CombatTracker.class, "field_94554_b");
addMapping("lastDamageTime", CombatTracker.class, "field_94555_c");
addMapping("combatEntries", CombatTracker.class, "field_94556_a");
addMapping("cooldowns", CooldownTracker.class, "field_185147_a");
addMapping("ticks", CooldownTracker.class, "field_185148_b");
addMapping("player", CooldownTrackerServer.class, "field_185149_a");
addMapping("LOGGER", CryptManager.class, "field_180198_a");
addMapping("damageIsAbsolute", DamageSource.class, "field_151520_r");
addMapping("LIGHTNING_BOLT", DamageSource.class, "field_180137_b");
addMapping("FLY_INTO_WALL", DamageSource.class, "field_188406_j");
addMapping("DRAGON_BREATH", DamageSource.class, "field_188407_q");
addMapping("HOT_FLOOR", DamageSource.class, "field_190095_e");
addMapping("CRAMMING", DamageSource.class, "field_191291_g");
addMapping("FIREWORKS", DamageSource.class, "field_191552_t");
addMapping("STARVE", DamageSource.class, "field_76366_f");
addMapping("CACTUS", DamageSource.class, "field_76367_g");
addMapping("IN_WALL", DamageSource.class, "field_76368_d");
addMapping("DROWN", DamageSource.class, "field_76369_e");
addMapping("ON_FIRE", DamageSource.class, "field_76370_b");
addMapping("LAVA", DamageSource.class, "field_76371_c");
addMapping("IN_FIRE", DamageSource.class, "field_76372_a");
addMapping("damageType", DamageSource.class, "field_76373_n");
addMapping("isUnblockable", DamageSource.class, "field_76374_o");
addMapping("MAGIC", DamageSource.class, "field_76376_m");
addMapping("GENERIC", DamageSource.class, "field_76377_j");
addMapping("explosion", DamageSource.class, "field_76378_k");
addMapping("FALL", DamageSource.class, "field_76379_h");
addMapping("OUT_OF_WORLD", DamageSource.class, "field_76380_i");
addMapping("difficultyScaled", DamageSource.class, "field_76381_t");
addMapping("projectile", DamageSource.class, "field_76382_s");
addMapping("fireDamage", DamageSource.class, "field_76383_r");
addMapping("hungerDamage", DamageSource.class, "field_76384_q");
addMapping("isDamageAllowedInCreativeMode", DamageSource.class, "field_76385_p");
addMapping("WITHER", DamageSource.class, "field_82727_n");
addMapping("ANVIL", DamageSource.class, "field_82728_o");
addMapping("FALLING_BLOCK", DamageSource.class, "field_82729_p");
addMapping("magicDamage", DamageSource.class, "field_82730_x");
addMapping("rand", EnchantmentNameParts.class, "field_148336_b");
addMapping("namePartsArray", EnchantmentNameParts.class, "field_148337_c");
addMapping("INSTANCE", EnchantmentNameParts.class, "field_148338_a");
addMapping("isThornsDamage", EntityDamageSource.class, "field_180140_r");
addMapping("damageSourceEntity", EntityDamageSource.class, "field_76386_o");
addMapping("indirectEntity", EntityDamageSourceIndirect.class, "field_76387_p");
addMapping("IS_STANDALONE", EntitySelectors.class, "field_152785_b");
addMapping("NOT_SPECTATING", EntitySelectors.class, "field_180132_d");
addMapping("CAN_AI_TARGET", EntitySelectors.class, "field_188444_d");
addMapping("IS_ALIVE", EntitySelectors.class, "field_94557_a");
addMapping("HAS_INVENTORY", EntitySelectors.class, "field_96566_b");
addMapping("index", EnumFacing.class, "field_176748_g");
addMapping("HORIZONTALS", EnumFacing.class, "field_176754_o");
addMapping("axisDirection", EnumFacing.class, "field_176755_l");
addMapping("directionVec", EnumFacing.class, "field_176756_m");
addMapping("name", EnumFacing.class, "field_176757_j");
addMapping("axis", EnumFacing.class, "field_176758_k");
addMapping("opposite", EnumFacing.class, "field_176759_h");
addMapping("horizontalIndex", EnumFacing.class, "field_176760_i");
addMapping("NAME_LOOKUP", EnumFacing.class, "field_176761_p");
addMapping("VALUES", EnumFacing.class, "field_82609_l");
addMapping("handName", EnumHandSide.class, "field_188471_c");
addMapping("PARTICLES", EnumParticleTypes.class, "field_179365_U");
addMapping("argumentCount", EnumParticleTypes.class, "field_179366_T");
addMapping("particleName", EnumParticleTypes.class, "field_179369_Q");
addMapping("shouldIgnoreRange", EnumParticleTypes.class, "field_179371_S");
addMapping("particleID", EnumParticleTypes.class, "field_179372_R");
addMapping("BY_NAME", EnumParticleTypes.class, "field_186837_Z");
addMapping("foodTimer", FoodStats.class, "field_75123_d");
addMapping("prevFoodLevel", FoodStats.class, "field_75124_e");
addMapping("foodSaturationLevel", FoodStats.class, "field_75125_b");
addMapping("foodExhaustionLevel", FoodStats.class, "field_75126_c");
addMapping("foodLevel", FoodStats.class, "field_75127_a");
addMapping("frames", FrameTimer.class, "field_181752_a");
addMapping("lastIndex", FrameTimer.class, "field_181753_b");
addMapping("counter", FrameTimer.class, "field_181754_c");
addMapping("index", FrameTimer.class, "field_181755_d");
addMapping("LOGGER", HttpUtil.class, "field_151227_b");
addMapping("DOWNLOAD_THREADS_STARTED", HttpUtil.class, "field_151228_a");
addMapping("DOWNLOADER_EXECUTOR", HttpUtil.class, "field_180193_a");
addMapping("growFactor", IntHashMap.class, "field_76051_d");
addMapping("count", IntHashMap.class, "field_76053_b");
addMapping("threshold", IntHashMap.class, "field_76054_c");
addMapping("slots", IntHashMap.class, "field_76055_a");
addMapping("EMPTY", IntIdentityHashBiMap.class, "field_186817_a");
addMapping("values", IntIdentityHashBiMap.class, "field_186818_b");
addMapping("intKeys", IntIdentityHashBiMap.class, "field_186819_c");
addMapping("byId", IntIdentityHashBiMap.class, "field_186820_d");
addMapping("nextFreeIndex", IntIdentityHashBiMap.class, "field_186821_e");
addMapping("mapSize", IntIdentityHashBiMap.class, "field_186822_f");
addMapping("CACHE", IntegerCache.class, "field_181757_a");
addMapping("isLoaded", LazyLoadBase.class, "field_179282_b");
addMapping("value", LazyLoadBase.class, "field_179283_a");
addMapping("domain", LoggingPrintStream.class, "field_179883_b");
addMapping("LOGGER", LoggingPrintStream.class, "field_179884_a");
addMapping("internalMap", LowerStringMap.class, "field_76117_a");
addMapping("name", Mirror.class, "field_185807_d");
addMapping("mirrorNames", Mirror.class, "field_185808_e");
addMapping("remainingValue", MouseFilter.class, "field_76334_b");
addMapping("lastAmount", MouseFilter.class, "field_76335_c");
addMapping("targetValue", MouseFilter.class, "field_76336_a");
addMapping("deltaY", MouseHelper.class, "field_74375_b");
addMapping("deltaX", MouseHelper.class, "field_74377_a");
addMapping("forwardKeyDown", MovementInput.class, "field_187255_c");
addMapping("backKeyDown", MovementInput.class, "field_187256_d");
addMapping("leftKeyDown", MovementInput.class, "field_187257_e");
addMapping("rightKeyDown", MovementInput.class, "field_187258_f");
addMapping("moveForward", MovementInput.class, "field_192832_b");
addMapping("sneak", MovementInput.class, "field_78899_d");
addMapping("jump", MovementInput.class, "field_78901_c");
addMapping("moveStrafe", MovementInput.class, "field_78902_a");
addMapping("gameSettings", MovementInputFromOptions.class, "field_78903_e");
addMapping("delegate", NonNullList.class, "field_191198_a");
addMapping("defaultElement", NonNullList.class, "field_191199_b");
addMapping("objectList", ObjectIntIdentityMap.class, "field_148748_b");
addMapping("identityMap", ObjectIntIdentityMap.class, "field_148749_a");
addMapping("crashReport", ReportedException.class, "field_71576_a");
addMapping("resourcePath", ResourceLocation.class, "field_110625_b");
addMapping("resourceDomain", ResourceLocation.class, "field_110626_a");
addMapping("name", Rotation.class, "field_185838_e");
addMapping("rotationNames", Rotation.class, "field_185839_f");
addMapping("LOGGER", ScreenShotHelper.class, "field_148261_a");
addMapping("pixelBuffer", ScreenShotHelper.class, "field_74293_b");
addMapping("pixelValues", ScreenShotHelper.class, "field_74294_c");
addMapping("DATE_FORMAT", ScreenShotHelper.class, "field_74295_a");
addMapping("playerID", Session.class, "field_148257_b");
addMapping("token", Session.class, "field_148258_c");
addMapping("sessionType", Session.class, "field_152429_d");
addMapping("username", Session.class, "field_74286_b");
addMapping("SOUND_CATEGORIES", SoundCategory.class, "field_187961_k");
addMapping("name", SoundCategory.class, "field_187962_l");
addMapping("REGISTRY", SoundEvent.class, "field_187505_a");
addMapping("soundName", SoundEvent.class, "field_187506_b");
addMapping("soundEventId", SoundEvent.class, "field_187507_c");
addMapping("PATTERN_CONTROL_CODE", StringUtils.class, "field_76339_a");
addMapping("textField", TabCompleter.class, "field_186844_a");
addMapping("hasTargetBlock", TabCompleter.class, "field_186845_b");
addMapping("didComplete", TabCompleter.class, "field_186846_c");
addMapping("requestedCompletions", TabCompleter.class, "field_186847_d");
addMapping("completionIdx", TabCompleter.class, "field_186848_e");
addMapping("completions", TabCompleter.class, "field_186849_f");
addMapping("renderPartialTicks", Timer.class, "field_194147_b");
addMapping("elapsedPartialTicks", Timer.class, "field_194148_c");
addMapping("tickLength", Timer.class, "field_194149_e");
addMapping("lastSyncSysClock", Timer.class, "field_74277_g");
addMapping("elapsedTicks", Timer.class, "field_74280_b");
addMapping("jsonSerializableValue", TupleIntJsonSerializable.class, "field_151191_b");
addMapping("integerValue", TupleIntJsonSerializable.class, "field_151192_a");
addMapping("nbt", WeightedSpawnerEntity.class, "field_185279_b");
addMapping("LOGGER", DataFixer.class, "field_188259_a");
addMapping("walkerMap", DataFixer.class, "field_188260_b");
addMapping("fixMap", DataFixer.class, "field_188261_c");
addMapping("version", DataFixer.class, "field_188262_d");
addMapping("LOGGER", AddBedTileEntity.class, "field_193842_a");
addMapping("WRONG", CookedFishIDTypo.class, "field_190050_a");
addMapping("ENTITY_LIST", EntityHealth.class, "field_188218_a");
addMapping("OLD_TO_NEW_ID_MAP", EntityId.class, "field_191276_a");
addMapping("ID_MAP", ItemIntIDToString.class, "field_188221_a");
addMapping("MINECART_TYPE_LIST", MinecartEntityTypes.class, "field_188222_a");
addMapping("POTION_IDS", PotionItems.class, "field_188223_a");
addMapping("NAMES_BY_COLOR", ShulkerBoxItemColor.class, "field_191278_a");
addMapping("GSON_INSTANCE", SignStrictJSON.class, "field_188225_a");
addMapping("ENTITY_IDS", SpawnEggNames.class, "field_188226_a");
addMapping("OLD_TO_NEW_ID_MAP", TileEntityId.class, "field_191275_a");
addMapping("RANDOM", ZombieProfToType.class, "field_190049_a");
addMapping("LOGGER", BlockEntityTag.class, "field_188268_a");
addMapping("ITEM_ID_TO_BLOCK_ENTITY_ID", BlockEntityTag.class, "field_188269_b");
addMapping("NEW_TO_OLD_ID_MAP", BlockEntityTag.class, "field_190892_b");
addMapping("LOGGER", EntityTag.class, "field_188270_a");
addMapping("key", Filtered.class, "field_188272_a");
addMapping("matchingTags", ItemStackData.class, "field_188274_a");
addMapping("matchingTags", ItemStackDataLists.class, "field_188275_a");
addMapping("maxZ", AxisAlignedBB.class, "field_72334_f");
addMapping("maxX", AxisAlignedBB.class, "field_72336_d");
addMapping("maxY", AxisAlignedBB.class, "field_72337_e");
addMapping("minY", AxisAlignedBB.class, "field_72338_b");
addMapping("minZ", AxisAlignedBB.class, "field_72339_c");
addMapping("minX", AxisAlignedBB.class, "field_72340_a");
addMapping("Y_SHIFT", BlockPos.class, "field_177987_f");
addMapping("X_SHIFT", BlockPos.class, "field_177988_g");
addMapping("NUM_Y_BITS", BlockPos.class, "field_177989_d");
addMapping("NUM_X_BITS", BlockPos.class, "field_177990_b");
addMapping("NUM_Z_BITS", BlockPos.class, "field_177991_c");
addMapping("ORIGIN", BlockPos.class, "field_177992_a");
addMapping("Z_MASK", BlockPos.class, "field_177993_j");
addMapping("X_MASK", BlockPos.class, "field_177994_h");
addMapping("Y_MASK", BlockPos.class, "field_177995_i");
addMapping("LOGGER", BlockPos.class, "field_185335_c");
addMapping("z", ChunkPos.class, "field_77275_b");
addMapping("x", ChunkPos.class, "field_77276_a");
addMapping("MULTIPLY_DE_BRUIJN_BIT_POSITION", MathHelper.class, "field_151242_b");
addMapping("SQRT_2", MathHelper.class, "field_180189_a");
addMapping("FRAC_BIAS", MathHelper.class, "field_181163_d");
addMapping("ASINE_TAB", MathHelper.class, "field_181164_e");
addMapping("COS_TAB", MathHelper.class, "field_181165_f");
addMapping("RANDOM", MathHelper.class, "field_188211_c");
addMapping("SIN_TABLE", MathHelper.class, "field_76144_a");
addMapping("blockPos", RayTraceResult.class, "field_178783_e");
addMapping("sideHit", RayTraceResult.class, "field_178784_b");
addMapping("hitVec", RayTraceResult.class, "field_72307_f");
addMapping("entityHit", RayTraceResult.class, "field_72308_g");
addMapping("typeOfHit", RayTraceResult.class, "field_72313_a");
addMapping("y", Rotations.class, "field_179417_b");
addMapping("z", Rotations.class, "field_179418_c");
addMapping("x", Rotations.class, "field_179419_a");
addMapping("ZERO", Vec2f.class, "field_189974_a");
addMapping("ONE", Vec2f.class, "field_189975_b");
addMapping("UNIT_X", Vec2f.class, "field_189976_c");
addMapping("NEGATIVE_UNIT_X", Vec2f.class, "field_189977_d");
addMapping("UNIT_Y", Vec2f.class, "field_189978_e");
addMapping("NEGATIVE_UNIT_Y", Vec2f.class, "field_189979_f");
addMapping("MAX", Vec2f.class, "field_189980_g");
addMapping("MIN", Vec2f.class, "field_189981_h");
addMapping("x", Vec2f.class, "field_189982_i");
addMapping("y", Vec2f.class, "field_189983_j");
addMapping("ZERO", Vec3d.class, "field_186680_a");
addMapping("y", Vec3d.class, "field_72448_b");
addMapping("z", Vec3d.class, "field_72449_c");
addMapping("x", Vec3d.class, "field_72450_a");
addMapping("NULL_VECTOR", Vec3i.class, "field_177959_e");
addMapping("y", Vec3i.class, "field_177960_b");
addMapping("z", Vec3i.class, "field_177961_c");
addMapping("x", Vec3i.class, "field_177962_a");
addMapping("defaultObject", RegistryDefaulted.class, "field_82597_b");
addMapping("inverseObjectRegistry", RegistryNamespaced.class, "field_148758_b");
addMapping("underlyingIntegerMap", RegistryNamespaced.class, "field_148759_a");
addMapping("defaultValueKey", RegistryNamespacedDefaultedByKey.class, "field_148760_d");
addMapping("defaultValue", RegistryNamespacedDefaultedByKey.class, "field_148761_e");
addMapping("LOGGER", RegistrySimple.class, "field_148743_a");
addMapping("values", RegistrySimple.class, "field_186802_b");
addMapping("registryObjects", RegistrySimple.class, "field_82596_a");
addMapping("id", ChatType.class, "field_192588_d");
addMapping("strikethrough", Style.class, "field_150243_f");
addMapping("obfuscated", Style.class, "field_150244_g");
addMapping("italic", Style.class, "field_150245_d");
addMapping("underlined", Style.class, "field_150246_e");
addMapping("color", Style.class, "field_150247_b");
addMapping("bold", Style.class, "field_150248_c");
addMapping("parentStyle", Style.class, "field_150249_a");
addMapping("ROOT", Style.class, "field_150250_j");
addMapping("clickEvent", Style.class, "field_150251_h");
addMapping("hoverEvent", Style.class, "field_150252_i");
addMapping("insertion", Style.class, "field_179990_j");
addMapping("style", TextComponentBase.class, "field_150263_b");
addMapping("siblings", TextComponentBase.class, "field_150264_a");
addMapping("displaySupplierFunction", TextComponentKeybind.class, "field_193637_b");
addMapping("keybind", TextComponentKeybind.class, "field_193638_c");
addMapping("displaySupplier", TextComponentKeybind.class, "field_193639_d");
addMapping("value", TextComponentScore.class, "field_179998_d");
addMapping("name", TextComponentScore.class, "field_179999_b");
addMapping("objective", TextComponentScore.class, "field_180000_c");
addMapping("selector", TextComponentSelector.class, "field_179993_b");
addMapping("text", TextComponentString.class, "field_150267_b");
addMapping("syncLock", TextComponentTranslation.class, "field_150274_f");
addMapping("lastTranslationUpdateTimeInMilliseconds", TextComponentTranslation.class, "field_150275_g");
addMapping("key", TextComponentTranslation.class, "field_150276_d");
addMapping("formatArgs", TextComponentTranslation.class, "field_150277_e");
addMapping("children", TextComponentTranslation.class, "field_150278_b");
addMapping("STRING_VARIABLE_PATTERN", TextComponentTranslation.class, "field_150279_c");
addMapping("colorIndex", TextFormatting.class, "field_175747_C");
addMapping("name", TextFormatting.class, "field_175748_y");
addMapping("fancyStyling", TextFormatting.class, "field_96303_A");
addMapping("controlString", TextFormatting.class, "field_96304_B");
addMapping("formattingCode", TextFormatting.class, "field_96329_z");
addMapping("FORMATTING_CODE_PATTERN", TextFormatting.class, "field_96330_y");
addMapping("NAME_MAPPING", TextFormatting.class, "field_96331_x");
addMapping("value", ClickEvent.class, "field_150670_b");
addMapping("action", ClickEvent.class, "field_150671_a");
addMapping("value", HoverEvent.class, "field_150703_b");
addMapping("action", HoverEvent.class, "field_150704_a");
addMapping("fallbackTranslator", I18n.class, "field_150828_b");
addMapping("localizedName", I18n.class, "field_74839_a");
addMapping("NUMERIC_VARIABLE_PATTERN", LanguageMap.class, "field_111053_a");
addMapping("EQUAL_SIGN_SPLITTER", LanguageMap.class, "field_135065_b");
addMapping("lastUpdateTimeInMilliseconds", LanguageMap.class, "field_150511_e");
addMapping("languageList", LanguageMap.class, "field_74816_c");
addMapping("instance", LanguageMap.class, "field_74817_a");
addMapping("rewardsExp", MerchantRecipe.class, "field_180323_f");
addMapping("toolUses", MerchantRecipe.class, "field_77400_d");
addMapping("secondItemToBuy", MerchantRecipe.class, "field_77401_b");
addMapping("itemToSell", MerchantRecipe.class, "field_77402_c");
addMapping("itemToBuy", MerchantRecipe.class, "field_77403_a");
addMapping("maxTradeUses", MerchantRecipe.class, "field_82786_e");
addMapping("lastAddDoorTimestamp", Village.class, "field_75580_f");
addMapping("tickCounter", Village.class, "field_75581_g");
addMapping("center", Village.class, "field_75582_d");
addMapping("villageRadius", Village.class, "field_75583_e");
addMapping("villageDoorInfoList", Village.class, "field_75584_b");
addMapping("centerHelper", Village.class, "field_75585_c");
addMapping("world", Village.class, "field_75586_a");
addMapping("numIronGolems", Village.class, "field_75587_j");
addMapping("numVillagers", Village.class, "field_75588_h");
addMapping("villageAgressors", Village.class, "field_75589_i");
addMapping("playerReputation", Village.class, "field_82693_j");
addMapping("noBreedTicks", Village.class, "field_82694_i");
addMapping("villageList", VillageCollection.class, "field_75552_d");
addMapping("tickCounter", VillageCollection.class, "field_75553_e");
addMapping("villagerPositionsList", VillageCollection.class, "field_75554_b");
addMapping("newDoors", VillageCollection.class, "field_75555_c");
addMapping("world", VillageCollection.class, "field_75556_a");
addMapping("insideBlock", VillageDoorInfo.class, "field_179857_b");
addMapping("insideDirection", VillageDoorInfo.class, "field_179858_c");
addMapping("doorBlockPos", VillageDoorInfo.class, "field_179859_a");
addMapping("lastActivityTimestamp", VillageDoorInfo.class, "field_75475_f");
addMapping("isDetachedFromVillageFlag", VillageDoorInfo.class, "field_75476_g");
addMapping("doorOpeningRestrictionCounter", VillageDoorInfo.class, "field_75482_h");
addMapping("village", VillageSiege.class, "field_75531_f");
addMapping("spawnX", VillageSiege.class, "field_75532_g");
addMapping("siegeCount", VillageSiege.class, "field_75533_d");
addMapping("nextSpawnTime", VillageSiege.class, "field_75534_e");
addMapping("hasSetupSiege", VillageSiege.class, "field_75535_b");
addMapping("siegeState", VillageSiege.class, "field_75536_c");
addMapping("world", VillageSiege.class, "field_75537_a");
addMapping("spawnY", VillageSiege.class, "field_75538_h");
addMapping("spawnZ", VillageSiege.class, "field_75539_i");
addMapping("name", BossInfo.class, "field_186749_a");
addMapping("percent", BossInfo.class, "field_186750_b");
addMapping("color", BossInfo.class, "field_186751_c");
addMapping("overlay", BossInfo.class, "field_186752_d");
addMapping("darkenSky", BossInfo.class, "field_186753_e");
addMapping("playEndBossMusic", BossInfo.class, "field_186754_f");
addMapping("createFog", BossInfo.class, "field_186755_g");
addMapping("uniqueId", BossInfo.class, "field_186756_h");
addMapping("players", BossInfoServer.class, "field_186762_h");
addMapping("readOnlyPlayers", BossInfoServer.class, "field_186763_i");
addMapping("visible", BossInfoServer.class, "field_186764_j");
addMapping("empty", ChunkCache.class, "field_72814_d");
addMapping("world", ChunkCache.class, "field_72815_e");
addMapping("chunkZ", ChunkCache.class, "field_72816_b");
addMapping("chunkArray", ChunkCache.class, "field_72817_c");
addMapping("chunkX", ChunkCache.class, "field_72818_a");
addMapping("foliageBuffer", ColorizerFoliage.class, "field_77471_a");
addMapping("grassBuffer", ColorizerGrass.class, "field_77481_a");
addMapping("additionalDifficulty", DifficultyInstance.class, "field_180171_b");
addMapping("worldDifficulty", DifficultyInstance.class, "field_180172_a");
addMapping("id", DimensionType.class, "field_186074_d");
addMapping("name", DimensionType.class, "field_186075_e");
addMapping("suffix", DimensionType.class, "field_186076_f");
addMapping("clazz", DimensionType.class, "field_186077_g");
addMapping("difficultyId", EnumDifficulty.class, "field_151527_f");
addMapping("difficultyResourceKey", EnumDifficulty.class, "field_151528_g");
addMapping("ID_MAPPING", EnumDifficulty.class, "field_151530_e");
addMapping("defaultLightValue", EnumSkyBlock.class, "field_77198_c");
addMapping("size", Explosion.class, "field_77280_f");
addMapping("affectedBlockPositions", Explosion.class, "field_77281_g");
addMapping("z", Explosion.class, "field_77282_d");
addMapping("exploder", Explosion.class, "field_77283_e");
addMapping("x", Explosion.class, "field_77284_b");
addMapping("y", Explosion.class, "field_77285_c");
addMapping("causesFire", Explosion.class, "field_77286_a");
addMapping("world", Explosion.class, "field_77287_j");
addMapping("playerKnockbackMap", Explosion.class, "field_77288_k");
addMapping("random", Explosion.class, "field_77290_i");
addMapping("damagesTerrain", Explosion.class, "field_82755_b");
addMapping("rules", GameRules.class, "field_82771_a");
addMapping("shortName", GameType.class, "field_185330_h");
addMapping("name", GameType.class, "field_77151_f");
addMapping("id", GameType.class, "field_77154_e");
addMapping("lock", LockCode.class, "field_180161_b");
addMapping("EMPTY_CODE", LockCode.class, "field_180162_a");
addMapping("block", NextTickListEntry.class, "field_151352_g");
addMapping("position", NextTickListEntry.class, "field_180282_a");
addMapping("nextTickEntryID", NextTickListEntry.class, "field_77177_f");
addMapping("tickEntryID", NextTickListEntry.class, "field_77178_g");
addMapping("scheduledTime", NextTickListEntry.class, "field_77180_e");
addMapping("priority", NextTickListEntry.class, "field_82754_f");
addMapping("world", ServerWorldEventHandler.class, "field_72782_b");
addMapping("mcServer", ServerWorldEventHandler.class, "field_72783_a");
addMapping("random", Teleporter.class, "field_77187_a");
addMapping("destinationCoordinateCache", Teleporter.class, "field_85191_c");
addMapping("world", Teleporter.class, "field_85192_a");
addMapping("processingLoadedTiles", World.class, "field_147481_N");
addMapping("loadedTileEntityList", World.class, "field_147482_g");
addMapping("tileEntitiesToBeRemoved", World.class, "field_147483_b");
addMapping("addedTileEntityList", World.class, "field_147484_a");
addMapping("worldBorder", World.class, "field_175728_M");
addMapping("entitiesById", World.class, "field_175729_l");
addMapping("tickableTileEntities", World.class, "field_175730_i");
addMapping("seaLevel", World.class, "field_181546_a");
addMapping("lootTable", World.class, "field_184151_B");
addMapping("pathListener", World.class, "field_184152_t");
addMapping("advancementManager", World.class, "field_191951_C");
addMapping("functionManager", World.class, "field_193036_D");
addMapping("villageCollection", World.class, "field_72982_D");
addMapping("profiler", World.class, "field_72984_F");
addMapping("spawnHostileMobs", World.class, "field_72985_G");
addMapping("worldInfo", World.class, "field_72986_A");
addMapping("findingSpawnPoint", World.class, "field_72987_B");
addMapping("mapStorage", World.class, "field_72988_C");
addMapping("spawnPeacefulMobs", World.class, "field_72992_H");
addMapping("lightUpdateBlockList", World.class, "field_72994_J");
addMapping("isRemote", World.class, "field_72995_K");
addMapping("loadedEntityList", World.class, "field_72996_f");
addMapping("unloadedEntityList", World.class, "field_72997_g");
addMapping("scheduledUpdatesAreImmediate", World.class, "field_72999_e");
addMapping("cloudColour", World.class, "field_73001_c");
addMapping("prevRainingStrength", World.class, "field_73003_n");
addMapping("rainingStrength", World.class, "field_73004_o");
addMapping("updateLCG", World.class, "field_73005_l");
addMapping("DIST_HASH_MAGIC", World.class, "field_73006_m");
addMapping("weatherEffects", World.class, "field_73007_j");
addMapping("skylightSubtracted", World.class, "field_73008_k");
addMapping("playerEntities", World.class, "field_73010_i");
addMapping("provider", World.class, "field_73011_w");
addMapping("rand", World.class, "field_73012_v");
addMapping("lastLightningBolt", World.class, "field_73016_r");
addMapping("thunderingStrength", World.class, "field_73017_q");
addMapping("prevThunderingStrength", World.class, "field_73018_p");
addMapping("saveHandler", World.class, "field_73019_z");
addMapping("chunkProvider", World.class, "field_73020_y");
addMapping("eventListeners", World.class, "field_73021_x");
addMapping("calendar", World.class, "field_83016_L");
addMapping("worldScoreboard", World.class, "field_96442_D");
addMapping("MOB_COUNT_DIV", WorldEntitySpawner.class, "field_180268_a");
addMapping("eligibleChunksForSpawning", WorldEntitySpawner.class, "field_77193_b");
addMapping("MOON_PHASE_FACTORS", WorldProvider.class, "field_111203_a");
addMapping("hasSkyLight", WorldProvider.class, "field_191067_f");
addMapping("lightBrightnessTable", WorldProvider.class, "field_76573_f");
addMapping("doesWaterVaporize", WorldProvider.class, "field_76575_d");
addMapping("nether", WorldProvider.class, "field_76576_e");
addMapping("terrainType", WorldProvider.class, "field_76577_b");
addMapping("biomeProvider", WorldProvider.class, "field_76578_c");
addMapping("world", WorldProvider.class, "field_76579_a");
addMapping("colorsSunriseSunset", WorldProvider.class, "field_76580_h");
addMapping("generatorSettings", WorldProvider.class, "field_82913_c");
addMapping("dragonFightManager", WorldProviderEnd.class, "field_186064_g");
addMapping("blockEventCacheIndex", WorldServer.class, "field_147489_T");
addMapping("blockEventQueue", WorldServer.class, "field_147490_S");
addMapping("LOGGER", WorldServer.class, "field_147491_a");
addMapping("villageSiege", WorldServer.class, "field_175740_d");
addMapping("entitiesByUuid", WorldServer.class, "field_175741_N");
addMapping("entitySpawner", WorldServer.class, "field_175742_R");
addMapping("disableLevelSaving", WorldServer.class, "field_73058_d");
addMapping("mcServer", WorldServer.class, "field_73061_a");
addMapping("entityTracker", WorldServer.class, "field_73062_L");
addMapping("playerChunkMap", WorldServer.class, "field_73063_M");
addMapping("pendingTickListEntriesHashSet", WorldServer.class, "field_73064_N");
addMapping("pendingTickListEntriesTreeSet", WorldServer.class, "field_73065_O");
addMapping("allPlayersSleeping", WorldServer.class, "field_73068_P");
addMapping("updateEntityTick", WorldServer.class, "field_80004_Q");
addMapping("worldTeleporter", WorldServer.class, "field_85177_Q");
addMapping("pendingTickListEntriesThisTick", WorldServer.class, "field_94579_S");
addMapping("DEMO_WORLD_SETTINGS", WorldServerDemo.class, "field_73071_a");
addMapping("DEMO_WORLD_SEED", WorldServerDemo.class, "field_73072_L");
addMapping("delegate", WorldServerMulti.class, "field_175743_a");
addMapping("commandsAllowed", WorldSettings.class, "field_77168_f");
addMapping("bonusChestEnabled", WorldSettings.class, "field_77169_g");
addMapping("hardcoreEnabled", WorldSettings.class, "field_77170_d");
addMapping("terrainType", WorldSettings.class, "field_77171_e");
addMapping("gameType", WorldSettings.class, "field_77172_b");
addMapping("mapFeaturesEnabled", WorldSettings.class, "field_77173_c");
addMapping("seed", WorldSettings.class, "field_77174_a");
addMapping("generatorOptions", WorldSettings.class, "field_82751_h");
addMapping("AMPLIFIED", WorldType.class, "field_151360_e");
addMapping("hasInfoNotice", WorldType.class, "field_151361_l");
addMapping("CUSTOMIZED", WorldType.class, "field_180271_f");
addMapping("DEBUG_ALL_BLOCK_STATES", WorldType.class, "field_180272_g");
addMapping("name", WorldType.class, "field_77133_f");
addMapping("version", WorldType.class, "field_77134_g");
addMapping("LARGE_BIOMES", WorldType.class, "field_77135_d");
addMapping("DEFAULT_1_1", WorldType.class, "field_77136_e");
addMapping("DEFAULT", WorldType.class, "field_77137_b");
addMapping("FLAT", WorldType.class, "field_77138_c");
addMapping("WORLD_TYPES", WorldType.class, "field_77139_a");
addMapping("canBeCreated", WorldType.class, "field_77140_h");
addMapping("versioned", WorldType.class, "field_77141_i");
addMapping("id", WorldType.class, "field_82748_f");
addMapping("LOGGER", Biome.class, "field_150586_aC");
addMapping("TEMPERATURE_NOISE", Biome.class, "field_150605_ac");
addMapping("DOUBLE_PLANT_GENERATOR", Biome.class, "field_180280_ag");
addMapping("GRASS_COLOR_NOISE", Biome.class, "field_180281_af");
addMapping("baseBiomeRegName", Biome.class, "field_185364_H");
addMapping("STONE", Biome.class, "field_185365_a");
addMapping("AIR", Biome.class, "field_185366_b");
addMapping("BEDROCK", Biome.class, "field_185367_c");
addMapping("GRAVEL", Biome.class, "field_185368_d");
addMapping("RED_SANDSTONE", Biome.class, "field_185369_e");
addMapping("SANDSTONE", Biome.class, "field_185370_f");
addMapping("ICE", Biome.class, "field_185371_g");
addMapping("WATER", Biome.class, "field_185372_h");
addMapping("MUTATION_TO_BASE_ID_MAP", Biome.class, "field_185373_j");
addMapping("REGISTRY", Biome.class, "field_185377_q");
addMapping("baseHeight", Biome.class, "field_76748_D");
addMapping("heightVariation", Biome.class, "field_76749_E");
addMapping("temperature", Biome.class, "field_76750_F");
addMapping("rainfall", Biome.class, "field_76751_G");
addMapping("topBlock", Biome.class, "field_76752_A");
addMapping("fillerBlock", Biome.class, "field_76753_B");
addMapping("spawnableWaterCreatureList", Biome.class, "field_76755_L");
addMapping("TREE_FEATURE", Biome.class, "field_76757_N");
addMapping("BIG_TREE_FEATURE", Biome.class, "field_76758_O");
addMapping("waterColor", Biome.class, "field_76759_H");
addMapping("decorator", Biome.class, "field_76760_I");
addMapping("spawnableMonsterList", Biome.class, "field_76761_J");
addMapping("spawnableCreatureList", Biome.class, "field_76762_K");
addMapping("SWAMP_FEATURE", Biome.class, "field_76763_Q");
addMapping("enableRain", Biome.class, "field_76765_S");
addMapping("enableSnow", Biome.class, "field_76766_R");
addMapping("biomeName", Biome.class, "field_76791_y");
addMapping("spawnableCaveCreatureList", Biome.class, "field_82914_M");
addMapping("cache", BiomeCache.class, "field_76841_d");
addMapping("lastCleanupTime", BiomeCache.class, "field_76842_b");
addMapping("cacheMap", BiomeCache.class, "field_76843_c");
addMapping("provider", BiomeCache.class, "field_76844_a");
addMapping("FOLIAGE_COLOR", BiomeColorHelper.class, "field_180289_b");
addMapping("WATER_COLOR", BiomeColorHelper.class, "field_180290_c");
addMapping("GRASS_COLOR", BiomeColorHelper.class, "field_180291_a");
addMapping("flowerGen", BiomeDecorator.class, "field_150514_p");
addMapping("chunkProviderSettings", BiomeDecorator.class, "field_180293_d");
addMapping("chunkPos", BiomeDecorator.class, "field_180294_c");
addMapping("andesiteGen", BiomeDecorator.class, "field_180295_l");
addMapping("graniteGen", BiomeDecorator.class, "field_180296_j");
addMapping("dioriteGen", BiomeDecorator.class, "field_180297_k");
addMapping("diamondGen", BiomeDecorator.class, "field_180298_q");
addMapping("redstoneGen", BiomeDecorator.class, "field_180299_p");
addMapping("decorating", BiomeDecorator.class, "field_185425_a");
addMapping("extraTreeChance", BiomeDecorator.class, "field_189870_A");
addMapping("mushroomsPerChunk", BiomeDecorator.class, "field_76798_D");
addMapping("reedsPerChunk", BiomeDecorator.class, "field_76799_E");
addMapping("cactiPerChunk", BiomeDecorator.class, "field_76800_F");
addMapping("gravelPatchesPerChunk", BiomeDecorator.class, "field_76801_G");
addMapping("flowersPerChunk", BiomeDecorator.class, "field_76802_A");
addMapping("grassPerChunk", BiomeDecorator.class, "field_76803_B");
addMapping("deadBushPerChunk", BiomeDecorator.class, "field_76804_C");
addMapping("sandPatchesPerChunk", BiomeDecorator.class, "field_76805_H");
addMapping("clayPerChunk", BiomeDecorator.class, "field_76806_I");
addMapping("bigMushroomsPerChunk", BiomeDecorator.class, "field_76807_J");
addMapping("generateFalls", BiomeDecorator.class, "field_76808_K");
addMapping("clayGen", BiomeDecorator.class, "field_76809_f");
addMapping("sandGen", BiomeDecorator.class, "field_76810_g");
addMapping("ironGen", BiomeDecorator.class, "field_76818_l");
addMapping("goldGen", BiomeDecorator.class, "field_76819_m");
addMapping("gravelOreGen", BiomeDecorator.class, "field_76820_j");
addMapping("coalGen", BiomeDecorator.class, "field_76821_k");
addMapping("gravelGen", BiomeDecorator.class, "field_76822_h");
addMapping("dirtGen", BiomeDecorator.class, "field_76823_i");
addMapping("cactusGen", BiomeDecorator.class, "field_76824_w");
addMapping("reedGen", BiomeDecorator.class, "field_76825_v");
addMapping("bigMushroomGen", BiomeDecorator.class, "field_76826_u");
addMapping("mushroomRedGen", BiomeDecorator.class, "field_76827_t");
addMapping("mushroomBrownGen", BiomeDecorator.class, "field_76828_s");
addMapping("lapisGen", BiomeDecorator.class, "field_76831_p");
addMapping("treesPerChunk", BiomeDecorator.class, "field_76832_z");
addMapping("waterlilyPerChunk", BiomeDecorator.class, "field_76833_y");
addMapping("waterlilyGen", BiomeDecorator.class, "field_76834_x");
addMapping("SPIKE_CACHE", BiomeEndDecorator.class, "field_185427_L");
addMapping("spikeGen", BiomeEndDecorator.class, "field_76835_L");
addMapping("SUPER_BIRCH_TREE", BiomeForest.class, "field_150629_aC");
addMapping("BIRCH_TREE", BiomeForest.class, "field_150630_aD");
addMapping("ROOF_TREE", BiomeForest.class, "field_150631_aE");
addMapping("type", BiomeForest.class, "field_150632_aF");
addMapping("spruceGenerator", BiomeHills.class, "field_150634_aD");
addMapping("type", BiomeHills.class, "field_150638_aH");
addMapping("silverfishSpawner", BiomeHills.class, "field_82915_S");
addMapping("isEdge", BiomeJungle.class, "field_150614_aC");
addMapping("JUNGLE_LOG", BiomeJungle.class, "field_181620_aE");
addMapping("JUNGLE_LEAF", BiomeJungle.class, "field_181621_aF");
addMapping("OAK_LEAF", BiomeJungle.class, "field_181622_aG");
addMapping("hasForest", BiomeMesa.class, "field_150620_aI");
addMapping("clayBands", BiomeMesa.class, "field_150621_aC");
addMapping("worldSeed", BiomeMesa.class, "field_150622_aD");
addMapping("pillarNoise", BiomeMesa.class, "field_150623_aE");
addMapping("pillarRoofNoise", BiomeMesa.class, "field_150624_aF");
addMapping("clayBandsOffsetNoise", BiomeMesa.class, "field_150625_aG");
addMapping("brycePillars", BiomeMesa.class, "field_150626_aH");
addMapping("HARDENED_CLAY", BiomeMesa.class, "field_185381_A");
addMapping("STAINED_HARDENED_CLAY", BiomeMesa.class, "field_185382_B");
addMapping("ORANGE_STAINED_HARDENED_CLAY", BiomeMesa.class, "field_185383_C");
addMapping("RED_SAND", BiomeMesa.class, "field_185384_D");
addMapping("COARSE_DIRT", BiomeMesa.class, "field_185385_y");
addMapping("GRASS", BiomeMesa.class, "field_185386_z");
addMapping("sunflowers", BiomePlains.class, "field_150628_aC");
addMapping("settings", BiomeProvider.class, "field_190945_a");
addMapping("biomeCache", BiomeProvider.class, "field_76942_f");
addMapping("biomesToSpawnIn", BiomeProvider.class, "field_76943_g");
addMapping("genBiomes", BiomeProvider.class, "field_76944_d");
addMapping("biomeIndexLayer", BiomeProvider.class, "field_76945_e");
addMapping("biome", BiomeProviderSingle.class, "field_76947_d");
addMapping("SAVANNA_TREE", BiomeSavanna.class, "field_150627_aC");
addMapping("superIcy", BiomeSnow.class, "field_150615_aC");
addMapping("iceSpike", BiomeSnow.class, "field_150616_aD");
addMapping("icePatch", BiomeSnow.class, "field_150617_aE");
addMapping("WATER_LILY", BiomeSwamp.class, "field_185387_y");
addMapping("PINE_GENERATOR", BiomeTaiga.class, "field_150639_aC");
addMapping("SPRUCE_GENERATOR", BiomeTaiga.class, "field_150640_aD");
addMapping("MEGA_PINE_GENERATOR", BiomeTaiga.class, "field_150641_aE");
addMapping("MEGA_SPRUCE_GENERATOR", BiomeTaiga.class, "field_150642_aF");
addMapping("FOREST_ROCK_GENERATOR", BiomeTaiga.class, "field_150643_aG");
addMapping("type", BiomeTaiga.class, "field_150644_aH");
addMapping("color", EnumBorderStatus.class, "field_177767_d");
addMapping("endTime", WorldBorder.class, "field_177752_f");
addMapping("startTime", WorldBorder.class, "field_177753_g");
addMapping("startDiameter", WorldBorder.class, "field_177754_d");
addMapping("endDiameter", WorldBorder.class, "field_177755_e");
addMapping("centerX", WorldBorder.class, "field_177756_b");
addMapping("centerZ", WorldBorder.class, "field_177757_c");
addMapping("listeners", WorldBorder.class, "field_177758_a");
addMapping("warningDistance", WorldBorder.class, "field_177759_l");
addMapping("damageBuffer", WorldBorder.class, "field_177760_j");
addMapping("warningTime", WorldBorder.class, "field_177761_k");
addMapping("worldSize", WorldBorder.class, "field_177762_h");
addMapping("damageAmount", WorldBorder.class, "field_177763_i");
addMapping("AIR_BLOCK_STATE", BlockStateContainer.class, "field_186020_a");
addMapping("storage", BlockStateContainer.class, "field_186021_b");
addMapping("palette", BlockStateContainer.class, "field_186022_c");
addMapping("REGISTRY_BASED_PALETTE", BlockStateContainer.class, "field_186023_d");
addMapping("bits", BlockStateContainer.class, "field_186024_e");
addMapping("statePaletteMap", BlockStatePaletteHashMap.class, "field_186046_a");
addMapping("paletteResizer", BlockStatePaletteHashMap.class, "field_186047_b");
addMapping("bits", BlockStatePaletteHashMap.class, "field_186048_c");
addMapping("states", BlockStatePaletteLinear.class, "field_186042_a");
addMapping("resizeHandler", BlockStatePaletteLinear.class, "field_186043_b");
addMapping("bits", BlockStatePaletteLinear.class, "field_186044_c");
addMapping("arraySize", BlockStatePaletteLinear.class, "field_186045_d");
addMapping("inhabitedTime", Chunk.class, "field_111204_q");
addMapping("isLightPopulated", Chunk.class, "field_150814_l");
addMapping("ticked", Chunk.class, "field_150815_m");
addMapping("tileEntities", Chunk.class, "field_150816_i");
addMapping("LOGGER", Chunk.class, "field_150817_t");
addMapping("tileEntityPosQueue", Chunk.class, "field_177447_w");
addMapping("NULL_BLOCK_STORAGE", Chunk.class, "field_186036_a");
addMapping("unloadQueued", Chunk.class, "field_189550_d");
addMapping("heightMap", Chunk.class, "field_76634_f");
addMapping("x", Chunk.class, "field_76635_g");
addMapping("loaded", Chunk.class, "field_76636_d");
addMapping("world", Chunk.class, "field_76637_e");
addMapping("precipitationHeightMap", Chunk.class, "field_76638_b");
addMapping("updateSkylightColumns", Chunk.class, "field_76639_c");
addMapping("lastSaveTime", Chunk.class, "field_76641_n");
addMapping("dirty", Chunk.class, "field_76643_l");
addMapping("hasEntities", Chunk.class, "field_76644_m");
addMapping("entityLists", Chunk.class, "field_76645_j");
addMapping("isTerrainPopulated", Chunk.class, "field_76646_k");
addMapping("z", Chunk.class, "field_76647_h");
addMapping("queuedLightChecks", Chunk.class, "field_76649_t");
addMapping("isGapLightingUpdated", Chunk.class, "field_76650_s");
addMapping("blockBiomeArray", Chunk.class, "field_76651_r");
addMapping("storageArrays", Chunk.class, "field_76652_q");
addMapping("heightMapMinimum", Chunk.class, "field_82912_p");
addMapping("DEFAULT_STATE", ChunkPrimer.class, "field_177859_b");
addMapping("data", ChunkPrimer.class, "field_177860_a");
addMapping("data", NibbleArray.class, "field_76585_a");
addMapping("LOGGER", AnvilChunkLoader.class, "field_151505_a");
addMapping("flushing", AnvilChunkLoader.class, "field_183014_e");
addMapping("chunksBeingSaved", AnvilChunkLoader.class, "field_193415_c");
addMapping("fixer", AnvilChunkLoader.class, "field_193416_e");
addMapping("chunkSaveLocation", AnvilChunkLoader.class, "field_75825_d");
addMapping("chunksToSave", AnvilChunkLoader.class, "field_75828_a");
addMapping("LOGGER", AnvilSaveConverter.class, "field_151480_b");
addMapping("data", ExtendedBlockStorage.class, "field_177488_d");
addMapping("blockLight", ExtendedBlockStorage.class, "field_76679_g");
addMapping("blockRefCount", ExtendedBlockStorage.class, "field_76682_b");
addMapping("tickRefCount", ExtendedBlockStorage.class, "field_76683_c");
addMapping("yBase", ExtendedBlockStorage.class, "field_76684_a");
addMapping("skyLight", ExtendedBlockStorage.class, "field_76685_h");
addMapping("depthBits", NibbleArrayReader.class, "field_76687_b");
addMapping("depthBitsPlusFour", NibbleArrayReader.class, "field_76688_c");
addMapping("data", NibbleArrayReader.class, "field_76689_a");
addMapping("sectorFree", RegionFile.class, "field_76714_f");
addMapping("sizeDelta", RegionFile.class, "field_76715_g");
addMapping("offsets", RegionFile.class, "field_76716_d");
addMapping("chunkTimestamps", RegionFile.class, "field_76717_e");
addMapping("fileName", RegionFile.class, "field_76718_b");
addMapping("dataFile", RegionFile.class, "field_76719_c");
addMapping("EMPTY_SECTOR", RegionFile.class, "field_76720_a");
addMapping("lastModified", RegionFile.class, "field_76721_h");
addMapping("REGIONS_BY_FILE", RegionFileCache.class, "field_76553_a");
addMapping("LOGGER", DragonFightManager.class, "field_186107_a");
addMapping("VALID_PLAYER", DragonFightManager.class, "field_186108_b");
addMapping("bossInfo", DragonFightManager.class, "field_186109_c");
addMapping("world", DragonFightManager.class, "field_186110_d");
addMapping("gateways", DragonFightManager.class, "field_186111_e");
addMapping("portalPattern", DragonFightManager.class, "field_186112_f");
addMapping("ticksSinceDragonSeen", DragonFightManager.class, "field_186113_g");
addMapping("aliveCrystals", DragonFightManager.class, "field_186114_h");
addMapping("ticksSinceCrystalsScanned", DragonFightManager.class, "field_186115_i");
addMapping("ticksSinceLastPlayerScan", DragonFightManager.class, "field_186116_j");
addMapping("dragonKilled", DragonFightManager.class, "field_186117_k");
addMapping("previouslyKilled", DragonFightManager.class, "field_186118_l");
addMapping("dragonUniqueId", DragonFightManager.class, "field_186119_m");
addMapping("scanForLegacyFight", DragonFightManager.class, "field_186120_n");
addMapping("exitPortalLocation", DragonFightManager.class, "field_186121_o");
addMapping("respawnState", DragonFightManager.class, "field_186122_p");
addMapping("respawnStateTicks", DragonFightManager.class, "field_186123_q");
addMapping("crystals", DragonFightManager.class, "field_186124_r");
addMapping("GRID_WIDTH", ChunkGeneratorDebug.class, "field_177462_b");
addMapping("world", ChunkGeneratorDebug.class, "field_177463_c");
addMapping("ALL_VALID_STATES", ChunkGeneratorDebug.class, "field_177464_a");
addMapping("GRID_HEIGHT", ChunkGeneratorDebug.class, "field_181039_c");
addMapping("AIR", ChunkGeneratorDebug.class, "field_185934_a");
addMapping("BARRIER", ChunkGeneratorDebug.class, "field_185935_b");
addMapping("END_STONE", ChunkGeneratorEnd.class, "field_185964_a");
addMapping("AIR", ChunkGeneratorEnd.class, "field_185965_b");
addMapping("pnr", ChunkGeneratorEnd.class, "field_185966_e");
addMapping("ar", ChunkGeneratorEnd.class, "field_185967_f");
addMapping("br", ChunkGeneratorEnd.class, "field_185968_g");
addMapping("lperlinNoise1", ChunkGeneratorEnd.class, "field_185969_i");
addMapping("lperlinNoise2", ChunkGeneratorEnd.class, "field_185970_j");
addMapping("perlinNoise1", ChunkGeneratorEnd.class, "field_185971_k");
addMapping("endCityGen", ChunkGeneratorEnd.class, "field_185972_n");
addMapping("islandNoise", ChunkGeneratorEnd.class, "field_185973_o");
addMapping("buffer", ChunkGeneratorEnd.class, "field_185974_p");
addMapping("endIslands", ChunkGeneratorEnd.class, "field_185975_r");
addMapping("spawnPoint", ChunkGeneratorEnd.class, "field_191061_n");
addMapping("noiseGen6", ChunkGeneratorEnd.class, "field_73212_b");
addMapping("noiseGen5", ChunkGeneratorEnd.class, "field_73214_a");
addMapping("rand", ChunkGeneratorEnd.class, "field_73220_k");
addMapping("mapFeaturesEnabled", ChunkGeneratorEnd.class, "field_73229_q");
addMapping("world", ChunkGeneratorEnd.class, "field_73230_p");
addMapping("biomesForGeneration", ChunkGeneratorEnd.class, "field_73231_z");
addMapping("random", ChunkGeneratorFlat.class, "field_73161_b");
addMapping("world", ChunkGeneratorFlat.class, "field_73163_a");
addMapping("structureGenerators", ChunkGeneratorFlat.class, "field_82696_f");
addMapping("hasDecoration", ChunkGeneratorFlat.class, "field_82697_g");
addMapping("flatWorldGenInfo", ChunkGeneratorFlat.class, "field_82699_e");
addMapping("cachedBlockIDs", ChunkGeneratorFlat.class, "field_82700_c");
addMapping("lavaLakeGenerator", ChunkGeneratorFlat.class, "field_82701_j");
addMapping("hasDungeons", ChunkGeneratorFlat.class, "field_82702_h");
addMapping("waterLakeGenerator", ChunkGeneratorFlat.class, "field_82703_i");
addMapping("redMushroomFeature", ChunkGeneratorHell.class, "field_177465_A");
addMapping("quartzGen", ChunkGeneratorHell.class, "field_177467_w");
addMapping("hellPortalGen", ChunkGeneratorHell.class, "field_177468_v");
addMapping("lightGemGen", ChunkGeneratorHell.class, "field_177469_u");
addMapping("fireFeature", ChunkGeneratorHell.class, "field_177470_t");
addMapping("brownMushroomFeature", ChunkGeneratorHell.class, "field_177471_z");
addMapping("hellSpringGen", ChunkGeneratorHell.class, "field_177472_y");
addMapping("lavaTrapGen", ChunkGeneratorHell.class, "field_177473_x");
addMapping("genNetherCaves", ChunkGeneratorHell.class, "field_185939_I");
addMapping("AIR", ChunkGeneratorHell.class, "field_185940_a");
addMapping("NETHERRACK", ChunkGeneratorHell.class, "field_185941_b");
addMapping("BEDROCK", ChunkGeneratorHell.class, "field_185942_c");
addMapping("LAVA", ChunkGeneratorHell.class, "field_185943_d");
addMapping("GRAVEL", ChunkGeneratorHell.class, "field_185944_e");
addMapping("SOUL_SAND", ChunkGeneratorHell.class, "field_185945_f");
addMapping("scaleNoise", ChunkGeneratorHell.class, "field_185946_g");
addMapping("depthNoise", ChunkGeneratorHell.class, "field_185947_h");
addMapping("pnr", ChunkGeneratorHell.class, "field_185948_i");
addMapping("ar", ChunkGeneratorHell.class, "field_185949_j");
addMapping("br", ChunkGeneratorHell.class, "field_185950_k");
addMapping("dr", ChunkGeneratorHell.class, "field_185951_m");
addMapping("world", ChunkGeneratorHell.class, "field_185952_n");
addMapping("generateStructures", ChunkGeneratorHell.class, "field_185953_o");
addMapping("rand", ChunkGeneratorHell.class, "field_185954_p");
addMapping("depthBuffer", ChunkGeneratorHell.class, "field_185955_s");
addMapping("buffer", ChunkGeneratorHell.class, "field_185956_t");
addMapping("lperlinNoise1", ChunkGeneratorHell.class, "field_185957_u");
addMapping("lperlinNoise2", ChunkGeneratorHell.class, "field_185958_v");
addMapping("perlinNoise1", ChunkGeneratorHell.class, "field_185959_w");
addMapping("magmaGen", ChunkGeneratorHell.class, "field_189888_D");
addMapping("noiseData4", ChunkGeneratorHell.class, "field_73168_g");
addMapping("genNetherBridge", ChunkGeneratorHell.class, "field_73172_c");
addMapping("netherrackExculsivityNoiseGen", ChunkGeneratorHell.class, "field_73174_n");
addMapping("slowsandGravelNoiseGen", ChunkGeneratorHell.class, "field_73177_m");
addMapping("gravelNoise", ChunkGeneratorHell.class, "field_73184_r");
addMapping("slowsandNoise", ChunkGeneratorHell.class, "field_73185_q");
addMapping("ravineGenerator", ChunkGeneratorOverworld.class, "field_185979_A");
addMapping("oceanMonumentGenerator", ChunkGeneratorOverworld.class, "field_185980_B");
addMapping("biomesForGeneration", ChunkGeneratorOverworld.class, "field_185981_C");
addMapping("STONE", ChunkGeneratorOverworld.class, "field_185982_a");
addMapping("scaleNoise", ChunkGeneratorOverworld.class, "field_185983_b");
addMapping("depthNoise", ChunkGeneratorOverworld.class, "field_185984_c");
addMapping("forestNoise", ChunkGeneratorOverworld.class, "field_185985_d");
addMapping("mainNoiseRegion", ChunkGeneratorOverworld.class, "field_185986_e");
addMapping("minLimitRegion", ChunkGeneratorOverworld.class, "field_185987_f");
addMapping("maxLimitRegion", ChunkGeneratorOverworld.class, "field_185988_g");
addMapping("depthRegion", ChunkGeneratorOverworld.class, "field_185989_h");
addMapping("rand", ChunkGeneratorOverworld.class, "field_185990_i");
addMapping("minLimitPerlinNoise", ChunkGeneratorOverworld.class, "field_185991_j");
addMapping("maxLimitPerlinNoise", ChunkGeneratorOverworld.class, "field_185992_k");
addMapping("mainPerlinNoise", ChunkGeneratorOverworld.class, "field_185993_l");
addMapping("surfaceNoise", ChunkGeneratorOverworld.class, "field_185994_m");
addMapping("world", ChunkGeneratorOverworld.class, "field_185995_n");
addMapping("mapFeaturesEnabled", ChunkGeneratorOverworld.class, "field_185996_o");
addMapping("terrainType", ChunkGeneratorOverworld.class, "field_185997_p");
addMapping("heightMap", ChunkGeneratorOverworld.class, "field_185998_q");
addMapping("biomeWeights", ChunkGeneratorOverworld.class, "field_185999_r");
addMapping("settings", ChunkGeneratorOverworld.class, "field_186000_s");
addMapping("oceanBlock", ChunkGeneratorOverworld.class, "field_186001_t");
addMapping("depthBuffer", ChunkGeneratorOverworld.class, "field_186002_u");
addMapping("caveGenerator", ChunkGeneratorOverworld.class, "field_186003_v");
addMapping("strongholdGenerator", ChunkGeneratorOverworld.class, "field_186004_w");
addMapping("villageGenerator", ChunkGeneratorOverworld.class, "field_186005_x");
addMapping("mineshaftGenerator", ChunkGeneratorOverworld.class, "field_186006_y");
addMapping("scatteredFeatureGenerator", ChunkGeneratorOverworld.class, "field_186007_z");
addMapping("woodlandMansionGenerator", ChunkGeneratorOverworld.class, "field_191060_C");
addMapping("lavaLakeChance", ChunkGeneratorSettings.class, "field_177777_D");
addMapping("useLavaOceans", ChunkGeneratorSettings.class, "field_177778_E");
addMapping("fixedBiome", ChunkGeneratorSettings.class, "field_177779_F");
addMapping("biomeSize", ChunkGeneratorSettings.class, "field_177780_G");
addMapping("useWaterLakes", ChunkGeneratorSettings.class, "field_177781_A");
addMapping("waterLakeChance", ChunkGeneratorSettings.class, "field_177782_B");
addMapping("useLavaLakes", ChunkGeneratorSettings.class, "field_177783_C");
addMapping("dirtMaxHeight", ChunkGeneratorSettings.class, "field_177784_L");
addMapping("gravelSize", ChunkGeneratorSettings.class, "field_177785_M");
addMapping("gravelCount", ChunkGeneratorSettings.class, "field_177786_N");
addMapping("gravelMinHeight", ChunkGeneratorSettings.class, "field_177787_O");
addMapping("riverSize", ChunkGeneratorSettings.class, "field_177788_H");
addMapping("dirtSize", ChunkGeneratorSettings.class, "field_177789_I");
addMapping("dirtCount", ChunkGeneratorSettings.class, "field_177790_J");
addMapping("dirtMinHeight", ChunkGeneratorSettings.class, "field_177791_K");
addMapping("dioriteSize", ChunkGeneratorSettings.class, "field_177792_U");
addMapping("graniteMaxHeight", ChunkGeneratorSettings.class, "field_177793_T");
addMapping("dioriteMinHeight", ChunkGeneratorSettings.class, "field_177794_W");
addMapping("dioriteCount", ChunkGeneratorSettings.class, "field_177795_V");
addMapping("graniteSize", ChunkGeneratorSettings.class, "field_177796_Q");
addMapping("gravelMaxHeight", ChunkGeneratorSettings.class, "field_177797_P");
addMapping("graniteMinHeight", ChunkGeneratorSettings.class, "field_177798_S");
addMapping("graniteCount", ChunkGeneratorSettings.class, "field_177799_R");
addMapping("andesiteSize", ChunkGeneratorSettings.class, "field_177800_Y");
addMapping("dioriteMaxHeight", ChunkGeneratorSettings.class, "field_177801_X");
addMapping("andesiteCount", ChunkGeneratorSettings.class, "field_177802_Z");
addMapping("depthNoiseScaleZ", ChunkGeneratorSettings.class, "field_177803_f");
addMapping("depthNoiseScaleExponent", ChunkGeneratorSettings.class, "field_177804_g");
addMapping("lapisSpread", ChunkGeneratorSettings.class, "field_177805_az");
addMapping("lowerLimitScale", ChunkGeneratorSettings.class, "field_177806_d");
addMapping("lapisCenterHeight", ChunkGeneratorSettings.class, "field_177807_ay");
addMapping("depthNoiseScaleX", ChunkGeneratorSettings.class, "field_177808_e");
addMapping("heightScale", ChunkGeneratorSettings.class, "field_177809_b");
addMapping("upperLimitScale", ChunkGeneratorSettings.class, "field_177810_c");
addMapping("coordinateScale", ChunkGeneratorSettings.class, "field_177811_a");
addMapping("diamondCount", ChunkGeneratorSettings.class, "field_177812_at");
addMapping("biomeDepthOffSet", ChunkGeneratorSettings.class, "field_177813_n");
addMapping("diamondSize", ChunkGeneratorSettings.class, "field_177814_as");
addMapping("biomeScaleWeight", ChunkGeneratorSettings.class, "field_177815_o");
addMapping("redstoneMaxHeight", ChunkGeneratorSettings.class, "field_177816_ar");
addMapping("stretchY", ChunkGeneratorSettings.class, "field_177817_l");
addMapping("redstoneMinHeight", ChunkGeneratorSettings.class, "field_177818_aq");
addMapping("biomeDepthWeight", ChunkGeneratorSettings.class, "field_177819_m");
addMapping("lapisCount", ChunkGeneratorSettings.class, "field_177820_ax");
addMapping("mainNoiseScaleZ", ChunkGeneratorSettings.class, "field_177821_j");
addMapping("lapisSize", ChunkGeneratorSettings.class, "field_177822_aw");
addMapping("baseSize", ChunkGeneratorSettings.class, "field_177823_k");
addMapping("diamondMaxHeight", ChunkGeneratorSettings.class, "field_177824_av");
addMapping("mainNoiseScaleX", ChunkGeneratorSettings.class, "field_177825_h");
addMapping("diamondMinHeight", ChunkGeneratorSettings.class, "field_177826_au");
addMapping("mainNoiseScaleY", ChunkGeneratorSettings.class, "field_177827_i");
addMapping("goldSize", ChunkGeneratorSettings.class, "field_177828_ak");
addMapping("useMineShafts", ChunkGeneratorSettings.class, "field_177829_w");
addMapping("goldCount", ChunkGeneratorSettings.class, "field_177830_al");
addMapping("useVillages", ChunkGeneratorSettings.class, "field_177831_v");
addMapping("ironMinHeight", ChunkGeneratorSettings.class, "field_177832_ai");
addMapping("useStrongholds", ChunkGeneratorSettings.class, "field_177833_u");
addMapping("ironMaxHeight", ChunkGeneratorSettings.class, "field_177834_aj");
addMapping("dungeonChance", ChunkGeneratorSettings.class, "field_177835_t");
addMapping("redstoneSize", ChunkGeneratorSettings.class, "field_177836_ao");
addMapping("useDungeons", ChunkGeneratorSettings.class, "field_177837_s");
addMapping("redstoneCount", ChunkGeneratorSettings.class, "field_177838_ap");
addMapping("useCaves", ChunkGeneratorSettings.class, "field_177839_r");
addMapping("goldMinHeight", ChunkGeneratorSettings.class, "field_177840_am");
addMapping("seaLevel", ChunkGeneratorSettings.class, "field_177841_q");
addMapping("goldMaxHeight", ChunkGeneratorSettings.class, "field_177842_an");
addMapping("biomeScaleOffset", ChunkGeneratorSettings.class, "field_177843_p");
addMapping("coalSize", ChunkGeneratorSettings.class, "field_177844_ac");
addMapping("coalCount", ChunkGeneratorSettings.class, "field_177845_ad");
addMapping("andesiteMinHeight", ChunkGeneratorSettings.class, "field_177846_aa");
addMapping("andesiteMaxHeight", ChunkGeneratorSettings.class, "field_177847_ab");
addMapping("ironSize", ChunkGeneratorSettings.class, "field_177848_ag");
addMapping("ironCount", ChunkGeneratorSettings.class, "field_177849_ah");
addMapping("useRavines", ChunkGeneratorSettings.class, "field_177850_z");
addMapping("coalMinHeight", ChunkGeneratorSettings.class, "field_177851_ae");
addMapping("useMonuments", ChunkGeneratorSettings.class, "field_177852_y");
addMapping("coalMaxHeight", ChunkGeneratorSettings.class, "field_177853_af");
addMapping("useTemples", ChunkGeneratorSettings.class, "field_177854_x");
addMapping("useMansions", ChunkGeneratorSettings.class, "field_191077_z");
addMapping("LOGGER", ChunkProviderServer.class, "field_147417_b");
addMapping("chunkGenerator", ChunkProviderServer.class, "field_186029_c");
addMapping("id2ChunkMap", ChunkProviderServer.class, "field_73244_f");
addMapping("chunkLoader", ChunkProviderServer.class, "field_73247_e");
addMapping("droppedChunksSet", ChunkProviderServer.class, "field_73248_b");
addMapping("world", ChunkProviderServer.class, "field_73251_h");
addMapping("worldFeatures", FlatGeneratorInfo.class, "field_82653_b");
addMapping("biomeToUse", FlatGeneratorInfo.class, "field_82654_c");
addMapping("flatLayers", FlatGeneratorInfo.class, "field_82655_a");
addMapping("layerMaterial", FlatLayerInfo.class, "field_175901_b");
addMapping("version", FlatLayerInfo.class, "field_175902_a");
addMapping("layerMinimumY", FlatLayerInfo.class, "field_82661_d");
addMapping("layerCount", FlatLayerInfo.class, "field_82664_a");
addMapping("rand", MapGenBase.class, "field_75038_b");
addMapping("world", MapGenBase.class, "field_75039_c");
addMapping("range", MapGenBase.class, "field_75040_a");
addMapping("BLK_LAVA", MapGenCaves.class, "field_186126_a");
addMapping("BLK_AIR", MapGenCaves.class, "field_186127_b");
addMapping("BLK_SANDSTONE", MapGenCaves.class, "field_186128_c");
addMapping("BLK_RED_SANDSTONE", MapGenCaves.class, "field_186129_d");
addMapping("AIR", MapGenCavesHell.class, "field_186130_a");
addMapping("FLOWING_LAVA", MapGenRavine.class, "field_186135_a");
addMapping("AIR", MapGenRavine.class, "field_186136_b");
addMapping("rs", MapGenRavine.class, "field_75046_d");
addMapping("GRAD_X", NoiseGeneratorImproved.class, "field_152381_e");
addMapping("GRAD_Y", NoiseGeneratorImproved.class, "field_152382_f");
addMapping("GRAD_Z", NoiseGeneratorImproved.class, "field_152383_g");
addMapping("GRAD_2X", NoiseGeneratorImproved.class, "field_152384_h");
addMapping("GRAD_2Z", NoiseGeneratorImproved.class, "field_152385_i");
addMapping("permutations", NoiseGeneratorImproved.class, "field_76312_d");
addMapping("yCoord", NoiseGeneratorImproved.class, "field_76313_b");
addMapping("zCoord", NoiseGeneratorImproved.class, "field_76314_c");
addMapping("xCoord", NoiseGeneratorImproved.class, "field_76315_a");
addMapping("octaves", NoiseGeneratorOctaves.class, "field_76306_b");
addMapping("generatorCollection", NoiseGeneratorOctaves.class, "field_76307_a");
addMapping("levels", NoiseGeneratorPerlin.class, "field_151602_b");
addMapping("noiseLevels", NoiseGeneratorPerlin.class, "field_151603_a");
addMapping("p", NoiseGeneratorSimplex.class, "field_151608_f");
addMapping("F2", NoiseGeneratorSimplex.class, "field_151609_g");
addMapping("zo", NoiseGeneratorSimplex.class, "field_151610_d");
addMapping("grad3", NoiseGeneratorSimplex.class, "field_151611_e");
addMapping("xo", NoiseGeneratorSimplex.class, "field_151612_b");
addMapping("yo", NoiseGeneratorSimplex.class, "field_151613_c");
addMapping("SQRT_3", NoiseGeneratorSimplex.class, "field_151614_a");
addMapping("G2", NoiseGeneratorSimplex.class, "field_151615_h");
addMapping("mushroomType", WorldGenBigMushroom.class, "field_76523_a");
addMapping("trunkSize", WorldGenBigTree.class, "field_175943_g");
addMapping("branchSlope", WorldGenBigTree.class, "field_175944_d");
addMapping("scaleWidth", WorldGenBigTree.class, "field_175945_e");
addMapping("world", WorldGenBigTree.class, "field_175946_l");
addMapping("basePos", WorldGenBigTree.class, "field_175947_m");
addMapping("foliageCoords", WorldGenBigTree.class, "field_175948_j");
addMapping("rand", WorldGenBigTree.class, "field_175949_k");
addMapping("heightLimitLimit", WorldGenBigTree.class, "field_175950_h");
addMapping("height", WorldGenBigTree.class, "field_76501_f");
addMapping("heightAttenuation", WorldGenBigTree.class, "field_76502_g");
addMapping("heightLimit", WorldGenBigTree.class, "field_76504_e");
addMapping("leafDistanceLimit", WorldGenBigTree.class, "field_76508_n");
addMapping("leafDensity", WorldGenBigTree.class, "field_76513_k");
addMapping("useExtraRandomHeight", WorldGenBirchTree.class, "field_150531_a");
addMapping("LOG", WorldGenBirchTree.class, "field_181629_a");
addMapping("LEAF", WorldGenBirchTree.class, "field_181630_b");
addMapping("startRadius", WorldGenBlockBlob.class, "field_150544_b");
addMapping("block", WorldGenBlockBlob.class, "field_150545_a");
addMapping("block", WorldGenBush.class, "field_175908_a");
addMapping("DARK_OAK_LOG", WorldGenCanopyTree.class, "field_181640_a");
addMapping("DARK_OAK_LEAVES", WorldGenCanopyTree.class, "field_181641_b");
addMapping("block", WorldGenClay.class, "field_150546_a");
addMapping("numberOfBlocks", WorldGenClay.class, "field_76517_b");
addMapping("water", WorldGenDesertWells.class, "field_175910_d");
addMapping("sandSlab", WorldGenDesertWells.class, "field_175911_b");
addMapping("sandstone", WorldGenDesertWells.class, "field_175912_c");
addMapping("IS_SAND", WorldGenDesertWells.class, "field_175913_a");
addMapping("plantType", WorldGenDoublePlant.class, "field_150549_a");
addMapping("SPAWNERTYPES", WorldGenDungeons.class, "field_175916_b");
addMapping("LOGGER", WorldGenDungeons.class, "field_175918_a");
addMapping("END_PODIUM_LOCATION", WorldGenEndPodium.class, "field_186139_a");
addMapping("END_PODIUM_CHUNK_POS", WorldGenEndPodium.class, "field_186140_b");
addMapping("activePortal", WorldGenEndPodium.class, "field_186141_c");
addMapping("flower", WorldGenFlowers.class, "field_150552_a");
addMapping("state", WorldGenFlowers.class, "field_175915_b");
addMapping("STRUCTURE_SPINE_01", WorldGenFossils.class, "field_189890_a");
addMapping("STRUCTURE_SPINE_02", WorldGenFossils.class, "field_189891_b");
addMapping("STRUCTURE_SPINE_03", WorldGenFossils.class, "field_189892_c");
addMapping("STRUCTURE_SPINE_04", WorldGenFossils.class, "field_189893_d");
addMapping("STRUCTURE_SPINE_01_COAL", WorldGenFossils.class, "field_189894_e");
addMapping("STRUCTURE_SPINE_02_COAL", WorldGenFossils.class, "field_189895_f");
addMapping("STRUCTURE_SPINE_03_COAL", WorldGenFossils.class, "field_189896_g");
addMapping("STRUCTURE_SPINE_04_COAL", WorldGenFossils.class, "field_189897_h");
addMapping("STRUCTURE_SKULL_01", WorldGenFossils.class, "field_189898_i");
addMapping("STRUCTURE_SKULL_02", WorldGenFossils.class, "field_189899_j");
addMapping("STRUCTURE_SKULL_03", WorldGenFossils.class, "field_189900_k");
addMapping("STRUCTURE_SKULL_04", WorldGenFossils.class, "field_189901_l");
addMapping("STRUCTURE_SKULL_01_COAL", WorldGenFossils.class, "field_189902_m");
addMapping("STRUCTURE_SKULL_02_COAL", WorldGenFossils.class, "field_189903_n");
addMapping("STRUCTURE_SKULL_03_COAL", WorldGenFossils.class, "field_189904_o");
addMapping("STRUCTURE_SKULL_04_COAL", WorldGenFossils.class, "field_189905_p");
addMapping("FOSSILS", WorldGenFossils.class, "field_189906_q");
addMapping("FOSSILS_COAL", WorldGenFossils.class, "field_189907_r");
addMapping("block", WorldGenHellLava.class, "field_150553_a");
addMapping("insideRock", WorldGenHellLava.class, "field_94524_b");
addMapping("extraRandomHeight", WorldGenHugeTrees.class, "field_150538_d");
addMapping("woodMetadata", WorldGenHugeTrees.class, "field_76520_b");
addMapping("leavesMetadata", WorldGenHugeTrees.class, "field_76521_c");
addMapping("baseHeight", WorldGenHugeTrees.class, "field_76522_a");
addMapping("basePathWidth", WorldGenIcePath.class, "field_150554_b");
addMapping("block", WorldGenIcePath.class, "field_150555_a");
addMapping("block", WorldGenLakes.class, "field_150556_a");
addMapping("block", WorldGenLiquids.class, "field_150521_a");
addMapping("useBaseHeight", WorldGenMegaPineTree.class, "field_150542_e");
addMapping("TRUNK", WorldGenMegaPineTree.class, "field_181633_e");
addMapping("LEAF", WorldGenMegaPineTree.class, "field_181634_f");
addMapping("PODZOL", WorldGenMegaPineTree.class, "field_181635_g");
addMapping("predicate", WorldGenMinable.class, "field_175919_c");
addMapping("oreBlock", WorldGenMinable.class, "field_175920_a");
addMapping("numberOfBlocks", WorldGenMinable.class, "field_76541_b");
addMapping("block", WorldGenSand.class, "field_150517_a");
addMapping("radius", WorldGenSand.class, "field_76539_b");
addMapping("TRUNK", WorldGenSavannaTree.class, "field_181643_a");
addMapping("LEAF", WorldGenSavannaTree.class, "field_181644_b");
addMapping("woodMetadata", WorldGenShrub.class, "field_150527_b");
addMapping("leavesMetadata", WorldGenShrub.class, "field_150528_a");
addMapping("crystalInvulnerable", WorldGenSpikes.class, "field_186145_a");
addMapping("spike", WorldGenSpikes.class, "field_186146_b");
addMapping("beamTarget", WorldGenSpikes.class, "field_186147_c");
addMapping("TRUNK", WorldGenSwamp.class, "field_181648_a");
addMapping("LEAF", WorldGenSwamp.class, "field_181649_b");
addMapping("TRUNK", WorldGenTaiga1.class, "field_181636_a");
addMapping("LEAF", WorldGenTaiga1.class, "field_181637_b");
addMapping("TRUNK", WorldGenTaiga2.class, "field_181645_a");
addMapping("LEAF", WorldGenTaiga2.class, "field_181646_b");
addMapping("tallGrassState", WorldGenTallGrass.class, "field_175907_a");
addMapping("DEFAULT_TRUNK", WorldGenTrees.class, "field_181653_a");
addMapping("DEFAULT_LEAF", WorldGenTrees.class, "field_181654_b");
addMapping("metaLeaves", WorldGenTrees.class, "field_76530_d");
addMapping("vinesGrow", WorldGenTrees.class, "field_76531_b");
addMapping("metaWood", WorldGenTrees.class, "field_76532_c");
addMapping("minTreeHeight", WorldGenTrees.class, "field_76533_a");
addMapping("doBlockNotify", WorldGenerator.class, "field_76488_a");
addMapping("baseSeed", GenLayer.class, "field_75906_d");
addMapping("worldGenSeed", GenLayer.class, "field_75907_b");
addMapping("chunkSeed", GenLayer.class, "field_75908_c");
addMapping("parent", GenLayer.class, "field_75909_a");
addMapping("iceBiomes", GenLayerBiome.class, "field_151620_f");
addMapping("mediumBiomes", GenLayerBiome.class, "field_151621_d");
addMapping("coldBiomes", GenLayerBiome.class, "field_151622_e");
addMapping("warmBiomes", GenLayerBiome.class, "field_151623_c");
addMapping("settings", GenLayerBiome.class, "field_175973_g");
addMapping("mode", GenLayerEdge.class, "field_151627_c");
addMapping("riverLayer", GenLayerHills.class, "field_151628_d");
addMapping("LOGGER", GenLayerHills.class, "field_151629_c");
addMapping("biomePatternGeneratorChain", GenLayerRiverMix.class, "field_75910_b");
addMapping("riverPatternGeneratorChain", GenLayerRiverMix.class, "field_75911_c");
addMapping("freeLargeArrays", IntCache.class, "field_76447_d");
addMapping("inUseLargeArrays", IntCache.class, "field_76448_e");
addMapping("freeSmallArrays", IntCache.class, "field_76449_b");
addMapping("inUseSmallArrays", IntCache.class, "field_76450_c");
addMapping("intCacheSize", IntCache.class, "field_76451_a");
addMapping("citySpacing", MapGenEndCity.class, "field_186131_a");
addMapping("minCitySeparation", MapGenEndCity.class, "field_186132_b");
addMapping("endProvider", MapGenEndCity.class, "field_186133_d");
addMapping("chance", MapGenMineshaft.class, "field_82673_e");
addMapping("spawnList", MapGenNetherBridge.class, "field_75060_e");
addMapping("BIOMELIST", MapGenScatteredFeature.class, "field_75061_e");
addMapping("monsters", MapGenScatteredFeature.class, "field_82668_f");
addMapping("maxDistanceBetweenScatteredFeatures", MapGenScatteredFeature.class, "field_82669_g");
addMapping("minDistanceBetweenScatteredFeatures", MapGenScatteredFeature.class, "field_82670_h");
addMapping("allowedBiomes", MapGenStronghold.class, "field_151546_e");
addMapping("ranBiomeCheck", MapGenStronghold.class, "field_75056_f");
addMapping("structureCoords", MapGenStronghold.class, "field_75057_g");
addMapping("distance", MapGenStronghold.class, "field_82671_h");
addMapping("spread", MapGenStronghold.class, "field_82672_i");
addMapping("structureData", MapGenStructure.class, "field_143029_e");
addMapping("structureMap", MapGenStructure.class, "field_75053_d");
addMapping("tagCompound", MapGenStructureData.class, "field_143044_a");
addMapping("componentClassToNameMap", MapGenStructureIO.class, "field_143037_d");
addMapping("startClassToNameMap", MapGenStructureIO.class, "field_143038_b");
addMapping("componentNameToClassMap", MapGenStructureIO.class, "field_143039_c");
addMapping("startNameToClassMap", MapGenStructureIO.class, "field_143040_a");
addMapping("LOGGER", MapGenStructureIO.class, "field_151687_a");
addMapping("size", MapGenVillage.class, "field_75054_f");
addMapping("VILLAGE_SPAWN_BIOMES", MapGenVillage.class, "field_75055_e");
addMapping("distance", MapGenVillage.class, "field_82665_g");
addMapping("minTownSeparation", MapGenVillage.class, "field_82666_h");
addMapping("maxZ", StructureBoundingBox.class, "field_78892_f");
addMapping("maxX", StructureBoundingBox.class, "field_78893_d");
addMapping("maxY", StructureBoundingBox.class, "field_78894_e");
addMapping("minY", StructureBoundingBox.class, "field_78895_b");
addMapping("minZ", StructureBoundingBox.class, "field_78896_c");
addMapping("minX", StructureBoundingBox.class, "field_78897_a");
addMapping("mirror", StructureComponent.class, "field_186168_b");
addMapping("rotation", StructureComponent.class, "field_186169_c");
addMapping("coordBaseMode", StructureComponent.class, "field_74885_f");
addMapping("componentType", StructureComponent.class, "field_74886_g");
addMapping("boundingBox", StructureComponent.class, "field_74887_e");
addMapping("template", StructureComponentTemplate.class, "field_186176_a");
addMapping("placeSettings", StructureComponentTemplate.class, "field_186177_b");
addMapping("templatePosition", StructureComponentTemplate.class, "field_186178_c");
addMapping("DEFAULT_PLACE_SETTINGS", StructureComponentTemplate.class, "field_186179_d");
addMapping("OVERWRITE", StructureEndCityPieces.class, "field_186202_b");
addMapping("INSERT", StructureEndCityPieces.class, "field_186203_c");
addMapping("HOUSE_TOWER_GENERATOR", StructureEndCityPieces.class, "field_186204_d");
addMapping("TOWER_BRIDGES", StructureEndCityPieces.class, "field_186205_e");
addMapping("TOWER_GENERATOR", StructureEndCityPieces.class, "field_186206_f");
addMapping("TOWER_BRIDGE_GENERATOR", StructureEndCityPieces.class, "field_186207_g");
addMapping("FAT_TOWER_BRIDGES", StructureEndCityPieces.class, "field_186208_h");
addMapping("FAT_TOWER_GENERATOR", StructureEndCityPieces.class, "field_186209_i");
addMapping("mineShaftType", StructureMineshaftStart.class, "field_189908_c");
addMapping("SECONDARY_COMPONENTS", StructureNetherBridgePieces.class, "field_78741_b");
addMapping("PRIMARY_COMPONENTS", StructureNetherBridgePieces.class, "field_78742_a");
addMapping("spacing", StructureOceanMonument.class, "field_175800_f");
addMapping("separation", StructureOceanMonument.class, "field_175801_g");
addMapping("WATER_BIOMES", StructureOceanMonument.class, "field_175802_d");
addMapping("MONUMENT_ENEMIES", StructureOceanMonument.class, "field_175803_h");
addMapping("SPAWN_BIOMES", StructureOceanMonument.class, "field_186134_b");
addMapping("chunkPosZ", StructureStart.class, "field_143023_d");
addMapping("chunkPosX", StructureStart.class, "field_143024_c");
addMapping("boundingBox", StructureStart.class, "field_75074_b");
addMapping("components", StructureStart.class, "field_75075_a");
addMapping("strongComponentType", StructureStrongholdPieces.class, "field_75203_d");
addMapping("STRONGHOLD_STONES", StructureStrongholdPieces.class, "field_75204_e");
addMapping("PIECE_WEIGHTS", StructureStrongholdPieces.class, "field_75205_b");
addMapping("structurePieceList", StructureStrongholdPieces.class, "field_75206_c");
addMapping("totalWeight", StructureStrongholdPieces.class, "field_75207_a");
addMapping("ALLOWED_BIOMES", WoodlandMansion.class, "field_191072_a");
addMapping("featureSpacing", WoodlandMansion.class, "field_191073_b");
addMapping("minFeatureSeparation", WoodlandMansion.class, "field_191074_d");
addMapping("provider", WoodlandMansion.class, "field_191075_h");
addMapping("chance", BlockRotationProcessor.class, "field_189944_a");
addMapping("random", BlockRotationProcessor.class, "field_189945_b");
addMapping("mirror", PlacementSettings.class, "field_186228_a");
addMapping("rotation", PlacementSettings.class, "field_186229_b");
addMapping("ignoreEntities", PlacementSettings.class, "field_186230_c");
addMapping("replacedBlock", PlacementSettings.class, "field_186231_d");
addMapping("chunk", PlacementSettings.class, "field_186232_e");
addMapping("boundingBox", PlacementSettings.class, "field_186233_f");
addMapping("ignoreStructureBlock", PlacementSettings.class, "field_186234_g");
addMapping("integrity", PlacementSettings.class, "field_189951_h");
addMapping("random", PlacementSettings.class, "field_189952_i");
addMapping("setSeed", PlacementSettings.class, "field_189953_j");
addMapping("blocks", Template.class, "field_186270_a");
addMapping("entities", Template.class, "field_186271_b");
addMapping("size", Template.class, "field_186272_c");
addMapping("author", Template.class, "field_186273_d");
addMapping("templates", TemplateManager.class, "field_186240_a");
addMapping("baseFolder", TemplateManager.class, "field_186241_b");
addMapping("fixer", TemplateManager.class, "field_191154_c");
addMapping("delegate", DerivedWorldInfo.class, "field_76115_a");
addMapping("trackingPosition", MapData.class, "field_186210_e");
addMapping("unlimitedTracking", MapData.class, "field_191096_f");
addMapping("playersArrayList", MapData.class, "field_76196_g");
addMapping("scale", MapData.class, "field_76197_d");
addMapping("colors", MapData.class, "field_76198_e");
addMapping("zCenter", MapData.class, "field_76199_b");
addMapping("dimension", MapData.class, "field_76200_c");
addMapping("xCenter", MapData.class, "field_76201_a");
addMapping("playersHashMap", MapData.class, "field_76202_j");
addMapping("mapDecorations", MapData.class, "field_76203_h");
addMapping("rotation", MapDecoration.class, "field_176114_d");
addMapping("x", MapDecoration.class, "field_176115_b");
addMapping("y", MapDecoration.class, "field_176116_c");
addMapping("type", MapDecoration.class, "field_191181_a");
addMapping("idCounts", MapStorage.class, "field_75748_d");
addMapping("loadedDataMap", MapStorage.class, "field_75749_b");
addMapping("loadedDataList", MapStorage.class, "field_75750_c");
addMapping("saveHandler", MapStorage.class, "field_75751_a");
addMapping("LOGGER", SaveFormatOld.class, "field_151479_b");
addMapping("dataFixer", SaveFormatOld.class, "field_186354_b");
addMapping("savesDirectory", SaveFormatOld.class, "field_75808_a");
addMapping("LOGGER", SaveHandler.class, "field_151478_a");
addMapping("dataFixer", SaveHandler.class, "field_186341_a");
addMapping("structureTemplateManager", SaveHandler.class, "field_186342_h");
addMapping("saveDirectoryName", SaveHandler.class, "field_75767_f");
addMapping("mapDataDir", SaveHandler.class, "field_75768_d");
addMapping("initializationTime", SaveHandler.class, "field_75769_e");
addMapping("worldDirectory", SaveHandler.class, "field_75770_b");
addMapping("playersDirectory", SaveHandler.class, "field_75771_c");
addMapping("savedIOCounter", ThreadedFileIOBase.class, "field_75737_d");
addMapping("isThreadWaiting", ThreadedFileIOBase.class, "field_75738_e");
addMapping("threadedIOQueue", ThreadedFileIOBase.class, "field_75739_b");
addMapping("writeQueuedCounter", ThreadedFileIOBase.class, "field_75740_c");
addMapping("INSTANCE", ThreadedFileIOBase.class, "field_75741_a");
addMapping("borderSize", WorldInfo.class, "field_176146_D");
addMapping("borderSizeLerpTime", WorldInfo.class, "field_176147_E");
addMapping("borderSizeLerpTarget", WorldInfo.class, "field_176148_F");
addMapping("borderSafeZone", WorldInfo.class, "field_176149_G");
addMapping("difficultyLocked", WorldInfo.class, "field_176150_A");
addMapping("borderCenterX", WorldInfo.class, "field_176151_B");
addMapping("borderCenterZ", WorldInfo.class, "field_176152_C");
addMapping("borderDamagePerBlock", WorldInfo.class, "field_176153_H");
addMapping("borderWarningDistance", WorldInfo.class, "field_176154_I");
addMapping("borderWarningTime", WorldInfo.class, "field_176155_J");
addMapping("DEFAULT_DIFFICULTY", WorldInfo.class, "field_176156_a");
addMapping("cleanWeatherTime", WorldInfo.class, "field_176157_p");
addMapping("difficulty", WorldInfo.class, "field_176158_z");
addMapping("dimensionData", WorldInfo.class, "field_186348_N");
addMapping("versionName", WorldInfo.class, "field_186349_b");
addMapping("versionId", WorldInfo.class, "field_186350_c");
addMapping("versionSnapshot", WorldInfo.class, "field_186351_d");
addMapping("worldTime", WorldInfo.class, "field_76094_f");
addMapping("lastTimePlayed", WorldInfo.class, "field_76095_g");
addMapping("spawnY", WorldInfo.class, "field_76096_d");
addMapping("spawnZ", WorldInfo.class, "field_76097_e");
addMapping("terrainType", WorldInfo.class, "field_76098_b");
addMapping("spawnX", WorldInfo.class, "field_76099_c");
addMapping("randomSeed", WorldInfo.class, "field_76100_a");
addMapping("rainTime", WorldInfo.class, "field_76101_n");
addMapping("thundering", WorldInfo.class, "field_76102_o");
addMapping("saveVersion", WorldInfo.class, "field_76103_l");
addMapping("raining", WorldInfo.class, "field_76104_m");
addMapping("dimension", WorldInfo.class, "field_76105_j");
addMapping("levelName", WorldInfo.class, "field_76106_k");
addMapping("sizeOnDisk", WorldInfo.class, "field_76107_h");
addMapping("playerTag", WorldInfo.class, "field_76108_i");
addMapping("initialized", WorldInfo.class, "field_76109_u");
addMapping("allowCommands", WorldInfo.class, "field_76110_t");
addMapping("hardcore", WorldInfo.class, "field_76111_s");
addMapping("mapFeaturesEnabled", WorldInfo.class, "field_76112_r");
addMapping("gameType", WorldInfo.class, "field_76113_q");
addMapping("thunderTime", WorldInfo.class, "field_76114_p");
addMapping("totalTime", WorldInfo.class, "field_82575_g");
addMapping("generatorOptions", WorldInfo.class, "field_82576_c");
addMapping("gameRules", WorldInfo.class, "field_82577_x");
addMapping("dirty", WorldSavedData.class, "field_76189_a");
addMapping("mapName", WorldSavedData.class, "field_76190_i");
addMapping("data", WorldSavedDataCallableSave.class, "field_186338_a");
addMapping("versionName", WorldSummary.class, "field_186358_i");
addMapping("versionId", WorldSummary.class, "field_186359_j");
addMapping("versionSnapshot", WorldSummary.class, "field_186360_k");
addMapping("gameType", WorldSummary.class, "field_75791_f");
addMapping("hardcore", WorldSummary.class, "field_75792_g");
addMapping("sizeOnDisk", WorldSummary.class, "field_75793_d");
addMapping("requiresConversion", WorldSummary.class, "field_75794_e");
addMapping("displayName", WorldSummary.class, "field_75795_b");
addMapping("lastTimePlayed", WorldSummary.class, "field_75796_c");
addMapping("fileName", WorldSummary.class, "field_75797_a");
addMapping("cheatsEnabled", WorldSummary.class, "field_75798_h");
addMapping("luck", LootContext.class, "field_186498_a");
addMapping("world", LootContext.class, "field_186499_b");
addMapping("lootTableManager", LootContext.class, "field_186500_c");
addMapping("lootedEntity", LootContext.class, "field_186501_d");
addMapping("player", LootContext.class, "field_186502_e");
addMapping("damageSource", LootContext.class, "field_186503_f");
addMapping("lootTables", LootContext.class, "field_186504_g");
addMapping("weight", LootEntry.class, "field_186364_c");
addMapping("quality", LootEntry.class, "field_186365_d");
addMapping("conditions", LootEntry.class, "field_186366_e");
addMapping("item", LootEntryItem.class, "field_186368_a");
addMapping("functions", LootEntryItem.class, "field_186369_b");
addMapping("table", LootEntryTable.class, "field_186371_a");
addMapping("lootEntries", LootPool.class, "field_186453_a");
addMapping("poolConditions", LootPool.class, "field_186454_b");
addMapping("rolls", LootPool.class, "field_186455_c");
addMapping("bonusRolls", LootPool.class, "field_186456_d");
addMapping("EMPTY_LOOT_TABLE", LootTable.class, "field_186464_a");
addMapping("LOGGER", LootTable.class, "field_186465_b");
addMapping("pools", LootTable.class, "field_186466_c");
addMapping("ENTITIES_SHEEP_BLACK", LootTableList.class, "field_186376_aa");
addMapping("ENTITIES_BAT", LootTableList.class, "field_186377_ab");
addMapping("ENTITIES_SLIME", LootTableList.class, "field_186378_ac");
addMapping("ENTITIES_MAGMA_CUBE", LootTableList.class, "field_186379_ad");
addMapping("ENTITIES_GHAST", LootTableList.class, "field_186380_ae");
addMapping("ENTITIES_SQUID", LootTableList.class, "field_186381_af");
addMapping("ENTITIES_ENDERMITE", LootTableList.class, "field_186382_ag");
addMapping("ENTITIES_ZOMBIE", LootTableList.class, "field_186383_ah");
addMapping("ENTITIES_ZOMBIE_PIGMAN", LootTableList.class, "field_186384_ai");
addMapping("ENTITIES_SKELETON", LootTableList.class, "field_186385_aj");
addMapping("ENTITIES_WITHER_SKELETON", LootTableList.class, "field_186386_ak");
addMapping("GAMEPLAY_FISHING", LootTableList.class, "field_186387_al");
addMapping("GAMEPLAY_FISHING_JUNK", LootTableList.class, "field_186388_am");
addMapping("GAMEPLAY_FISHING_TREASURE", LootTableList.class, "field_186389_an");
addMapping("GAMEPLAY_FISHING_FISH", LootTableList.class, "field_186390_ao");
addMapping("LOOT_TABLES", LootTableList.class, "field_186391_ap");
addMapping("READ_ONLY_LOOT_TABLES", LootTableList.class, "field_186392_aq");
addMapping("ENTITIES_RABBIT", LootTableList.class, "field_186393_A");
addMapping("ENTITIES_CHICKEN", LootTableList.class, "field_186394_B");
addMapping("ENTITIES_PIG", LootTableList.class, "field_186395_C");
addMapping("ENTITIES_HORSE", LootTableList.class, "field_186396_D");
addMapping("ENTITIES_ZOMBIE_HORSE", LootTableList.class, "field_186397_E");
addMapping("ENTITIES_SKELETON_HORSE", LootTableList.class, "field_186398_F");
addMapping("ENTITIES_COW", LootTableList.class, "field_186399_G");
addMapping("ENTITIES_MUSHROOM_COW", LootTableList.class, "field_186400_H");
addMapping("ENTITIES_WOLF", LootTableList.class, "field_186401_I");
addMapping("ENTITIES_OCELOT", LootTableList.class, "field_186402_J");
addMapping("ENTITIES_SHEEP", LootTableList.class, "field_186403_K");
addMapping("ENTITIES_SHEEP_WHITE", LootTableList.class, "field_186404_L");
addMapping("ENTITIES_SHEEP_ORANGE", LootTableList.class, "field_186405_M");
addMapping("ENTITIES_SHEEP_MAGENTA", LootTableList.class, "field_186406_N");
addMapping("ENTITIES_SHEEP_LIGHT_BLUE", LootTableList.class, "field_186407_O");
addMapping("ENTITIES_SHEEP_YELLOW", LootTableList.class, "field_186408_P");
addMapping("ENTITIES_SHEEP_LIME", LootTableList.class, "field_186409_Q");
addMapping("ENTITIES_SHEEP_PINK", LootTableList.class, "field_186410_R");
addMapping("ENTITIES_SHEEP_GRAY", LootTableList.class, "field_186411_S");
addMapping("ENTITIES_SHEEP_SILVER", LootTableList.class, "field_186412_T");
addMapping("ENTITIES_SHEEP_CYAN", LootTableList.class, "field_186413_U");
addMapping("ENTITIES_SHEEP_PURPLE", LootTableList.class, "field_186414_V");
addMapping("ENTITIES_SHEEP_BLUE", LootTableList.class, "field_186415_W");
addMapping("ENTITIES_SHEEP_BROWN", LootTableList.class, "field_186416_X");
addMapping("ENTITIES_SHEEP_GREEN", LootTableList.class, "field_186417_Y");
addMapping("ENTITIES_SHEEP_RED", LootTableList.class, "field_186418_Z");
addMapping("EMPTY", LootTableList.class, "field_186419_a");
addMapping("CHESTS_SPAWN_BONUS_CHEST", LootTableList.class, "field_186420_b");
addMapping("CHESTS_END_CITY_TREASURE", LootTableList.class, "field_186421_c");
addMapping("CHESTS_SIMPLE_DUNGEON", LootTableList.class, "field_186422_d");
addMapping("CHESTS_VILLAGE_BLACKSMITH", LootTableList.class, "field_186423_e");
addMapping("CHESTS_ABANDONED_MINESHAFT", LootTableList.class, "field_186424_f");
addMapping("CHESTS_NETHER_BRIDGE", LootTableList.class, "field_186425_g");
addMapping("CHESTS_STRONGHOLD_LIBRARY", LootTableList.class, "field_186426_h");
addMapping("CHESTS_STRONGHOLD_CROSSING", LootTableList.class, "field_186427_i");
addMapping("CHESTS_STRONGHOLD_CORRIDOR", LootTableList.class, "field_186428_j");
addMapping("CHESTS_DESERT_PYRAMID", LootTableList.class, "field_186429_k");
addMapping("CHESTS_JUNGLE_TEMPLE", LootTableList.class, "field_186430_l");
addMapping("CHESTS_IGLOO_CHEST", LootTableList.class, "field_186431_m");
addMapping("ENTITIES_WITCH", LootTableList.class, "field_186432_n");
addMapping("ENTITIES_BLAZE", LootTableList.class, "field_186433_o");
addMapping("ENTITIES_CREEPER", LootTableList.class, "field_186434_p");
addMapping("ENTITIES_SPIDER", LootTableList.class, "field_186435_q");
addMapping("ENTITIES_CAVE_SPIDER", LootTableList.class, "field_186436_r");
addMapping("ENTITIES_GIANT", LootTableList.class, "field_186437_s");
addMapping("ENTITIES_SILVERFISH", LootTableList.class, "field_186438_t");
addMapping("ENTITIES_ENDERMAN", LootTableList.class, "field_186439_u");
addMapping("ENTITIES_GUARDIAN", LootTableList.class, "field_186440_v");
addMapping("ENTITIES_ELDER_GUARDIAN", LootTableList.class, "field_186441_w");
addMapping("ENTITIES_SHULKER", LootTableList.class, "field_186442_x");
addMapping("ENTITIES_IRON_GOLEM", LootTableList.class, "field_186443_y");
addMapping("ENTITIES_SNOWMAN", LootTableList.class, "field_186444_z");
addMapping("CHESTS_JUNGLE_TEMPLE_DISPENSER", LootTableList.class, "field_189420_m");
addMapping("ENTITIES_STRAY", LootTableList.class, "field_189968_an");
addMapping("ENTITIES_POLAR_BEAR", LootTableList.class, "field_189969_E");
addMapping("ENTITIES_HUSK", LootTableList.class, "field_191182_ar");
addMapping("ENTITIES_ZOMBIE_VILLAGER", LootTableList.class, "field_191183_as");
addMapping("ENTITIES_VILLAGER", LootTableList.class, "field_191184_at");
addMapping("ENTITIES_EVOCATION_ILLAGER", LootTableList.class, "field_191185_au");
addMapping("ENTITIES_VINDICATION_ILLAGER", LootTableList.class, "field_191186_av");
addMapping("ENTITIES_LLAMA", LootTableList.class, "field_191187_aw");
addMapping("ENTITIES_VEX", LootTableList.class, "field_191188_ax");
addMapping("ENTITIES_ENDER_DRAGON", LootTableList.class, "field_191189_ay");
addMapping("ENTITIES_DONKEY", LootTableList.class, "field_191190_H");
addMapping("ENTITIES_MULE", LootTableList.class, "field_191191_I");
addMapping("CHESTS_WOODLAND_MANSION", LootTableList.class, "field_191192_o");
addMapping("ENTITIES_PARROT", LootTableList.class, "field_192561_ax");
addMapping("LOGGER", LootTableManager.class, "field_186525_a");
addMapping("GSON_INSTANCE", LootTableManager.class, "field_186526_b");
addMapping("registeredLootTables", LootTableManager.class, "field_186527_c");
addMapping("baseFolder", LootTableManager.class, "field_186528_d");
addMapping("min", RandomValueRange.class, "field_186514_a");
addMapping("max", RandomValueRange.class, "field_186515_b");
addMapping("properties", EntityHasProperty.class, "field_186623_a");
addMapping("target", EntityHasProperty.class, "field_186624_b");
addMapping("scores", EntityHasScore.class, "field_186634_a");
addMapping("target", EntityHasScore.class, "field_186635_b");
addMapping("inverse", KilledByPlayer.class, "field_186620_a");
addMapping("NAME_TO_SERIALIZER_MAP", LootConditionManager.class, "field_186642_a");
addMapping("CLASS_TO_SERIALIZER_MAP", LootConditionManager.class, "field_186643_b");
addMapping("chance", RandomChance.class, "field_186630_a");
addMapping("chance", RandomChanceWithLooting.class, "field_186627_a");
addMapping("lootingMultiplier", RandomChanceWithLooting.class, "field_186628_b");
addMapping("LOGGER", EnchantRandomly.class, "field_186557_a");
addMapping("enchantments", EnchantRandomly.class, "field_186558_b");
addMapping("randomLevel", EnchantWithLevels.class, "field_186577_a");
addMapping("isTreasure", EnchantWithLevels.class, "field_186578_b");
addMapping("conditions", LootFunction.class, "field_186555_a");
addMapping("NAME_TO_SERIALIZER_MAP", LootFunctionManager.class, "field_186584_a");
addMapping("CLASS_TO_SERIALIZER_MAP", LootFunctionManager.class, "field_186585_b");
addMapping("count", LootingEnchantBonus.class, "field_186563_a");
addMapping("limit", LootingEnchantBonus.class, "field_189971_b");
addMapping("LOGGER", SetAttributes.class, "field_186560_a");
addMapping("modifiers", SetAttributes.class, "field_186561_b");
addMapping("countRange", SetCount.class, "field_186568_a");
addMapping("LOGGER", SetDamage.class, "field_186565_a");
addMapping("damageRange", SetDamage.class, "field_186566_b");
addMapping("LOGGER", SetMetadata.class, "field_186572_a");
addMapping("metaRange", SetMetadata.class, "field_186573_b");
addMapping("tag", SetNBT.class, "field_186570_a");
addMapping("LOGGER", Smelt.class, "field_186574_a");
addMapping("onFire", EntityOnFire.class, "field_186659_a");
addMapping("NAME_TO_SERIALIZER_MAP", EntityPropertyManager.class, "field_186647_a");
addMapping("CLASS_TO_SERIALIZER_MAP", EntityPropertyManager.class, "field_186648_b");
