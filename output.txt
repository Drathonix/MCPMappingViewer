addMapping("setRotationAngles", ModelBat.class, "func_78087_a");
addMapping("render", ModelBat.class, "func_78088_a");
addMapping("batOuterLeftWing", ModelBat.class, "field_82890_f");
addMapping("batLeftWing", ModelBat.class, "field_82891_d");
addMapping("batOuterRightWing", ModelBat.class, "field_82892_e");
addMapping("batBody", ModelBat.class, "field_82893_b");
addMapping("batRightWing", ModelBat.class, "field_82894_c");
addMapping("batHead", ModelBat.class, "field_82895_a");
addMapping("setRotationAngles", ModelChicken.class, "func_78087_a");
addMapping("render", ModelChicken.class, "func_78088_a");
addMapping("leftWing", ModelChicken.class, "field_78136_f");
addMapping("bill", ModelChicken.class, "field_78137_g");
addMapping("leftLeg", ModelChicken.class, "field_78138_d");
addMapping("rightWing", ModelChicken.class, "field_78139_e");
addMapping("body", ModelChicken.class, "field_78140_b");
addMapping("rightLeg", ModelChicken.class, "field_78141_c");
addMapping("head", ModelChicken.class, "field_78142_a");
addMapping("chin", ModelChicken.class, "field_78143_h");
addMapping("updateHorseRotation", ModelHorse.class, "func_110683_a");
addMapping("setLivingAnimations", ModelHorse.class, "func_78086_a");
addMapping("render", ModelHorse.class, "func_78088_a");
addMapping("frontRightLeg", ModelHorse.class, "field_110684_D");
addMapping("frontRightShin", ModelHorse.class, "field_110685_E");
addMapping("frontRightHoof", ModelHorse.class, "field_110686_F");
addMapping("muleLeftChest", ModelHorse.class, "field_110687_G");
addMapping("frontLeftLeg", ModelHorse.class, "field_110688_A");
addMapping("frontLeftShin", ModelHorse.class, "field_110689_B");
addMapping("frontLeftHoof", ModelHorse.class, "field_110690_C");
addMapping("horseLeftSaddleRope", ModelHorse.class, "field_110691_L");
addMapping("horseLeftSaddleMetal", ModelHorse.class, "field_110692_M");
addMapping("horseRightSaddleRope", ModelHorse.class, "field_110693_N");
addMapping("horseRightSaddleMetal", ModelHorse.class, "field_110694_O");
addMapping("muleRightChest", ModelHorse.class, "field_110695_H");
addMapping("horseSaddleBottom", ModelHorse.class, "field_110696_I");
addMapping("horseSaddleFront", ModelHorse.class, "field_110697_J");
addMapping("horseSaddleBack", ModelHorse.class, "field_110698_K");
addMapping("horseRightFaceMetal", ModelHorse.class, "field_110699_Q");
addMapping("horseLeftFaceMetal", ModelHorse.class, "field_110700_P");
addMapping("horseRightRein", ModelHorse.class, "field_110701_S");
addMapping("horseLeftRein", ModelHorse.class, "field_110702_R");
addMapping("muleLeftEar", ModelHorse.class, "field_110703_f");
addMapping("muleRightEar", ModelHorse.class, "field_110704_g");
addMapping("horseLeftEar", ModelHorse.class, "field_110705_d");
addMapping("horseRightEar", ModelHorse.class, "field_110706_e");
addMapping("head", ModelHorse.class, "field_110709_a");
addMapping("tailTip", ModelHorse.class, "field_110710_n");
addMapping("backLeftLeg", ModelHorse.class, "field_110711_o");
addMapping("tailBase", ModelHorse.class, "field_110712_l");
addMapping("tailMiddle", ModelHorse.class, "field_110713_m");
addMapping("mane", ModelHorse.class, "field_110714_j");
addMapping("body", ModelHorse.class, "field_110715_k");
addMapping("neck", ModelHorse.class, "field_110716_h");
addMapping("horseFaceRopes", ModelHorse.class, "field_110717_i");
addMapping("backLeftHoof", ModelHorse.class, "field_110718_w");
addMapping("backLeftShin", ModelHorse.class, "field_110719_v");
addMapping("backRightHoof", ModelHorse.class, "field_110720_z");
addMapping("backRightShin", ModelHorse.class, "field_110721_y");
addMapping("backRightLeg", ModelHorse.class, "field_110722_x");
addMapping("upperMouth", ModelHorse.class, "field_178711_b");
addMapping("lowerMouth", ModelHorse.class, "field_178712_c");
addMapping("setLivingAnimations", ModelOcelot.class, "func_78086_a");
addMapping("setRotationAngles", ModelOcelot.class, "func_78087_a");
addMapping("render", ModelOcelot.class, "func_78088_a");
addMapping("ocelotTail2", ModelOcelot.class, "field_78155_f");
addMapping("ocelotHead", ModelOcelot.class, "field_78156_g");
addMapping("ocelotFrontRightLeg", ModelOcelot.class, "field_78157_d");
addMapping("ocelotTail", ModelOcelot.class, "field_78158_e");
addMapping("ocelotBackRightLeg", ModelOcelot.class, "field_78159_b");
addMapping("ocelotFrontLeftLeg", ModelOcelot.class, "field_78160_c");
addMapping("ocelotBackLeftLeg", ModelOcelot.class, "field_78161_a");
addMapping("ocelotBody", ModelOcelot.class, "field_78162_h");
addMapping("state", ModelOcelot.class, "field_78163_i");
addMapping("setLivingAnimations", ModelWolf.class, "func_78086_a");
addMapping("setRotationAngles", ModelWolf.class, "func_78087_a");
addMapping("render", ModelWolf.class, "func_78088_a");
addMapping("wolfLeg4", ModelWolf.class, "field_78179_f");
addMapping("wolfTail", ModelWolf.class, "field_78180_g");
addMapping("wolfLeg2", ModelWolf.class, "field_78181_d");
addMapping("wolfLeg3", ModelWolf.class, "field_78182_e");
addMapping("wolfBody", ModelWolf.class, "field_78183_b");
addMapping("wolfLeg1", ModelWolf.class, "field_78184_c");
addMapping("wolfHeadMain", ModelWolf.class, "field_78185_a");
addMapping("wolfMane", ModelWolf.class, "field_78186_h");
addMapping("setVisible", ModelPlayer.class, "func_178719_a");
addMapping("renderDeadmau5Head", ModelPlayer.class, "func_178727_b");
addMapping("renderCape", ModelPlayer.class, "func_178728_c");
addMapping("postRenderArm", ModelPlayer.class, "func_187073_a");
addMapping("setRotationAngles", ModelPlayer.class, "func_78087_a");
addMapping("render", ModelPlayer.class, "func_78088_a");
addMapping("bipedCape", ModelPlayer.class, "field_178729_w");
addMapping("bipedBodyWear", ModelPlayer.class, "field_178730_v");
addMapping("bipedRightLegwear", ModelPlayer.class, "field_178731_d");
addMapping("bipedRightArmwear", ModelPlayer.class, "field_178732_b");
addMapping("bipedLeftLegwear", ModelPlayer.class, "field_178733_c");
addMapping("bipedLeftArmwear", ModelPlayer.class, "field_178734_a");
addMapping("smallArms", ModelPlayer.class, "field_178735_y");
addMapping("bipedDeadmau5Head", ModelPlayer.class, "field_178736_x");
addMapping("setRotationAngles", ModelBlaze.class, "func_78087_a");
addMapping("render", ModelBlaze.class, "func_78088_a");
addMapping("blazeHead", ModelBlaze.class, "field_78105_b");
addMapping("blazeSticks", ModelBlaze.class, "field_78106_a");
addMapping("setRotationAngles", ModelCreeper.class, "func_78087_a");
addMapping("render", ModelCreeper.class, "func_78088_a");
addMapping("leg3", ModelCreeper.class, "field_78129_f");
addMapping("leg4", ModelCreeper.class, "field_78130_g");
addMapping("leg1", ModelCreeper.class, "field_78131_d");
addMapping("leg2", ModelCreeper.class, "field_78132_e");
addMapping("creeperArmor", ModelCreeper.class, "field_78133_b");
addMapping("body", ModelCreeper.class, "field_78134_c");
addMapping("head", ModelCreeper.class, "field_78135_a");
addMapping("setLivingAnimations", ModelDragon.class, "func_78086_a");
addMapping("render", ModelDragon.class, "func_78088_a");
addMapping("updateRotations", ModelDragon.class, "func_78214_a");
addMapping("frontLeg", ModelDragon.class, "field_78215_f");
addMapping("rearLegTip", ModelDragon.class, "field_78216_g");
addMapping("body", ModelDragon.class, "field_78217_d");
addMapping("rearLeg", ModelDragon.class, "field_78218_e");
addMapping("spine", ModelDragon.class, "field_78219_b");
addMapping("jaw", ModelDragon.class, "field_78220_c");
addMapping("head", ModelDragon.class, "field_78221_a");
addMapping("wingTip", ModelDragon.class, "field_78222_l");
addMapping("partialTicks", ModelDragon.class, "field_78223_m");
addMapping("frontFoot", ModelDragon.class, "field_78224_j");
addMapping("wing", ModelDragon.class, "field_78225_k");
addMapping("frontLegTip", ModelDragon.class, "field_78226_h");
addMapping("rearFoot", ModelDragon.class, "field_78227_i");
addMapping("setRotationAngles", ModelEnderMite.class, "func_78087_a");
addMapping("render", ModelEnderMite.class, "func_78088_a");
addMapping("bodyParts", ModelEnderMite.class, "field_178713_d");
addMapping("BODY_TEXS", ModelEnderMite.class, "field_178714_b");
addMapping("BODY_COUNT", ModelEnderMite.class, "field_178715_c");
addMapping("BODY_SIZES", ModelEnderMite.class, "field_178716_a");
addMapping("setRotationAngles", ModelGhast.class, "func_78087_a");
addMapping("render", ModelGhast.class, "func_78088_a");
addMapping("tentacles", ModelGhast.class, "field_78127_b");
addMapping("body", ModelGhast.class, "field_78128_a");
addMapping("setRotationAngles", ModelSilverfish.class, "func_78087_a");
addMapping("render", ModelSilverfish.class, "func_78088_a");
addMapping("SILVERFISH_BOX_LENGTH", ModelSilverfish.class, "field_78167_d");
addMapping("SILVERFISH_TEXTURE_POSITIONS", ModelSilverfish.class, "field_78168_e");
addMapping("silverfishWings", ModelSilverfish.class, "field_78169_b");
addMapping("zPlacement", ModelSilverfish.class, "field_78170_c");
addMapping("silverfishBodyParts", ModelSilverfish.class, "field_78171_a");
addMapping("postRenderArm", ModelSkeleton.class, "func_187073_a");
addMapping("setLivingAnimations", ModelSkeleton.class, "func_78086_a");
addMapping("setRotationAngles", ModelSkeleton.class, "func_78087_a");
addMapping("setLivingAnimations", ModelWither.class, "func_78086_a");
addMapping("setRotationAngles", ModelWither.class, "func_78087_a");
addMapping("render", ModelWither.class, "func_78088_a");
addMapping("heads", ModelWither.class, "field_82904_b");
addMapping("upperBodyParts", ModelWither.class, "field_82905_a");
addMapping("setModelAttributes", ModelBiped.class, "func_178686_a");
addMapping("setVisible", ModelBiped.class, "func_178719_a");
addMapping("getMainHand", ModelBiped.class, "func_187072_a");
addMapping("postRenderArm", ModelBiped.class, "func_187073_a");
addMapping("getArmForSide", ModelBiped.class, "func_187074_a");
addMapping("setRotationAngles", ModelBiped.class, "func_78087_a");
addMapping("render", ModelBiped.class, "func_78088_a");
addMapping("bipedHeadwear", ModelBiped.class, "field_178720_f");
addMapping("bipedRightLeg", ModelBiped.class, "field_178721_j");
addMapping("bipedLeftLeg", ModelBiped.class, "field_178722_k");
addMapping("bipedRightArm", ModelBiped.class, "field_178723_h");
addMapping("bipedLeftArm", ModelBiped.class, "field_178724_i");
addMapping("leftArmPose", ModelBiped.class, "field_187075_l");
addMapping("rightArmPose", ModelBiped.class, "field_187076_m");
addMapping("bipedBody", ModelBiped.class, "field_78115_e");
addMapping("bipedHead", ModelBiped.class, "field_78116_c");
addMapping("isSneak", ModelBiped.class, "field_78117_n");
addMapping("copyModelAngles", ModelBase.class, "func_178685_a");
addMapping("setModelAttributes", ModelBase.class, "func_178686_a");
addMapping("getTextureOffset", ModelBase.class, "func_78084_a");
addMapping("setTextureOffset", ModelBase.class, "func_78085_a");
addMapping("setLivingAnimations", ModelBase.class, "func_78086_a");
addMapping("setRotationAngles", ModelBase.class, "func_78087_a");
addMapping("render", ModelBase.class, "func_78088_a");
addMapping("getRandomModelBox", ModelBase.class, "func_85181_a");
addMapping("textureHeight", ModelBase.class, "field_78089_u");
addMapping("textureWidth", ModelBase.class, "field_78090_t");
addMapping("isChild", ModelBase.class, "field_78091_s");
addMapping("boxList", ModelBase.class, "field_78092_r");
addMapping("isRiding", ModelBase.class, "field_78093_q");
addMapping("modelTextureMap", ModelBase.class, "field_78094_a");
addMapping("swingProgress", ModelBase.class, "field_78095_p");
addMapping("getArm", ModelIllager.class, "func_191216_a");
addMapping("setRotationAngles", ModelIllager.class, "func_78087_a");
addMapping("render", ModelIllager.class, "func_78088_a");
addMapping("head", ModelIllager.class, "field_191217_a");
addMapping("body", ModelIllager.class, "field_191218_b");
addMapping("arms", ModelIllager.class, "field_191219_c");
addMapping("leg0", ModelIllager.class, "field_191220_d");
addMapping("leg1", ModelIllager.class, "field_191221_e");
addMapping("nose", ModelIllager.class, "field_191222_f");
addMapping("rightArm", ModelIllager.class, "field_191223_g");
addMapping("leftArm", ModelIllager.class, "field_191224_h");
addMapping("hat", ModelIllager.class, "field_193775_b");
addMapping("setRotationAngles", ModelQuadruped.class, "func_78087_a");
addMapping("render", ModelQuadruped.class, "func_78088_a");
addMapping("leg4", ModelQuadruped.class, "field_78144_f");
addMapping("childYOffset", ModelQuadruped.class, "field_78145_g");
addMapping("leg2", ModelQuadruped.class, "field_78146_d");
addMapping("leg3", ModelQuadruped.class, "field_78147_e");
addMapping("body", ModelQuadruped.class, "field_78148_b");
addMapping("leg1", ModelQuadruped.class, "field_78149_c");
addMapping("head", ModelQuadruped.class, "field_78150_a");
addMapping("childZOffset", ModelQuadruped.class, "field_78151_h");
addMapping("setRotationAngles", ModelSpider.class, "func_78087_a");
addMapping("render", ModelSpider.class, "func_78088_a");
addMapping("spiderLeg3", ModelSpider.class, "field_78203_f");
addMapping("spiderLeg4", ModelSpider.class, "field_78204_g");
addMapping("spiderLeg1", ModelSpider.class, "field_78205_d");
addMapping("spiderLeg2", ModelSpider.class, "field_78206_e");
addMapping("spiderNeck", ModelSpider.class, "field_78207_b");
addMapping("spiderBody", ModelSpider.class, "field_78208_c");
addMapping("spiderHead", ModelSpider.class, "field_78209_a");
addMapping("spiderLeg7", ModelSpider.class, "field_78210_j");
addMapping("spiderLeg8", ModelSpider.class, "field_78211_k");
addMapping("spiderLeg5", ModelSpider.class, "field_78212_h");
addMapping("spiderLeg6", ModelSpider.class, "field_78213_i");
addMapping("setRotationAngles", ModelVillager.class, "func_78087_a");
addMapping("render", ModelVillager.class, "func_78088_a");
addMapping("rightVillagerLeg", ModelVillager.class, "field_78187_d");
addMapping("leftVillagerLeg", ModelVillager.class, "field_78188_e");
addMapping("villagerBody", ModelVillager.class, "field_78189_b");
addMapping("villagerArms", ModelVillager.class, "field_78190_c");
addMapping("villagerHead", ModelVillager.class, "field_78191_a");
addMapping("villagerNose", ModelVillager.class, "field_82898_f");
addMapping("renderName", RenderLivingBase.class, "func_177067_a");
addMapping("canRenderName", RenderLivingBase.class, "func_177070_b");
addMapping("getMainModel", RenderLivingBase.class, "func_177087_b");
addMapping("setScoreTeamColor", RenderLivingBase.class, "func_177088_c");
addMapping("setDoRenderBrightness", RenderLivingBase.class, "func_177090_c");
addMapping("unsetBrightness", RenderLivingBase.class, "func_177091_f");
addMapping("setBrightness", RenderLivingBase.class, "func_177092_a");
addMapping("renderLayers", RenderLivingBase.class, "func_177093_a");
addMapping("addLayer", RenderLivingBase.class, "func_177094_a");
addMapping("unsetScoreTeamColor", RenderLivingBase.class, "func_180565_e");
addMapping("prepareScale", RenderLivingBase.class, "func_188322_c");
addMapping("isVisible", RenderLivingBase.class, "func_193115_c");
addMapping("doRender", RenderLivingBase.class, "func_76986_a");
addMapping("getColorMultiplier", RenderLivingBase.class, "func_77030_a");
addMapping("interpolateRotation", RenderLivingBase.class, "func_77034_a");
addMapping("renderModel", RenderLivingBase.class, "func_77036_a");
addMapping("getDeathMaxRotation", RenderLivingBase.class, "func_77037_a");
addMapping("renderLivingAt", RenderLivingBase.class, "func_77039_a");
addMapping("getSwingProgress", RenderLivingBase.class, "func_77040_d");
addMapping("preRenderCallback", RenderLivingBase.class, "func_77041_b");
addMapping("applyRotations", RenderLivingBase.class, "func_77043_a");
addMapping("handleRotationFloat", RenderLivingBase.class, "func_77044_a");
addMapping("transformHeldFull3DItemLayer", RenderLivingBase.class, "func_82422_c");
addMapping("LOGGER", RenderLivingBase.class, "field_147923_a");
addMapping("brightnessBuffer", RenderLivingBase.class, "field_177095_g");
addMapping("TEXTURE_BRIGHTNESS", RenderLivingBase.class, "field_177096_e");
addMapping("layerRenderers", RenderLivingBase.class, "field_177097_h");
addMapping("renderMarker", RenderLivingBase.class, "field_188323_j");
addMapping("mainModel", RenderLivingBase.class, "field_77045_g");
addMapping("getEntityTexture", Render.class, "func_110775_a");
addMapping("bindTexture", Render.class, "func_110776_a");
addMapping("renderLivingLabel", Render.class, "func_147906_a");
addMapping("renderName", Render.class, "func_177067_a");
addMapping("getRenderManager", Render.class, "func_177068_d");
addMapping("canRenderName", Render.class, "func_177070_b");
addMapping("shouldRender", Render.class, "func_177071_a");
addMapping("bindEntityTexture", Render.class, "func_180548_c");
addMapping("isMultipass", Render.class, "func_188295_H_");
addMapping("renderEntityName", Render.class, "func_188296_a");
addMapping("setRenderOutlines", Render.class, "func_188297_a");
addMapping("getTeamColor", Render.class, "func_188298_c");
addMapping("renderShadowSingle", Render.class, "func_188299_a");
addMapping("renderMultipass", Render.class, "func_188300_b");
addMapping("renderShadow", Render.class, "func_76975_c");
addMapping("renderEntityOnFire", Render.class, "func_76977_a");
addMapping("renderOffsetAABB", Render.class, "func_76978_a");
addMapping("doRenderShadowAndFire", Render.class, "func_76979_b");
addMapping("getWorldFromRenderManager", Render.class, "func_76982_b");
addMapping("getFontRendererFromRenderManager", Render.class, "func_76983_a");
addMapping("doRender", Render.class, "func_76986_a");
addMapping("SHADOW_TEXTURES", Render.class, "field_110778_a");
addMapping("renderOutlines", Render.class, "field_188301_f");
addMapping("shadowOpaque", Render.class, "field_76987_f");
addMapping("shadowSize", Render.class, "field_76989_e");
addMapping("renderManager", Render.class, "field_76990_c");
addMapping("getMaxHealth", EntityLivingBase.class, "func_110138_aP");
addMapping("getAbsorptionAmount", EntityLivingBase.class, "func_110139_bj");
addMapping("getAttributeMap", EntityLivingBase.class, "func_110140_aT");
addMapping("getCombatTracker", EntityLivingBase.class, "func_110142_aN");
addMapping("getHealth", EntityLivingBase.class, "func_110143_aJ");
addMapping("getLastAttackedEntity", EntityLivingBase.class, "func_110144_aD");
addMapping("dismountEntity", EntityLivingBase.class, "func_110145_l");
addMapping("updateDistance", EntityLivingBase.class, "func_110146_f");
addMapping("applyEntityAttributes", EntityLivingBase.class, "func_110147_ax");
addMapping("getEntityAttribute", EntityLivingBase.class, "func_110148_a");
addMapping("setAbsorptionAmount", EntityLivingBase.class, "func_110149_m");
addMapping("setLastAttackedEntity", EntityLivingBase.class, "func_130011_c");
addMapping("getLastAttackedEntityTime", EntityLivingBase.class, "func_142013_aG");
addMapping("getRevengeTimer", EntityLivingBase.class, "func_142015_aE");
addMapping("canDropLoot", EntityLivingBase.class, "func_146066_aG");
addMapping("sendEnterCombat", EntityLivingBase.class, "func_152111_bt");
addMapping("sendEndCombat", EntityLivingBase.class, "func_152112_bu");
addMapping("onKillCommand", EntityLivingBase.class, "func_174812_G");
addMapping("resetPotionEffectMetadata", EntityLivingBase.class, "func_175133_bi");
addMapping("getJumpUpwardsMotion", EntityLivingBase.class, "func_175134_bD");
addMapping("updatePotionMetadata", EntityLivingBase.class, "func_175135_B");
addMapping("markPotionsDirty", EntityLivingBase.class, "func_175136_bO");
addMapping("setPositionAndRotationDirect", EntityLivingBase.class, "func_180426_a");
addMapping("fall", EntityLivingBase.class, "func_180430_e");
addMapping("handleJumpLava", EntityLivingBase.class, "func_180466_bG");
addMapping("setRenderYawOffset", EntityLivingBase.class, "func_181013_g");
addMapping("getArmorInventoryList", EntityLivingBase.class, "func_184193_aE");
addMapping("setItemStackToSlot", EntityLivingBase.class, "func_184201_a");
addMapping("notifyDataManagerChange", EntityLivingBase.class, "func_184206_a");
addMapping("dismountRidingEntity", EntityLivingBase.class, "func_184210_p");
addMapping("updateFallState", EntityLivingBase.class, "func_184231_a");
addMapping("playHurtSound", EntityLivingBase.class, "func_184581_c");
addMapping("getItemStackFromSlot", EntityLivingBase.class, "func_184582_a");
addMapping("canBlockDamageSource", EntityLivingBase.class, "func_184583_d");
addMapping("updateItemUse", EntityLivingBase.class, "func_184584_a");
addMapping("isActiveItemStackBlocking", EntityLivingBase.class, "func_184585_cz");
addMapping("getHeldItem", EntityLivingBase.class, "func_184586_b");
addMapping("isHandActive", EntityLivingBase.class, "func_184587_cr");
addMapping("getFallSound", EntityLivingBase.class, "func_184588_d");
addMapping("removePotionEffect", EntityLivingBase.class, "func_184589_d");
addMapping("damageShield", EntityLivingBase.class, "func_184590_k");
addMapping("getPrimaryHand", EntityLivingBase.class, "func_184591_cq");
addMapping("getHeldItemOffhand", EntityLivingBase.class, "func_184592_cb");
addMapping("areAllPotionsAmbient", EntityLivingBase.class, "func_184593_a");
addMapping("frostWalk", EntityLivingBase.class, "func_184594_b");
addMapping("attemptTeleport", EntityLivingBase.class, "func_184595_k");
addMapping("removeActivePotionEffect", EntityLivingBase.class, "func_184596_c");
addMapping("stopActiveHand", EntityLivingBase.class, "func_184597_cx");
addMapping("setActiveHand", EntityLivingBase.class, "func_184598_c");
addMapping("getTicksElytraFlying", EntityLivingBase.class, "func_184599_cB");
addMapping("getActiveHand", EntityLivingBase.class, "func_184600_cs");
addMapping("getHurtSound", EntityLivingBase.class, "func_184601_bQ");
addMapping("resetActiveHand", EntityLivingBase.class, "func_184602_cy");
addMapping("canBeHitWithPotion", EntityLivingBase.class, "func_184603_cC");
addMapping("canGoThroughtTrapDoorOnLadder", EntityLivingBase.class, "func_184604_a");
addMapping("getItemInUseCount", EntityLivingBase.class, "func_184605_cv");
addMapping("playEquipSound", EntityLivingBase.class, "func_184606_a_");
addMapping("getActiveItemStack", EntityLivingBase.class, "func_184607_cu");
addMapping("updateActiveHand", EntityLivingBase.class, "func_184608_ct");
addMapping("swingArm", EntityLivingBase.class, "func_184609_a");
addMapping("dropLoot", EntityLivingBase.class, "func_184610_a");
addMapping("setHeldItem", EntityLivingBase.class, "func_184611_a");
addMapping("getItemInUseMaxCount", EntityLivingBase.class, "func_184612_cw");
addMapping("isElytraFlying", EntityLivingBase.class, "func_184613_cA");
addMapping("getHeldItemMainhand", EntityLivingBase.class, "func_184614_ca");
addMapping("getDeathSound", EntityLivingBase.class, "func_184615_bR");
addMapping("updateElytra", EntityLivingBase.class, "func_184616_r");
addMapping("getLastDamageSource", EntityLivingBase.class, "func_189748_bU");
addMapping("getWaterSlowDown", EntityLivingBase.class, "func_189749_co");
addMapping("checkTotemDeathProtection", EntityLivingBase.class, "func_190628_d");
addMapping("blockUsingShield", EntityLivingBase.class, "func_190629_c");
addMapping("hasItemInSlot", EntityLivingBase.class, "func_190630_a");
addMapping("attackable", EntityLivingBase.class, "func_190631_cK");
addMapping("travel", EntityLivingBase.class, "func_191986_a");
addMapping("setPartying", EntityLivingBase.class, "func_191987_a");
addMapping("getActivePotionMap", EntityLivingBase.class, "func_193076_bZ");
addMapping("writeEntityToNBT", EntityLivingBase.class, "func_70014_b");
addMapping("markVelocityChanged", EntityLivingBase.class, "func_70018_K");
addMapping("onEntityUpdate", EntityLivingBase.class, "func_70030_z");
addMapping("setSprinting", EntityLivingBase.class, "func_70031_b");
addMapping("setRotationYawHead", EntityLivingBase.class, "func_70034_d");
addMapping("readEntityFromNBT", EntityLivingBase.class, "func_70037_a");
addMapping("performHurtAnimation", EntityLivingBase.class, "func_70057_ab");
addMapping("canBeCollidedWith", EntityLivingBase.class, "func_70067_L");
addMapping("onUpdate", EntityLivingBase.class, "func_70071_h_");
addMapping("outOfWorld", EntityLivingBase.class, "func_70076_C");
addMapping("getRotationYawHead", EntityLivingBase.class, "func_70079_am");
addMapping("entityInit", EntityLivingBase.class, "func_70088_a");
addMapping("isEntityAlive", EntityLivingBase.class, "func_70089_S");
addMapping("attackEntityFrom", EntityLivingBase.class, "func_70097_a");
addMapping("updateRidden", EntityLivingBase.class, "func_70098_U");
addMapping("handleStatusUpdate", EntityLivingBase.class, "func_70103_a");
addMapping("canBePushed", EntityLivingBase.class, "func_70104_M");
addMapping("getSoundVolume", EntityLivingBase.class, "func_70599_aP");
addMapping("setRevengeTarget", EntityLivingBase.class, "func_70604_c");
addMapping("setHealth", EntityLivingBase.class, "func_70606_j");
addMapping("isPlayerSleeping", EntityLivingBase.class, "func_70608_bn");
addMapping("onDeathUpdate", EntityLivingBase.class, "func_70609_aI");
addMapping("isMovementBlocked", EntityLivingBase.class, "func_70610_aX");
addMapping("isServerWorld", EntityLivingBase.class, "func_70613_aW");
addMapping("isOnLadder", EntityLivingBase.class, "func_70617_f_");
addMapping("updateEntityActionState", EntityLivingBase.class, "func_70626_be");
addMapping("dropFewItems", EntityLivingBase.class, "func_70628_a");
addMapping("handleJumpWater", EntityLivingBase.class, "func_70629_bd");
addMapping("isChild", EntityLivingBase.class, "func_70631_g_");
addMapping("onLivingUpdate", EntityLivingBase.class, "func_70636_d");
addMapping("setJumping", EntityLivingBase.class, "func_70637_d");
addMapping("getRevengeTarget", EntityLivingBase.class, "func_70643_av");
addMapping("isPotionActive", EntityLivingBase.class, "func_70644_a");
addMapping("onDeath", EntityLivingBase.class, "func_70645_a");
addMapping("getSoundPitch", EntityLivingBase.class, "func_70647_i");
addMapping("canBreatheUnderwater", EntityLivingBase.class, "func_70648_aU");
addMapping("getActivePotionEffects", EntityLivingBase.class, "func_70651_bq");
addMapping("attackEntityAsMob", EntityLivingBase.class, "func_70652_k");
addMapping("knockBack", EntityLivingBase.class, "func_70653_a");
addMapping("getIdleTime", EntityLivingBase.class, "func_70654_ax");
addMapping("applyArmorCalculations", EntityLivingBase.class, "func_70655_b");
addMapping("getTotalArmorValue", EntityLivingBase.class, "func_70658_aO");
addMapping("setAIMoveSpeed", EntityLivingBase.class, "func_70659_e");
addMapping("getActivePotionEffect", EntityLivingBase.class, "func_70660_b");
addMapping("isEntityUndead", EntityLivingBase.class, "func_70662_br");
addMapping("jump", EntityLivingBase.class, "func_70664_aZ");
addMapping("damageEntity", EntityLivingBase.class, "func_70665_d");
addMapping("getCreatureAttribute", EntityLivingBase.class, "func_70668_bt");
addMapping("renderBrokenItemStack", EntityLivingBase.class, "func_70669_a");
addMapping("onNewPotionEffect", EntityLivingBase.class, "func_70670_a");
addMapping("applyPotionDamageCalculations", EntityLivingBase.class, "func_70672_c");
addMapping("clearActivePotions", EntityLivingBase.class, "func_70674_bp");
addMapping("damageArmor", EntityLivingBase.class, "func_70675_k");
addMapping("getLook", EntityLivingBase.class, "func_70676_i");
addMapping("getSwingProgress", EntityLivingBase.class, "func_70678_g");
addMapping("updatePotionEffects", EntityLivingBase.class, "func_70679_bo");
addMapping("getRNG", EntityLivingBase.class, "func_70681_au");
addMapping("decreaseAirSupply", EntityLivingBase.class, "func_70682_h");
addMapping("isPlayer", EntityLivingBase.class, "func_70684_aJ");
addMapping("canEntityBeSeen", EntityLivingBase.class, "func_70685_l");
addMapping("isPotionApplicable", EntityLivingBase.class, "func_70687_e");
addMapping("onFinishedPotionEffect", EntityLivingBase.class, "func_70688_c");
addMapping("getAIMoveSpeed", EntityLivingBase.class, "func_70689_ay");
addMapping("addPotionEffect", EntityLivingBase.class, "func_70690_d");
addMapping("heal", EntityLivingBase.class, "func_70691_i");
addMapping("getExperiencePoints", EntityLivingBase.class, "func_70693_a");
addMapping("onChangedPotionEffect", EntityLivingBase.class, "func_70695_b");
addMapping("onItemPickup", EntityLivingBase.class, "func_71001_a");
addMapping("onItemUseFinish", EntityLivingBase.class, "func_71036_o");
addMapping("dropEquipment", EntityLivingBase.class, "func_82160_b");
addMapping("getArmSwingAnimationEnd", EntityLivingBase.class, "func_82166_i");
addMapping("collideWithEntity", EntityLivingBase.class, "func_82167_n");
addMapping("updateArmSwingProgress", EntityLivingBase.class, "func_82168_bl");
addMapping("collideWithNearbyEntities", EntityLivingBase.class, "func_85033_bc");
addMapping("setArrowCountInEntity", EntityLivingBase.class, "func_85034_r");
addMapping("getArrowCountInEntity", EntityLivingBase.class, "func_85035_bI");
addMapping("getAlwaysRenderNameTagForRender", EntityLivingBase.class, "func_94059_bO");
addMapping("getAttackingEntity", EntityLivingBase.class, "func_94060_bK");
addMapping("lastAttackedEntity", EntityLivingBase.class, "field_110150_bn");
addMapping("absorptionAmount", EntityLivingBase.class, "field_110151_bq");
addMapping("lastDamage", EntityLivingBase.class, "field_110153_bc");
addMapping("onGroundSpeedFactor", EntityLivingBase.class, "field_110154_aX");
addMapping("attributeMap", EntityLivingBase.class, "field_110155_d");
addMapping("SPRINTING_SPEED_BOOST_ID", EntityLivingBase.class, "field_110156_b");
addMapping("SPRINTING_SPEED_BOOST", EntityLivingBase.class, "field_110157_c");
addMapping("swingProgressInt", EntityLivingBase.class, "field_110158_av");
addMapping("lastAttackedEntityTime", EntityLivingBase.class, "field_142016_bo");
addMapping("ticksSinceLastSwing", EntityLivingBase.class, "field_184617_aD");
addMapping("prevLimbSwingAmount", EntityLivingBase.class, "field_184618_aE");
addMapping("limbSwing", EntityLivingBase.class, "field_184619_aG");
addMapping("prevBlockpos", EntityLivingBase.class, "field_184620_bC");
addMapping("HAND_STATES", EntityLivingBase.class, "field_184621_as");
addMapping("swingingHand", EntityLivingBase.class, "field_184622_au");
addMapping("interpTargetX", EntityLivingBase.class, "field_184623_bh");
addMapping("interpTargetY", EntityLivingBase.class, "field_184624_bi");
addMapping("interpTargetZ", EntityLivingBase.class, "field_184625_bj");
addMapping("interpTargetYaw", EntityLivingBase.class, "field_184626_bk");
addMapping("activeItemStack", EntityLivingBase.class, "field_184627_bm");
addMapping("activeItemStackUseCount", EntityLivingBase.class, "field_184628_bn");
addMapping("ticksElytraFlying", EntityLivingBase.class, "field_184629_bo");
addMapping("handInventory", EntityLivingBase.class, "field_184630_bs");
addMapping("armorArray", EntityLivingBase.class, "field_184631_bt");
addMapping("HEALTH", EntityLivingBase.class, "field_184632_c");
addMapping("POTION_EFFECTS", EntityLivingBase.class, "field_184633_f");
addMapping("HIDE_PARTICLES", EntityLivingBase.class, "field_184634_g");
addMapping("ARROW_COUNT_IN_ENTITY", EntityLivingBase.class, "field_184635_h");
addMapping("lastDamageSource", EntityLivingBase.class, "field_189750_bF");
addMapping("lastDamageStamp", EntityLivingBase.class, "field_189751_bG");
addMapping("LOGGER", EntityLivingBase.class, "field_190632_a");
addMapping("moveForward", EntityLivingBase.class, "field_191988_bg");
addMapping("moveVertical", EntityLivingBase.class, "field_70701_bs");
addMapping("moveStrafing", EntityLivingBase.class, "field_70702_br");
addMapping("isJumping", EntityLivingBase.class, "field_70703_bu");
addMapping("randomYawVelocity", EntityLivingBase.class, "field_70704_bt");
addMapping("idleTime", EntityLivingBase.class, "field_70708_bq");
addMapping("interpTargetPitch", EntityLivingBase.class, "field_70709_bj");
addMapping("activePotionsMap", EntityLivingBase.class, "field_70713_bf");
addMapping("newPosRotationIncrements", EntityLivingBase.class, "field_70716_bi");
addMapping("attackingPlayer", EntityLivingBase.class, "field_70717_bb");
addMapping("recentlyHit", EntityLivingBase.class, "field_70718_bc");
addMapping("arrowHitTimer", EntityLivingBase.class, "field_70720_be");
addMapping("limbSwingAmount", EntityLivingBase.class, "field_70721_aZ");
addMapping("deathTime", EntityLivingBase.class, "field_70725_aQ");
addMapping("cameraPitch", EntityLivingBase.class, "field_70726_aT");
addMapping("prevCameraPitch", EntityLivingBase.class, "field_70727_aS");
addMapping("dead", EntityLivingBase.class, "field_70729_aU");
addMapping("prevSwingProgress", EntityLivingBase.class, "field_70732_aI");
addMapping("swingProgress", EntityLivingBase.class, "field_70733_aJ");
addMapping("hurtTime", EntityLivingBase.class, "field_70737_aN");
addMapping("maxHurtTime", EntityLivingBase.class, "field_70738_aO");
addMapping("attackedAtYaw", EntityLivingBase.class, "field_70739_aP");
addMapping("unused180", EntityLivingBase.class, "field_70741_aB");
addMapping("scoreValue", EntityLivingBase.class, "field_70744_aE");
addMapping("landMovementFactor", EntityLivingBase.class, "field_70746_aG");
addMapping("jumpMovementFactor", EntityLivingBase.class, "field_70747_aH");
addMapping("potionsNeedUpdate", EntityLivingBase.class, "field_70752_e");
addMapping("revengeTarget", EntityLivingBase.class, "field_70755_b");
addMapping("revengeTimer", EntityLivingBase.class, "field_70756_c");
addMapping("prevRotationYawHead", EntityLivingBase.class, "field_70758_at");
addMapping("rotationYawHead", EntityLivingBase.class, "field_70759_as");
addMapping("prevRenderYawOffset", EntityLivingBase.class, "field_70760_ar");
addMapping("renderYawOffset", EntityLivingBase.class, "field_70761_aq");
addMapping("prevMovedDistance", EntityLivingBase.class, "field_70763_ax");
addMapping("movedDistance", EntityLivingBase.class, "field_70764_aw");
addMapping("prevOnGroundSpeedFactor", EntityLivingBase.class, "field_70768_au");
addMapping("randomUnused2", EntityLivingBase.class, "field_70769_ao");
addMapping("randomUnused1", EntityLivingBase.class, "field_70770_ap");
addMapping("maxHurtResistantTime", EntityLivingBase.class, "field_70771_an");
addMapping("jumpTicks", EntityLivingBase.class, "field_70773_bE");
addMapping("isSwingInProgress", EntityLivingBase.class, "field_82175_bq");
addMapping("_combatTracker", EntityLivingBase.class, "field_94063_bt");
addMapping("addBox", ModelRenderer.class, "func_178769_a");
addMapping("setTextureOffset", ModelRenderer.class, "func_78784_a");
addMapping("render", ModelRenderer.class, "func_78785_a");
addMapping("addBox", ModelRenderer.class, "func_78786_a");
addMapping("setTextureSize", ModelRenderer.class, "func_78787_b");
addMapping("compileDisplayList", ModelRenderer.class, "func_78788_d");
addMapping("addBox", ModelRenderer.class, "func_78789_a");
addMapping("addBox", ModelRenderer.class, "func_78790_a");
addMapping("renderWithRotation", ModelRenderer.class, "func_78791_b");
addMapping("addChild", ModelRenderer.class, "func_78792_a");
addMapping("setRotationPoint", ModelRenderer.class, "func_78793_a");
addMapping("postRender", ModelRenderer.class, "func_78794_c");
addMapping("rotateAngleX", ModelRenderer.class, "field_78795_f");
addMapping("rotateAngleY", ModelRenderer.class, "field_78796_g");
addMapping("rotationPointY", ModelRenderer.class, "field_78797_d");
addMapping("rotationPointZ", ModelRenderer.class, "field_78798_e");
addMapping("textureHeight", ModelRenderer.class, "field_78799_b");
addMapping("rotationPointX", ModelRenderer.class, "field_78800_c");
addMapping("textureWidth", ModelRenderer.class, "field_78801_a");
addMapping("boxName", ModelRenderer.class, "field_78802_n");
addMapping("textureOffsetX", ModelRenderer.class, "field_78803_o");
addMapping("cubeList", ModelRenderer.class, "field_78804_l");
addMapping("childModels", ModelRenderer.class, "field_78805_m");
addMapping("showModel", ModelRenderer.class, "field_78806_j");
addMapping("isHidden", ModelRenderer.class, "field_78807_k");
addMapping("rotateAngleZ", ModelRenderer.class, "field_78808_h");
addMapping("mirror", ModelRenderer.class, "field_78809_i");
addMapping("baseModel", ModelRenderer.class, "field_78810_s");
addMapping("displayList", ModelRenderer.class, "field_78811_r");
addMapping("compiled", ModelRenderer.class, "field_78812_q");
addMapping("textureOffsetY", ModelRenderer.class, "field_78813_p");
addMapping("offsetX", ModelRenderer.class, "field_82906_o");
addMapping("offsetZ", ModelRenderer.class, "field_82907_q");
addMapping("offsetY", ModelRenderer.class, "field_82908_p");
addMapping("getCurrentMoonPhaseFactor", World.class, "func_130001_d");
addMapping("setThunderStrength", World.class, "func_147442_i");
addMapping("rayTraceBlocks", World.class, "func_147447_a");
addMapping("addTileEntities", World.class, "func_147448_a");
addMapping("updateBlocks", World.class, "func_147456_g");
addMapping("markTileEntityForRemoval", World.class, "func_147457_a");
addMapping("markBlockRangeForRenderUpdate", World.class, "func_147458_c");
addMapping("playMoodSoundAndCheckLight", World.class, "func_147467_a");
addMapping("isFlammableWithin", World.class, "func_147470_e");
addMapping("getPlayerEntityByUUID", World.class, "func_152378_a");
addMapping("isAirBlock", World.class, "func_175623_d");
addMapping("getWorldType", World.class, "func_175624_G");
addMapping("getTileEntity", World.class, "func_175625_s");
addMapping("getCombinedLight", World.class, "func_175626_b");
addMapping("getStrongPower", World.class, "func_175627_a");
addMapping("isAnyPlayerWithinRangeAt", World.class, "func_175636_b");
addMapping("getRawLight", World.class, "func_175638_a");
addMapping("isAreaLoaded", World.class, "func_175639_b");
addMapping("isBlockPowered", World.class, "func_175640_z");
addMapping("addBlockEvent", World.class, "func_175641_c");
addMapping("getLightFor", World.class, "func_175642_b");
addMapping("init", World.class, "func_175643_b");
addMapping("getEntities", World.class, "func_175644_a");
addMapping("getHeight", World.class, "func_175645_m");
addMapping("markChunkDirty", World.class, "func_175646_b");
addMapping("getEntitiesWithinAABB", World.class, "func_175647_a");
addMapping("isAreaLoaded", World.class, "func_175648_a");
addMapping("getDifficultyForLocation", World.class, "func_175649_E");
addMapping("loadEntities", World.class, "func_175650_b");
addMapping("getRedstonePower", World.class, "func_175651_c");
addMapping("setSpawnPoint", World.class, "func_175652_B");
addMapping("setLightFor", World.class, "func_175653_a");
addMapping("updateBlockTick", World.class, "func_175654_a");
addMapping("destroyBlock", World.class, "func_175655_b");
addMapping("setBlockState", World.class, "func_175656_a");
addMapping("getSkylightSubtracted", World.class, "func_175657_ab");
addMapping("getLastLightningBolt", World.class, "func_175658_ac");
addMapping("getDifficulty", World.class, "func_175659_aa");
addMapping("isBlockModifiable", World.class, "func_175660_a");
addMapping("getPlayers", World.class, "func_175661_b");
addMapping("canBlockFreezeNoWater", World.class, "func_175662_w");
addMapping("isAreaLoaded", World.class, "func_175663_a");
addMapping("checkLight", World.class, "func_175664_x");
addMapping("isBlockFullCube", World.class, "func_175665_u");
addMapping("updateComparatorOutputLevel", World.class, "func_175666_e");
addMapping("isBlockLoaded", World.class, "func_175667_e");
addMapping("isBlockLoaded", World.class, "func_175668_a");
addMapping("playBroadcastSound", World.class, "func_175669_a");
addMapping("canBlockFreeze", World.class, "func_175670_e");
addMapping("getLightFromNeighbors", World.class, "func_175671_l");
addMapping("getTopSolidOrLiquidBlock", World.class, "func_175672_r");
addMapping("getEntitiesInAABBexcluding", World.class, "func_175674_a");
addMapping("canBlockFreezeWater", World.class, "func_175675_v");
addMapping("getStrongPower", World.class, "func_175676_y");
addMapping("isBlockNormalCube", World.class, "func_175677_d");
addMapping("canSeeSky", World.class, "func_175678_i");
addMapping("notifyLightSet", World.class, "func_175679_n");
addMapping("isChunkLoaded", World.class, "func_175680_a");
addMapping("unloadEntities", World.class, "func_175681_c");
addMapping("spawnParticle", World.class, "func_175682_a");
addMapping("scheduleUpdate", World.class, "func_175684_a");
addMapping("notifyNeighborsOfStateChange", World.class, "func_175685_c");
addMapping("isBlockIndirectlyGettingPowered", World.class, "func_175687_A");
addMapping("spawnParticle", World.class, "func_175688_a");
addMapping("setTileEntity", World.class, "func_175690_a");
addMapping("isBlockTickPending", World.class, "func_175691_a");
addMapping("setSkylightSubtracted", World.class, "func_175692_b");
addMapping("getMapStorage", World.class, "func_175693_T");
addMapping("getSpawnPoint", World.class, "func_175694_M");
addMapping("notifyNeighborsOfStateExcept", World.class, "func_175695_a");
addMapping("isWater", World.class, "func_175696_F");
addMapping("isAreaLoaded", World.class, "func_175697_a");
addMapping("setBlockToAir", World.class, "func_175698_g");
addMapping("getLight", World.class, "func_175699_k");
addMapping("addTileEntity", World.class, "func_175700_a");
addMapping("isValid", World.class, "func_175701_a");
addMapping("setLastLightningBolt", World.class, "func_175702_c");
addMapping("markBlockRangeForRenderUpdate", World.class, "func_175704_b");
addMapping("getLightFromNeighborsFor", World.class, "func_175705_a");
addMapping("isAreaLoaded", World.class, "func_175706_a");
addMapping("isAreaLoaded", World.class, "func_175707_a");
addMapping("canSnowAt", World.class, "func_175708_f");
addMapping("isSidePowered", World.class, "func_175709_b");
addMapping("canBlockSeeSky", World.class, "func_175710_j");
addMapping("isAreaLoaded", World.class, "func_175711_a");
addMapping("getPendingBlockUpdates", World.class, "func_175712_a");
addMapping("removeTileEntity", World.class, "func_175713_t");
addMapping("getVillageCollection", World.class, "func_175714_ae");
addMapping("sendBlockBreakProgress", World.class, "func_175715_c");
addMapping("playEvent", World.class, "func_175718_b");
addMapping("extinguishFire", World.class, "func_175719_a");
addMapping("spawnParticle", World.class, "func_175720_a");
addMapping("getLight", World.class, "func_175721_c");
addMapping("notifyNeighborsRespectDebug", World.class, "func_175722_b");
addMapping("getWorldBorder", World.class, "func_175723_af");
addMapping("getLightBrightness", World.class, "func_175724_o");
addMapping("getPrecipitationHeight", World.class, "func_175725_q");
addMapping("getChunkFromBlockCoords", World.class, "func_175726_f");
addMapping("isRainingAt", World.class, "func_175727_C");
addMapping("getBiome", World.class, "func_180494_b");
addMapping("getBlockState", World.class, "func_180495_p");
addMapping("scheduleBlockUpdate", World.class, "func_180497_b");
addMapping("playEvent", World.class, "func_180498_a");
addMapping("checkLightFor", World.class, "func_180500_c");
addMapping("setBlockState", World.class, "func_180501_a");
addMapping("isBlockinHighHumidity", World.class, "func_180502_D");
addMapping("setSeaLevel", World.class, "func_181544_b");
addMapping("getSeaLevel", World.class, "func_181545_F");
addMapping("playSound", World.class, "func_184133_a");
addMapping("playSound", World.class, "func_184134_a");
addMapping("sendPacketToServer", World.class, "func_184135_a");
addMapping("getNearestPlayerNotCreative", World.class, "func_184136_b");
addMapping("getClosestPlayer", World.class, "func_184137_a");
addMapping("notifyBlockUpdate", World.class, "func_184138_a");
addMapping("getNearestAttackablePlayer", World.class, "func_184139_a");
addMapping("getGroundAboveSeaLevel", World.class, "func_184141_c");
addMapping("getNearestAttackablePlayer", World.class, "func_184142_a");
addMapping("collidesWithAnyBlock", World.class, "func_184143_b");
addMapping("getCollisionBoxes", World.class, "func_184144_a");
addMapping("isUpdateScheduled", World.class, "func_184145_b");
addMapping("getLootTableManager", World.class, "func_184146_ak");
addMapping("tickPlayers", World.class, "func_184147_l");
addMapping("playSound", World.class, "func_184148_a");
addMapping("playRecord", World.class, "func_184149_a");
addMapping("getNearestAttackablePlayer", World.class, "func_184150_a");
addMapping("immediateBlockTick", World.class, "func_189507_a");
addMapping("getPendingTileEntityAt", World.class, "func_189508_F");
addMapping("isOutsideBuildHeight", World.class, "func_189509_E");
addMapping("getHeight", World.class, "func_189649_b");
addMapping("updateObservingBlocksAt", World.class, "func_190522_c");
addMapping("spawnAlwaysVisibleParticle", World.class, "func_190523_a");
addMapping("neighborChanged", World.class, "func_190524_a");
addMapping("getClosestPlayer", World.class, "func_190525_a");
addMapping("isChunkGeneratedAt", World.class, "func_190526_b");
addMapping("mayPlace", World.class, "func_190527_a");
addMapping("findNearestStructure", World.class, "func_190528_a");
addMapping("observedNeighborChanged", World.class, "func_190529_b");
addMapping("isInsideWorldBorder", World.class, "func_191503_g");
addMapping("getCollisionBoxes", World.class, "func_191504_a");
addMapping("getHeight", World.class, "func_72800_K");
addMapping("getThunderStrength", World.class, "func_72819_i");
addMapping("getWorldTime", World.class, "func_72820_D");
addMapping("setData", World.class, "func_72823_a");
addMapping("getCloudColour", World.class, "func_72824_f");
addMapping("getCelestialAngle", World.class, "func_72826_c");
addMapping("getProviderName", World.class, "func_72827_u");
addMapping("checkBlockCollision", World.class, "func_72829_c");
addMapping("getSkyColor", World.class, "func_72833_a");
addMapping("tick", World.class, "func_72835_b");
addMapping("spawnEntity", World.class, "func_72838_d");
addMapping("getEntitiesWithinAABBExcludingEntity", World.class, "func_72839_b");
addMapping("getUniqueDataId", World.class, "func_72841_b");
addMapping("getBlockDensity", World.class, "func_72842_a");
addMapping("setRandomSeed", World.class, "func_72843_D");
addMapping("onEntityRemoved", World.class, "func_72847_b");
addMapping("removeEventListener", World.class, "func_72848_b");
addMapping("getMoonPhase", World.class, "func_72853_d");
addMapping("updateAllPlayersSleepingFlag", World.class, "func_72854_c");
addMapping("checkNoEntityCollision", World.class, "func_72855_b");
addMapping("findNearestEntityWithinAABB", World.class, "func_72857_a");
addMapping("getSaveHandler", World.class, "func_72860_G");
addMapping("getChunkProvider", World.class, "func_72863_F");
addMapping("updateEntityWithOptionalForce", World.class, "func_72866_a");
addMapping("getRainStrength", World.class, "func_72867_j");
addMapping("updateEntity", World.class, "func_72870_g");
addMapping("getEntitiesWithinAABB", World.class, "func_72872_a");
addMapping("isMaterialInBB", World.class, "func_72875_a");
addMapping("createExplosion", World.class, "func_72876_a");
addMapping("setWorldTime", World.class, "func_72877_b");
addMapping("getStarBrightness", World.class, "func_72880_h");
addMapping("sendQuittingDisconnectingPacket", World.class, "func_72882_A");
addMapping("newExplosion", World.class, "func_72885_a");
addMapping("getClosestPlayerToEntity", World.class, "func_72890_a");
addMapping("setAllowedSpawnTypes", World.class, "func_72891_a");
addMapping("setRainStrength", World.class, "func_72894_k");
addMapping("isRaining", World.class, "func_72896_J");
addMapping("joinEntityInSurroundings", World.class, "func_72897_h");
addMapping("removeEntity", World.class, "func_72900_e");
addMapping("rayTraceBlocks", World.class, "func_72901_a");
addMapping("getSeed", World.class, "func_72905_C");
addMapping("checkSessionLock", World.class, "func_72906_B");
addMapping("countEntities", World.class, "func_72907_a");
addMapping("getLoadedEntityList", World.class, "func_72910_y");
addMapping("isThundering", World.class, "func_72911_I");
addMapping("getWorldInfo", World.class, "func_72912_H");
addMapping("addWorldInfoToCrashReport", World.class, "func_72914_a");
addMapping("isSpawnChunk", World.class, "func_72916_c");
addMapping("checkNoEntityCollision", World.class, "func_72917_a");
addMapping("handleMaterialAcceleration", World.class, "func_72918_a");
addMapping("getHorizon", World.class, "func_72919_O");
addMapping("getPendingBlockUpdates", World.class, "func_72920_a");
addMapping("onEntityAdded", World.class, "func_72923_a");
addMapping("getPlayerEntityByName", World.class, "func_72924_a");
addMapping("getCelestialAngleRadians", World.class, "func_72929_e");
addMapping("rayTraceBlocks", World.class, "func_72933_a");
addMapping("isDaytime", World.class, "func_72935_r");
addMapping("updateEntities", World.class, "func_72939_s");
addMapping("getActualHeight", World.class, "func_72940_L");
addMapping("addWeatherEffect", World.class, "func_72942_c");
addMapping("loadData", World.class, "func_72943_a");
addMapping("calculateInitialWeather", World.class, "func_72947_a");
addMapping("getFogColor", World.class, "func_72948_g");
addMapping("containsAnyLiquid", World.class, "func_72953_d");
addMapping("addEventListener", World.class, "func_72954_a");
addMapping("tickUpdates", World.class, "func_72955_a");
addMapping("getBiomeProvider", World.class, "func_72959_q");
addMapping("setEntityState", World.class, "func_72960_a");
addMapping("initialize", World.class, "func_72963_a");
addMapping("getChunkFromChunkCoords", World.class, "func_72964_e");
addMapping("calculateInitialSkylight", World.class, "func_72966_v");
addMapping("calculateSkylightSubtracted", World.class, "func_72967_a");
addMapping("createChunkProvider", World.class, "func_72970_h");
addMapping("getSunBrightness", World.class, "func_72971_b");
addMapping("removeEntityDangerously", World.class, "func_72973_f");
addMapping("setInitialSpawnLocation", World.class, "func_72974_f");
addMapping("markBlocksDirtyVertical", World.class, "func_72975_g");
addMapping("updateWeather", World.class, "func_72979_l");
addMapping("getDebugLoadedEntities", World.class, "func_72981_t");
addMapping("getEntityByID", World.class, "func_73045_a");
addMapping("getMinecraftServer", World.class, "func_73046_m");
addMapping("getChunksLowestHorizon", World.class, "func_82734_g");
addMapping("getGameRules", World.class, "func_82736_K");
addMapping("getTotalWorldTime", World.class, "func_82737_E");
addMapping("setTotalWorldTime", World.class, "func_82738_a");
addMapping("getCurrentDate", World.class, "func_83015_S");
addMapping("makeFireworks", World.class, "func_92088_a");
addMapping("getScoreboard", World.class, "func_96441_U");
addMapping("processingLoadedTiles", World.class, "field_147481_N");
addMapping("loadedTileEntityList", World.class, "field_147482_g");
addMapping("tileEntitiesToBeRemoved", World.class, "field_147483_b");
addMapping("addedTileEntityList", World.class, "field_147484_a");
addMapping("worldBorder", World.class, "field_175728_M");
addMapping("entitiesById", World.class, "field_175729_l");
addMapping("tickableTileEntities", World.class, "field_175730_i");
addMapping("seaLevel", World.class, "field_181546_a");
addMapping("lootTable", World.class, "field_184151_B");
addMapping("pathListener", World.class, "field_184152_t");
addMapping("advancementManager", World.class, "field_191951_C");
addMapping("functionManager", World.class, "field_193036_D");
addMapping("villageCollection", World.class, "field_72982_D");
addMapping("profiler", World.class, "field_72984_F");
addMapping("spawnHostileMobs", World.class, "field_72985_G");
addMapping("worldInfo", World.class, "field_72986_A");
addMapping("findingSpawnPoint", World.class, "field_72987_B");
addMapping("mapStorage", World.class, "field_72988_C");
addMapping("spawnPeacefulMobs", World.class, "field_72992_H");
addMapping("lightUpdateBlockList", World.class, "field_72994_J");
addMapping("isRemote", World.class, "field_72995_K");
addMapping("loadedEntityList", World.class, "field_72996_f");
addMapping("unloadedEntityList", World.class, "field_72997_g");
addMapping("scheduledUpdatesAreImmediate", World.class, "field_72999_e");
addMapping("cloudColour", World.class, "field_73001_c");
addMapping("prevRainingStrength", World.class, "field_73003_n");
addMapping("rainingStrength", World.class, "field_73004_o");
addMapping("updateLCG", World.class, "field_73005_l");
addMapping("DIST_HASH_MAGIC", World.class, "field_73006_m");
addMapping("weatherEffects", World.class, "field_73007_j");
addMapping("skylightSubtracted", World.class, "field_73008_k");
addMapping("playerEntities", World.class, "field_73010_i");
addMapping("provider", World.class, "field_73011_w");
addMapping("rand", World.class, "field_73012_v");
addMapping("lastLightningBolt", World.class, "field_73016_r");
addMapping("thunderingStrength", World.class, "field_73017_q");
addMapping("prevThunderingStrength", World.class, "field_73018_p");
addMapping("saveHandler", World.class, "field_73019_z");
addMapping("chunkProvider", World.class, "field_73020_y");
addMapping("eventListeners", World.class, "field_73021_x");
addMapping("calendar", World.class, "field_83016_L");
addMapping("worldScoreboard", World.class, "field_96442_D");
